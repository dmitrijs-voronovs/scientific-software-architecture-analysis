id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/COMBINE-lab/salmon/issues/2#issuecomment-103974922:729,Deployability,update,updated,729,"Hi @Melkaz,; These options have been added as of commit c207d0f28e5782f9a16747a72ac6f06c277fd4ed. There are some new options, all of which have reasonable defaults (the ones that were hard coded before). The relevant options here are: `--fldMean` which you can use to specify the expected mean length of the fragment distribution and `--fldSD` which you can use to specify the expected standard deviation of the fragment length distribution. These values are used to set the _prior_ on the fragment length distribution. This means that if you're using paired-end reads, the observations will overwhelm this prior quickly and we'll learn the empirical distribution. If you're using single-end data, then the prior won't really be updated and the values you specify above are what will be used in practice (e.g. to compute effective transcript lengths). Please let us know if you run into any trouble using this new feature. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/2#issuecomment-103974922
https://github.com/COMBINE-lab/salmon/issues/2#issuecomment-103974922:631,Usability,learn,learn,631,"Hi @Melkaz,; These options have been added as of commit c207d0f28e5782f9a16747a72ac6f06c277fd4ed. There are some new options, all of which have reasonable defaults (the ones that were hard coded before). The relevant options here are: `--fldMean` which you can use to specify the expected mean length of the fragment distribution and `--fldSD` which you can use to specify the expected standard deviation of the fragment length distribution. These values are used to set the _prior_ on the fragment length distribution. This means that if you're using paired-end reads, the observations will overwhelm this prior quickly and we'll learn the empirical distribution. If you're using single-end data, then the prior won't really be updated and the values you specify above are what will be used in practice (e.g. to compute effective transcript lengths). Please let us know if you run into any trouble using this new feature. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/2#issuecomment-103974922
https://github.com/COMBINE-lab/salmon/issues/3#issuecomment-107132845:14,Deployability,release,release,14,"In the latest release (along with other, even **more-awesome** new features), FPKM has been dropped from the output.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/3#issuecomment-107132845
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110484917:109,Availability,down,down,109,"Hi Rob,. I'm compiling it now. I ran into a different issue with this commit that took a little bit to track down. It looks like you switch from jellyfish 2.1.3 to 2.2.0. I was running into an issue with some undefined values, eraise and a few associated classes from jellyfish include/jellyfish/err.hpp that were present in 2.1.3 and seemingly removed in 2.2.0. Making it use 2.1.3 instead of 2.2.0 let it get past that point in the compilation (still ongoing). I'll get back to you about the impact of that commit.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110484917
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110488164:57,Availability,error,error,57,"Hi Rob,. Finished compiling and it no longer throws that error. Thanks for the help!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110488164
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862:218,Availability,error,error,218,"Strange! I should still be using Jellyfish 2.1.3 (https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L355). I'm not sure why it was fetching 2.2.0 for you. Anyway, I'm glad that this seems to resolve the error with the bias correction --- thanks for reporting back here. I'll probably roll this and a few other small changes into a v0.4.1 soon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510:588,Availability,error,error,588,"Hm. I had to tweak a few bits in the cmake file for it to compile here due; to the firewall I'm behind (generally no ftp access) so it must have been a; side effect of that. I tried to make sure I was starting from a clean slate; to verify before posting, but guess I wasn't. Jason. On Tue, Jun 9, 2015 at 4:12 PM, Rob Patro notifications@github.com wrote:. > Strange! I should still be using Jellyfish 2.1.3 (; > https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L355).; > I'm not sure why it was fetching 2.2.0 for you. Anyway, I'm glad that this; > seems to resolve the error with the bias correction --- thanks for; > reporting back here. I'll probably roll this and a few other small changes; > into a v0.4.1 soon.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510:83,Security,firewall,firewall,83,"Hm. I had to tweak a few bits in the cmake file for it to compile here due; to the firewall I'm behind (generally no ftp access) so it must have been a; side effect of that. I tried to make sure I was starting from a clean slate; to verify before posting, but guess I wasn't. Jason. On Tue, Jun 9, 2015 at 4:12 PM, Rob Patro notifications@github.com wrote:. > Strange! I should still be using Jellyfish 2.1.3 (; > https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L355).; > I'm not sure why it was fetching 2.2.0 for you. Anyway, I'm glad that this; > seems to resolve the error with the bias correction --- thanks for; > reporting back here. I'll probably roll this and a few other small changes; > into a v0.4.1 soon.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510:121,Security,access,access,121,"Hm. I had to tweak a few bits in the cmake file for it to compile here due; to the firewall I'm behind (generally no ftp access) so it must have been a; side effect of that. I tried to make sure I was starting from a clean slate; to verify before posting, but guess I wasn't. Jason. On Tue, Jun 9, 2015 at 4:12 PM, Rob Patro notifications@github.com wrote:. > Strange! I should still be using Jellyfish 2.1.3 (; > https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L355).; > I'm not sure why it was fetching 2.2.0 for you. Anyway, I'm glad that this; > seems to resolve the error with the bias correction --- thanks for; > reporting back here. I'll probably roll this and a few other small changes; > into a v0.4.1 soon.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510
https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110493426:74,Integrability,depend,depending,74,No worries. I've had issues with grabbing Jellyfish from the existing URL depending on the network setup as well. I may just copy that tarball to a GitHub artifact an have the makefile pull from GitHub instead. --Rob,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110493426
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228:325,Availability,down,down,325,"Hi @vals,. This is very interesting, as we've been doing quite a bit of testing and (to the contrary) have found v0.4.0 to perform substantially _better_ than v0.3.x. Out of curiosity, could you check how v0.4.0 performs _without_ `--useVBOpt`? Obviously, if you continue to see this regression, I'll be happy to try and dig down deeper, but I might need you to provide some testing data. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228:123,Performance,perform,perform,123,"Hi @vals,. This is very interesting, as we've been doing quite a bit of testing and (to the contrary) have found v0.4.0 to perform substantially _better_ than v0.3.x. Out of curiosity, could you check how v0.4.0 performs _without_ `--useVBOpt`? Obviously, if you continue to see this regression, I'll be happy to try and dig down deeper, but I might need you to provide some testing data. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228:212,Performance,perform,performs,212,"Hi @vals,. This is very interesting, as we've been doing quite a bit of testing and (to the contrary) have found v0.4.0 to perform substantially _better_ than v0.3.x. Out of curiosity, could you check how v0.4.0 performs _without_ `--useVBOpt`? Obviously, if you continue to see this regression, I'll be happy to try and dig down deeper, but I might need you to provide some testing data. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228:72,Testability,test,testing,72,"Hi @vals,. This is very interesting, as we've been doing quite a bit of testing and (to the contrary) have found v0.4.0 to perform substantially _better_ than v0.3.x. Out of curiosity, could you check how v0.4.0 performs _without_ `--useVBOpt`? Obviously, if you continue to see this regression, I'll be happy to try and dig down deeper, but I might need you to provide some testing data. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228:375,Testability,test,testing,375,"Hi @vals,. This is very interesting, as we've been doing quite a bit of testing and (to the contrary) have found v0.4.0 to perform substantially _better_ than v0.3.x. Out of curiosity, could you check how v0.4.0 performs _without_ `--useVBOpt`? Obviously, if you continue to see this regression, I'll be happy to try and dig down deeper, but I might need you to provide some testing data. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111604379:130,Performance,perform,performing,130,"Thanks for reporting back (with the nice plots!). This is interesting, because, at least in our other testing, the VB seems to be performing slightly _better_ than the EM. One guess I have is that the VB Opt tends to produce slightly sparser solutions than the EM opt. Usually, this is a ""good thing"". However, if you're dealing with such small datasets (n ~50), then dropping a few points could make a significant difference. Since you can reproduce the previous behavior when dropping the VB option, there's no rush. However, if you are able to share some of the data at some point, I'd be interested in digging in and figuring out exactly what's happening here. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111604379
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111604379:102,Testability,test,testing,102,"Thanks for reporting back (with the nice plots!). This is interesting, because, at least in our other testing, the VB seems to be performing slightly _better_ than the EM. One guess I have is that the VB Opt tends to produce slightly sparser solutions than the EM opt. Usually, this is a ""good thing"". However, if you're dealing with such small datasets (n ~50), then dropping a few points could make a significant difference. Since you can reproduce the previous behavior when dropping the VB option, there's no rush. However, if you are able to share some of the data at some point, I'd be interested in digging in and figuring out exactly what's happening here. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111604379
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583:690,Availability,reliab,reliable,690,"I have a pretty wide array of benchmarks and I haven't seen any regression with the VB option on 0.4.1, including ERCC spike-ins on the SEQC data, where it does very well. But I haven't tested 0.4.0. @vals your data looks really compelling, I wonder if you'd humor me and try something, if it's not too much trouble: Could you try recomputing these correlations excluding ERCC-00074 and ERCC-00130? I've seen some data suggesting these might be misannotated by the vendor, which can cause these two to have a large effect on something like Pearson correlation, especially with methods like salmon and cufflinks that do bias correction. In benchmarks I've done, excluding them leads to more reliable results. I'm really curious if doing the same in your data changes anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583:30,Testability,benchmark,benchmarks,30,"I have a pretty wide array of benchmarks and I haven't seen any regression with the VB option on 0.4.1, including ERCC spike-ins on the SEQC data, where it does very well. But I haven't tested 0.4.0. @vals your data looks really compelling, I wonder if you'd humor me and try something, if it's not too much trouble: Could you try recomputing these correlations excluding ERCC-00074 and ERCC-00130? I've seen some data suggesting these might be misannotated by the vendor, which can cause these two to have a large effect on something like Pearson correlation, especially with methods like salmon and cufflinks that do bias correction. In benchmarks I've done, excluding them leads to more reliable results. I'm really curious if doing the same in your data changes anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583:186,Testability,test,tested,186,"I have a pretty wide array of benchmarks and I haven't seen any regression with the VB option on 0.4.1, including ERCC spike-ins on the SEQC data, where it does very well. But I haven't tested 0.4.0. @vals your data looks really compelling, I wonder if you'd humor me and try something, if it's not too much trouble: Could you try recomputing these correlations excluding ERCC-00074 and ERCC-00130? I've seen some data suggesting these might be misannotated by the vendor, which can cause these two to have a large effect on something like Pearson correlation, especially with methods like salmon and cufflinks that do bias correction. In benchmarks I've done, excluding them leads to more reliable results. I'm really curious if doing the same in your data changes anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583:639,Testability,benchmark,benchmarks,639,"I have a pretty wide array of benchmarks and I haven't seen any regression with the VB option on 0.4.1, including ERCC spike-ins on the SEQC data, where it does very well. But I haven't tested 0.4.0. @vals your data looks really compelling, I wonder if you'd humor me and try something, if it's not too much trouble: Could you try recomputing these correlations excluding ERCC-00074 and ERCC-00130? I've seen some data suggesting these might be misannotated by the vendor, which can cause these two to have a large effect on something like Pearson correlation, especially with methods like salmon and cufflinks that do bias correction. In benchmarks I've done, excluding them leads to more reliable results. I'm really curious if doing the same in your data changes anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:570,Deployability,release,releases,570,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:200,Performance,perform,performance,200,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:304,Performance,perform,performance,304,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:360,Testability,test,testing,360,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:555,Testability,test,testing,555,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:662,Testability,test,tests,662,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:748,Testability,test,tests,748,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408:624,Usability,simpl,simple,624,"@vals, it shouldn't be a coverage issue, at least as compared to previous versions of Salmon. Hopefully we'll have a chance to look at this soon and see if we can figure out what might be causing the performance ""regression"" when `--useVBOpt` is enabled. As @dcjones suggests, we haven't really seen any performance degradation with the VB option in our other testing, so I suspect something characteristic of this dataset. @dcjones; it's great to see you drop by! I'm actually looking for a reasonable collection of datasets to do (automated) regression testing on new releases of salmon --- something to replace my fairly simple and manual existing regression tests. I'd greatly appreciate any suggestions or advice you may have about this! Such tests will become even more useful as we're experimenting with a few inference approaches and it would be great to have a reasonable spread of data to see the effects of different strategies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112224408
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922:1764,Availability,reliab,reliable,1764,"Happy to compare notes! For benchmarking accuracy I'm mostly using data from SEQC. There are four reference samples, each sequenced quite deeply at several different labs. I took 20 lanes from BGI, which is about 100 million reads, which I compare it to TaqMan (~800 genes), PrimePCR on (~18000 genes), and ERCC spike-ins. . On top of that, to get more directly at isoform-level accuracy, I'm simulating data using rlsim, which I've found to be the least awful RNA-Seq simulator. Unlike most simulators, it models some technical effects/bias. I think it underestimates these, but still a lot better than most that assume perfect uniform random sampling, etc. I also have a set of benchmarks designed to get at the question of consistency or stability of estimates, which is one of the main thrusts of the paper I'm working on. The other aspect I've been fretting about a lot the last month has been just what metric to use. You should check out this paper if you haven't seen it, which is pretty eye-opening as to the problems with using correlation on compositional gene expression data. > Lovell, D., Pawlowsky-Glahn, V., Egozcue, J. J., Marguerat, S., & Bähler, J. (2015). Proportionality: a valid alternative to correlation for relative data. PLoS Computational Biology, 11(3), e1004075. http://doi.org/10.1371/journal.pcbi.1004075. Those problems aren't unique to correlation. E.g. the ""median relative difference"" approach taken by the Kallisto paper is very much affected by this, I think even more so than correlation. The method I've adopted is to use the ""proportionality correlation"" they propose on page 9, and add 0.1 TPM to expression values to account for zeros and tiny values. It's not terribly sensitive to the additive constant and gives pretty reliable results in my experience. I have a somewhat horrifying labyrinth of makefiles and julia code that runs all this which I'll probably make public on github in the next few weeks, which may or may not be helpful.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922:28,Testability,benchmark,benchmarking,28,"Happy to compare notes! For benchmarking accuracy I'm mostly using data from SEQC. There are four reference samples, each sequenced quite deeply at several different labs. I took 20 lanes from BGI, which is about 100 million reads, which I compare it to TaqMan (~800 genes), PrimePCR on (~18000 genes), and ERCC spike-ins. . On top of that, to get more directly at isoform-level accuracy, I'm simulating data using rlsim, which I've found to be the least awful RNA-Seq simulator. Unlike most simulators, it models some technical effects/bias. I think it underestimates these, but still a lot better than most that assume perfect uniform random sampling, etc. I also have a set of benchmarks designed to get at the question of consistency or stability of estimates, which is one of the main thrusts of the paper I'm working on. The other aspect I've been fretting about a lot the last month has been just what metric to use. You should check out this paper if you haven't seen it, which is pretty eye-opening as to the problems with using correlation on compositional gene expression data. > Lovell, D., Pawlowsky-Glahn, V., Egozcue, J. J., Marguerat, S., & Bähler, J. (2015). Proportionality: a valid alternative to correlation for relative data. PLoS Computational Biology, 11(3), e1004075. http://doi.org/10.1371/journal.pcbi.1004075. Those problems aren't unique to correlation. E.g. the ""median relative difference"" approach taken by the Kallisto paper is very much affected by this, I think even more so than correlation. The method I've adopted is to use the ""proportionality correlation"" they propose on page 9, and add 0.1 TPM to expression values to account for zeros and tiny values. It's not terribly sensitive to the additive constant and gives pretty reliable results in my experience. I have a somewhat horrifying labyrinth of makefiles and julia code that runs all this which I'll probably make public on github in the next few weeks, which may or may not be helpful.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922
https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922:680,Testability,benchmark,benchmarks,680,"Happy to compare notes! For benchmarking accuracy I'm mostly using data from SEQC. There are four reference samples, each sequenced quite deeply at several different labs. I took 20 lanes from BGI, which is about 100 million reads, which I compare it to TaqMan (~800 genes), PrimePCR on (~18000 genes), and ERCC spike-ins. . On top of that, to get more directly at isoform-level accuracy, I'm simulating data using rlsim, which I've found to be the least awful RNA-Seq simulator. Unlike most simulators, it models some technical effects/bias. I think it underestimates these, but still a lot better than most that assume perfect uniform random sampling, etc. I also have a set of benchmarks designed to get at the question of consistency or stability of estimates, which is one of the main thrusts of the paper I'm working on. The other aspect I've been fretting about a lot the last month has been just what metric to use. You should check out this paper if you haven't seen it, which is pretty eye-opening as to the problems with using correlation on compositional gene expression data. > Lovell, D., Pawlowsky-Glahn, V., Egozcue, J. J., Marguerat, S., & Bähler, J. (2015). Proportionality: a valid alternative to correlation for relative data. PLoS Computational Biology, 11(3), e1004075. http://doi.org/10.1371/journal.pcbi.1004075. Those problems aren't unique to correlation. E.g. the ""median relative difference"" approach taken by the Kallisto paper is very much affected by this, I think even more so than correlation. The method I've adopted is to use the ""proportionality correlation"" they propose on page 9, and add 0.1 TPM to expression values to account for zeros and tiny values. It's not terribly sensitive to the additive constant and gives pretty reliable results in my experience. I have a somewhat horrifying labyrinth of makefiles and julia code that runs all this which I'll probably make public on github in the next few weeks, which may or may not be helpful.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922
https://github.com/COMBINE-lab/salmon/issues/8#issuecomment-237931240:237,Usability,learn,learned,237,"@mdshw5 — I certainly think that this information could be useful (and bias terms are taken into effect when computing the effective length, when bias modeling is enabled). The problem is that the position-specific start distribution is learned globally (well, conditioned on a few different length classes), rather than being transcript specific. So, it's not exactly clear how it would help too much in Shaun's case, since this is a particular transcript, where a splicing variation is causing a huge portion of the transcript to have no mapped reads. Unless this happens in many transcripts (globally), this particular transcript's contribution to the global position-specific start distribution will likely be rather small.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/8#issuecomment-237931240
https://github.com/COMBINE-lab/salmon/issues/8#issuecomment-237931240:369,Usability,clear,clear,369,"@mdshw5 — I certainly think that this information could be useful (and bias terms are taken into effect when computing the effective length, when bias modeling is enabled). The problem is that the position-specific start distribution is learned globally (well, conditioned on a few different length classes), rather than being transcript specific. So, it's not exactly clear how it would help too much in Shaun's case, since this is a particular transcript, where a splicing variation is causing a huge portion of the transcript to have no mapped reads. Unless this happens in many transcripts (globally), this particular transcript's contribution to the global position-specific start distribution will likely be rather small.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/8#issuecomment-237931240
https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126348908:133,Security,access,access,133,"Hi @ehiggs, You're right; there's no real reason we shouldn't be able to support ICC. The only issue is that we currently don't have access to a machine with icc, so this prevents us from testing the build ourselves. Is there a (free) resource (similar to Travis) that would allow us to test ICC builds? I'd be willing to add CMake support either way, but it would obviously be better if we could iron out the details ourself rather than wait for users to report issues building with icc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126348908
https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126348908:188,Testability,test,testing,188,"Hi @ehiggs, You're right; there's no real reason we shouldn't be able to support ICC. The only issue is that we currently don't have access to a machine with icc, so this prevents us from testing the build ourselves. Is there a (free) resource (similar to Travis) that would allow us to test ICC builds? I'd be willing to add CMake support either way, but it would obviously be better if we could iron out the details ourself rather than wait for users to report issues building with icc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126348908
https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126348908:287,Testability,test,test,287,"Hi @ehiggs, You're right; there's no real reason we shouldn't be able to support ICC. The only issue is that we currently don't have access to a machine with icc, so this prevents us from testing the build ourselves. Is there a (free) resource (similar to Travis) that would allow us to test ICC builds? I'd be willing to add CMake support either way, but it would obviously be better if we could iron out the details ourself rather than wait for users to report issues building with icc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126348908
https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126522041:327,Availability,avail,available,327,@rob-p We have our own Jenkins install at Gent University that we use to make sure [EasyBuild](http://easybuild.readthedocs.org/en/latest/) scripts build a wide range of scientific software. I don't think we're to open it up for free use. I see there is AppVeyor but they only support Visual Studio. I'll take a look at what's available.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126522041
https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126522041:31,Deployability,install,install,31,@rob-p We have our own Jenkins install at Gent University that we use to make sure [EasyBuild](http://easybuild.readthedocs.org/en/latest/) scripts build a wide range of scientific software. I don't think we're to open it up for free use. I see there is AppVeyor but they only support Visual Studio. I'll take a look at what's available.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126522041
https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-490874687:7,Availability,Ping,Ping,7,@rob-p Ping on enhancing the `CMakeLists.txt` as proposed to allow building Salmon with Intel compilers?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-490874687
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127341230:239,Deployability,upgrade,upgrade,239,"My guess, and this is a long shot, is that it's a bug in the `tar` library of `cmake`, that's made evident because my system at work has up-to-date Linux headers and glibc but is running an eight-year-old Linux kernel (CentOS 5.10). I can upgrade everything with Linuxbrew except the running kernel. I've seen this situation show bugs before when the software uses compile time kernel feature checks like `HAVE_PIPE2` when it should be using a run time check, namely checking whether the call to `pipe2` fails with `ENOSYS`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127341230
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127342739:82,Availability,down,download,82,"Note that I do (now) have `cereal` installed, so there is no need for `salmon` to download and build it. It would be nice if this were an option to use the system-provided `cereal` library.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127342739
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127342739:35,Deployability,install,installed,35,"Note that I do (now) have `cereal` installed, so there is no need for `salmon` to download and build it. It would be nice if this were an option to use the system-provided `cereal` library.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127342739
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:36,Availability,error,error,36,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:83,Availability,Error,Error,83,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:159,Availability,Error,Error,159,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:295,Availability,error,error,295,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:318,Availability,Error,Error,318,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:474,Availability,error,error,474,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:463,Integrability,message,message,463,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:616,Testability,log,logs,616,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193623757:147,Deployability,patch,patch,147,"Where does `extract-libdivsufsort.cmake` live? I don't find it in the `salmon` repository. Is it generated automatically by `cmake`? The following patch/hack using `unzip` works around the `cmake -E tar xfz` bug for me. It seems to only affect extracting the `libdivsufsort.zip`, perhaps because it's a `.zip`. If that is the case, and there's a `.tar.gz` distribution of `libdivsufsort`, then there may be a simple fix. ``` diff; --- libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake.orig 2016-03-07 22:02:35.000000000 -0800; +++ libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake 2016-03-07 22:06:49.000000000 -0800; @@ -23,7 +23,7 @@; # Extract it:; #; message(STATUS ""extracting... [tar xfz]""); -execute_process(COMMAND ${CMAKE_COMMAND} -E tar xfz ${filename}; +execute_process(COMMAND unzip ${filename}; WORKING_DIRECTORY ${ut_dir}; RESULT_VARIABLE rv). ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193623757
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193623757:701,Integrability,message,message,701,"Where does `extract-libdivsufsort.cmake` live? I don't find it in the `salmon` repository. Is it generated automatically by `cmake`? The following patch/hack using `unzip` works around the `cmake -E tar xfz` bug for me. It seems to only affect extracting the `libdivsufsort.zip`, perhaps because it's a `.zip`. If that is the case, and there's a `.tar.gz` distribution of `libdivsufsort`, then there may be a simple fix. ``` diff; --- libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake.orig 2016-03-07 22:02:35.000000000 -0800; +++ libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake 2016-03-07 22:06:49.000000000 -0800; @@ -23,7 +23,7 @@; # Extract it:; #; message(STATUS ""extracting... [tar xfz]""); -execute_process(COMMAND ${CMAKE_COMMAND} -E tar xfz ${filename}; +execute_process(COMMAND unzip ${filename}; WORKING_DIRECTORY ${ut_dir}; RESULT_VARIABLE rv). ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193623757
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193623757:409,Usability,simpl,simple,409,"Where does `extract-libdivsufsort.cmake` live? I don't find it in the `salmon` repository. Is it generated automatically by `cmake`? The following patch/hack using `unzip` works around the `cmake -E tar xfz` bug for me. It seems to only affect extracting the `libdivsufsort.zip`, perhaps because it's a `.zip`. If that is the case, and there's a `.tar.gz` distribution of `libdivsufsort`, then there may be a simple fix. ``` diff; --- libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake.orig 2016-03-07 22:02:35.000000000 -0800; +++ libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake 2016-03-07 22:06:49.000000000 -0800; @@ -23,7 +23,7 @@; # Extract it:; #; message(STATUS ""extracting... [tar xfz]""); -execute_process(COMMAND ${CMAKE_COMMAND} -E tar xfz ${filename}; +execute_process(COMMAND unzip ${filename}; WORKING_DIRECTORY ${ut_dir}; RESULT_VARIABLE rv). ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193623757
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193784017:55,Deployability,configurat,configuration,55,"`extract-libdivsufsort.cmake` is auto-generated during configuration. However, the zip itself is grabbed as part of RapMap (specifically, it resides [here](https://github.com/COMBINE-lab/RapMap/tree/master/external)). I can take a look at what would be required to make it a tarball there (or, conversely, if there is a way to force CMake to use `unzip` rather than `cmake -E tar xfz`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193784017
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193784017:55,Modifiability,config,configuration,55,"`extract-libdivsufsort.cmake` is auto-generated during configuration. However, the zip itself is grabbed as part of RapMap (specifically, it resides [here](https://github.com/COMBINE-lab/RapMap/tree/master/external)). I can take a look at what would be required to make it a tarball there (or, conversely, if there is a way to force CMake to use `unzip` rather than `cmake -E tar xfz`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193784017
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193878275:28,Deployability,release,release,28,Here's the official tarball release of `libdivsufsort`:; https://github.com/y-256/libdivsufsort/archive/2.0.1.tar.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193878275
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193926752:147,Availability,avail,availability,147,"I prefer to have it bundled _within_ RapMap (but am willing to hear argument against this). Specifically, this allows that I have control over the availability (i.e. if the official repo disappears, RapMap will continue to build). Of course, the bundled zip was from a slightly updated version of the official `libdivsufsort` that incorporates a fix into the `CMakeLists.txt` file where the original failed. It would certainly be easy to just move the bundled version into a tarball rather than a zip without any hassle.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193926752
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193926752:278,Deployability,update,updated,278,"I prefer to have it bundled _within_ RapMap (but am willing to hear argument against this). Specifically, this allows that I have control over the availability (i.e. if the official repo disappears, RapMap will continue to build). Of course, the bundled zip was from a slightly updated version of the official `libdivsufsort` that incorporates a fix into the `CMakeLists.txt` file where the original failed. It would certainly be easy to just move the bundled version into a tarball rather than a zip without any hassle.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193926752
https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193939385:119,Availability,error,error,119,"It's still only a hypothesis that moving to a tarball would fix my issue. I noticed that once I hacked around this one error by using `unzip` instead, it seems to be working. Still, I think using a `tarball` rather than `zip` file is good style anyway.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193939385
https://github.com/COMBINE-lab/salmon/issues/11#issuecomment-132487629:15,Availability,down,download,15,Maybe move the download stuff into an `install_deps.sh` script.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11#issuecomment-132487629
https://github.com/COMBINE-lab/salmon/issues/11#issuecomment-144717497:231,Deployability,release,release,231,I've figured out the incompatibilities with Jellyfish 2.2.3 and switched to that in the [quasimapping](https://github.com/COMBINE-lab/salmon/tree/quasimapping) branch. This will be merged back into master and made part of the next release as soon as we're finished with porting the bootstrapping feature from Sailfish.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11#issuecomment-144717497
https://github.com/COMBINE-lab/salmon/issues/13#issuecomment-142744935:71,Performance,multi-thread,multi-threaded,71,"This is a _good idea_. There's a little bit of trickiness, in that the multi-threaded read parser need not provide reads in the same order as in the input file. However, I think we could have a heuristic that checks for ordering according to the reference _within_ each parallel-processed bucket. It probably also makes sense to provide a flag to override it if the user is **sure** that the reads are not ordered.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/13#issuecomment-142744935
https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-144471362:978,Usability,simpl,simple,978,"Hi @nicolasstransky --- thanks for reporting this. Now the question is, how should this be handled? I see at least 2 obvious possibilities :; 1. Assume that the transcript name should be split at the first whitespace character **or** `|`. Currently,; it is only split at the first whitespace.; 2. If a gtf is provided for gene-level quantification, ensure that some non-trivial number of genes (e.g.; more than half?) have at least 1 transcript in the index corresponding to them. If not, then complain. Of course, there are also potentially other, better solutions; so I'm open to suggestions. The problem with 1 is that _de-novo_ assemblers may have transcript names that are not unique up to the first `|`, so that the whole name needs to be taken into account. The problem with 2 is that it alerts the user of this potential issue, but doesn't resolve it. In the latter case, the user could provide the transcript-to-gene mapping using the provided transcript names in the ""simple"" format — i.e. > a simple tab-delimited format where each line contains the name of a transcript and the gene to which it belongs separated by a tab. which is also accepted by the `--geneMap` option. I sort of lean toward 2, but, as I said, am happy to consider other suggestions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-144471362
https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-144471362:1004,Usability,simpl,simple,1004,"Hi @nicolasstransky --- thanks for reporting this. Now the question is, how should this be handled? I see at least 2 obvious possibilities :; 1. Assume that the transcript name should be split at the first whitespace character **or** `|`. Currently,; it is only split at the first whitespace.; 2. If a gtf is provided for gene-level quantification, ensure that some non-trivial number of genes (e.g.; more than half?) have at least 1 transcript in the index corresponding to them. If not, then complain. Of course, there are also potentially other, better solutions; so I'm open to suggestions. The problem with 1 is that _de-novo_ assemblers may have transcript names that are not unique up to the first `|`, so that the whole name needs to be taken into account. The problem with 2 is that it alerts the user of this potential issue, but doesn't resolve it. In the latter case, the user could provide the transcript-to-gene mapping using the provided transcript names in the ""simple"" format — i.e. > a simple tab-delimited format where each line contains the name of a transcript and the gene to which it belongs separated by a tab. which is also accepted by the `--geneMap` option. I sort of lean toward 2, but, as I said, am happy to consider other suggestions.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-144471362
https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-144478110:235,Usability,usab,usable,235,"@mdshw5, the best option I've found so far is actually [rsem-prepare-reference](http://deweylab.biostat.wisc.edu/rsem/rsem-prepare-reference.html). It's a bit slower than gtf-to-fasta, but, so far, seems to do a better job producing a usable transcriptome in the general case.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-144478110
https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-241235707:127,Deployability,release,release,127,"The gencode option behaves described above, and is implemented as of commit d44df88, so it should make it into the next tagged release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/15#issuecomment-241235707
https://github.com/COMBINE-lab/salmon/issues/16#issuecomment-144479133:118,Availability,error,error,118,"@mdshw5 --- Salmon has definitely become less ""complain-y"" in the newer versions. That is, it will no longer spew out error messages for all of the fragments that show up in an unexpected orientation. However, the summary statistics are currently very ""summary"". There is a file in the quantification directory called `libFormatCounts.txt` that summarizes the number of alignments seen in the different orientations etc. However, I _really_ like your idea of recording the ""violating"" transcripts. That is, we could maintain some ""threshold"" beyond which if there are these many ""incorrectly"" mapping fragments for a transcript, the transcript is recorded and reported to the user as potentially being in the wrong orientation in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16#issuecomment-144479133
https://github.com/COMBINE-lab/salmon/issues/16#issuecomment-144479133:124,Integrability,message,messages,124,"@mdshw5 --- Salmon has definitely become less ""complain-y"" in the newer versions. That is, it will no longer spew out error messages for all of the fragments that show up in an unexpected orientation. However, the summary statistics are currently very ""summary"". There is a file in the quantification directory called `libFormatCounts.txt` that summarizes the number of alignments seen in the different orientations etc. However, I _really_ like your idea of recording the ""violating"" transcripts. That is, we could maintain some ""threshold"" beyond which if there are these many ""incorrectly"" mapping fragments for a transcript, the transcript is recorded and reported to the user as potentially being in the wrong orientation in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16#issuecomment-144479133
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:770,Availability,down,download,770,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:1414,Availability,failure,failures,1414,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:692,Deployability,install,installed,692,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:1366,Deployability,install,installed,1366,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:1498,Deployability,install,installed,1498,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:1320,Modifiability,config,config,1320,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:1479,Modifiability,config,config,1479,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246:78,Deployability,install,installed,78,"Hey @rob-p, you are quite welcome; thanks for the warm response. Being system installed packages most headers and dynamic libraries will be installed using the standard prefixes: /usr/include, /usr/lib/${multiarch-tuple}/, . I've updated the checklist [above](https://github.com/COMBINE-lab/salmon/issues/19#issue-109233280) with links to the file lists so you can see the paths yourself. Interestingly I was able to build, run, and pass all the included tests using the version of BWA in the Debian archive. As for Jellyfish I had to update our package to include 'json.h' which had gotten dropped.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246:140,Deployability,install,installed,140,"Hey @rob-p, you are quite welcome; thanks for the warm response. Being system installed packages most headers and dynamic libraries will be installed using the standard prefixes: /usr/include, /usr/lib/${multiarch-tuple}/, . I've updated the checklist [above](https://github.com/COMBINE-lab/salmon/issues/19#issue-109233280) with links to the file lists so you can see the paths yourself. Interestingly I was able to build, run, and pass all the included tests using the version of BWA in the Debian archive. As for Jellyfish I had to update our package to include 'json.h' which had gotten dropped.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246:230,Deployability,update,updated,230,"Hey @rob-p, you are quite welcome; thanks for the warm response. Being system installed packages most headers and dynamic libraries will be installed using the standard prefixes: /usr/include, /usr/lib/${multiarch-tuple}/, . I've updated the checklist [above](https://github.com/COMBINE-lab/salmon/issues/19#issue-109233280) with links to the file lists so you can see the paths yourself. Interestingly I was able to build, run, and pass all the included tests using the version of BWA in the Debian archive. As for Jellyfish I had to update our package to include 'json.h' which had gotten dropped.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246:535,Deployability,update,update,535,"Hey @rob-p, you are quite welcome; thanks for the warm response. Being system installed packages most headers and dynamic libraries will be installed using the standard prefixes: /usr/include, /usr/lib/${multiarch-tuple}/, . I've updated the checklist [above](https://github.com/COMBINE-lab/salmon/issues/19#issue-109233280) with links to the file lists so you can see the paths yourself. Interestingly I was able to build, run, and pass all the included tests using the version of BWA in the Debian archive. As for Jellyfish I had to update our package to include 'json.h' which had gotten dropped.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246:455,Testability,test,tests,455,"Hey @rob-p, you are quite welcome; thanks for the warm response. Being system installed packages most headers and dynamic libraries will be installed using the standard prefixes: /usr/include, /usr/lib/${multiarch-tuple}/, . I've updated the checklist [above](https://github.com/COMBINE-lab/salmon/issues/19#issue-109233280) with links to the file lists so you can see the paths yourself. Interestingly I was able to build, run, and pass all the included tests using the version of BWA in the Debian archive. As for Jellyfish I had to update our package to include 'json.h' which had gotten dropped.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144914246
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127:114,Deployability,install,installed,114,`cmake` fails when extracting external dependencies for me. See #10. I'd also like to be able to use the existing installed versions of dependencies. For me they're installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127:165,Deployability,install,installed,165,`cmake` fails when extracting external dependencies for me. See #10. I'd also like to be able to use the existing installed versions of dependencies. For me they're installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127:39,Integrability,depend,dependencies,39,`cmake` fails when extracting external dependencies for me. See #10. I'd also like to be able to use the existing installed versions of dependencies. For me they're installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127:136,Integrability,depend,dependencies,136,`cmake` fails when extracting external dependencies for me. See #10. I'd also like to be able to use the existing installed versions of dependencies. For me they're installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193514127
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:141,Deployability,install,installed,141,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:564,Deployability,install,installed,564,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:728,Deployability,install,install,728,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:1134,Deployability,install,install,1134,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:1228,Deployability,install,installation,1228,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:25,Integrability,depend,dependencies,25,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:334,Integrability,depend,dependency,334,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:252,Security,expose,expose,252,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957:1386,Usability,learn,learn,1386,"Hi guys,. Which existing dependencies would you like to be able to use? There are some of these libraries that cannot be replaced by already installed variants. Specifically,; - BWA --- since the version that is pulled in and used actually requires we expose certain functionality for our lightweight alignment procedure (though this dependency may go away all together if we deprecate lightweight alignment in favor of quasi-mapping).; - Jellyfish --- here, we require the ability to use jellyfish as a library. Specifically, we rely on some headers that are not installed with the standard package. Perhaps here there could be some synergy with Guillaume on making all of the things Salmon uses part of the standard Jellyfish install, but, at least currently, this isn't the case. The CMake build system already looks for existing versions of the following before fetching them:; - Boost; - tbb; - jemalloc. So, the the remaining guys are `libgff` (which is just some small libraryification of a gff parser that I put together a while ago, I don't know that it's in any package manager --- is it? It doesn't even have an associated install script) and `staden IO lib`. For Staden, I'd be happy to have it look for an existing installation, but there is no FindStaden.cmake that I know of, and I don't really know how to write FindX.cmake files appropriately. However, I'd be happy to learn and / or accept pull requests.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-193559957
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502:216,Modifiability,config,config,216,"It would be good to get your modifications accepted into BWA & Jellyfish. Re: `libgff` I did indeed package it as a separate library for Debian: https://packages.debian.org/source/sid/libgff. staden-io ships `io_lib-config` which reports on how to compile against the library. ```; mcrusoe@mrcdev:~$ io_lib-config ; Usage: io_lib-config [option]. where 'option' is any one of:. --cflags C and preprocessor flags (eg -I/foo/include); --libs Link-line parameters, eg -L/foo/lib -lstaden-read; --version List io_lib version number. mcrusoe@mrcdev:~$ io_lib-config --cflags; -I/usr/include; mcrusoe@mrcdev:~$ io_lib-config --libs; -L/usr/lib/x86_64-linux-gnu -lstaden-read -Wl,-z,relro -lm -lpthread -lcurl -lz; mcrusoe@mrcdev:~$ io_lib-config --version; 1.14.7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502:307,Modifiability,config,config,307,"It would be good to get your modifications accepted into BWA & Jellyfish. Re: `libgff` I did indeed package it as a separate library for Debian: https://packages.debian.org/source/sid/libgff. staden-io ships `io_lib-config` which reports on how to compile against the library. ```; mcrusoe@mrcdev:~$ io_lib-config ; Usage: io_lib-config [option]. where 'option' is any one of:. --cflags C and preprocessor flags (eg -I/foo/include); --libs Link-line parameters, eg -L/foo/lib -lstaden-read; --version List io_lib version number. mcrusoe@mrcdev:~$ io_lib-config --cflags; -I/usr/include; mcrusoe@mrcdev:~$ io_lib-config --libs; -L/usr/lib/x86_64-linux-gnu -lstaden-read -Wl,-z,relro -lm -lpthread -lcurl -lz; mcrusoe@mrcdev:~$ io_lib-config --version; 1.14.7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502:330,Modifiability,config,config,330,"It would be good to get your modifications accepted into BWA & Jellyfish. Re: `libgff` I did indeed package it as a separate library for Debian: https://packages.debian.org/source/sid/libgff. staden-io ships `io_lib-config` which reports on how to compile against the library. ```; mcrusoe@mrcdev:~$ io_lib-config ; Usage: io_lib-config [option]. where 'option' is any one of:. --cflags C and preprocessor flags (eg -I/foo/include); --libs Link-line parameters, eg -L/foo/lib -lstaden-read; --version List io_lib version number. mcrusoe@mrcdev:~$ io_lib-config --cflags; -I/usr/include; mcrusoe@mrcdev:~$ io_lib-config --libs; -L/usr/lib/x86_64-linux-gnu -lstaden-read -Wl,-z,relro -lm -lpthread -lcurl -lz; mcrusoe@mrcdev:~$ io_lib-config --version; 1.14.7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502:554,Modifiability,config,config,554,"It would be good to get your modifications accepted into BWA & Jellyfish. Re: `libgff` I did indeed package it as a separate library for Debian: https://packages.debian.org/source/sid/libgff. staden-io ships `io_lib-config` which reports on how to compile against the library. ```; mcrusoe@mrcdev:~$ io_lib-config ; Usage: io_lib-config [option]. where 'option' is any one of:. --cflags C and preprocessor flags (eg -I/foo/include); --libs Link-line parameters, eg -L/foo/lib -lstaden-read; --version List io_lib version number. mcrusoe@mrcdev:~$ io_lib-config --cflags; -I/usr/include; mcrusoe@mrcdev:~$ io_lib-config --libs; -L/usr/lib/x86_64-linux-gnu -lstaden-read -Wl,-z,relro -lm -lpthread -lcurl -lz; mcrusoe@mrcdev:~$ io_lib-config --version; 1.14.7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502:612,Modifiability,config,config,612,"It would be good to get your modifications accepted into BWA & Jellyfish. Re: `libgff` I did indeed package it as a separate library for Debian: https://packages.debian.org/source/sid/libgff. staden-io ships `io_lib-config` which reports on how to compile against the library. ```; mcrusoe@mrcdev:~$ io_lib-config ; Usage: io_lib-config [option]. where 'option' is any one of:. --cflags C and preprocessor flags (eg -I/foo/include); --libs Link-line parameters, eg -L/foo/lib -lstaden-read; --version List io_lib version number. mcrusoe@mrcdev:~$ io_lib-config --cflags; -I/usr/include; mcrusoe@mrcdev:~$ io_lib-config --libs; -L/usr/lib/x86_64-linux-gnu -lstaden-read -Wl,-z,relro -lm -lpthread -lcurl -lz; mcrusoe@mrcdev:~$ io_lib-config --version; 1.14.7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502:733,Modifiability,config,config,733,"It would be good to get your modifications accepted into BWA & Jellyfish. Re: `libgff` I did indeed package it as a separate library for Debian: https://packages.debian.org/source/sid/libgff. staden-io ships `io_lib-config` which reports on how to compile against the library. ```; mcrusoe@mrcdev:~$ io_lib-config ; Usage: io_lib-config [option]. where 'option' is any one of:. --cflags C and preprocessor flags (eg -I/foo/include); --libs Link-line parameters, eg -L/foo/lib -lstaden-read; --version List io_lib version number. mcrusoe@mrcdev:~$ io_lib-config --cflags; -I/usr/include; mcrusoe@mrcdev:~$ io_lib-config --libs; -L/usr/lib/x86_64-linux-gnu -lstaden-read -Wl,-z,relro -lm -lpthread -lcurl -lz; mcrusoe@mrcdev:~$ io_lib-config --version; 1.14.7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195346502
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157:180,Deployability,install,installed,180,"Oh wow; I had no idea about libgff :). Regarding Jellyfish, there's not a source ""change"" required upstream, rather the fact that I seem to require the `config.h` file that is not installed during the ""normal"" Jellyfish install process. I don't know if you have any idea how one might get around that. Regarding staden, thanks for brining this to my attention. It will probably take a bit for me to wrap my head around the right way to access this information in CMake, but I'll see what I can manage to cobble together on that front (I really wish there was something better, with a less horrendous ""language"" than CMake, but nothing I know of exists that works nearly as well ""out of the box"").",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157:220,Deployability,install,install,220,"Oh wow; I had no idea about libgff :). Regarding Jellyfish, there's not a source ""change"" required upstream, rather the fact that I seem to require the `config.h` file that is not installed during the ""normal"" Jellyfish install process. I don't know if you have any idea how one might get around that. Regarding staden, thanks for brining this to my attention. It will probably take a bit for me to wrap my head around the right way to access this information in CMake, but I'll see what I can manage to cobble together on that front (I really wish there was something better, with a less horrendous ""language"" than CMake, but nothing I know of exists that works nearly as well ""out of the box"").",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157:399,Integrability,wrap,wrap,399,"Oh wow; I had no idea about libgff :). Regarding Jellyfish, there's not a source ""change"" required upstream, rather the fact that I seem to require the `config.h` file that is not installed during the ""normal"" Jellyfish install process. I don't know if you have any idea how one might get around that. Regarding staden, thanks for brining this to my attention. It will probably take a bit for me to wrap my head around the right way to access this information in CMake, but I'll see what I can manage to cobble together on that front (I really wish there was something better, with a less horrendous ""language"" than CMake, but nothing I know of exists that works nearly as well ""out of the box"").",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157:153,Modifiability,config,config,153,"Oh wow; I had no idea about libgff :). Regarding Jellyfish, there's not a source ""change"" required upstream, rather the fact that I seem to require the `config.h` file that is not installed during the ""normal"" Jellyfish install process. I don't know if you have any idea how one might get around that. Regarding staden, thanks for brining this to my attention. It will probably take a bit for me to wrap my head around the right way to access this information in CMake, but I'll see what I can manage to cobble together on that front (I really wish there was something better, with a less horrendous ""language"" than CMake, but nothing I know of exists that works nearly as well ""out of the box"").",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157:436,Security,access,access,436,"Oh wow; I had no idea about libgff :). Regarding Jellyfish, there's not a source ""change"" required upstream, rather the fact that I seem to require the `config.h` file that is not installed during the ""normal"" Jellyfish install process. I don't know if you have any idea how one might get around that. Regarding staden, thanks for brining this to my attention. It will probably take a bit for me to wrap my head around the right way to access this information in CMake, but I'll see what I can manage to cobble together on that front (I really wish there was something better, with a less horrendous ""language"" than CMake, but nothing I know of exists that works nearly as well ""out of the box"").",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195436157
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002:132,Deployability,patch,patched,132,I don't think `config.h` is needed when compiling against prebuilt `libjellyfish*.so`; when building salmon for Debian I explicitly patched out the include and everything built just fine. http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002:254,Deployability,patch,patches,254,I don't think `config.h` is needed when compiling against prebuilt `libjellyfish*.so`; when building salmon for Debian I explicitly patched out the include and everything built just fine. http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002:272,Deployability,update,update,272,I don't think `config.h` is needed when compiling against prebuilt `libjellyfish*.so`; when building salmon for Debian I explicitly patched out the include and everything built just fine. http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002:15,Modifiability,config,config,15,I don't think `config.h` is needed when compiling against prebuilt `libjellyfish*.so`; when building salmon for Debian I explicitly patched out the include and everything built just fine. http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195452002
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195457891:583,Deployability,configurat,configuration,583,"I used autotools back in 2008 or so (when I was still working in computer graphics). I found it to be horribly archaic (not that CMake is a bastion of clarity). Also, as opaque as CMake sometimes is, I at least found it easier to discover how to force it to do what I wanted than with autotools. That being said, I feel like it is one of these situations where, if you are a wizard with the tool, everything seems relatively easy and straightforward (e.g. Guillaume uses autotools for Jellyfish, and he seems to have internalized all of the quirks fairly well). I guess I long for a configuration and build DSL that has an actual nice language, rather than the somewhat crazy invocations required by autotools and CMake. Then again, the annals of history are strewn with the wreckage of deprecated and defunct attempts to make better build systems.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195457891
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195457891:583,Modifiability,config,configuration,583,"I used autotools back in 2008 or so (when I was still working in computer graphics). I found it to be horribly archaic (not that CMake is a bastion of clarity). Also, as opaque as CMake sometimes is, I at least found it easier to discover how to force it to do what I wanted than with autotools. That being said, I feel like it is one of these situations where, if you are a wizard with the tool, everything seems relatively easy and straightforward (e.g. Guillaume uses autotools for Jellyfish, and he seems to have internalized all of the quirks fairly well). I guess I long for a configuration and build DSL that has an actual nice language, rather than the somewhat crazy invocations required by autotools and CMake. Then again, the annals of history are strewn with the wreckage of deprecated and defunct attempts to make better build systems.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195457891
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195461547:214,Deployability,install,install,214,The languages of both autotools and CMake are pretty terrible. I actually like the Make language; I think it gets a bad wrap. Other than `config.h` was there any other files of Jellyfish that were missing from the install that you needed?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195461547
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195461547:120,Integrability,wrap,wrap,120,The languages of both autotools and CMake are pretty terrible. I actually like the Make language; I think it gets a bad wrap. Other than `config.h` was there any other files of Jellyfish that were missing from the install that you needed?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195461547
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195461547:138,Modifiability,config,config,138,The languages of both autotools and CMake are pretty terrible. I actually like the Make language; I think it gets a bad wrap. Other than `config.h` was there any other files of Jellyfish that were missing from the install that you needed?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195461547
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195466899:70,Deployability,install,installed,70,"No, I believe that config.h was it. Otherwise, I just use the already installed headers and the pre-compiled library `libjellyfish-2.0`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195466899
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195466899:19,Modifiability,config,config,19,"No, I believe that config.h was it. Otherwise, I just use the already installed headers and the pre-compiled library `libjellyfish-2.0`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195466899
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195604141:25,Deployability,install,installs,25,I'll check that Homebrew installs the Jellyfish config.h file.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195604141
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195604141:48,Modifiability,config,config,48,I'll check that Homebrew installs the Jellyfish config.h file.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195604141
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195644865:132,Integrability,depend,dependency,132,"I actually think that (as @mr-c points out), the `config.h` file isn't necessary with newer versions of Jellyfish. I'm removing the dependency upstream.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195644865
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195644865:50,Modifiability,config,config,50,"I actually think that (as @mr-c points out), the `config.h` file isn't necessary with newer versions of Jellyfish. I'm removing the dependency upstream.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-195644865
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:29,Availability,down,download,29,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:139,Availability,error,error,139,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:198,Availability,error,error,198,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:265,Availability,down,download,265,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:4933,Availability,Error,Error,4933,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:5179,Availability,Error,Error,5179,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:5415,Availability,Error,Error,5415,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:5508,Availability,Error,Error,5508,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:1152,Deployability,Release,Release,1152,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:2965,Deployability,install,install,2965,"on ""5.2.3""); Found liblzma library: /apps/gentoo/usr/lib/liblzma.a; ===========================================; -- Found BZip2: /apps/gentoo/usr/lib/libbz2.a (found version ""1.0.6""); -- Looking for BZ2_bzCompressInit; -- Looking for BZ2_bzCompressInit - found; Found libbz2 library: /apps/gentoo/usr/lib/libbz2.a; ===========================================; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - not found; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Could NOT find Boost; BOOST_INCLUDEDIR =; BOOST_LIBRARYDIR =; Boost_FOUND = 0; Build system will fetch and build Boost; ==================================================================; Setting Temporary Boost paths; BOOST INCLUDE DIR = $blah/salmon-0.10.2/external/install/include; BOOST INCLUDE DIRS = $blah/salmon-0.10.2/external/install/include; BOOST LIB DIR = $blah/salmon-0.10.2/external/install/lib; BOOST LIBRARIES =; Build system will build libdivsufsort; ==================================================================; Build system will fetch and build the Cereal serialization library; ==================================================================; Build system will fetch and build BWA (for Salmon); ==================================================================; -- Found TBB: /apps/gentoo/usr/include (found suitable version ""2018.0"", minimum required is ""2018.0"") found components: tbb tbbmalloc tbbmalloc_proxy; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; Build system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; =======",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:3032,Deployability,install,install,3032,".a; ===========================================; -- Found BZip2: /apps/gentoo/usr/lib/libbz2.a (found version ""1.0.6""); -- Looking for BZ2_bzCompressInit; -- Looking for BZ2_bzCompressInit - found; Found libbz2 library: /apps/gentoo/usr/lib/libbz2.a; ===========================================; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - not found; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Could NOT find Boost; BOOST_INCLUDEDIR =; BOOST_LIBRARYDIR =; Boost_FOUND = 0; Build system will fetch and build Boost; ==================================================================; Setting Temporary Boost paths; BOOST INCLUDE DIR = $blah/salmon-0.10.2/external/install/include; BOOST INCLUDE DIRS = $blah/salmon-0.10.2/external/install/include; BOOST LIB DIR = $blah/salmon-0.10.2/external/install/lib; BOOST LIBRARIES =; Build system will build libdivsufsort; ==================================================================; Build system will fetch and build the Cereal serialization library; ==================================================================; Build system will fetch and build BWA (for Salmon); ==================================================================; -- Found TBB: /apps/gentoo/usr/include (found suitable version ""2018.0"", minimum required is ""2018.0"") found components: tbb tbbmalloc tbbmalloc_proxy; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; Build system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Buil",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:3094,Deployability,install,install,3094,"========================; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - not found; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Could NOT find Boost; BOOST_INCLUDEDIR =; BOOST_LIBRARYDIR =; Boost_FOUND = 0; Build system will fetch and build Boost; ==================================================================; Setting Temporary Boost paths; BOOST INCLUDE DIR = $blah/salmon-0.10.2/external/install/include; BOOST INCLUDE DIRS = $blah/salmon-0.10.2/external/install/include; BOOST LIB DIR = $blah/salmon-0.10.2/external/install/lib; BOOST LIBRARIES =; Build system will build libdivsufsort; ==================================================================; Build system will fetch and build the Cereal serialization library; ==================================================================; Build system will fetch and build BWA (for Salmon); ==================================================================; -- Found TBB: /apps/gentoo/usr/include (found suitable version ""2018.0"", minimum required is ""2018.0"") found components: tbb tbbmalloc tbbmalloc_proxy; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; Build system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc librar",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:5039,Deployability,install,install,5039,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:5285,Deployability,install,install,5285,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:4192,Modifiability,config,config,4192,"LUDE DIRS = $blah/salmon-0.10.2/external/install/include; BOOST LIB DIR = $blah/salmon-0.10.2/external/install/lib; BOOST LIBRARIES =; Build system will build libdivsufsort; ==================================================================; Build system will fetch and build the Cereal serialization library; ==================================================================; Build system will fetch and build BWA (for Salmon); ==================================================================; -- Found TBB: /apps/gentoo/usr/include (found suitable version ""2018.0"", minimum required is ""2018.0"") found components: tbb tbbmalloc tbbmalloc_proxy; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; Build system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:4909,Modifiability,Config,Configuring,4909,"ild system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have been written to: $blah/salmon-0.10.2; $blah/salmon-0.10.2 $ make; make: *** No targets specified and no makefile found. Stop.; $blah/salmon-0.10.2 $; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:713,Safety,Detect,Detecting,713,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:747,Safety,Detect,Detecting,747,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:788,Safety,Detect,Detecting,788,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:821,Safety,Detect,Detecting,821,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:992,Safety,Detect,Detecting,992,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:1028,Safety,Detect,Detecting,1028,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:1071,Safety,Detect,Detecting,1071,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:1106,Safety,Detect,Detecting,1106,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:4606,Testability,log,log,4606,"alloc tbbmalloc_proxy; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; Build system will compile libgff; ==================================================================; ==================================================================; Build system will compile Staden IOLib; ==================================================================; Build system will fetch SPDLOG; ==================================================================; -- Found PkgConfig: /apps/gentoo/usr/bin/pkg-config (found version ""0.29.2""); -- Found Jemalloc: /apps/gentoo/usr/lib/libjemalloc.so (found version """"); Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /apps/gentoo/usr/lib/libtbbmalloc_proxy.so;/apps/gentoo/usr/lib/libtbbmalloc.so;/apps/gentoo/usr/lib/libtbb.so; -- Configuring done; CMake Error at src/CMakeLists.txt:158 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:160 (add_executable):; Cannot find source file:. $blah/salmon-0.10.2/external/install/src/rapmap/rank9b.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at src/CMakeLists.txt:158 (add_executable):; No SOURCES given to target: salmon. CMake Error at src/CMakeLists.txt:160 (add_executable):; No SOURCES given to target: unitTests. -- Build files have ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:31,Availability,down,download,31,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:141,Availability,error,error,141,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:172,Availability,down,downloading,172,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:492,Availability,down,downloads,492,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:568,Availability,down,download,568,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:194,Integrability,depend,dependencies,194,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:452,Performance,perform,perform,452,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:422,Safety,risk,risk,422,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:413,Security,secur,security,413,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:464,Security,validat,validate,464,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:478,Security,checksum,checksum,478,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040
https://github.com/COMBINE-lab/salmon/issues/20#issuecomment-145677185:169,Availability,avail,available,169,"Hi @rob-p ,. It does solve that issue. (I had figured out that AVX features were probably on the oldish side of software on that system, but I had the most recent `gas` available without having to recompile it from source myself). Thanks a lot (for this answer and for Salmon)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20#issuecomment-145677185
https://github.com/COMBINE-lab/salmon/issues/21#issuecomment-145695208:98,Deployability,install,installed,98,I am confirming the suspicion that the build process is trying to use the system's Boost. After I installed boost-iostreams and boost-serialization through the system's package manager the build completes (despite that boost being older that the one fetched and built earlier during the `make` step),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21#issuecomment-145695208
https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488:38,Availability,failure,failure,38,"Thanks for reporting this. Certainly, failure should be more apparent. Out of curiosity, is the failure in building the index? It looks like loading the index didn't work, so was the space character that caused the problem in your reference file?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488
https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488:96,Availability,failure,failure,96,"Thanks for reporting this. Certainly, failure should be more apparent. Out of curiosity, is the failure in building the index? It looks like loading the index didn't work, so was the space character that caused the problem in your reference file?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488
https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488:141,Performance,load,loading,141,"Thanks for reporting this. Certainly, failure should be more apparent. Out of curiosity, is the failure in building the index? It looks like loading the index didn't work, so was the space character that caused the problem in your reference file?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488
https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848:187,Availability,failure,failure,187,"Hi rob... Yep, I found it with a binary search of the fasta reference file. On Friday, October 9, 2015, Rob Patro notifications@github.com wrote:. > Thanks for reporting this. Certainly, failure should be more apparent. Out; > of curiosity, is the failure in building the index? It looks like loading; > the index didn't work, so was the space character that caused the problem; > in your reference file?; > ; > --Rob; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848
https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848:248,Availability,failure,failure,248,"Hi rob... Yep, I found it with a binary search of the fasta reference file. On Friday, October 9, 2015, Rob Patro notifications@github.com wrote:. > Thanks for reporting this. Certainly, failure should be more apparent. Out; > of curiosity, is the failure in building the index? It looks like loading; > the index didn't work, so was the space character that caused the problem; > in your reference file?; > ; > --Rob; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848
https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848:293,Performance,load,loading,293,"Hi rob... Yep, I found it with a binary search of the fasta reference file. On Friday, October 9, 2015, Rob Patro notifications@github.com wrote:. > Thanks for reporting this. Certainly, failure should be more apparent. Out; > of curiosity, is the failure in building the index? It looks like loading; > the index didn't work, so was the space character that caused the problem; > in your reference file?; > ; > --Rob; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848
https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-152302062:120,Availability,avail,availability,120,"Thanks, @lgautier! I think that ideally, we will create a github repo for all dependencies, so that we can control such availability issues.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-152302062
https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-152302062:78,Integrability,depend,dependencies,78,"Thanks, @lgautier! I think that ideally, we will create a github repo for all dependencies, so that we can control such availability issues.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-152302062
https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153147884:61,Availability,avail,available,61,I just issued an other pull request: boost_1_57 is no longer available on the download site.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153147884
https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153147884:78,Availability,down,download,78,I just issued an other pull request: boost_1_57 is no longer available on the download site.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153147884
https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153149314:101,Deployability,install,install,101,"Oops. Just saw that `master` is already pointing at boost 1_59. What branch should one use for a new install ? master, 0.5.0 ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153149314
https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153182461:119,Availability,avail,available,119,"Hi Laurent,. I typically like to keep master compilable, which is why I pushed the boost 1.59 change after 1.57 became available on the previous host. If you're going to be compiling from source, v0.5.0 should be fine if you're using a system boost (and so don't have to fetch and compile one through CMake). Otherwise, it should be OK to compile from master, which currently doesn't have any substantial changes from v0.5.0. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153182461
https://github.com/COMBINE-lab/salmon/issues/24#issuecomment-152767712:72,Modifiability,config,config,72,Looks like it's not in 1.54 - http://www.boost.org/doc/libs/1_54_0/libs/config/doc/html/boost_config/boost_macro_reference.html,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24#issuecomment-152767712
https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152843180:17,Deployability,update,updated,17,"So, I've already updated the docs _here_ (i.e. the doc tag in the ReadMe should should point to the link I give above). I believe the right thing to do over in the Sailfish docs is to just remove any documentation about Salmon (since the projects are now maintained in separate repos each with their own docs).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152843180
https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152843296:83,Deployability,update,updated,83,"k!. On Sun, Nov 01, 2015 at 08:48:45AM -0800, Rob Patro wrote:. > So, I've already updated the docs _here_ (i.e. the doc tag in the ReadMe should should point to the link I give above). I believe the right thing to do over in the Sailfish docs is to just remove any documentation about Salmon (since the projects are now maintained in separate repos each with their own docs).; > ; > ---; > ; > Reply to this email directly or view it on GitHub:; > ; > ## https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152843180; > ; > C. Titus Brown, ctbrown@ucdavis.edu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152843296
https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152844121:35,Deployability,update,updated,35,Ok --- The sailfish docs should be updated as well [http://sailfish.readthedocs.org/en/master/](http://sailfish.readthedocs.org/en/master/). Let me know if you see something different (i.e. if you still see the salmon instructions over there).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/27#issuecomment-152844121
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827347:82,Availability,down,downstream,82,"In particular, this would enable streaming behavior => transcript quantification, downstream of khmer error trimming etc. c.f. http://khmer.readthedocs.org/en/stable/whats-new-2.0.html cc @MacManes @Blahah",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827347
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827347:102,Availability,error,error,102,"In particular, this would enable streaming behavior => transcript quantification, downstream of khmer error trimming etc. c.f. http://khmer.readthedocs.org/en/stable/whats-new-2.0.html cc @MacManes @Blahah",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827347
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:525,Availability,reliab,reliable,525,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:143,Energy Efficiency,efficient,efficient,143,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:432,Performance,perform,performance,432,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:548,Performance,concurren,concurrency-enabled,548,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:108,Security,validat,validation,108,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:482,Testability,test,tested,482,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:540,Testability,test,tested,540,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:390,Usability,simpl,simple,390,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828484:180,Performance,concurren,concurrent,180,"@macmanes — Heng's code is very well-tested, but afaik, completely serialized. Of course, that's nothing that we couldn't handle internally by throwing the reported reads into our concurrent queue. Actually, I think that the Jellyfish 2 parser (for a single `FAST(A/Q)` file) would be easy to make work in this context. The trick is to require that the read ""batches"" always end on an even-indexed boundary, so that we never have an (interleaved) read pair spit across batch boundaries. I'm not sure how easy or difficult that is to enforce. I might just ask Guillaume about the best way to enforce this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828484
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828484:191,Performance,queue,queue,191,"@macmanes — Heng's code is very well-tested, but afaik, completely serialized. Of course, that's nothing that we couldn't handle internally by throwing the reported reads into our concurrent queue. Actually, I think that the Jellyfish 2 parser (for a single `FAST(A/Q)` file) would be easy to make work in this context. The trick is to require that the read ""batches"" always end on an even-indexed boundary, so that we never have an (interleaved) read pair spit across batch boundaries. I'm not sure how easy or difficult that is to enforce. I might just ask Guillaume about the best way to enforce this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828484
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828484:37,Testability,test,tested,37,"@macmanes — Heng's code is very well-tested, but afaik, completely serialized. Of course, that's nothing that we couldn't handle internally by throwing the reported reads into our concurrent queue. Actually, I think that the Jellyfish 2 parser (for a single `FAST(A/Q)` file) would be easy to make work in this context. The trick is to require that the read ""batches"" always end on an even-indexed boundary, so that we never have an (interleaved) read pair spit across batch boundaries. I'm not sure how easy or difficult that is to enforce. I might just ask Guillaume about the best way to enforce this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828484
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910:39,Performance,perform,performance,39,"I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead — a concurrent queue is cheap, but not free).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910:152,Performance,multi-thread,multi-threaded,152,"I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead — a concurrent queue is cheap, but not free).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910:210,Performance,concurren,concurrent,210,"I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead — a concurrent queue is cheap, but not free).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910:221,Performance,queue,queue,221,"I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead — a concurrent queue is cheap, but not free).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152828910
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:1094,Availability,error,error,1094,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:101,Performance,perform,performance,101,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:214,Performance,multi-thread,multi-threaded,214,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:274,Performance,concurren,concurrent,274,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:285,Performance,queue,queue,285,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:562,Performance,perform,performance,562,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:881,Performance,perform,performance,881,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:912,Usability,simpl,simply,912,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-163361739:206,Testability,log,logic,206,If salmon would just read stdin using a symbolic `-` then you should be able to do something like:. ``` bash; interleaved_fastq_emitter | salmon --mates1 - --mates2 - ; ```. ...as long as the fastq reading logic is operating on 4-lines at a time. This way there's no new arguments added to salmon.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-163361739
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:426,Performance,Load,Loading,426,"I just tried the /dev/fd/0 approach. First I ran. ```; salmon quant -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa -l IU -1 reads_1.fastq -2 reads_2.fastq -o normal_salmon_out; ```. In this case the following is the content of the `salmon_quant.log`. ```; [2016-01-03 00:33:37.001] [jointLog] [info] parsing read library format; [2016-01-03 00:33:37.510] [jointLog] [info] Loading Quasi index; [2016-01-03 00:33:53.646] [jointLog] [info] done; [2016-01-03 00:34:14.501] [jointLog] [info] Computed 13742 rich equivalence classes for further processing; [2016-01-03 00:34:14.501] [jointLog] [info] Counted 335230 total reads in the equivalence classes; [2016-01-03 00:34:14.501] [fileLog] [info]; At end of round 0; ==================; Observed 3835342 total fragments (3835342 in most recent round). [2016-01-03 00:34:20.992] [jointLog] [warning] Only 335230 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-03 00:34:20.992] [jointLog] [info] Mapping rate = 8.74055%. [2016-01-03 00:34:20.992] [jointLog] [info] finished quantifyLibrary(); [2016-01-03 00:34:20.992] [jointLog] [info] Starting optimizer; [2016-01-03 00:34:21.028] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:34:21.030] [jointLog] [info] iteration = 0 | max rel diff. = 23.4889; [2016-01-03 00:34:21.167] [jointLog] [info] iteration = 100 | max rel diff. = 0.150549; [2016-01-03 00:34:21.304] [jointLog] [info] iteration = 200 | max rel diff. = 0.0517672; [2016-01-03 00:34:21.447] [jointLog] [info] iteration = 300 | max rel diff. = 0.0368208; [2016-01-03 00:34:21.578] [jointLog] [info] iteration = 400 | max rel diff. = 0.0237254; [2016-01-03 00:34:21.705] [jointLog] [info] iteration = 500 | max rel diff. = 0.0147784; [2016-01-03 00:34:21.834] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131134; [2016-01-03 00:34:21",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:1255,Performance,optimiz,optimizer,1255,"lowing is the content of the `salmon_quant.log`. ```; [2016-01-03 00:33:37.001] [jointLog] [info] parsing read library format; [2016-01-03 00:33:37.510] [jointLog] [info] Loading Quasi index; [2016-01-03 00:33:53.646] [jointLog] [info] done; [2016-01-03 00:34:14.501] [jointLog] [info] Computed 13742 rich equivalence classes for further processing; [2016-01-03 00:34:14.501] [jointLog] [info] Counted 335230 total reads in the equivalence classes; [2016-01-03 00:34:14.501] [fileLog] [info]; At end of round 0; ==================; Observed 3835342 total fragments (3835342 in most recent round). [2016-01-03 00:34:20.992] [jointLog] [warning] Only 335230 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-03 00:34:20.992] [jointLog] [info] Mapping rate = 8.74055%. [2016-01-03 00:34:20.992] [jointLog] [info] finished quantifyLibrary(); [2016-01-03 00:34:20.992] [jointLog] [info] Starting optimizer; [2016-01-03 00:34:21.028] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:34:21.030] [jointLog] [info] iteration = 0 | max rel diff. = 23.4889; [2016-01-03 00:34:21.167] [jointLog] [info] iteration = 100 | max rel diff. = 0.150549; [2016-01-03 00:34:21.304] [jointLog] [info] iteration = 200 | max rel diff. = 0.0517672; [2016-01-03 00:34:21.447] [jointLog] [info] iteration = 300 | max rel diff. = 0.0368208; [2016-01-03 00:34:21.578] [jointLog] [info] iteration = 400 | max rel diff. = 0.0237254; [2016-01-03 00:34:21.705] [jointLog] [info] iteration = 500 | max rel diff. = 0.0147784; [2016-01-03 00:34:21.834] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131134; [2016-01-03 00:34:21.961] [jointLog] [info] iteration = 700 | max rel diff. = 0.0130094; [2016-01-03 00:34:22.092] [jointLog] [info] iteration = 800 | max rel diff. = 0.0100546; [2016-01-03 00:34:22.196] [jointLog] [info] iteration = 882 | max rel diff. = 0.00861472; [2016-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:2302,Performance,optimiz,optimizer,2302," [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:34:21.030] [jointLog] [info] iteration = 0 | max rel diff. = 23.4889; [2016-01-03 00:34:21.167] [jointLog] [info] iteration = 100 | max rel diff. = 0.150549; [2016-01-03 00:34:21.304] [jointLog] [info] iteration = 200 | max rel diff. = 0.0517672; [2016-01-03 00:34:21.447] [jointLog] [info] iteration = 300 | max rel diff. = 0.0368208; [2016-01-03 00:34:21.578] [jointLog] [info] iteration = 400 | max rel diff. = 0.0237254; [2016-01-03 00:34:21.705] [jointLog] [info] iteration = 500 | max rel diff. = 0.0147784; [2016-01-03 00:34:21.834] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131134; [2016-01-03 00:34:21.961] [jointLog] [info] iteration = 700 | max rel diff. = 0.0130094; [2016-01-03 00:34:22.092] [jointLog] [info] iteration = 800 | max rel diff. = 0.0100546; [2016-01-03 00:34:22.196] [jointLog] [info] iteration = 882 | max rel diff. = 0.00861472; [2016-01-03 00:34:22.205] [jointLog] [info] Finished optimizer; [2016-01-03 00:34:22.205] [jointLog] [info] writing output. [2016-01-03 00:34:22.433] [jointLog] [warning] NOTE: Read Lib [( reads_1.fastq, reads_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: normal_salmon_out/libFormatCounts.txt for details; ```. Then I ran. ```; cat all_reads.fastq | salmon quant -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa -l IU -1 /dev/fd/0 -2 /dev/fd/0 -o interlaced_salmon_out; ```. Now I get. ```; [2016-01-03 00:36:48.844] [jointLog] [info] parsing read library format; [2016-01-03 00:36:49.995] [jointLog] [info] Loading Quasi index; [2016-01-03 00:37:08.293] [jointLog] [info] done; [2016-01-03 00:37:25.106] [jointLog] [info] Computed 23484 rich equivalence classes for further processing; [2016-01-03 00:37:25.106] [jointLog] [info] Counted 667333 total reads in the equivalence classes; [2016-01-03 00:37:25.106] ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:2998,Performance,Load,Loading,2998,"[jointLog] [info] iteration = 700 | max rel diff. = 0.0130094; [2016-01-03 00:34:22.092] [jointLog] [info] iteration = 800 | max rel diff. = 0.0100546; [2016-01-03 00:34:22.196] [jointLog] [info] iteration = 882 | max rel diff. = 0.00861472; [2016-01-03 00:34:22.205] [jointLog] [info] Finished optimizer; [2016-01-03 00:34:22.205] [jointLog] [info] writing output. [2016-01-03 00:34:22.433] [jointLog] [warning] NOTE: Read Lib [( reads_1.fastq, reads_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: normal_salmon_out/libFormatCounts.txt for details; ```. Then I ran. ```; cat all_reads.fastq | salmon quant -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa -l IU -1 /dev/fd/0 -2 /dev/fd/0 -o interlaced_salmon_out; ```. Now I get. ```; [2016-01-03 00:36:48.844] [jointLog] [info] parsing read library format; [2016-01-03 00:36:49.995] [jointLog] [info] Loading Quasi index; [2016-01-03 00:37:08.293] [jointLog] [info] done; [2016-01-03 00:37:25.106] [jointLog] [info] Computed 23484 rich equivalence classes for further processing; [2016-01-03 00:37:25.106] [jointLog] [info] Counted 667333 total reads in the equivalence classes; [2016-01-03 00:37:25.106] [fileLog] [info]; At end of round 0; ==================; Observed 3060000 total fragments (3060000 in most recent round). [2016-01-03 00:37:31.905] [jointLog] [warning] Only 667333 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-03 00:37:31.905] [jointLog] [info] Mapping rate = 21.8083%. [2016-01-03 00:37:31.905] [jointLog] [info] finished quantifyLibrary(); [2016-01-03 00:37:31.905] [jointLog] [info] Starting optimizer; [2016-01-03 00:37:33.275] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:37:33.279] [jointLog] [info] iteration = 0 | max rel diff.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:3827,Performance,optimiz,optimizer,3827,"v/fd/0 -o interlaced_salmon_out; ```. Now I get. ```; [2016-01-03 00:36:48.844] [jointLog] [info] parsing read library format; [2016-01-03 00:36:49.995] [jointLog] [info] Loading Quasi index; [2016-01-03 00:37:08.293] [jointLog] [info] done; [2016-01-03 00:37:25.106] [jointLog] [info] Computed 23484 rich equivalence classes for further processing; [2016-01-03 00:37:25.106] [jointLog] [info] Counted 667333 total reads in the equivalence classes; [2016-01-03 00:37:25.106] [fileLog] [info]; At end of round 0; ==================; Observed 3060000 total fragments (3060000 in most recent round). [2016-01-03 00:37:31.905] [jointLog] [warning] Only 667333 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-03 00:37:31.905] [jointLog] [info] Mapping rate = 21.8083%. [2016-01-03 00:37:31.905] [jointLog] [info] finished quantifyLibrary(); [2016-01-03 00:37:31.905] [jointLog] [info] Starting optimizer; [2016-01-03 00:37:33.275] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:37:33.279] [jointLog] [info] iteration = 0 | max rel diff. = 35.6186; [2016-01-03 00:37:33.533] [jointLog] [info] iteration = 100 | max rel diff. = 0.12044; [2016-01-03 00:37:33.755] [jointLog] [info] iteration = 200 | max rel diff. = 0.0493504; [2016-01-03 00:37:33.970] [jointLog] [info] iteration = 300 | max rel diff. = 0.0275491; [2016-01-03 00:37:34.194] [jointLog] [info] iteration = 400 | max rel diff. = 0.0216294; [2016-01-03 00:37:34.418] [jointLog] [info] iteration = 500 | max rel diff. = 0.0214024; [2016-01-03 00:37:34.640] [jointLog] [info] iteration = 600 | max rel diff. = 0.0132335; [2016-01-03 00:37:34.850] [jointLog] [info] iteration = 700 | max rel diff. = 0.0132363; [2016-01-03 00:37:35.066] [jointLog] [info] iteration = 800 | max rel diff. = 0.0122673; [2016-01-03 00:37:35.287] [jointLog] [info] iteration = 900 | max rel diff. = 0.012951; [2016-01-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:5052,Performance,optimiz,optimizer,5052," [info] Mapping rate = 21.8083%. [2016-01-03 00:37:31.905] [jointLog] [info] finished quantifyLibrary(); [2016-01-03 00:37:31.905] [jointLog] [info] Starting optimizer; [2016-01-03 00:37:33.275] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:37:33.279] [jointLog] [info] iteration = 0 | max rel diff. = 35.6186; [2016-01-03 00:37:33.533] [jointLog] [info] iteration = 100 | max rel diff. = 0.12044; [2016-01-03 00:37:33.755] [jointLog] [info] iteration = 200 | max rel diff. = 0.0493504; [2016-01-03 00:37:33.970] [jointLog] [info] iteration = 300 | max rel diff. = 0.0275491; [2016-01-03 00:37:34.194] [jointLog] [info] iteration = 400 | max rel diff. = 0.0216294; [2016-01-03 00:37:34.418] [jointLog] [info] iteration = 500 | max rel diff. = 0.0214024; [2016-01-03 00:37:34.640] [jointLog] [info] iteration = 600 | max rel diff. = 0.0132335; [2016-01-03 00:37:34.850] [jointLog] [info] iteration = 700 | max rel diff. = 0.0132363; [2016-01-03 00:37:35.066] [jointLog] [info] iteration = 800 | max rel diff. = 0.0122673; [2016-01-03 00:37:35.287] [jointLog] [info] iteration = 900 | max rel diff. = 0.012951; [2016-01-03 00:37:35.510] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0131479; [2016-01-03 00:37:35.643] [jointLog] [info] iteration = 1062 | max rel diff. = 0.00666119; [2016-01-03 00:37:35.653] [jointLog] [info] Finished optimizer; [2016-01-03 00:37:35.653] [jointLog] [info] writing output. [2016-01-03 00:37:35.920] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/0, /dev/fd/0 )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: interlaced_salmon_out/libFormatCounts.txt for details; ```. (FYI, this might be a failed sample, I just grabbed on at random, hence the low mapping rate). There's a discrepancy of about 800k observed reads. The number of mapped fragments is roughly twice for the interleaved version. So it seems this strategy doesn't work right now.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784:298,Testability,log,log,298,"I just tried the /dev/fd/0 approach. First I ran. ```; salmon quant -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa -l IU -1 reads_1.fastq -2 reads_2.fastq -o normal_salmon_out; ```. In this case the following is the content of the `salmon_quant.log`. ```; [2016-01-03 00:33:37.001] [jointLog] [info] parsing read library format; [2016-01-03 00:33:37.510] [jointLog] [info] Loading Quasi index; [2016-01-03 00:33:53.646] [jointLog] [info] done; [2016-01-03 00:34:14.501] [jointLog] [info] Computed 13742 rich equivalence classes for further processing; [2016-01-03 00:34:14.501] [jointLog] [info] Counted 335230 total reads in the equivalence classes; [2016-01-03 00:34:14.501] [fileLog] [info]; At end of round 0; ==================; Observed 3835342 total fragments (3835342 in most recent round). [2016-01-03 00:34:20.992] [jointLog] [warning] Only 335230 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-03 00:34:20.992] [jointLog] [info] Mapping rate = 8.74055%. [2016-01-03 00:34:20.992] [jointLog] [info] finished quantifyLibrary(); [2016-01-03 00:34:20.992] [jointLog] [info] Starting optimizer; [2016-01-03 00:34:21.028] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-03 00:34:21.030] [jointLog] [info] iteration = 0 | max rel diff. = 23.4889; [2016-01-03 00:34:21.167] [jointLog] [info] iteration = 100 | max rel diff. = 0.150549; [2016-01-03 00:34:21.304] [jointLog] [info] iteration = 200 | max rel diff. = 0.0517672; [2016-01-03 00:34:21.447] [jointLog] [info] iteration = 300 | max rel diff. = 0.0368208; [2016-01-03 00:34:21.578] [jointLog] [info] iteration = 400 | max rel diff. = 0.0237254; [2016-01-03 00:34:21.705] [jointLog] [info] iteration = 500 | max rel diff. = 0.0147784; [2016-01-03 00:34:21.834] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131134; [2016-01-03 00:34:21",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168447784
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168516778:141,Usability,simpl,simple,141,"Yea; so I think the only way to do this currently (without me modifying the jellyfish parser) is to just use 2 fifos. I could put together a simple bash or python script together for this if there is interest (until we support interleaved format natively, which I'll add to the feature list).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168516778
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703:521,Availability,robust,robust,521,I haven't kept up with khmer so I'm not sure what it does. Can I do something equivalent of this with khmer?. ```; mkfifo /tmp/1.fastq && \; mkfifo /tmp/2.fastq && \; samtools sort -n input.cram | samtools fastq -1 /tmp/1.fastq -2 /tmp/2.fastq & salmon -i index -l IU -1 /tmp/1.fastq -2 /tmp/2.fastq -o /tmp/salmon_out && \; mv /tmp/salmon_out && \; rm /tmp/1.fastq && \; rm /tmp/2.fastq; ```. I just want to be able to do these sorts of things without wrapper scripts that obfuscate and complicate things... But maybe a robust bash wrapper is the best way to go.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703:453,Integrability,wrap,wrapper,453,I haven't kept up with khmer so I'm not sure what it does. Can I do something equivalent of this with khmer?. ```; mkfifo /tmp/1.fastq && \; mkfifo /tmp/2.fastq && \; samtools sort -n input.cram | samtools fastq -1 /tmp/1.fastq -2 /tmp/2.fastq & salmon -i index -l IU -1 /tmp/1.fastq -2 /tmp/2.fastq -o /tmp/salmon_out && \; mv /tmp/salmon_out && \; rm /tmp/1.fastq && \; rm /tmp/2.fastq; ```. I just want to be able to do these sorts of things without wrapper scripts that obfuscate and complicate things... But maybe a robust bash wrapper is the best way to go.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703:533,Integrability,wrap,wrapper,533,I haven't kept up with khmer so I'm not sure what it does. Can I do something equivalent of this with khmer?. ```; mkfifo /tmp/1.fastq && \; mkfifo /tmp/2.fastq && \; samtools sort -n input.cram | samtools fastq -1 /tmp/1.fastq -2 /tmp/2.fastq & salmon -i index -l IU -1 /tmp/1.fastq -2 /tmp/2.fastq -o /tmp/salmon_out && \; mv /tmp/salmon_out && \; rm /tmp/1.fastq && \; rm /tmp/2.fastq; ```. I just want to be able to do these sorts of things without wrapper scripts that obfuscate and complicate things... But maybe a robust bash wrapper is the best way to go.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168536811:449,Availability,robust,robustly,449,"I'm also not quite convinced about the superiority of either approach. On one hand, it would, of course, be nice to have sailfish and salmon natively support as many file formats as possible. On the other hand, every extra file format increases the complexity of the parsing code paths, probably putting us in some technical debt, and creating more opportunities for bugs to creep in. From this perspective, anything that can be handled cleanly and robustly from the command line seems a win (of course, this is only true if it can actually be handled _cleanly_ and _robustly_).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168536811
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456:311,Integrability,interface,interface,311,"There should be easy ways to handle reading line-buffered input from two file descriptors, where both file descriptors could be identical, and then passing these streams internally to buffers to be chunked for multithreaded processing. This would give you one code path for ingesting data, and the command line interface could remain the same as it is currently, with the possible addition of mapping the `-` symbol to `/dev/fd/0`. Is there really much to be gained from buffering all input in byte chunks up front? Remembering that unix pipes are buffered somewhat by default anyway? There has to be an acceptable way to handle line-based input in a more flexible way. In Python I would do:. ``` python; import argparse. example_parser = argparse.ArgumentParser(); example_parser.add_argument('-fq1', type=argparse.FileType('r')); example_parser.add_argument('-fq2', type=argparse.FileType('r')); args = parser.parse_args(). for line1, line2 in zip(args.fq1, args.fq2):; do_stuff_with_lines(); ```. You could then call the program flexibly:. ``` bash; $ example -fq1 file1.fq -fq2 file2.fq; $ example -fq1 <(gzip -dc file1.fq.gz) -fq2 <(gzip -dc file2.fq.gz); $ other_interleaved_process | example -fq1 - -fq2 -; ```. The caveat for the code above is that you would want to replace `argparse.FileType` with some class that reads 4 lines at a time - I'm sure there's no shortage of Python FASTQ readers that do that. And I know that you're looking for C++ libraries that perform well for your purposes, and my Python example is just a toy, but I think designing the option parser to at least **accept** streams and file-like objects and handle them using the same code path would be a worthy reason to refactor a bit.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456:656,Modifiability,flexible,flexible,656,"There should be easy ways to handle reading line-buffered input from two file descriptors, where both file descriptors could be identical, and then passing these streams internally to buffers to be chunked for multithreaded processing. This would give you one code path for ingesting data, and the command line interface could remain the same as it is currently, with the possible addition of mapping the `-` symbol to `/dev/fd/0`. Is there really much to be gained from buffering all input in byte chunks up front? Remembering that unix pipes are buffered somewhat by default anyway? There has to be an acceptable way to handle line-based input in a more flexible way. In Python I would do:. ``` python; import argparse. example_parser = argparse.ArgumentParser(); example_parser.add_argument('-fq1', type=argparse.FileType('r')); example_parser.add_argument('-fq2', type=argparse.FileType('r')); args = parser.parse_args(). for line1, line2 in zip(args.fq1, args.fq2):; do_stuff_with_lines(); ```. You could then call the program flexibly:. ``` bash; $ example -fq1 file1.fq -fq2 file2.fq; $ example -fq1 <(gzip -dc file1.fq.gz) -fq2 <(gzip -dc file2.fq.gz); $ other_interleaved_process | example -fq1 - -fq2 -; ```. The caveat for the code above is that you would want to replace `argparse.FileType` with some class that reads 4 lines at a time - I'm sure there's no shortage of Python FASTQ readers that do that. And I know that you're looking for C++ libraries that perform well for your purposes, and my Python example is just a toy, but I think designing the option parser to at least **accept** streams and file-like objects and handle them using the same code path would be a worthy reason to refactor a bit.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456:1702,Modifiability,refactor,refactor,1702,"There should be easy ways to handle reading line-buffered input from two file descriptors, where both file descriptors could be identical, and then passing these streams internally to buffers to be chunked for multithreaded processing. This would give you one code path for ingesting data, and the command line interface could remain the same as it is currently, with the possible addition of mapping the `-` symbol to `/dev/fd/0`. Is there really much to be gained from buffering all input in byte chunks up front? Remembering that unix pipes are buffered somewhat by default anyway? There has to be an acceptable way to handle line-based input in a more flexible way. In Python I would do:. ``` python; import argparse. example_parser = argparse.ArgumentParser(); example_parser.add_argument('-fq1', type=argparse.FileType('r')); example_parser.add_argument('-fq2', type=argparse.FileType('r')); args = parser.parse_args(). for line1, line2 in zip(args.fq1, args.fq2):; do_stuff_with_lines(); ```. You could then call the program flexibly:. ``` bash; $ example -fq1 file1.fq -fq2 file2.fq; $ example -fq1 <(gzip -dc file1.fq.gz) -fq2 <(gzip -dc file2.fq.gz); $ other_interleaved_process | example -fq1 - -fq2 -; ```. The caveat for the code above is that you would want to replace `argparse.FileType` with some class that reads 4 lines at a time - I'm sure there's no shortage of Python FASTQ readers that do that. And I know that you're looking for C++ libraries that perform well for your purposes, and my Python example is just a toy, but I think designing the option parser to at least **accept** streams and file-like objects and handle them using the same code path would be a worthy reason to refactor a bit.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456:1471,Performance,perform,perform,1471,"There should be easy ways to handle reading line-buffered input from two file descriptors, where both file descriptors could be identical, and then passing these streams internally to buffers to be chunked for multithreaded processing. This would give you one code path for ingesting data, and the command line interface could remain the same as it is currently, with the possible addition of mapping the `-` symbol to `/dev/fd/0`. Is there really much to be gained from buffering all input in byte chunks up front? Remembering that unix pipes are buffered somewhat by default anyway? There has to be an acceptable way to handle line-based input in a more flexible way. In Python I would do:. ``` python; import argparse. example_parser = argparse.ArgumentParser(); example_parser.add_argument('-fq1', type=argparse.FileType('r')); example_parser.add_argument('-fq2', type=argparse.FileType('r')); args = parser.parse_args(). for line1, line2 in zip(args.fq1, args.fq2):; do_stuff_with_lines(); ```. You could then call the program flexibly:. ``` bash; $ example -fq1 file1.fq -fq2 file2.fq; $ example -fq1 <(gzip -dc file1.fq.gz) -fq2 <(gzip -dc file2.fq.gz); $ other_interleaved_process | example -fq1 - -fq2 -; ```. The caveat for the code above is that you would want to replace `argparse.FileType` with some class that reads 4 lines at a time - I'm sure there's no shortage of Python FASTQ readers that do that. And I know that you're looking for C++ libraries that perform well for your purposes, and my Python example is just a toy, but I think designing the option parser to at least **accept** streams and file-like objects and handle them using the same code path would be a worthy reason to refactor a bit.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168545456
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168563402:37,Usability,clear,clear,37,"Actually, @mdshw5 --- it's not quite clear to me why the parser isn't doing the right thing in this case. If you take a look at how the paired-end sequence parser is actually populating the internal buffer (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/include/PairSequenceParser.hpp#L182)), it is reading one entry from stream1 and then one entry from stream2. I'm guessing there may be some issue with having two different handles open to the same fifo? However, that doesn't seem like it should be a problem. Given the way the code is actually reading from the different streams, it's not clear to me why it's not currently working as expected. I'll try and take a deeper look.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168563402
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168563402:608,Usability,clear,clear,608,"Actually, @mdshw5 --- it's not quite clear to me why the parser isn't doing the right thing in this case. If you take a look at how the paired-end sequence parser is actually populating the internal buffer (e.g. [here](https://github.com/COMBINE-lab/salmon/blob/master/include/PairSequenceParser.hpp#L182)), it is reading one entry from stream1 and then one entry from stream2. I'm guessing there may be some issue with having two different handles open to the same fifo? However, that doesn't seem like it should be a problem. Given the way the code is actually reading from the different streams, it's not clear to me why it's not currently working as expected. I'll try and take a deeper look.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168563402
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168566647:18,Testability,test,test,18,"I actually didn't test it :). I'll confirm the current behavior tomorrow. Thanks for following up on this!. > On Jan 3, 2016, at 8:37 PM, Rob Patro notifications@github.com wrote:; > ; > Actually, @mdshw5 --- it's not quite clear to me why the parser isn't doing the right thing in this case. If you take a look at how the paired-end sequence parser is actually populating the internal buffer (e.g. here), it is reading one entry from stream1 and then one entry from stream2. I'm guessing there may be some issue with having two different handles open to the same fifo? However, that doesn't seem like it should be a problem. Given the way the code is actually reading from the different streams, it's not clear to me why it's not currently working as expected. I'll try and take a deeper look.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168566647
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168566647:224,Usability,clear,clear,224,"I actually didn't test it :). I'll confirm the current behavior tomorrow. Thanks for following up on this!. > On Jan 3, 2016, at 8:37 PM, Rob Patro notifications@github.com wrote:; > ; > Actually, @mdshw5 --- it's not quite clear to me why the parser isn't doing the right thing in this case. If you take a look at how the paired-end sequence parser is actually populating the internal buffer (e.g. here), it is reading one entry from stream1 and then one entry from stream2. I'm guessing there may be some issue with having two different handles open to the same fifo? However, that doesn't seem like it should be a problem. Given the way the code is actually reading from the different streams, it's not clear to me why it's not currently working as expected. I'll try and take a deeper look.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168566647
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168566647:706,Usability,clear,clear,706,"I actually didn't test it :). I'll confirm the current behavior tomorrow. Thanks for following up on this!. > On Jan 3, 2016, at 8:37 PM, Rob Patro notifications@github.com wrote:; > ; > Actually, @mdshw5 --- it's not quite clear to me why the parser isn't doing the right thing in this case. If you take a look at how the paired-end sequence parser is actually populating the internal buffer (e.g. here), it is reading one entry from stream1 and then one entry from stream2. I'm guessing there may be some issue with having two different handles open to the same fifo? However, that doesn't seem like it should be a problem. Given the way the code is actually reading from the different streams, it's not clear to me why it's not currently working as expected. I'll try and take a deeper look.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168566647
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168582355:662,Usability,simpl,simply,662,"[Here's](https://gist.github.com/rob-p/963848ba35fb49fefaa3) a sketch of a shell script-based solution that might work. It relies on [this](https://gist.github.com/nathanhaigh/3521724) shell script to do the de-interleaving (but it can use whichever tool we might decide is best for the job). You'd run it with the interleaved file like so:. ```; ./runner.sh salmon quant -i index -l IU --interleaved interleaved.fq -o interleaved_quant; ```. Basically, the script checks to see if the `--interleaved` parameter is present. If so, it handles making the fifos and constructing the proper salmon command with them. Otherwise, if there is no --interleaved file, it simply runs the command as given.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168582355
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168620775:116,Energy Efficiency,schedul,scheduler,116,"That works!. I wrote something very similar yesterday but using a here document generated from a Makefile in to job scheduler, and I couldn't get it to work. I'll file that under overcomplicating things...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168620775
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168727465:289,Usability,learn,learned,289,"Yup; I think there are some potential places for improvement (e.g. the interleaved splitting code could be incorporated directly into this script, and the parsing could be improved to handle multiple interleaved files directly), but it seems to work pretty well. Also, when making this, I learned about the `trap` command, which should do what we want in terms of ensuring that any created fifos are cleaned up.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168727465
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168821483:5,Deployability,update,updated,5,"I've updated the runner script so that it is now self contained (i.e. it no longer relies on deinterleave_fastq.sh as an external script). Once we're able to modify it to work with multiple input interleaved fastq files, I'll add it to the official repository.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168821483
https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-173980056:39,Deployability,release,release,39,"I'll be adding this script to the next release (which should happen very soon). At that point, I'll close this issue unless anyone objects. I may still look into supporting interleaved format natively in the future, but for now this approach seems to work well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-173980056
https://github.com/COMBINE-lab/salmon/issues/30#issuecomment-153502274:57,Deployability,update,update,57,"I opened an issue in the ngs notes about this. I need to update the docs; the library format string should come before the reads (I.e. -1, -2, -r).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/30#issuecomment-153502274
https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-166890654:476,Usability,simpl,simply,476,"Hi @HamletShaoE --- what version of Salmon are you using? If you are using the latest version, in addition to the `quant.sf` file, there is a file in the output directory called `stats.tsv`. The format of this file is a list of key-value pairs. The first key-value pair lists the total number of observed fragments in the input (and can be ignored for your purposes). Each subsequent line lists a transcript id followed by that transcript's computed effective length. You can simply take these values and join them (in the database / data frame sense) with the main quantification results. I should note that the next version of Salmon (v0.6.0), which should be out shortly, in addition to including a number of improvements and new features, will make these effective length values easier to get at --- they will appear in the main `quant.sf` file (versions compiled from the develop branch will already do this). For the time being, however, the `stats.tsv` file is the place to get this info. Finally, I'd mention that, though I don't know your use case, I'd be cautious of using FPKM any place that TPM might be used instead. Within a sample, they are proportional (thus the equation you provide), but between samples, FPKM values have un-necessary variation based on the average lengths of the expressed transcripts in the samples; an arbitrary variation for which TPM corrects.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-166890654
https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-208223403:228,Safety,detect,detection,228,"Thanks for your response! I focus on both transcript level and gene level.; I have another question: I got low mapping rate (less than 20%) of tot-RNA-seq and Nascent-seq. So, is it mean that Salmon is not suitable for pre-mRNA detection? How can I promote the mapping rate?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-208223403
https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-208324913:116,Availability,down,down,116,"@xflicsu Did you include ""unspliced"" transcript sequences in your reference? I could imagine your mapping rate goes down if you are not putting the intronic regions in the reference (so that intronic reads don't map)... You can get those unspliced transcript sequences e.g. from Ensembl BioMart.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-208324913
https://github.com/COMBINE-lab/salmon/issues/33#issuecomment-168354132:24,Testability,test,testing,24,"I haven't done too much testing with the quality of inferring the fragment start position distribution with few samples. 5 million is probably overkill, as it's a fairly low-dimensional model --- you could try setting the number of burnin fragments to a lower number.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/33#issuecomment-168354132
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168354205:116,Deployability,install,installed,116,"Oh, great, was making a small example data set. I'll stop that then. I was trying to compile, but I can't get Boost installed with linuxbrew for some reason.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168354205
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168357540:157,Testability,test,test,157,"Still looking, but this is very strange! It happens when the program is exiting, during the destruction of some objects. Strangely, it doesn't happen on the test data (also it's strange that it doesn't happen in the version compiled from source).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168357540
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168361093:62,Integrability,depend,dependency,62,The segfault seems to be happening with Jemalloc (an external dependency). I'm going to see if switching to tcmalloc in the binary build fixes it.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168361093
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366:38,Availability,down,download,38,"OK --- I think I fixed it; can you re-download the v0.6.0 binary and see if the segfault goes away for you? I think it was the result of failing to give a particular class a default constructor --- a certain variable was being initialized properly on my newer compiler, but that was not the case on the older compiler on the VM where I build the binary. ~~If this resolves the issue for you, I'll probably bump to v0.6.1 just in case anyone tries to build from the source tarball on an older compiler.~~ (I already moved the v0.6.0 tag to point to the new commit and updated the binaries. Hopefully nobody fell through the cracks with the old source tarball, but this doesn't seem like something worth bumping a release for --- assuming my minor change fixes the issue for you as well).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366:567,Deployability,update,updated,567,"OK --- I think I fixed it; can you re-download the v0.6.0 binary and see if the segfault goes away for you? I think it was the result of failing to give a particular class a default constructor --- a certain variable was being initialized properly on my newer compiler, but that was not the case on the older compiler on the VM where I build the binary. ~~If this resolves the issue for you, I'll probably bump to v0.6.1 just in case anyone tries to build from the source tarball on an older compiler.~~ (I already moved the v0.6.0 tag to point to the new commit and updated the binaries. Hopefully nobody fell through the cracks with the old source tarball, but this doesn't seem like something worth bumping a release for --- assuming my minor change fixes the issue for you as well).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366:712,Deployability,release,release,712,"OK --- I think I fixed it; can you re-download the v0.6.0 binary and see if the segfault goes away for you? I think it was the result of failing to give a particular class a default constructor --- a certain variable was being initialized properly on my newer compiler, but that was not the case on the older compiler on the VM where I build the binary. ~~If this resolves the issue for you, I'll probably bump to v0.6.1 just in case anyone tries to build from the source tarball on an older compiler.~~ (I already moved the v0.6.0 tag to point to the new commit and updated the binaries. Hopefully nobody fell through the cracks with the old source tarball, but this doesn't seem like something worth bumping a release for --- assuming my minor change fixes the issue for you as well).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366:208,Modifiability,variab,variable,208,"OK --- I think I fixed it; can you re-download the v0.6.0 binary and see if the segfault goes away for you? I think it was the result of failing to give a particular class a default constructor --- a certain variable was being initialized properly on my newer compiler, but that was not the case on the older compiler on the VM where I build the binary. ~~If this resolves the issue for you, I'll probably bump to v0.6.1 just in case anyone tries to build from the source tarball on an older compiler.~~ (I already moved the v0.6.0 tag to point to the new commit and updated the binaries. Hopefully nobody fell through the cracks with the old source tarball, but this doesn't seem like something worth bumping a release for --- assuming my minor change fixes the issue for you as well).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271:1089,Availability,fault,fault,1089,"I just redownloaded and extracted and tried again, and unfortunately the problem persists =/. ```; ...; [2016-01-02 17:47:51.342] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0133376; [2016-01-02 17:47:51.443] [jointLog] [info] iteration = 1630 | max rel diff. = 0.00771098; [2016-01-02 17:47:51.447] [jointLog] [info] Finished optimizer; [2016-01-02 17:47:51.448] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 17:47:51.678] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```. If you want I can upload index and a couple of fastq files somewhere so you can try?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271:338,Performance,optimiz,optimizer,338,"I just redownloaded and extracted and tried again, and unfortunately the problem persists =/. ```; ...; [2016-01-02 17:47:51.342] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0133376; [2016-01-02 17:47:51.443] [jointLog] [info] iteration = 1630 | max rel diff. = 0.00771098; [2016-01-02 17:47:51.447] [jointLog] [info] Finished optimizer; [2016-01-02 17:47:51.448] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 17:47:51.678] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```. If you want I can upload index and a couple of fastq files somewhere so you can try?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271:551,Safety,detect,detection-comparison,551,"I just redownloaded and extracted and tried again, and unfortunately the problem persists =/. ```; ...; [2016-01-02 17:47:51.342] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0133376; [2016-01-02 17:47:51.443] [jointLog] [info] iteration = 1630 | max rel diff. = 0.00771098; [2016-01-02 17:47:51.447] [jointLog] [info] Finished optimizer; [2016-01-02 17:47:51.448] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 17:47:51.678] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```. If you want I can upload index and a couple of fastq files somewhere so you can try?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271:665,Safety,detect,detection-comparison,665,"I just redownloaded and extracted and tried again, and unfortunately the problem persists =/. ```; ...; [2016-01-02 17:47:51.342] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0133376; [2016-01-02 17:47:51.443] [jointLog] [info] iteration = 1630 | max rel diff. = 0.00771098; [2016-01-02 17:47:51.447] [jointLog] [info] Finished optimizer; [2016-01-02 17:47:51.448] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 17:47:51.678] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```. If you want I can upload index and a couple of fastq files somewhere so you can try?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403:717,Integrability,protocol,protocol,717,"Sure --- since, at this point, I don't seem able to reproduce the issue any more. Just for a sanity check, can you md5sum the binary you have? I have `fc39599b6c027eb97bb2f4c7bdd361f3`. Previously, I was getting the same segfault as you, but now it finishes cleanly:. ```; [2016-01-02 13:13:10.643] [jointLog] [info] iteration = 4500 | max rel diff. = 0.0100814; [2016-01-02 13:13:10.703] [jointLog] [info] iteration = 4508 | max rel diff. = 0.00999839; [2016-01-02 13:13:10.714] [jointLog] [info] Finished optimizer; [2016-01-02 13:13:10.714] [jointLog] [info] writing output. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Detected a strand bias > 1% in an unstranded protocol check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. rob@feynman:~/SoftwareStaging/salmon/build/tmp; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403:507,Performance,optimiz,optimizer,507,"Sure --- since, at this point, I don't seem able to reproduce the issue any more. Just for a sanity check, can you md5sum the binary you have? I have `fc39599b6c027eb97bb2f4c7bdd361f3`. Previously, I was getting the same segfault as you, but now it finishes cleanly:. ```; [2016-01-02 13:13:10.643] [jointLog] [info] iteration = 4500 | max rel diff. = 0.0100814; [2016-01-02 13:13:10.703] [jointLog] [info] iteration = 4508 | max rel diff. = 0.00999839; [2016-01-02 13:13:10.714] [jointLog] [info] Finished optimizer; [2016-01-02 13:13:10.714] [jointLog] [info] writing output. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Detected a strand bias > 1% in an unstranded protocol check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. rob@feynman:~/SoftwareStaging/salmon/build/tmp; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403:93,Safety,sanity check,sanity check,93,"Sure --- since, at this point, I don't seem able to reproduce the issue any more. Just for a sanity check, can you md5sum the binary you have? I have `fc39599b6c027eb97bb2f4c7bdd361f3`. Previously, I was getting the same segfault as you, but now it finishes cleanly:. ```; [2016-01-02 13:13:10.643] [jointLog] [info] iteration = 4500 | max rel diff. = 0.0100814; [2016-01-02 13:13:10.703] [jointLog] [info] iteration = 4508 | max rel diff. = 0.00999839; [2016-01-02 13:13:10.714] [jointLog] [info] Finished optimizer; [2016-01-02 13:13:10.714] [jointLog] [info] writing output. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Detected a strand bias > 1% in an unstranded protocol check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. rob@feynman:~/SoftwareStaging/salmon/build/tmp; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403:672,Safety,Detect,Detected,672,"Sure --- since, at this point, I don't seem able to reproduce the issue any more. Just for a sanity check, can you md5sum the binary you have? I have `fc39599b6c027eb97bb2f4c7bdd361f3`. Previously, I was getting the same segfault as you, but now it finishes cleanly:. ```; [2016-01-02 13:13:10.643] [jointLog] [info] iteration = 4500 | max rel diff. = 0.0100814; [2016-01-02 13:13:10.703] [jointLog] [info] iteration = 4508 | max rel diff. = 0.00999839; [2016-01-02 13:13:10.714] [jointLog] [info] Finished optimizer; [2016-01-02 13:13:10.714] [jointLog] [info] writing output. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Detected a strand bias > 1% in an unstranded protocol check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. [2016-01-02 13:13:10.871] [jointLog] [warning] NOTE: Read Lib [( /dev/fd/63, /dev/fd/62 )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: salmon_flux_quant_nofspd/libFormatCounts.txt for details. rob@feynman:~/SoftwareStaging/salmon/build/tmp; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168413403
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168424793:31,Testability,test,testing,31,"OK --- very strange. I've been testing it out on different data and have been unable to reproduce the segfault. I'll try on your dataset when it's ready to see if the problem pops up. I actually hope it does, because it will be a very tricky bug to fix if it only happens on certain hosts!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168424793
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:11800,Availability,fault,fault,11800,"on = 900 | max rel diff. = 0.0146915; [2016-01-02 20:23:59.212] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 20:24:01.395] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0147088; [2016-01-02 20:24:01.837] [jointLog] [info] iteration = 1100 | max rel diff. = 0.021175; [2016-01-02 20:24:02.193] [jointLog] [info] iteration = 1200 | max rel diff. = 0.01904; [2016-01-02 20:24:02.572] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0187047; [2016-01-02 20:24:02.972] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0213549; [2016-01-02 20:24:03.360] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0311727; [2016-01-02 20:24:03.745] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0100658; [2016-01-02 20:24:04.141] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0100679; [2016-01-02 20:24:04.536] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0100686; [2016-01-02 20:24:04.642] [jointLog] [info] iteration = 1827 | max rel diff. = 0.00921912; [2016-01-02 20:24:04.646] [jointLog] [info] Finished optimizer; [2016-01-02 20:24:04.646] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 20:24:04.882] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); [vale@ebi-003 mouse]$; ```. (I also tried the command in the NSF directory to write to /tmp/SRP057125_SRS936134_salmon_out, but that also segfaults)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1699,Performance,Load,Loading,1699,"mon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_2.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Cou",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1770,Performance,Load,Loading,1770,"20:08 SRP057125_SRS936134_2.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1837,Performance,Load,Loading,1837,"ine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1904,Performance,Load,Loading,1904,"S936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [joi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1970,Performance,Load,Loading,1970,"5_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [jointLog] [info] Starting optimizer; [2016-01-02 20:17:30.130] [jointL",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:2040,Performance,Load,Loading,2040,", without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [jointLog] [info] Starting optimizer; [2016-01-02 20:17:30.130] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:2299,Performance,load,loading,2299,"ase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [jointLog] [info] Starting optimizer; [2016-01-02 20:17:30.130] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:17:30.136] [jointLog] [info] iteration = 0 | max rel diff. = 65.1271; [2016-01-02 20:17:30.315] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:17:32.978] [jointLog] [info] iteration = 100 | max rel diff. = 0.259134; [2016",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:2395,Performance,load,loading,2395,"; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [jointLog] [info] Starting optimizer; [2016-01-02 20:17:30.130] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:17:30.136] [jointLog] [info] iteration = 0 | max rel diff. = 65.1271; [2016-01-02 20:17:30.315] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:17:32.978] [jointLog] [info] iteration = 100 | max rel diff. = 0.259134; [2016-01-02 20:17:33.312] [jointLog] [info] iteration = 200 | max rel diff. = 0.136762; [201",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:2937,Performance,optimiz,optimizer,2937,"20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [jointLog] [info] Starting optimizer; [2016-01-02 20:17:30.130] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:17:30.136] [jointLog] [info] iteration = 0 | max rel diff. = 65.1271; [2016-01-02 20:17:30.315] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:17:32.978] [jointLog] [info] iteration = 100 | max rel diff. = 0.259134; [2016-01-02 20:17:33.312] [jointLog] [info] iteration = 200 | max rel diff. = 0.136762; [2016-01-02 20:17:33.659] [jointLog] [info] iteration = 300 | max rel diff. = 0.0544656; [2016-01-02 20:17:33.979] [jointLog] [info] iteration = 400 | max rel diff. = 0.0635573; [2016-01-02 20:17:34.298] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 20:17:36.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.747925; [2016-01-02 20:17:36.865] [jointLog] [info] iteration = 600 | max rel diff. = 0.0480446; [2016-01-02 20:17:37.236] [jointLog] [info] iteration = 700 | max rel diff. = 0.0231505; [2016-01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:5240,Performance,optimiz,optimizer,5240,"] iteration = 1000 | max rel diff. = 0.0146819; [2016-01-02 20:17:40.968] [jointLog] [info] iteration = 1100 | max rel diff. = 0.021278; [2016-01-02 20:17:41.343] [jointLog] [info] iteration = 1200 | max rel diff. = 0.0188351; [2016-01-02 20:17:41.695] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0115257; [2016-01-02 20:17:42.020] [jointLog] [info] iteration = 1400 | max rel diff. = 0.019727; [2016-01-02 20:17:42.346] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0290858; [2016-01-02 20:17:42.679] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0100559; [2016-01-02 20:17:42.993] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0101365; [2016-01-02 20:17:43.314] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0100707; [2016-01-02 20:17:43.650] [jointLog] [info] iteration = 1900 | max rel diff. = 0.0100722; [2016-01-02 20:17:43.933] [jointLog] [info] iteration = 1990 | max rel diff. = 0.00542674; [2016-01-02 20:17:43.937] [jointLog] [info] Finished optimizer; [2016-01-02 20:17:43.937] [jointLog] [info] writing output. [2016-01-02 20:17:44.160] [jointLog] [warning] NOTE: Read Lib [( SRP057125_SRS936134_1.fastq, SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCoun ts.txt for details. [vale@ebi-003 salmon-problem]$; ```. The command run being:. ```; salmon quant \; -i mouse_cdna_38.p3.78_repbase_ercc.fa \; -l IU \; -1 SRP057125_SRS936134_1.fastq \; -2 SRP057125_SRS936134_2.fastq \; -o SRP057125_SRS936134_salmon_out \; -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; --biasCorrect \; --useFSPD; ```. But if I instead run salmon in the NFS directory where I want to run it, the core dumps... ```; [vale@ebi-003 mouse]$ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7604,Performance,Load,Loading,7604,"on/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counte",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7675,Performance,Load,Loading,7675,"on Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7742,Performance,Load,Loading,7742,"ng-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7809,Performance,Load,Loading,7809," # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointL",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7875,Performance,Load,Loading,7875,"lmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointLog] [info] Starting optimizer; [2016-01-02 20:23:50.378] [jointLog]",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7945,Performance,Load,Loading,7945,"; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointLog] [info] Starting optimizer; [2016-01-02 20:23:50.378] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:8204,Performance,load,loading,8204,"4_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointLog] [info] Starting optimizer; [2016-01-02 20:23:50.378] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:23:50.382] [jointLog] [info] iteration = 0 | max rel diff. = 64.9993; [2016-01-02 20:23:50.584] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:23:53.386] [jointLog] [info] iteration = 100 | max rel diff. = 0.263028; [2016-01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:8300,Performance,load,loading,8300,"s/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointLog] [info] Starting optimizer; [2016-01-02 20:23:50.378] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:23:50.382] [jointLog] [info] iteration = 0 | max rel diff. = 64.9993; [2016-01-02 20:23:50.584] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:23:53.386] [jointLog] [info] iteration = 100 | max rel diff. = 0.263028; [2016-01-02 20:23:53.777] [jointLog] [info] iteration = 200 | max rel diff. = 0.13921; [2016-01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:8839,Performance,optimiz,optimizer,8839,"02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointLog] [info] Starting optimizer; [2016-01-02 20:23:50.378] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:23:50.382] [jointLog] [info] iteration = 0 | max rel diff. = 64.9993; [2016-01-02 20:23:50.584] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:23:53.386] [jointLog] [info] iteration = 100 | max rel diff. = 0.263028; [2016-01-02 20:23:53.777] [jointLog] [info] iteration = 200 | max rel diff. = 0.13921; [2016-01-02 20:23:54.171] [jointLog] [info] iteration = 300 | max rel diff. = 0.0536404; [2016-01-02 20:23:54.564] [jointLog] [info] iteration = 400 | max rel diff. = 0.063039; [2016-01-02 20:23:54.954] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 20:23:57.205] [jointLog] [info] iteration = 500 | max rel diff. = 0.748653; [2016-01-02 20:23:57.662] [jointLog] [info] iteration = 600 | max rel diff. = 0.0535482; [2016-01-02 20:23:58.058] [jointLog] [info] iteration = 700 | max rel diff. = 0.0180352; [2016-01-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:11049,Performance,optimiz,optimizer,11049,"on = 900 | max rel diff. = 0.0146915; [2016-01-02 20:23:59.212] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 20:24:01.395] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0147088; [2016-01-02 20:24:01.837] [jointLog] [info] iteration = 1100 | max rel diff. = 0.021175; [2016-01-02 20:24:02.193] [jointLog] [info] iteration = 1200 | max rel diff. = 0.01904; [2016-01-02 20:24:02.572] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0187047; [2016-01-02 20:24:02.972] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0213549; [2016-01-02 20:24:03.360] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0311727; [2016-01-02 20:24:03.745] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0100658; [2016-01-02 20:24:04.141] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0100679; [2016-01-02 20:24:04.536] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0100686; [2016-01-02 20:24:04.642] [jointLog] [info] iteration = 1827 | max rel diff. = 0.00921912; [2016-01-02 20:24:04.646] [jointLog] [info] Finished optimizer; [2016-01-02 20:24:04.646] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 20:24:04.882] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); [vale@ebi-003 mouse]$; ```. (I also tried the command in the NSF directory to write to /tmp/SRP057125_SRS936134_salmon_out, but that also segfaults)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:664,Safety,detect,detection-comparison,664,"It gets stranger... I prepared a public directory with the files I use and made a bash script to reproduce the run of salmon. This directory is in my home folder, and has symlinks to the actual NFS locations of the files: http://www.ebi.ac.uk/~vale/salmon-problem/. ```; [vale@ebi-003 salmon-problem]$ ls -lh; total 20K; lrwxrwxrwx 1 vale rst_pub 96 Jan 2 20:09 mouse_cdna_38.p3.78_repbase_ercc.fa -> /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa; -rw-rw-r-- 1 vale rst_pub 301 Jan 2 20:19 run_salmon.sh; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_1.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_2.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:851,Safety,detect,detection-comparison,851,"It gets stranger... I prepared a public directory with the files I use and made a bash script to reproduce the run of salmon. This directory is in my home folder, and has symlinks to the actual NFS locations of the files: http://www.ebi.ac.uk/~vale/salmon-problem/. ```; [vale@ebi-003 salmon-problem]$ ls -lh; total 20K; lrwxrwxrwx 1 vale rst_pub 96 Jan 2 20:09 mouse_cdna_38.p3.78_repbase_ercc.fa -> /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa; -rw-rw-r-- 1 vale rst_pub 301 Jan 2 20:19 run_salmon.sh; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_1.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_2.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:6295,Safety,detect,detection-comparison,6295,"ntLog] [info] writing output. [2016-01-02 20:17:44.160] [jointLog] [warning] NOTE: Read Lib [( SRP057125_SRS936134_1.fastq, SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCoun ts.txt for details. [vale@ebi-003 salmon-problem]$; ```. The command run being:. ```; salmon quant \; -i mouse_cdna_38.p3.78_repbase_ercc.fa \; -l IU \; -1 SRP057125_SRS936134_1.fastq \; -2 SRP057125_SRS936134_2.fastq \; -o SRP057125_SRS936134_salmon_out \; -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; --biasCorrect \; --useFSPD; ```. But if I instead run salmon in the NFS directory where I want to run it, the core dumps... ```; [vale@ebi-003 mouse]$ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa \; > -l IU \; > -1 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq \; > -2 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq \; > -o SRP057125_SRS936134_salmon_out \; > -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:6416,Safety,detect,detection-comparison,6416,"RP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCoun ts.txt for details. [vale@ebi-003 salmon-problem]$; ```. The command run being:. ```; salmon quant \; -i mouse_cdna_38.p3.78_repbase_ercc.fa \; -l IU \; -1 SRP057125_SRS936134_1.fastq \; -2 SRP057125_SRS936134_2.fastq \; -o SRP057125_SRS936134_salmon_out \; -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; --biasCorrect \; --useFSPD; ```. But if I instead run salmon in the NFS directory where I want to run it, the core dumps... ```; [vale@ebi-003 mouse]$ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa \; > -l IU \; > -1 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq \; > -2 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq \; > -o SRP057125_SRS936134_salmon_out \; > -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7014,Safety,detect,detection-comparison,7014,"\; --useFSPD; ```. But if I instead run salmon in the NFS directory where I want to run it, the core dumps... ```; [vale@ebi-003 mouse]$ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa \; > -l IU \; > -1 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq \; > -2 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq \; > -o SRP057125_SRS936134_salmon_out \; > -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7148,Safety,detect,detection-comparison,7148,uant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa \; > -l IU \; > -1 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq \; > -2 /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq \; > -o SRP057125_SRS936134_salmon_out \; > -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript ,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:11262,Safety,detect,detection-comparison,11262,"on = 900 | max rel diff. = 0.0146915; [2016-01-02 20:23:59.212] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 20:24:01.395] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0147088; [2016-01-02 20:24:01.837] [jointLog] [info] iteration = 1100 | max rel diff. = 0.021175; [2016-01-02 20:24:02.193] [jointLog] [info] iteration = 1200 | max rel diff. = 0.01904; [2016-01-02 20:24:02.572] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0187047; [2016-01-02 20:24:02.972] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0213549; [2016-01-02 20:24:03.360] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0311727; [2016-01-02 20:24:03.745] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0100658; [2016-01-02 20:24:04.141] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0100679; [2016-01-02 20:24:04.536] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0100686; [2016-01-02 20:24:04.642] [jointLog] [info] iteration = 1827 | max rel diff. = 0.00921912; [2016-01-02 20:24:04.646] [jointLog] [info] Finished optimizer; [2016-01-02 20:24:04.646] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 20:24:04.882] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); [vale@ebi-003 mouse]$; ```. (I also tried the command in the NSF directory to write to /tmp/SRP057125_SRS936134_salmon_out, but that also segfaults)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:11376,Safety,detect,detection-comparison,11376,"on = 900 | max rel diff. = 0.0146915; [2016-01-02 20:23:59.212] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 20:24:01.395] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0147088; [2016-01-02 20:24:01.837] [jointLog] [info] iteration = 1100 | max rel diff. = 0.021175; [2016-01-02 20:24:02.193] [jointLog] [info] iteration = 1200 | max rel diff. = 0.01904; [2016-01-02 20:24:02.572] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0187047; [2016-01-02 20:24:02.972] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0213549; [2016-01-02 20:24:03.360] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0311727; [2016-01-02 20:24:03.745] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0100658; [2016-01-02 20:24:04.141] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0100679; [2016-01-02 20:24:04.536] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0100686; [2016-01-02 20:24:04.642] [jointLog] [info] iteration = 1827 | max rel diff. = 0.00921912; [2016-01-02 20:24:04.646] [jointLog] [info] Finished optimizer; [2016-01-02 20:24:04.646] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 20:24:04.882] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); [vale@ebi-003 mouse]$; ```. (I also tried the command in the NSF directory to write to /tmp/SRP057125_SRS936134_salmon_out, but that also segfaults)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1854,Security,Hash,Hash,1854,"ine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:2307,Security,hash,hash,2307,"ase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [2016-01-02 20:17:29.841] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:17:29.841] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:17:29.867] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:17:29.867] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:17:29.867] [jointLog] [info] Starting optimizer; [2016-01-02 20:17:30.130] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:17:30.136] [jointLog] [info] iteration = 0 | max rel diff. = 65.1271; [2016-01-02 20:17:30.315] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:17:32.978] [jointLog] [info] iteration = 100 | max rel diff. = 0.259134; [2016",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7759,Security,Hash,Hash,7759,"ng-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:8212,Security,hash,hash,8212,"4_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointLog] [info] Computed 102251 rich equivalence classes for further processing; [2016-01-02 20:23:49.850] [jointLog] [info] Counted 10033689 total reads in the equivalence classes; [2016-01-02 20:23:49.875] [jointLog] [info] Mapping rate = 83.0244%. [2016-01-02 20:23:49.875] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 20:23:49.875] [jointLog] [info] Starting optimizer; [2016-01-02 20:23:50.378] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 20:23:50.382] [jointLog] [info] iteration = 0 | max rel diff. = 64.9993; [2016-01-02 20:23:50.584] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 20:23:53.386] [jointLog] [info] iteration = 100 | max rel diff. = 0.263028; [2016-01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1549,Testability,Log,Logs,1549,"20:19 run_salmon.sh; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_1.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_2.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:1604,Testability,log,logs,1604,"20:19 run_salmon.sh; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_1.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq; lrwxrwxrwx 1 vale rst_pub 112 Jan 2 20:08 SRP057125_SRS936134_2.fastq -> /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq; drwxrwxr-x 5 vale rst_pub 4.0K Jan 2 20:20 SRP057125_SRS936134_salmon_out; ```. But when I run the script there, it succeeds, without segfault. ```; [vale@ebi-003 salmon-problem]$ bash run_salmon.sh; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:16:39.349] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:16:39.895] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:16:39.895] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:16:39.894] [jointLog] [info] Loading Quasi index; [2016-01-02 20:16:42.565] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:16:43.654] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:16:44.075] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:16:44.448] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:16:44.448] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:16:57.606] [stderrLog] [info] Done loading index; [2016-01-02 20:16:57.606] [jointLog] [info] done. processed 12000000 fragments; hits: 24367197, hits per frag: 2.06194+06. [20",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7454,Testability,Log,Logs,7454,"RP057125_SRS936134_2.fastq \; > -o SRP057125_SRS936134_salmon_out \; > -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointL",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741:7509,Testability,log,logs,7509,"RP057125_SRS936134_2.fastq \; > -o SRP057125_SRS936134_salmon_out \; > -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/quasi/mouse_cdna_38.p3.78_repbase_ercc.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq }; # [ output ] => { SRP057125_SRS936134_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to SRP057125_SRS936134_salmon_out/logs; [2016-01-02 20:22:59.800] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index[2016-01-02 20:23:00.830] [stderrLog] [info] Loading Suffix Array; [2016-01-02 20:23:00.830] [stderrLog] [info] Loading Position Hash; [2016-01-02 20:23:00.829] [jointLog] [info] Loading Quasi index; [2016-01-02 20:23:03.751] [stderrLog] [info] Loading Transcript Info; [2016-01-02 20:23:04.776] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-02 20:23:05.009] [stderrLog] [info] There were 104534 set bits in the bit array; [2016-01-02 20:23:05.325] [stderrLog] [info] Computing transcript lengths; [2016-01-02 20:23:05.325] [stderrLog] [info] Waiting to finish loading hash; Index contained 104534 targets; [2016-01-02 20:23:16.571] [stderrLog] [info] Done loading index; [2016-01-02 20:23:16.571] [jointLog] [info] done. processed 12000001 fragments; hits: 24367128, hits per frag: 2.04044. [2016-01-02 20:23:49.850] [jointL",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168426741
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168428123:631,Integrability,depend,depends,631,"Argghh --- that's gonna be a thinker. Can you try running it under GDB?. ```; $ gdb salmon; (gdb) r quant \; -i mouse_cdna_38.p3.78_repbase_ercc.fa \; -l IU \; -1 SRP057125_SRS936134_1.fastq \; -2 SRP057125_SRS936134_2.fastq \; -o SRP057125_SRS936134_salmon_out \; -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; --biasCorrect \; --useFSPD; ```. when it segfaults, you can issue the `bt` command to at least see where. If its still inside of JeMalloc, I can build another binary with just the standard allocator to see if the problem persists there (its strange that it depends on where the file is coming from! I don't have any NFS mounts either to test on).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168428123
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168428123:711,Testability,test,test,711,"Argghh --- that's gonna be a thinker. Can you try running it under GDB?. ```; $ gdb salmon; (gdb) r quant \; -i mouse_cdna_38.p3.78_repbase_ercc.fa \; -l IU \; -1 SRP057125_SRS936134_1.fastq \; -2 SRP057125_SRS936134_2.fastq \; -o SRP057125_SRS936134_salmon_out \; -g /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna38.78_repbase_ercc_index_gene_map.txt \; --biasCorrect \; --useFSPD; ```. when it segfaults, you can issue the `bt` command to at least see where. If its still inside of JeMalloc, I can build another binary with just the standard allocator to see if the problem persists there (its strange that it depends on where the file is coming from! I don't have any NFS mounts either to test on).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168428123
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900:997,Availability,fault,fault,997,"Especially since the files in both cases actually are in the same location... I could imagine it being an issue with something going write with the communication over the NFS. But in the working case it's just links to the same NFS location. Here is the tail of the gdb output:. ```; Computing gene-level abundance estimates; [2016-01-02 21:56:43.793] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done. Program received signal SIGSEGV, Segmentation fault.; 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.5.x86_64; (gdb) bt; #0 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; #1 0x0000000000806370 in je_tcache_bin_flush_small () at include/jemalloc/internal/mutex.h:85; #2 0x0000000000806c60 in je_tcache_event_hard () at src/tcache.c:44; #3 0x00000000005915fc in std::vector<Transcript, std::allocator<Transcript> >::~vector() (); #4 0x00000000005941c6 in ReadExperiment::~ReadExperiment() (); #5 0x00000000005872ce in salmonQuantify(int, char**) (); #6 0x0000000000514472 in main (); (gdb); ```. It does indeed seem to be inside JeMalloc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900:1122,Deployability,install,install,1122,"Especially since the files in both cases actually are in the same location... I could imagine it being an issue with something going write with the communication over the NFS. But in the working case it's just links to the same NFS location. Here is the tail of the gdb output:. ```; Computing gene-level abundance estimates; [2016-01-02 21:56:43.793] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done. Program received signal SIGSEGV, Segmentation fault.; 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.5.x86_64; (gdb) bt; #0 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; #1 0x0000000000806370 in je_tcache_bin_flush_small () at include/jemalloc/internal/mutex.h:85; #2 0x0000000000806c60 in je_tcache_event_hard () at src/tcache.c:44; #3 0x00000000005915fc in std::vector<Transcript, std::allocator<Transcript> >::~vector() (); #4 0x00000000005941c6 in ReadExperiment::~ReadExperiment() (); #5 0x00000000005872ce in salmonQuantify(int, char**) (); #6 0x0000000000514472 in main (); (gdb); ```. It does indeed seem to be inside JeMalloc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900:426,Safety,detect,detection-comparison,426,"Especially since the files in both cases actually are in the same location... I could imagine it being an issue with something going write with the communication over the NFS. But in the working case it's just links to the same NFS location. Here is the tail of the gdb output:. ```; Computing gene-level abundance estimates; [2016-01-02 21:56:43.793] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done. Program received signal SIGSEGV, Segmentation fault.; 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.5.x86_64; (gdb) bt; #0 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; #1 0x0000000000806370 in je_tcache_bin_flush_small () at include/jemalloc/internal/mutex.h:85; #2 0x0000000000806c60 in je_tcache_event_hard () at src/tcache.c:44; #3 0x00000000005915fc in std::vector<Transcript, std::allocator<Transcript> >::~vector() (); #4 0x00000000005941c6 in ReadExperiment::~ReadExperiment() (); #5 0x00000000005872ce in salmonQuantify(int, char**) (); #6 0x0000000000514472 in main (); (gdb); ```. It does indeed seem to be inside JeMalloc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900:540,Safety,detect,detection-comparison,540,"Especially since the files in both cases actually are in the same location... I could imagine it being an issue with something going write with the communication over the NFS. But in the working case it's just links to the same NFS location. Here is the tail of the gdb output:. ```; Computing gene-level abundance estimates; [2016-01-02 21:56:43.793] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done. Program received signal SIGSEGV, Segmentation fault.; 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.5.x86_64; (gdb) bt; #0 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; #1 0x0000000000806370 in je_tcache_bin_flush_small () at include/jemalloc/internal/mutex.h:85; #2 0x0000000000806c60 in je_tcache_event_hard () at src/tcache.c:44; #3 0x00000000005915fc in std::vector<Transcript, std::allocator<Transcript> >::~vector() (); #4 0x00000000005941c6 in ReadExperiment::~ReadExperiment() (); #5 0x00000000005872ce in salmonQuantify(int, char**) (); #6 0x0000000000514472 in main (); (gdb); ```. It does indeed seem to be inside JeMalloc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168448704:27,Deployability,release,releases,27,Cool! I'll post this under releases with a brief note when I get home. I'll probably leave both binaries under the releases. I'm still very curious what's up with jemalloc!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168448704
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168448704:115,Deployability,release,releases,115,Cool! I'll post this under releases with a brief note when I get home. I'll probably leave both binaries under the releases. I'm still very curious what's up with jemalloc!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168448704
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-171038135:37,Availability,down,down,37,"Hi @vals,; I'm still trying to track down this bug and figure out why it occurred in the first place. I've been working on a different way to deal with reclaiming the resources that caused the problem before and was wondering if you'd be willing to test the attached binary to see if it still segfaults on your data. ; Thanks! [SalmonBeta-0.6.1_DebianSqueeze.tar.gz](https://github.com/COMBINE-lab/salmon/files/87914/SalmonBeta-0.6.1_DebianSqueeze.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-171038135
https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-171038135:249,Testability,test,test,249,"Hi @vals,; I'm still trying to track down this bug and figure out why it occurred in the first place. I've been working on a different way to deal with reclaiming the resources that caused the problem before and was wondering if you'd be willing to test the attached binary to see if it still segfaults on your data. ; Thanks! [SalmonBeta-0.6.1_DebianSqueeze.tar.gz](https://github.com/COMBINE-lab/salmon/files/87914/SalmonBeta-0.6.1_DebianSqueeze.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-171038135
https://github.com/COMBINE-lab/salmon/issues/36#issuecomment-186365104:92,Availability,down,downsampling,92,It will be good to have this feature to automatically infer the most likely library type by downsampling. Waiting for this feature to be implemented!!!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/36#issuecomment-186365104
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:61,Deployability,upgrade,upgrade,61,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:113,Deployability,upgrade,upgrades,113,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:520,Performance,Load,Loading,520,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:591,Performance,Load,Loading,591,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:658,Performance,Load,Loading,658,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:725,Performance,Load,Loading,725,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:791,Performance,Load,Loading,791,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:861,Performance,Load,Loading,861,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:1116,Performance,load,loading,1116,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:1262,Performance,load,loading,1262,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:675,Security,Hash,Hash,675,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:1124,Security,hash,hash,1124,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:402,Testability,Log,Logs,402,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911:1312,Testability,log,logs,1312,"Confirmed with v0.6.0:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => {... }; # [ threads ] => { 16 }; Logs will be written to ...; there is 1 lib; [2016-01-22 17:59:17.894] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-01-22 17:59:18.735] [stderrLog] [info] Loading Suffix Array; [2016-01-22 17:59:18.736] [stderrLog] [info] Loading Position Hash; [2016-01-22 17:59:18.731] [jointLog] [info] Loading Quasi index; [2016-01-22 18:00:59.879] [stderrLog] [info] Loading Transcript Info; [2016-01-22 18:01:25.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 18:01:30.642] [stderrLog] [info] There were 552702 set bits in the bit a; [2016-01-22 18:01:31.487] [stderrLog] [info] Computing transcript lengths; [2016-01-22 18:01:31.491] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 18:04:43.717] [jointLog] [info] done; [2016-01-22 18:04:43.717] [stderrLog] [info] Done loading index; ```. I'll check the index creation logs, but didn't notice anything out of the ordinary...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174082911
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174085756:122,Availability,failure,failure,122,"If it is a _large_ (i.e. > 2^31 nucleotide reference) then it should trigger the 64-bit index automatically. If there's a failure to do that, it's a bug I have to fix in RapMap. Admittedly, I've not tried to map to many transcriptomes that large, so I'd be much obliged if you could provide me with an example to trigger that behavior :).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174085756
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174533495:13,Testability,log,log,13,"The indexing log shows nothing out of the ordinary:. ```; [2016-01-22 15:11:57.283] [jointLog] [info] building index; [2016-01-22 15:40:12.318] [jointLog] [info] done building index; ```. There was actually a blank line at the very end of the transcriptome FASTA which I though might be related to #22, so I removed this line, re-indexed and have the same behavior. I'll check on the nucleotide size of the transcriptome now. cc @jmerkin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174533495
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174578337:196,Availability,failure,failure,196,"Yes; that should definitely correctly be identified as 32-bit. The way the parser works is that it ""chops"" the header at the first whitepsace character. I can't think of anything that would cause failure during mapping (but bugs come from exactly the kind of thing you can't think of). Something that might cause an issue now that I think about it is a complete poly-A transcript. The indexer will attempt to clip poly-A tails (if a transcript ends with > 10 A's, then it will clip all of the trailing A's. If this causes the entire sequence to disappear, this might cause an issue. Also, I hadn't given deep consideration to what might happen if a transcript is shorter than the k-mer size (default 31) used for hashing --- so I might also check for very short transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174578337
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174578337:713,Security,hash,hashing,713,"Yes; that should definitely correctly be identified as 32-bit. The way the parser works is that it ""chops"" the header at the first whitepsace character. I can't think of anything that would cause failure during mapping (but bugs come from exactly the kind of thing you can't think of). Something that might cause an issue now that I think about it is a complete poly-A transcript. The indexer will attempt to clip poly-A tails (if a transcript ends with > 10 A's, then it will clip all of the trailing A's. If this causes the entire sequence to disappear, this might cause an issue. Also, I hadn't given deep consideration to what might happen if a transcript is shorter than the k-mer size (default 31) used for hashing --- so I might also check for very short transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174578337
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175085651:829,Availability,error,errors,829,"rapmap works fine with this set of transcripts. indexing:. ```; $ rapmap pseudoindex -k 31 -i /path/to/output -t /path/to/transcripts.fa; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 550000 transcripts^[; Elapsed time: 3526.23s; Clipped poly-A tails from 2375 transcripts. [Step 2 of 4] : marking k-mers; marked kmers for 550000 transcripts; Elapsed time: 1295.67s. [Step 3 of 4] : building k-mers equivalence classes; done! There were 5077370 classes; Elapsed time: 1351.53s. [Step 4 of 4] : finalizing index; finalized kmers for 550000 transcripts; Elapsed time: 4424.16s; Writing the index to test3/; transcriptIDs.size() = 1419746642; parsed 552702 transcripts; There were 1015977902 distinct k-mers (canonicalized); ```. which looks fine, and then alignments are generated and `rapmap` exists with no errors.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175085651
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175088841:580,Performance,perform,performs,580,"That is . . . strange! Salmon _literally_ uses the RapMap index (and the RapMap functions) directly to obtain the quasi-mappings. One thing I noticed is that you seem to be using `pseudoindex` which is our independent re-implementation of pseudo-alignment. However, Salmon (and Sailfish) use quasi-mapping (RapMap's `quasiindex` and `quasimap` commands, as [we found this to be more accurate](http://biorxiv.org/content/biorxiv/early/2016/01/16/029652.full.pdf)). I presume that if you used the quasi-mapping functionality, you might observe the bug. If you don't (i.e. if RapMap performs quasi-mapping properly), then this is a real thinker (and I'd be happy to take a look myself if you can share the file). P.S. The same caveat I mentioned above may apply. That is, it is possible that a polyA transcript that is completely removed from the input could cause a problem unless we check for it in the quasi-index, but may not affect the pseudo-index. This is because the quasi-index relies on a packed representation of the transcriptome and an associated sparse bit-vector to perform the mapping, and it assumes that all of the transcripts will have a non-zero length (if this is the culprit, it is, of course, easy to fix with an explicit check). You could also test this hypothesis by generating the quasi-index with the `--noClip` option, which will disable poly-A clipping when building the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175088841
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175088841:1078,Performance,perform,perform,1078,"That is . . . strange! Salmon _literally_ uses the RapMap index (and the RapMap functions) directly to obtain the quasi-mappings. One thing I noticed is that you seem to be using `pseudoindex` which is our independent re-implementation of pseudo-alignment. However, Salmon (and Sailfish) use quasi-mapping (RapMap's `quasiindex` and `quasimap` commands, as [we found this to be more accurate](http://biorxiv.org/content/biorxiv/early/2016/01/16/029652.full.pdf)). I presume that if you used the quasi-mapping functionality, you might observe the bug. If you don't (i.e. if RapMap performs quasi-mapping properly), then this is a real thinker (and I'd be happy to take a look myself if you can share the file). P.S. The same caveat I mentioned above may apply. That is, it is possible that a polyA transcript that is completely removed from the input could cause a problem unless we check for it in the quasi-index, but may not affect the pseudo-index. This is because the quasi-index relies on a packed representation of the transcriptome and an associated sparse bit-vector to perform the mapping, and it assumes that all of the transcripts will have a non-zero length (if this is the culprit, it is, of course, easy to fix with an explicit check). You could also test this hypothesis by generating the quasi-index with the `--noClip` option, which will disable poly-A clipping when building the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175088841
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175088841:1265,Testability,test,test,1265,"That is . . . strange! Salmon _literally_ uses the RapMap index (and the RapMap functions) directly to obtain the quasi-mappings. One thing I noticed is that you seem to be using `pseudoindex` which is our independent re-implementation of pseudo-alignment. However, Salmon (and Sailfish) use quasi-mapping (RapMap's `quasiindex` and `quasimap` commands, as [we found this to be more accurate](http://biorxiv.org/content/biorxiv/early/2016/01/16/029652.full.pdf)). I presume that if you used the quasi-mapping functionality, you might observe the bug. If you don't (i.e. if RapMap performs quasi-mapping properly), then this is a real thinker (and I'd be happy to take a look myself if you can share the file). P.S. The same caveat I mentioned above may apply. That is, it is possible that a polyA transcript that is completely removed from the input could cause a problem unless we check for it in the quasi-index, but may not affect the pseudo-index. This is because the quasi-index relies on a packed representation of the transcriptome and an associated sparse bit-vector to perform the mapping, and it assumes that all of the transcripts will have a non-zero length (if this is the culprit, it is, of course, easy to fix with an explicit check). You could also test this hypothesis by generating the quasi-index with the `--noClip` option, which will disable poly-A clipping when building the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-175088841
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-187748517:203,Energy Efficiency,reduce,reduces,203,"No problem! We're actually working now on an optional use of a perfect hash in the quasi-index. It increases index construction times, but provides the same speed of lookup as the current hash. Also, it reduces the memory usage by a factor of ~2. We just have to figure out how to implement this cleanly in the code base.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-187748517
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-187748517:71,Security,hash,hash,71,"No problem! We're actually working now on an optional use of a perfect hash in the quasi-index. It increases index construction times, but provides the same speed of lookup as the current hash. Also, it reduces the memory usage by a factor of ~2. We just have to figure out how to implement this cleanly in the code base.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-187748517
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-187748517:188,Security,hash,hash,188,"No problem! We're actually working now on an optional use of a perfect hash in the quasi-index. It increases index construction times, but provides the same speed of lookup as the current hash. Also, it reduces the memory usage by a factor of ~2. We just have to figure out how to implement this cleanly in the code base.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-187748517
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188285598:12,Testability,test,testers,12,If you need testers for this I'm glad to help.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188285598
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188294669:167,Security,hash,hash,167,"It's currently being developed here — https://github.com/COMBINE-lab/RapMap/tree/quasi-mph. Once we're convinced RapMap still behaves correctly when using the perfect hash index, then I have some (not too much) work to do to propagate the necessary changes to Sailfish & Salmon. The option is currently functional. If you grab this branch and build a quasi index using the `-p` option, it will use the emphf library to build the hash rather than a google dense hash (with a concordant decrease in memory usage).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188294669
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188294669:429,Security,hash,hash,429,"It's currently being developed here — https://github.com/COMBINE-lab/RapMap/tree/quasi-mph. Once we're convinced RapMap still behaves correctly when using the perfect hash index, then I have some (not too much) work to do to propagate the necessary changes to Sailfish & Salmon. The option is currently functional. If you grab this branch and build a quasi index using the `-p` option, it will use the emphf library to build the hash rather than a google dense hash (with a concordant decrease in memory usage).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188294669
https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188294669:461,Security,hash,hash,461,"It's currently being developed here — https://github.com/COMBINE-lab/RapMap/tree/quasi-mph. Once we're convinced RapMap still behaves correctly when using the perfect hash index, then I have some (not too much) work to do to propagate the necessary changes to Sailfish & Salmon. The option is currently functional. If you grab this branch and build a quasi index using the `-p` option, it will use the emphf library to build the hash rather than a google dense hash (with a concordant decrease in memory usage).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-188294669
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553:1016,Energy Efficiency,efficient,efficiently,1016,"Hi @roryk,. Salmon doesn't currently have the ability to output a pseudobam, but that is definitely possible (and not too difficult). We have a related feature planned; perhaps you could tell me if it suits your use case. However, first, I should mention that if you'd simply like a pseudobam for _all_ the mapping locations of the reads, you can use [RapMap](https://github.com/COMBINE-lab/RapMap). RapMap implements the quasi-mapping algorithm upon which Salmon and Sailfish are based (and RapMap is used as a library in the Salmon and Sailfish codebases). Given an index and set of reads, RapMap will report all of the multi-mapping locations that Salmon and Sailfish would consider during quantification. The other feature we have in the works is to have Salmon optionally output a `.bam` file (with actual alignments) post-quantification. It turns out that, given the quasi-mapping information and the quantification results, taking the extra step from quasi-mapping to an actual _alignment_ can be done fairly efficiently. In this mode, Salmon would make one more pass over the reads and, considering the estimated abundances, sample a single alignment for each multi-mapping read proportional to the relative abundance of the different multi-mapping targets (i.e. it would perform a sampling over the multi-mapping locations that would, in expectation, give the same abundances as the _soft_ assignments computed by the optimization algorithm). This feature will be very useful for [transrate](https://github.com/Blahah/transrate). However, given that your goal is to use outside information to perform the filtering yourself, this option may not be ideal for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553:1280,Performance,perform,perform,1280,"Hi @roryk,. Salmon doesn't currently have the ability to output a pseudobam, but that is definitely possible (and not too difficult). We have a related feature planned; perhaps you could tell me if it suits your use case. However, first, I should mention that if you'd simply like a pseudobam for _all_ the mapping locations of the reads, you can use [RapMap](https://github.com/COMBINE-lab/RapMap). RapMap implements the quasi-mapping algorithm upon which Salmon and Sailfish are based (and RapMap is used as a library in the Salmon and Sailfish codebases). Given an index and set of reads, RapMap will report all of the multi-mapping locations that Salmon and Sailfish would consider during quantification. The other feature we have in the works is to have Salmon optionally output a `.bam` file (with actual alignments) post-quantification. It turns out that, given the quasi-mapping information and the quantification results, taking the extra step from quasi-mapping to an actual _alignment_ can be done fairly efficiently. In this mode, Salmon would make one more pass over the reads and, considering the estimated abundances, sample a single alignment for each multi-mapping read proportional to the relative abundance of the different multi-mapping targets (i.e. it would perform a sampling over the multi-mapping locations that would, in expectation, give the same abundances as the _soft_ assignments computed by the optimization algorithm). This feature will be very useful for [transrate](https://github.com/Blahah/transrate). However, given that your goal is to use outside information to perform the filtering yourself, this option may not be ideal for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553:1427,Performance,optimiz,optimization,1427,"Hi @roryk,. Salmon doesn't currently have the ability to output a pseudobam, but that is definitely possible (and not too difficult). We have a related feature planned; perhaps you could tell me if it suits your use case. However, first, I should mention that if you'd simply like a pseudobam for _all_ the mapping locations of the reads, you can use [RapMap](https://github.com/COMBINE-lab/RapMap). RapMap implements the quasi-mapping algorithm upon which Salmon and Sailfish are based (and RapMap is used as a library in the Salmon and Sailfish codebases). Given an index and set of reads, RapMap will report all of the multi-mapping locations that Salmon and Sailfish would consider during quantification. The other feature we have in the works is to have Salmon optionally output a `.bam` file (with actual alignments) post-quantification. It turns out that, given the quasi-mapping information and the quantification results, taking the extra step from quasi-mapping to an actual _alignment_ can be done fairly efficiently. In this mode, Salmon would make one more pass over the reads and, considering the estimated abundances, sample a single alignment for each multi-mapping read proportional to the relative abundance of the different multi-mapping targets (i.e. it would perform a sampling over the multi-mapping locations that would, in expectation, give the same abundances as the _soft_ assignments computed by the optimization algorithm). This feature will be very useful for [transrate](https://github.com/Blahah/transrate). However, given that your goal is to use outside information to perform the filtering yourself, this option may not be ideal for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553:1602,Performance,perform,perform,1602,"Hi @roryk,. Salmon doesn't currently have the ability to output a pseudobam, but that is definitely possible (and not too difficult). We have a related feature planned; perhaps you could tell me if it suits your use case. However, first, I should mention that if you'd simply like a pseudobam for _all_ the mapping locations of the reads, you can use [RapMap](https://github.com/COMBINE-lab/RapMap). RapMap implements the quasi-mapping algorithm upon which Salmon and Sailfish are based (and RapMap is used as a library in the Salmon and Sailfish codebases). Given an index and set of reads, RapMap will report all of the multi-mapping locations that Salmon and Sailfish would consider during quantification. The other feature we have in the works is to have Salmon optionally output a `.bam` file (with actual alignments) post-quantification. It turns out that, given the quasi-mapping information and the quantification results, taking the extra step from quasi-mapping to an actual _alignment_ can be done fairly efficiently. In this mode, Salmon would make one more pass over the reads and, considering the estimated abundances, sample a single alignment for each multi-mapping read proportional to the relative abundance of the different multi-mapping targets (i.e. it would perform a sampling over the multi-mapping locations that would, in expectation, give the same abundances as the _soft_ assignments computed by the optimization algorithm). This feature will be very useful for [transrate](https://github.com/Blahah/transrate). However, given that your goal is to use outside information to perform the filtering yourself, this option may not be ideal for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553:269,Usability,simpl,simply,269,"Hi @roryk,. Salmon doesn't currently have the ability to output a pseudobam, but that is definitely possible (and not too difficult). We have a related feature planned; perhaps you could tell me if it suits your use case. However, first, I should mention that if you'd simply like a pseudobam for _all_ the mapping locations of the reads, you can use [RapMap](https://github.com/COMBINE-lab/RapMap). RapMap implements the quasi-mapping algorithm upon which Salmon and Sailfish are based (and RapMap is used as a library in the Salmon and Sailfish codebases). Given an index and set of reads, RapMap will report all of the multi-mapping locations that Salmon and Sailfish would consider during quantification. The other feature we have in the works is to have Salmon optionally output a `.bam` file (with actual alignments) post-quantification. It turns out that, given the quasi-mapping information and the quantification results, taking the extra step from quasi-mapping to an actual _alignment_ can be done fairly efficiently. In this mode, Salmon would make one more pass over the reads and, considering the estimated abundances, sample a single alignment for each multi-mapping read proportional to the relative abundance of the different multi-mapping targets (i.e. it would perform a sampling over the multi-mapping locations that would, in expectation, give the same abundances as the _soft_ assignments computed by the optimization algorithm). This feature will be very useful for [transrate](https://github.com/Blahah/transrate). However, given that your goal is to use outside information to perform the filtering yourself, this option may not be ideal for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-175092553
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-242924562:191,Deployability,release,release,191,"The implementation to output mapping information from within salmon (not yet full alignments) is almost complete. The feature needs some testing, but it will definitely make it into the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-242924562
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-242924562:137,Testability,test,testing,137,"The implementation to output mapping information from within salmon (not yet full alignments) is almost complete. The feature needs some testing, but it will definitely make it into the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-242924562
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-243957318:45,Availability,avail,available,45,"Ok, SAM output of the mapping information is available in 0.7.2 :).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-243957318
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-390611228:60,Deployability,release,releases,60,"@rob-p hi,; any chance of making them BAM output for future releases? In some cases (e.g. TCGA files) the SAM output can be really huge...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-390611228
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-507241631:153,Integrability,message,message,153,"@rbenel,. If you are using a version prior to 0.14.0, you will also have to pass `--no-version-check` to avoid contamination of stdout by the versioning message.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-507241631
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-507241631:105,Safety,avoid,avoid,105,"@rbenel,. If you are using a version prior to 0.14.0, you will also have to pass `--no-version-check` to avoid contamination of stdout by the versioning message.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-507241631
https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-507271061:412,Safety,detect,detected,412,"@rob-p @mdshw5 ; Thanks for the quick response! For this specific run I am running an older version.; However, even with the `--no-version-check` flag I can't seem to pipe `writeMappings` to samtools (same command as above). ```; (mapping-based mode) Exception : [unrecognised option '-b'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; ```. On the other hand, `--writeMappings=output.sam` works fine. I would just like to save the hassle of converting all of the .sam files to .bam files following the run ...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-507271061
https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176783177:19,Availability,error,error,19,"Hi @tharvesh — The error suggests that memory allocation failed when trying to build the suffix array. I'm guessing from what I can tell from the log (e.g. the fact that the 64-bit index is being invoked, suggesting the input contains > 2^31 nucleotides), that you actually tried to build an index on the GENCODE **genome** plus a set of extra transcripts. Salmon (unlike Cufflinks, but like RSEM, TIGAR, eXpress, etc.) should be used with the **transcriptome**, not the **genome** of the target organism. That is, if you want to use GENCODE (say, in human), you should be indexing either (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/gencode.v24.transcripts.fa.gz) or (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/gencode.v24.pc_transcripts.fa.gz), not e.g. (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/GRCh38.primary_assembly.genome.fa.gz).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176783177
https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176783177:146,Testability,log,log,146,"Hi @tharvesh — The error suggests that memory allocation failed when trying to build the suffix array. I'm guessing from what I can tell from the log (e.g. the fact that the 64-bit index is being invoked, suggesting the input contains > 2^31 nucleotides), that you actually tried to build an index on the GENCODE **genome** plus a set of extra transcripts. Salmon (unlike Cufflinks, but like RSEM, TIGAR, eXpress, etc.) should be used with the **transcriptome**, not the **genome** of the target organism. That is, if you want to use GENCODE (say, in human), you should be indexing either (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/gencode.v24.transcripts.fa.gz) or (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/gencode.v24.pc_transcripts.fa.gz), not e.g. (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/GRCh38.primary_assembly.genome.fa.gz).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176783177
https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594:1348,Availability,redundant,redundant,1348,"Well, one can certainly use a tool (like gffread or rsem-prepare-reference) to take a genome and a (possibly custom/augmented) GTF to extract a set of target transcripts. Above, it looks like you were only processing between 90 and 100k transcripts. Given the overall size of the overall reference — ~2.4 billion nucleotides — my guess would be that some of these transcripts may be exceedingly long (and perhaps extracted incorrectly from the underlying tool). I should note that an index can be built on large references (which is why we support 64-bit index construction), but it's a very rare use-case as most transcriptomes (even large _de novo_ transcriptomes) rarely cross the 2^31 barrier, and I would expect it to consume quite a bit of memory. The default `quasi` indexer of Salmon is optimized to be very fast for typical sized transcriptomes (usually a few hundred mega-bases) at the cost of using more memory. The alternative `fmd` index can be made more memory efficient, by setting a larger sampling factor, but the resulting mapping will be slower (though still much faster than standard alignment). I would first check to see if the transcripts.fa file contains what you were expecting (i.e. the normal transcriptome + the auxiliary transcripts you were interested in quantifying), and that you actually have close to 2.4Gb of non-redundant transcriptome sequence that you want to quantify. If this is the case, the options are to try and build the quasi-index on a large memory machine (building the index requires more memory than mapping with the constructed index), or using the fmd-index with a large sampling factor. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594
https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594:975,Energy Efficiency,efficient,efficient,975,"Well, one can certainly use a tool (like gffread or rsem-prepare-reference) to take a genome and a (possibly custom/augmented) GTF to extract a set of target transcripts. Above, it looks like you were only processing between 90 and 100k transcripts. Given the overall size of the overall reference — ~2.4 billion nucleotides — my guess would be that some of these transcripts may be exceedingly long (and perhaps extracted incorrectly from the underlying tool). I should note that an index can be built on large references (which is why we support 64-bit index construction), but it's a very rare use-case as most transcriptomes (even large _de novo_ transcriptomes) rarely cross the 2^31 barrier, and I would expect it to consume quite a bit of memory. The default `quasi` indexer of Salmon is optimized to be very fast for typical sized transcriptomes (usually a few hundred mega-bases) at the cost of using more memory. The alternative `fmd` index can be made more memory efficient, by setting a larger sampling factor, but the resulting mapping will be slower (though still much faster than standard alignment). I would first check to see if the transcripts.fa file contains what you were expecting (i.e. the normal transcriptome + the auxiliary transcripts you were interested in quantifying), and that you actually have close to 2.4Gb of non-redundant transcriptome sequence that you want to quantify. If this is the case, the options are to try and build the quasi-index on a large memory machine (building the index requires more memory than mapping with the constructed index), or using the fmd-index with a large sampling factor. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594
https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594:795,Performance,optimiz,optimized,795,"Well, one can certainly use a tool (like gffread or rsem-prepare-reference) to take a genome and a (possibly custom/augmented) GTF to extract a set of target transcripts. Above, it looks like you were only processing between 90 and 100k transcripts. Given the overall size of the overall reference — ~2.4 billion nucleotides — my guess would be that some of these transcripts may be exceedingly long (and perhaps extracted incorrectly from the underlying tool). I should note that an index can be built on large references (which is why we support 64-bit index construction), but it's a very rare use-case as most transcriptomes (even large _de novo_ transcriptomes) rarely cross the 2^31 barrier, and I would expect it to consume quite a bit of memory. The default `quasi` indexer of Salmon is optimized to be very fast for typical sized transcriptomes (usually a few hundred mega-bases) at the cost of using more memory. The alternative `fmd` index can be made more memory efficient, by setting a larger sampling factor, but the resulting mapping will be slower (though still much faster than standard alignment). I would first check to see if the transcripts.fa file contains what you were expecting (i.e. the normal transcriptome + the auxiliary transcripts you were interested in quantifying), and that you actually have close to 2.4Gb of non-redundant transcriptome sequence that you want to quantify. If this is the case, the options are to try and build the quasi-index on a large memory machine (building the index requires more memory than mapping with the constructed index), or using the fmd-index with a large sampling factor. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594
https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594:1348,Safety,redund,redundant,1348,"Well, one can certainly use a tool (like gffread or rsem-prepare-reference) to take a genome and a (possibly custom/augmented) GTF to extract a set of target transcripts. Above, it looks like you were only processing between 90 and 100k transcripts. Given the overall size of the overall reference — ~2.4 billion nucleotides — my guess would be that some of these transcripts may be exceedingly long (and perhaps extracted incorrectly from the underlying tool). I should note that an index can be built on large references (which is why we support 64-bit index construction), but it's a very rare use-case as most transcriptomes (even large _de novo_ transcriptomes) rarely cross the 2^31 barrier, and I would expect it to consume quite a bit of memory. The default `quasi` indexer of Salmon is optimized to be very fast for typical sized transcriptomes (usually a few hundred mega-bases) at the cost of using more memory. The alternative `fmd` index can be made more memory efficient, by setting a larger sampling factor, but the resulting mapping will be slower (though still much faster than standard alignment). I would first check to see if the transcripts.fa file contains what you were expecting (i.e. the normal transcriptome + the auxiliary transcripts you were interested in quantifying), and that you actually have close to 2.4Gb of non-redundant transcriptome sequence that you want to quantify. If this is the case, the options are to try and build the quasi-index on a large memory machine (building the index requires more memory than mapping with the constructed index), or using the fmd-index with a large sampling factor. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180:168,Availability,error,error,168,"Hi @kieranrcampbell,. Indeed, such reads will be un-mappable. The only tricky question here is at which point we should (1) do nothing (2) issue a warning (3) issue an error. Since the reads may not all be of the same size (perhaps the user has quality-trimmed the reads first and not opted to discard the short ones), it's possible we may see some reads too short to consider, but others would not be. We could choose arbitrary cutoffs (warning if greater than 1,000 such reads and an error if greater than 1,000,000), but this will, of course, depend on how large the input data set is. Anyway, I agree that we should notify the user of this and will be happy to add it; do you have any suggestions on the default behavior?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180:486,Availability,error,error,486,"Hi @kieranrcampbell,. Indeed, such reads will be un-mappable. The only tricky question here is at which point we should (1) do nothing (2) issue a warning (3) issue an error. Since the reads may not all be of the same size (perhaps the user has quality-trimmed the reads first and not opted to discard the short ones), it's possible we may see some reads too short to consider, but others would not be. We could choose arbitrary cutoffs (warning if greater than 1,000 such reads and an error if greater than 1,000,000), but this will, of course, depend on how large the input data set is. Anyway, I agree that we should notify the user of this and will be happy to add it; do you have any suggestions on the default behavior?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180:546,Integrability,depend,depend,546,"Hi @kieranrcampbell,. Indeed, such reads will be un-mappable. The only tricky question here is at which point we should (1) do nothing (2) issue a warning (3) issue an error. Since the reads may not all be of the same size (perhaps the user has quality-trimmed the reads first and not opted to discard the short ones), it's possible we may see some reads too short to consider, but others would not be. We could choose arbitrary cutoffs (warning if greater than 1,000 such reads and an error if greater than 1,000,000), but this will, of course, depend on how large the input data set is. Anyway, I agree that we should notify the user of this and will be happy to add it; do you have any suggestions on the default behavior?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844:102,Availability,error,error,102,"My preference would be to throw a warning if any reads are shorter than the; kmer length and throw an error if all are. So if any reads are less then; k-mer length report ""Warning: x% of reads were found to be less than k used; to build index. Consider rebuilding index with smaller k. Minimum read size; found was [min read size]"" and then halt execution if x% is 100%. Would; that sound reasonable?. Thanks,. Kieran. On 8 February 2016 at 14:25, Rob Patro notifications@github.com wrote:. > Hi @kieranrcampbell https://github.com/kieranrcampbell,; > ; > Indeed, such reads will be un-mappable. The only tricky question here is; > at which point we should (1) do nothing (2) issue a warning (3) issue an; > error. Since the reads may not all be of the same size (perhaps the user; > has quality-trimmed the reads first and not opted to discard the short; > ones), it's possible we may see some reads too short to consider, but; > others would not be. We could choose arbitrary cutoffs (warning if greater; > than 1,000 such reads and an error if greater than 1,000,000), but this; > will, of course, depend on how large the input data set is. Anyway, I agree; > that we should notify the user of this and will be happy to add it; do you; > have any suggestions on the default behavior?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844:708,Availability,error,error,708,"My preference would be to throw a warning if any reads are shorter than the; kmer length and throw an error if all are. So if any reads are less then; k-mer length report ""Warning: x% of reads were found to be less than k used; to build index. Consider rebuilding index with smaller k. Minimum read size; found was [min read size]"" and then halt execution if x% is 100%. Would; that sound reasonable?. Thanks,. Kieran. On 8 February 2016 at 14:25, Rob Patro notifications@github.com wrote:. > Hi @kieranrcampbell https://github.com/kieranrcampbell,; > ; > Indeed, such reads will be un-mappable. The only tricky question here is; > at which point we should (1) do nothing (2) issue a warning (3) issue an; > error. Since the reads may not all be of the same size (perhaps the user; > has quality-trimmed the reads first and not opted to discard the short; > ones), it's possible we may see some reads too short to consider, but; > others would not be. We could choose arbitrary cutoffs (warning if greater; > than 1,000 such reads and an error if greater than 1,000,000), but this; > will, of course, depend on how large the input data set is. Anyway, I agree; > that we should notify the user of this and will be happy to add it; do you; > have any suggestions on the default behavior?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844:1038,Availability,error,error,1038,"My preference would be to throw a warning if any reads are shorter than the; kmer length and throw an error if all are. So if any reads are less then; k-mer length report ""Warning: x% of reads were found to be less than k used; to build index. Consider rebuilding index with smaller k. Minimum read size; found was [min read size]"" and then halt execution if x% is 100%. Would; that sound reasonable?. Thanks,. Kieran. On 8 February 2016 at 14:25, Rob Patro notifications@github.com wrote:. > Hi @kieranrcampbell https://github.com/kieranrcampbell,; > ; > Indeed, such reads will be un-mappable. The only tricky question here is; > at which point we should (1) do nothing (2) issue a warning (3) issue an; > error. Since the reads may not all be of the same size (perhaps the user; > has quality-trimmed the reads first and not opted to discard the short; > ones), it's possible we may see some reads too short to consider, but; > others would not be. We could choose arbitrary cutoffs (warning if greater; > than 1,000 such reads and an error if greater than 1,000,000), but this; > will, of course, depend on how large the input data set is. Anyway, I agree; > that we should notify the user of this and will be happy to add it; do you; > have any suggestions on the default behavior?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844
https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844:1101,Integrability,depend,depend,1101,"My preference would be to throw a warning if any reads are shorter than the; kmer length and throw an error if all are. So if any reads are less then; k-mer length report ""Warning: x% of reads were found to be less than k used; to build index. Consider rebuilding index with smaller k. Minimum read size; found was [min read size]"" and then halt execution if x% is 100%. Would; that sound reasonable?. Thanks,. Kieran. On 8 February 2016 at 14:25, Rob Patro notifications@github.com wrote:. > Hi @kieranrcampbell https://github.com/kieranrcampbell,; > ; > Indeed, such reads will be un-mappable. The only tricky question here is; > at which point we should (1) do nothing (2) issue a warning (3) issue an; > error. Since the reads may not all be of the same size (perhaps the user; > has quality-trimmed the reads first and not opted to discard the short; > ones), it's possible we may see some reads too short to consider, but; > others would not be. We could choose arbitrary cutoffs (warning if greater; > than 1,000 such reads and an error if greater than 1,000,000), but this; > will, of course, depend on how large the input data set is. Anyway, I agree; > that we should notify the user of this and will be happy to add it; do you; > have any suggestions on the default behavior?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844
https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186697657:6,Performance,cache,caches,6,"CMake caches some information during the build in `CMakeCache.txt` (I think) so you probably have to delete that, or your build directory, and then start again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186697657
https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186702766:106,Deployability,install,installed,106,"I see! Thanks for the tip!. At this point, I would say that there either needs to be a check that curl is installed before using it (for user-friendliness) or that this is a known issue with the workaround above (with the caveat that you delete the CMakeCache.txt file in the build directory after you run `fetchRapMap.sh` manually). I'm surprised curl is not included with the default developer tools on Ubuntu...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186702766
https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128:171,Availability,avail,available,171,"Hi @warrenmcg — Thanks for your interest in Salmon. There are actually a number of improvements since the pre-print as well! I'm very surprised as well that `curl` is not available by default on Ubuntu 14.04 (or some variants of the installation). It's actually a very common tool. One thing worth noting is that we also provide [pre-compiled binaries](https://github.com/COMBINE-lab/salmon/releases/tag/v0.6.0) for Linux and OSX, if users aren't looking for the ""bleeding-edge"" version of Salmon, or if their environment causes difficulty in compiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128
https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128:233,Deployability,install,installation,233,"Hi @warrenmcg — Thanks for your interest in Salmon. There are actually a number of improvements since the pre-print as well! I'm very surprised as well that `curl` is not available by default on Ubuntu 14.04 (or some variants of the installation). It's actually a very common tool. One thing worth noting is that we also provide [pre-compiled binaries](https://github.com/COMBINE-lab/salmon/releases/tag/v0.6.0) for Linux and OSX, if users aren't looking for the ""bleeding-edge"" version of Salmon, or if their environment causes difficulty in compiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128
https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128:391,Deployability,release,releases,391,"Hi @warrenmcg — Thanks for your interest in Salmon. There are actually a number of improvements since the pre-print as well! I'm very surprised as well that `curl` is not available by default on Ubuntu 14.04 (or some variants of the installation). It's actually a very common tool. One thing worth noting is that we also provide [pre-compiled binaries](https://github.com/COMBINE-lab/salmon/releases/tag/v0.6.0) for Linux and OSX, if users aren't looking for the ""bleeding-edge"" version of Salmon, or if their environment causes difficulty in compiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128
https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186714449:22,Deployability,install,installed,22,"+1 for curl not being installed on some Linux distros I've used in the past. It's always a shock, but usually there's wget to fall back on, so maybe that's an option for your script...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186714449
https://github.com/COMBINE-lab/salmon/issues/43#issuecomment-285603015:147,Availability,error,error,147,"Sorry for not following up.. I'm an HPC sysadmin and the user probably found another way to do it's work. Yes, mixing compilers is probably not an error proof technique. Thanks anyway!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43#issuecomment-285603015
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193921026:112,Deployability,install,installed,112,Indeed — do you know if there's a fork of lzma on GitHub that I can pull from (if there's not a version locally installed on the target)?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193921026
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:170,Availability,error,error,170,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:210,Deployability,install,install,210,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:26,Integrability,depend,dependency,26,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:62,Integrability,depend,dependencies,62,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:132,Integrability,depend,dependency,132,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:176,Integrability,message,message,176,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:222,Integrability,depend,dependency,222,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193942045:96,Deployability,install,install,96,"Exactly, I meant that if the dep is not already satisfied, I'll pull the source and compile and install it locally (not that I would bundle the dependency with salmon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193942045
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193942045:144,Integrability,depend,dependency,144,"Exactly, I meant that if the dep is not already satisfied, I'll pull the source and compile and install it locally (not that I would bundle the dependency with salmon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193942045
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377:171,Availability,error,error,171,"Sure, works for me. Is it possible to add an argument that indicates that the dependencies (like `xz`) should be provided by the host, and any missing dependencies are an error, rather than installing them automatically?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377:190,Deployability,install,installing,190,"Sure, works for me. Is it possible to add an argument that indicates that the dependencies (like `xz`) should be provided by the host, and any missing dependencies are an error, rather than installing them automatically?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377:78,Integrability,depend,dependencies,78,"Sure, works for me. Is it possible to add an argument that indicates that the dependencies (like `xz`) should be provided by the host, and any missing dependencies are an error, rather than installing them automatically?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377:151,Integrability,depend,dependencies,151,"Sure, works for me. Is it possible to add an argument that indicates that the dependencies (like `xz`) should be provided by the host, and any missing dependencies are an error, rather than installing them automatically?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193959265:269,Availability,error,error,269,Salmon also depends on `libz` when compiling `bwa`.; https://gist.github.com/anonymous/a50569adddca1b8605f7#file-02-make-L118-L120. ```; /usr/bin/gcc-4.8 -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS utils.c -o utils.o; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193959265
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193959265:12,Integrability,depend,depends,12,Salmon also depends on `libz` when compiling `bwa`.; https://gist.github.com/anonymous/a50569adddca1b8605f7#file-02-make-L118-L120. ```; /usr/bin/gcc-4.8 -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS utils.c -o utils.o; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193959265
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960137:270,Deployability,install,install,270,"It's ignoring the environment variable `$CPPFLAGS` which has the search path for `zlib.h`. ```; $ env |grep CPPFLAGS; CPPFLAGS=-isystem/home/linuxbrew/.linuxbrew/include; ```. This workaround works, but doesn't work on a system without root access. ``` sh; sudo apt-get install libz-dev; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960137
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960137:30,Modifiability,variab,variable,30,"It's ignoring the environment variable `$CPPFLAGS` which has the search path for `zlib.h`. ```; $ env |grep CPPFLAGS; CPPFLAGS=-isystem/home/linuxbrew/.linuxbrew/include; ```. This workaround works, but doesn't work on a system without root access. ``` sh; sudo apt-get install libz-dev; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960137
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960137:241,Security,access,access,241,"It's ignoring the environment variable `$CPPFLAGS` which has the search path for `zlib.h`. ```; $ env |grep CPPFLAGS; CPPFLAGS=-isystem/home/linuxbrew/.linuxbrew/include; ```. This workaround works, but doesn't work on a system without root access. ``` sh; sudo apt-get install libz-dev; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960137
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960879:101,Usability,simpl,simply,101,"I'll have to check if the ignoring of the `CPPFLAGS` is a problem with bwa's build system, or if I'm simply neglecting to pass the environment along properly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193960879
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-285511495:92,Deployability,release,release,92,"I think this is resolved, right? Since Salmon builds properly in homebrew-science? The next release should solve the external package hashing requirement that they now want to enforce.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-285511495
https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-285511495:134,Security,hash,hashing,134,"I think this is resolved, right? Since Salmon builds properly in homebrew-science? The next release should solve the external package hashing requirement that they now want to enforce.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-285511495
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193897441:18,Availability,error,error,18,To reproduce this error:. ``` sh; docker run linuxbrew/linuxbrew brew install gcc homebrew/science/salmon; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193897441
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193897441:70,Deployability,install,install,70,To reproduce this error:. ``` sh; docker run linuxbrew/linuxbrew brew install gcc homebrew/science/salmon; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193897441
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193922543:133,Deployability,install,installed,133,"Also, this appears to be:; 1. A very old version of Salmon (0.4.2); 2. Using GCC 5.0, to which I have not yet moved (and which isn't installed on any machines where I have access). Is it easy to check if this pops up with 4.8.x or 4.9.x as well?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193922543
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193922543:172,Security,access,access,172,"Also, this appears to be:; 1. A very old version of Salmon (0.4.2); 2. Using GCC 5.0, to which I have not yet moved (and which isn't installed on any machines where I have access). Is it easy to check if this pops up with 4.8.x or 4.9.x as well?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193922543
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193939787:64,Deployability,update,updated,64,> A very old version of Salmon (0.4.2). Right. Sorry. I've just updated Homebrew-science to Salmon 0.6.0. https://github.com/Homebrew/homebrew-science/pull/3407,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193939787
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209:198,Deployability,install,installation,198,Yeah! Salmon compiled! Using Ubuntu Trusty with GCC 4.8.4 and Salmon 0.6.0. No luck with GCC 5.3. My guess as to this issue (undefined reference) is that it's possibly mixing boost headers from one installation of boost that it found in /usr and boost libraries from another installation installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209:275,Deployability,install,installation,275,Yeah! Salmon compiled! Using Ubuntu Trusty with GCC 4.8.4 and Salmon 0.6.0. No luck with GCC 5.3. My guess as to this issue (undefined reference) is that it's possibly mixing boost headers from one installation of boost that it found in /usr and boost libraries from another installation installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209:288,Deployability,install,installed,288,Yeah! Salmon compiled! Using Ubuntu Trusty with GCC 4.8.4 and Salmon 0.6.0. No luck with GCC 5.3. My guess as to this issue (undefined reference) is that it's possibly mixing boost headers from one installation of boost that it found in /usr and boost libraries from another installation installed by Linuxbrew.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193964440:34,Deployability,install,installed,34,"No, I take that back. Boost isn't installed in `/usr/` of this system. There's only one boost install.; Perhaps it's mixing compilers GCC 4.8.4 for some modules and 5.3 for others.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193964440
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193964440:94,Deployability,install,install,94,"No, I take that back. Boost isn't installed in `/usr/` of this system. There's only one boost install.; Perhaps it's mixing compilers GCC 4.8.4 for some modules and 5.3 for others.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193964440
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247394237:177,Testability,log,log,177,I seem to be having this same problem attempting to compile salmon 0.7.2 using GCC 5.3 (linuxbrew) on our server cluster. Works fine on my Mac though. Any ideas? I can post the log.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247394237
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247475711:28,Testability,log,logs,28,May as well post `brew gist-logs salmon` for the record.; I'll build a precompiled binary bottle for salmon 0.7.2.; https://github.com/Linuxbrew/homebrew-science/pull/282,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247475711
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247490845:46,Deployability,update,update,46,"Bottled. Try again now, Michael. ``` sh; brew update; brew install salmon; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247490845
https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247490845:59,Deployability,install,install,59,"Bottled. Try again now, Michael. ``` sh; brew update; brew install salmon; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-247490845
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-194338604:39,Deployability,update,updated,39,"Hi @s6juncheng,. Ahh, yes, we've since updated the data format so that output sizes stay small even when the number of bootstraps grows large. Thanks for pointing out the inconsistency with respect to the blog; I'll update that. I'll put together a script to convert the bootstrap values to a text format so that you can view them. Regarding strand specific information: Yes, if you have considerably antisense transcription, then the strand information can be quite helpful. It can make a significant difference in terms of quantification results. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-194338604
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-194338604:216,Deployability,update,update,216,"Hi @s6juncheng,. Ahh, yes, we've since updated the data format so that output sizes stay small even when the number of bootstraps grows large. Thanks for pointing out the inconsistency with respect to the blog; I'll update that. I'll put together a script to convert the bootstrap values to a text format so that you can view them. Regarding strand specific information: Yes, if you have considerably antisense transcription, then the strand information can be quite helpful. It can make a significant difference in terms of quantification results. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-194338604
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-194490282:10,Deployability,update,updated,10,"I've also updated the blog post to refer to the new format. I'm going to close this issue for now, but please feel free to comment on it or re-open if you run into any more trouble.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-194490282
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336746989:125,Availability,error,error,125,"Hello @rob-p . I tried running your script for converting binary bootstrap samples into a text format. I gave back following error:. Traceback (most recent call last):; File ""./ConvertBootstrapsToTSV.py"", line 98, in <module>; main(args); File ""./ConvertBootstrapsToTSV.py"", line 45, in main; txpNames = nf.read().strip().split('\t'); TypeError: a bytes-like object is required, not 'str'. I processed the samples with salmon version 0.8.2. Do you have any suggestion how I can fix this error? . Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336746989
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336746989:487,Availability,error,error,487,"Hello @rob-p . I tried running your script for converting binary bootstrap samples into a text format. I gave back following error:. Traceback (most recent call last):; File ""./ConvertBootstrapsToTSV.py"", line 98, in <module>; main(args); File ""./ConvertBootstrapsToTSV.py"", line 45, in main; txpNames = nf.read().strip().split('\t'); TypeError: a bytes-like object is required, not 'str'. I processed the samples with salmon version 0.8.2. Do you have any suggestion how I can fix this error? . Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336746989
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461:225,Availability,error,error,225,"Hi @tmmse,. I have a feeling this is a python 2 vs. python 3 issue. I just ran your data through the script without problem on my end, but my default python install is still 2.7. When using a Python 3 install, I get the same error you're seeing. I updated the script so that it should now be python3 compatible. You can find that version [here](https://github.com/COMBINE-lab/salmon/blob/develop/scripts/ConvertBootstrapsToTSV.py). Please let me know if it works for you. These changes should be in the next release as well (which should land soon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461:157,Deployability,install,install,157,"Hi @tmmse,. I have a feeling this is a python 2 vs. python 3 issue. I just ran your data through the script without problem on my end, but my default python install is still 2.7. When using a Python 3 install, I get the same error you're seeing. I updated the script so that it should now be python3 compatible. You can find that version [here](https://github.com/COMBINE-lab/salmon/blob/develop/scripts/ConvertBootstrapsToTSV.py). Please let me know if it works for you. These changes should be in the next release as well (which should land soon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461:201,Deployability,install,install,201,"Hi @tmmse,. I have a feeling this is a python 2 vs. python 3 issue. I just ran your data through the script without problem on my end, but my default python install is still 2.7. When using a Python 3 install, I get the same error you're seeing. I updated the script so that it should now be python3 compatible. You can find that version [here](https://github.com/COMBINE-lab/salmon/blob/develop/scripts/ConvertBootstrapsToTSV.py). Please let me know if it works for you. These changes should be in the next release as well (which should land soon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461:248,Deployability,update,updated,248,"Hi @tmmse,. I have a feeling this is a python 2 vs. python 3 issue. I just ran your data through the script without problem on my end, but my default python install is still 2.7. When using a Python 3 install, I get the same error you're seeing. I updated the script so that it should now be python3 compatible. You can find that version [here](https://github.com/COMBINE-lab/salmon/blob/develop/scripts/ConvertBootstrapsToTSV.py). Please let me know if it works for you. These changes should be in the next release as well (which should land soon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461:508,Deployability,release,release,508,"Hi @tmmse,. I have a feeling this is a python 2 vs. python 3 issue. I just ran your data through the script without problem on my end, but my default python install is still 2.7. When using a Python 3 install, I get the same error you're seeing. I updated the script so that it should now be python3 compatible. You can find that version [here](https://github.com/COMBINE-lab/salmon/blob/develop/scripts/ConvertBootstrapsToTSV.py). Please let me know if it works for you. These changes should be in the next release as well (which should land soon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336993026:82,Availability,error,error,82,"Hello @rob-p . I was using python 3. . Your new script works without producing an error. When I run it, I get a text where the first row are the transcripts and the otherline are bootstrapvalues. Thank you very much for the help!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336993026
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-1792970641:301,Deployability,release,release,301,"Hi @Ray6283,. The `bootstraps.gz` file is not designed to be read as plain text. The file encodes information in binary. If you are interested in extract the information encoded in those files, the easiest thing to do is likely to read them in using the [`fishpond`](https://bioconductor.org/packages/release/bioc/html/fishpond.html) package. Looking at the code there will also show you exactly how those files are packed. The same is true for the bias files. The format for those is documented [here](https://salmon.readthedocs.io/en/latest/file_formats.html#sequence-specific-bias-files) and [here](https://salmon.readthedocs.io/en/latest/file_formats.html#fragment-gc-bias-files), those these are binary encoded files and not designed for human consumption. For the bias files, even if you did read them in, the information is not trivially interpretable (e.g. the parameters of the variable length Markov model, etc.). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-1792970641
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-1792970641:749,Energy Efficiency,consumption,consumption,749,"Hi @Ray6283,. The `bootstraps.gz` file is not designed to be read as plain text. The file encodes information in binary. If you are interested in extract the information encoded in those files, the easiest thing to do is likely to read them in using the [`fishpond`](https://bioconductor.org/packages/release/bioc/html/fishpond.html) package. Looking at the code there will also show you exactly how those files are packed. The same is true for the bias files. The format for those is documented [here](https://salmon.readthedocs.io/en/latest/file_formats.html#sequence-specific-bias-files) and [here](https://salmon.readthedocs.io/en/latest/file_formats.html#fragment-gc-bias-files), those these are binary encoded files and not designed for human consumption. For the bias files, even if you did read them in, the information is not trivially interpretable (e.g. the parameters of the variable length Markov model, etc.). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-1792970641
https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-1792970641:887,Modifiability,variab,variable,887,"Hi @Ray6283,. The `bootstraps.gz` file is not designed to be read as plain text. The file encodes information in binary. If you are interested in extract the information encoded in those files, the easiest thing to do is likely to read them in using the [`fishpond`](https://bioconductor.org/packages/release/bioc/html/fishpond.html) package. Looking at the code there will also show you exactly how those files are packed. The same is true for the bias files. The format for those is documented [here](https://salmon.readthedocs.io/en/latest/file_formats.html#sequence-specific-bias-files) and [here](https://salmon.readthedocs.io/en/latest/file_formats.html#fragment-gc-bias-files), those these are binary encoded files and not designed for human consumption. For the bias files, even if you did read them in, the information is not trivially interpretable (e.g. the parameters of the variable length Markov model, etc.). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-1792970641
https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149:49,Availability,error,error,49,"Hi @warrenmcg,. Thanks for this bug report. This error is caused by the `--useVBOpt` argument. The telltale sign that this is the cause is that the exception contains the text `Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.` The digamma function is used only in the `useVBOpt` codepath. . I can say that this behavior is never expected (i.e. it's not the case that due to the stochastic nature of the algorithm we sometimes expect to evaluate the digamma function on an argument of `-nan`). Actually, even if one could set a randomization seed, he could not make salmon purely deterministic unless it was restricted to a single thread. This is because the order in which reads are observed during the online phase of the algorithm can change, as a result of the multithreaded read parser (which is _ok_ since the absolute order of the reads in the file is, itself, random). What I suspect is that there is some corner case here where the argument to the `digamma` function should be checked for validity before the `digamma` function is called. The key, of course, is to find a small example that will reproduce this behavior so that the bug can be tracked down and fixed. In the meantime, my recommendation would be to remove the `--useVBOpt` option to Salmon. In this case, it will use the standard (rather than variational Bayesian) EM algorithm, which should yield similarly accurate results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149
https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149:190,Availability,Error,Error,190,"Hi @warrenmcg,. Thanks for this bug report. This error is caused by the `--useVBOpt` argument. The telltale sign that this is the cause is that the exception contains the text `Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.` The digamma function is used only in the `useVBOpt` codepath. . I can say that this behavior is never expected (i.e. it's not the case that due to the stochastic nature of the algorithm we sometimes expect to evaluate the digamma function on an argument of `-nan`). Actually, even if one could set a randomization seed, he could not make salmon purely deterministic unless it was restricted to a single thread. This is because the order in which reads are observed during the online phase of the algorithm can change, as a result of the multithreaded read parser (which is _ok_ since the absolute order of the reads in the file is, itself, random). What I suspect is that there is some corner case here where the argument to the `digamma` function should be checked for validity before the `digamma` function is called. The key, of course, is to find a small example that will reproduce this behavior so that the bug can be tracked down and fixed. In the meantime, my recommendation would be to remove the `--useVBOpt` option to Salmon. In this case, it will use the standard (rather than variational Bayesian) EM algorithm, which should yield similarly accurate results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149
https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149:1264,Availability,down,down,1264,"Hi @warrenmcg,. Thanks for this bug report. This error is caused by the `--useVBOpt` argument. The telltale sign that this is the cause is that the exception contains the text `Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.` The digamma function is used only in the `useVBOpt` codepath. . I can say that this behavior is never expected (i.e. it's not the case that due to the stochastic nature of the algorithm we sometimes expect to evaluate the digamma function on an argument of `-nan`). Actually, even if one could set a randomization seed, he could not make salmon purely deterministic unless it was restricted to a single thread. This is because the order in which reads are observed during the online phase of the algorithm can change, as a result of the multithreaded read parser (which is _ok_ since the absolute order of the reads in the file is, itself, random). What I suspect is that there is some corner case here where the argument to the `digamma` function should be checked for validity before the `digamma` function is called. The key, of course, is to find a small example that will reproduce this behavior so that the bug can be tracked down and fixed. In the meantime, my recommendation would be to remove the `--useVBOpt` option to Salmon. In this case, it will use the standard (rather than variational Bayesian) EM algorithm, which should yield similarly accurate results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149
https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-303617709:129,Deployability,release,release,129,"There is now more stringent checking of the input to the digamma function, and so these issues should be resolved in the current release. Please report back (and re-open this) if you still encounter this issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-303617709
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197862096:290,Integrability,Depend,Depending,290,"It appears that you're trying to index the entire mm9 genome using salmon. Both salmon and rapmap are designed to work with a smaller sequence space such as what you would find in a transcriptome. Your log file shows that salmon processes 615,000,000 bases from the genome and then aborts. Depending on how many transcripts are in your feature file, a human transcriptome [might be 5-10X smaller](http://seqanswers.com/forums/showthread.php?t=5298).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197862096
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197862096:282,Safety,abort,aborts,282,"It appears that you're trying to index the entire mm9 genome using salmon. Both salmon and rapmap are designed to work with a smaller sequence space such as what you would find in a transcriptome. Your log file shows that salmon processes 615,000,000 bases from the genome and then aborts. Depending on how many transcripts are in your feature file, a human transcriptome [might be 5-10X smaller](http://seqanswers.com/forums/showthread.php?t=5298).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197862096
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197862096:202,Testability,log,log,202,"It appears that you're trying to index the entire mm9 genome using salmon. Both salmon and rapmap are designed to work with a smaller sequence space such as what you would find in a transcriptome. Your log file shows that salmon processes 615,000,000 bases from the genome and then aborts. Depending on how many transcripts are in your feature file, a human transcriptome [might be 5-10X smaller](http://seqanswers.com/forums/showthread.php?t=5298).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197862096
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197873003:117,Energy Efficiency,allocate,allocate,117,"Hi @vd4mmind,. Indeed, @mdshw5 is spot on. The issue you're seeing is a result of the hash table doubling failing to allocate sufficient memory when attempting to build a hash table for all 31-mers in the mouse genome. In addition to the memory requirements of building a quasi-index on the genome (which we're actually working to mitigate b/c we think it could be useful in another context), this won't be particularly useful for quantification. Salmon treats each entry in the multifasta file as a distinct transcriptional target. Thus, here, even if the index did build successfully, you'd be quantifying the abundance of different chromosomes & contigs, rather than the transcripts. What you should do (as pointed out by @mdshw5 above), is to grab a file that contains the mouse transcripts (or take your mm9 genome and an appropriate gtf file and use a tool like `gffread` to extract the transcript sequences).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197873003
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197873003:86,Security,hash,hash,86,"Hi @vd4mmind,. Indeed, @mdshw5 is spot on. The issue you're seeing is a result of the hash table doubling failing to allocate sufficient memory when attempting to build a hash table for all 31-mers in the mouse genome. In addition to the memory requirements of building a quasi-index on the genome (which we're actually working to mitigate b/c we think it could be useful in another context), this won't be particularly useful for quantification. Salmon treats each entry in the multifasta file as a distinct transcriptional target. Thus, here, even if the index did build successfully, you'd be quantifying the abundance of different chromosomes & contigs, rather than the transcripts. What you should do (as pointed out by @mdshw5 above), is to grab a file that contains the mouse transcripts (or take your mm9 genome and an appropriate gtf file and use a tool like `gffread` to extract the transcript sequences).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197873003
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197873003:171,Security,hash,hash,171,"Hi @vd4mmind,. Indeed, @mdshw5 is spot on. The issue you're seeing is a result of the hash table doubling failing to allocate sufficient memory when attempting to build a hash table for all 31-mers in the mouse genome. In addition to the memory requirements of building a quasi-index on the genome (which we're actually working to mitigate b/c we think it could be useful in another context), this won't be particularly useful for quantification. Salmon treats each entry in the multifasta file as a distinct transcriptional target. Thus, here, even if the index did build successfully, you'd be quantifying the abundance of different chromosomes & contigs, rather than the transcripts. What you should do (as pointed out by @mdshw5 above), is to grab a file that contains the mouse transcripts (or take your mm9 genome and an appropriate gtf file and use a tool like `gffread` to extract the transcript sequences).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197873003
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197899378:139,Availability,down,download,139,"I have a question , if you guys would like to answer. Where can I get the transcripts.gtf file for mm9. Is there any link from where I can download or do I have to create on my own. I am a bit confused and different forums are adding up to my confusion if you would like to suggest.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197899378
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197975002:54,Availability,Down,Downloaded,54,Done the required work. Sorry for bothering everyone. Downloaded the refGene.gtf file from UCSC for mm9 having transcript information and then used `gffread` to build the transcript.fa for the mm9. Finally ran salmon indexes and to my surprise it finished in matter of few minutes < 3'. Thanks for all the suggestions. This is something which I always like getting to learn something new every day. Closing the issue.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197975002
https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197975002:368,Usability,learn,learn,368,Done the required work. Sorry for bothering everyone. Downloaded the refGene.gtf file from UCSC for mm9 having transcript information and then used `gffread` to build the transcript.fa for the mm9. Finally ran salmon indexes and to my surprise it finished in matter of few minutes < 3'. Thanks for all the suggestions. This is something which I always like getting to learn something new every day. Closing the issue.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197975002
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-197891864:127,Usability,simpl,simply,127,"Hi Warren,. I apologize for the short response --- I'm on my way to a meeting. I'm assuming that what was happening before was simply that the problem was diagnosed during VBEM as soon as it pops up, whereas, the NaNs are allowed to propagate during the standard EM. If I had to guess (and this is just a guess), I would blame edge effects in the FSPD for the appearance of `NaN`s (not sure why this goes away without bias correction though!). Also, were I to disable a feature, that (`--useFSPD`) would be the one I would choose to disable since it usually has a negligible effect. That being said, I would be **very** grateful if you were able to produce a dataset that exhibits this issue, as I'd like to fix this ASAP. My guess is that it's a rather small issue, but the problem is that NANs propagate quickly and without mercy!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-197891864
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-197981581:39,Availability,avail,available,39,"Feel free to PM me. If it's a publicly available dataset (and standard transcript set), then I can also try and reproduce the issue from there.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-197981581
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-201299200:187,Deployability,release,release,187,"Hi @warrenmcg,. I just wanted to let you know that I'm investigating this now. It looks like this may be fixed on the latest commits to the master branch, which should become an official release soon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-201299200
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-201894954:100,Deployability,update,updated,100,"Hey @rob-p,. Thanks for your efforts in handling these issues! I'll try the analysis again with the updated commits, and I'll let you know if I have further issues.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-201894954
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-202127752:73,Integrability,protocol,protocol,73,"I do have an explanation. The data was generated using an rRNA-depletion protocol. From what I've seen elsewhere, it turns out that the mapping rate is expected to be 30-40% because many of the reads are intronic, or otherwise map outside the known transcriptome, since you have all non-rRNA (PolyA+ and PolyA-). Hope that helps! Happy Easter!. > On Mar 27, 2016, at 09:31, Rob Patro notifications@github.com wrote:; > ; > Great; one thing I did notice is that the mapping rates for this data seemed surprisingly low. I don't think that's related to the NaNs you were seeing, but it did catch my attention, since we don't normally see mapping rates like that. Is there a hypothesis why this may be the case (e.g. it's not just Salmon's quasi-mapping, the mapping rate remains the same (or even becomes lower) when I use an aligner)?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-202127752
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241465777:304,Deployability,release,release,304,"This is related to the way `--useFSPD` was implemented (see #64). This flag has been deprecated, and a replacement (`--posBias`) has been introduced as of 0.7.0. This should not exhibit the same behavior. The `--posBias` flag is currently experimental, but will move out of that status in the next major release after it has been in the wild for a bit. Please let me know if the [latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.7.1) resolves this issue for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241465777
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241465777:387,Deployability,release,release,387,"This is related to the way `--useFSPD` was implemented (see #64). This flag has been deprecated, and a replacement (`--posBias`) has been introduced as of 0.7.0. This should not exhibit the same behavior. The `--posBias` flag is currently experimental, but will move out of that status in the next major release after it has been in the wild for a bit. Please let me know if the [latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.7.1) resolves this issue for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241465777
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241465777:434,Deployability,release,releases,434,"This is related to the way `--useFSPD` was implemented (see #64). This flag has been deprecated, and a replacement (`--posBias`) has been introduced as of 0.7.0. This should not exhibit the same behavior. The `--posBias` flag is currently experimental, but will move out of that status in the next major release after it has been in the wild for a bit. Please let me know if the [latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.7.1) resolves this issue for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241465777
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241538721:195,Deployability,release,release,195,"Thanks Rob! I won't be able to get to it until later this week at the earliest because of helping to finish a manuscript, but I'll let you know as soon as I get to it! Looking forward to the new release!. Best,; Warren",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-241538721
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-303617599:37,Availability,error,errors,37,"Internal testing suggests that these errors are gone, but feel free to report back here (and reopen this) if you still encounter it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-303617599
https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-303617599:9,Testability,test,testing,9,"Internal testing suggests that these errors are gone, but feel free to report back here (and reopen this) if you still encounter it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-303617599
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201157274:201,Availability,ERROR,ERROR,201,Building my own TBB hasn't helped. I installed it and set its path on the command line using -DTBB_INSTALL_DIR=/usr/local/packages/intel-tbb.4.4.3.181 and still CMAKE returns this in its output:. ```; ERROR: Intel TBB NOT found!; -- Looked for Threading Building Blocks in /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016; Build system will fetch and build Intel Threading Building Blocks; ```. I've tried numerous subdirectories as well but can't seem to find what it's looking for to determine the TPP directory. Setting TBB_INSTALL_DIR also changed nothing. Currently stuck on my salmon build.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201157274
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201157274:37,Deployability,install,installed,37,Building my own TBB hasn't helped. I installed it and set its path on the command line using -DTBB_INSTALL_DIR=/usr/local/packages/intel-tbb.4.4.3.181 and still CMAKE returns this in its output:. ```; ERROR: Intel TBB NOT found!; -- Looked for Threading Building Blocks in /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016; Build system will fetch and build Intel Threading Building Blocks; ```. I've tried numerous subdirectories as well but can't seem to find what it's looking for to determine the TPP directory. Setting TBB_INSTALL_DIR also changed nothing. Currently stuck on my salmon build.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201157274
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201253665:15,Availability,error,error,15,"Hrmm the first error looks like some missing symbols; strange, since it seems to be looking in the right place. Can you tell me what system / compiler etc. are being used?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201253665
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732:639,Availability,down,download,639,"Hi @jorvis,. @sjackman ran into a [similar (but different) issue](https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209), and the root cause seems to be GCC5.3. My best guess is that there is some symbol munging that is incompatible between things compiled with GCC 4.x and GCC 5.x. The newest version of GCC seems to break quite a bit of software. I haven't installed it and tried to build with it yet, but I'll add it to my list of things to investigate. For the time being, would it be possible to build with GCC 4.X (where X > = 8.2), or to use the [pre-compiled binary](https://github.com/COMBINE-lab/salmon/releases/download/v0.6.0/SalmonBeta-0.6.0_DebianSqueeze.tar.gz)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732:376,Deployability,install,installed,376,"Hi @jorvis,. @sjackman ran into a [similar (but different) issue](https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209), and the root cause seems to be GCC5.3. My best guess is that there is some symbol munging that is incompatible between things compiled with GCC 4.x and GCC 5.x. The newest version of GCC seems to break quite a bit of software. I haven't installed it and tried to build with it yet, but I'll add it to my list of things to investigate. For the time being, would it be possible to build with GCC 4.X (where X > = 8.2), or to use the [pre-compiled binary](https://github.com/COMBINE-lab/salmon/releases/download/v0.6.0/SalmonBeta-0.6.0_DebianSqueeze.tar.gz)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732:630,Deployability,release,releases,630,"Hi @jorvis,. @sjackman ran into a [similar (but different) issue](https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209), and the root cause seems to be GCC5.3. My best guess is that there is some symbol munging that is incompatible between things compiled with GCC 4.x and GCC 5.x. The newest version of GCC seems to break quite a bit of software. I haven't installed it and tried to build with it yet, but I'll add it to my list of things to investigate. For the time being, would it be possible to build with GCC 4.X (where X > = 8.2), or to use the [pre-compiled binary](https://github.com/COMBINE-lab/salmon/releases/download/v0.6.0/SalmonBeta-0.6.0_DebianSqueeze.tar.gz)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991:32,Availability,error,errored,32,I just tried with gcc 4.9.0 and errored out at the the same point (attached). I'll try using the pre-compiled ones. . [compile.error.txt](https://github.com/COMBINE-lab/salmon/files/189653/compile.error.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991:127,Availability,error,error,127,I just tried with gcc 4.9.0 and errored out at the the same point (attached). I'll try using the pre-compiled ones. . [compile.error.txt](https://github.com/COMBINE-lab/salmon/files/189653/compile.error.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991:197,Availability,error,error,197,I just tried with gcc 4.9.0 and errored out at the the same point (attached). I'll try using the pre-compiled ones. . [compile.error.txt](https://github.com/COMBINE-lab/salmon/files/189653/compile.error.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198:214,Availability,error,error,214,"Thanks for testing that out. In this case, I'll try an dig more deeply into why you're having issues compiling from source. In the mean time, I hope the pre-compiled binary will work for you. edit: I wonder if the error might be related to the fact that the build system things TBB was compiled with GCC 4.4? From the log:. > /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016.2.181/linux/tbb/lib/intel64_lin/**gcc4.4**/libtbb.so.2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198:11,Testability,test,testing,11,"Thanks for testing that out. In this case, I'll try an dig more deeply into why you're having issues compiling from source. In the mean time, I hope the pre-compiled binary will work for you. edit: I wonder if the error might be related to the fact that the build system things TBB was compiled with GCC 4.4? From the log:. > /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016.2.181/linux/tbb/lib/intel64_lin/**gcc4.4**/libtbb.so.2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198:318,Testability,log,log,318,"Thanks for testing that out. In this case, I'll try an dig more deeply into why you're having issues compiling from source. In the mean time, I hope the pre-compiled binary will work for you. edit: I wonder if the error might be related to the fact that the build system things TBB was compiled with GCC 4.4? From the log:. > /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016.2.181/linux/tbb/lib/intel64_lin/**gcc4.4**/libtbb.so.2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198
https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-285510844:54,Security,access,access,54,"Since I can't reproduce this in an environment I have access to, I'm going to close this for now. However, if it's still an issue that needs to be resolved, please feel free to comment and I'll re-open.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-285510844
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-202593692:57,Safety,predict,prediction,57,"Hi @schelhorn,. Yes; we are _actively_ looking at fusion prediction based on quasi-mapping. The initial results are promising, but we're still working on improving and refining the method. I'll be sure to let you know when we have something that is ready to test :). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-202593692
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-202593692:258,Testability,test,test,258,"Hi @schelhorn,. Yes; we are _actively_ looking at fusion prediction based on quasi-mapping. The initial results are promising, but we're still working on improving and refining the method. I'll be sure to let you know when we have something that is ready to test :). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-202593692
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-202711490:312,Security,validat,validation,312,"Excellent. May I point out that tools such as Oncofuse https://github.com/mikessh/oncofuse/ and Pegasus https://github.com/RabadanLab/Pegasus have a particular, additional value since they provide functional annotation of fusion events identified by other approaches? Also, these resources may prove helpful wrt validation data: https://github.com/chapmanb/bcbio-nextgen/issues/210 and http://m.genome.cshlp.org/content/early/2015/11/10/gr.186114.114 Adding @roryk here for highlighting this feature request in bcbio.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-202711490
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255103667:74,Safety,detect,detection,74,"Hello @rob-p, may I ask whether there are any news concerning gene fusion detection in Salmon?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255103667
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255116221:37,Deployability,pipeline,pipeline,37,"Hi @schelhorn,. Yes, we have built a pipeline atop salmon and quasi-mapping. At this point, what we see is that it is very fast with high sensitivity. Our main focus has been on improving the specificity, which is current better than some, but not all methods. I realize, of course, that false-positives are a very difficult (and _key_) problem in this domain, so I'd really like to make sure they are well-handled.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255116221
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178:39,Deployability,pipeline,pipeline,39,"Great; would you like help testing the pipeline, and integrating it into bcbio? We could help with both :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178:53,Deployability,integrat,integrating,53,"Great; would you like help testing the pipeline, and integrating it into bcbio? We could help with both :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178:53,Integrability,integrat,integrating,53,"Great; would you like help testing the pipeline, and integrating it into bcbio? We could help with both :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178:27,Testability,test,testing,27,"Great; would you like help testing the pipeline, and integrating it into bcbio? We could help with both :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-255123178
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256045452:377,Deployability,pipeline,pipeline,377,"Hi @schelhorn,. Sorry for the uncharacteristically slow response on this. We're going full steam ahead for the RECOMB deadline, so I've been less responsive than usual. Anyway, I've invited you to the repository for the fusion project (it's currently private). Feel free to poke around, but it's probably not useful until we can send you a short writeup describing the current pipeline (since things are still very ""alpha""). Regarding calling fusions from the sam output of Salmon, one can't do this directly because there are, by default, no encompassing reads (i.e. individual reads split between transcripts) and, to improve abundance estimation, salmon is conservative with it's use of spanning reads. However, we can get at this information from quasi-mapping, so I can definitely consider adding some flags to provide this info (this is the type of thing we output in the fusion pipeline currently, and then we have to postprocess it).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256045452
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256045452:885,Deployability,pipeline,pipeline,885,"Hi @schelhorn,. Sorry for the uncharacteristically slow response on this. We're going full steam ahead for the RECOMB deadline, so I've been less responsive than usual. Anyway, I've invited you to the repository for the fusion project (it's currently private). Feel free to poke around, but it's probably not useful until we can send you a short writeup describing the current pipeline (since things are still very ""alpha""). Regarding calling fusions from the sam output of Salmon, one can't do this directly because there are, by default, no encompassing reads (i.e. individual reads split between transcripts) and, to improve abundance estimation, salmon is conservative with it's use of spanning reads. However, we can get at this information from quasi-mapping, so I can definitely consider adding some flags to provide this info (this is the type of thing we output in the fusion pipeline currently, and then we have to postprocess it).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256045452
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256045452:146,Usability,responsiv,responsive,146,"Hi @schelhorn,. Sorry for the uncharacteristically slow response on this. We're going full steam ahead for the RECOMB deadline, so I've been less responsive than usual. Anyway, I've invited you to the repository for the fusion project (it's currently private). Feel free to poke around, but it's probably not useful until we can send you a short writeup describing the current pipeline (since things are still very ""alpha""). Regarding calling fusions from the sam output of Salmon, one can't do this directly because there are, by default, no encompassing reads (i.e. individual reads split between transcripts) and, to improve abundance estimation, salmon is conservative with it's use of spanning reads. However, we can get at this information from quasi-mapping, so I can definitely consider adding some flags to provide this info (this is the type of thing we output in the fusion pipeline currently, and then we have to postprocess it).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256045452
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256936372:131,Deployability,pipeline,pipeline,131,"Hi @schelhorn,. Sure, I'll had her now. We'll send you a small write-up about the state of the codebase and how to run the current pipeline next week (once my student is back from the current CSHL meeting with all of the cool kids ;P).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-256936372
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280756041:15,Deployability,update,updates,15,And any status updates? I'd be interested to test drive a quasi-mapping-based fusion caller!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280756041
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280756041:45,Testability,test,test,45,And any status updates? I'd be interested to test drive a quasi-mapping-based fusion caller!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280756041
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280827732:169,Deployability,integrat,integrated,169,"One fast way using pseudo-alignments should be Kallisto+[Manta|Pizzly], but I haven't tried that myself. We decided to go with full transcriptome alignments instead and integrated EricScript into bcbio. We'd still be interested in something more modern, though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280827732
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280827732:169,Integrability,integrat,integrated,169,"One fast way using pseudo-alignments should be Kallisto+[Manta|Pizzly], but I haven't tried that myself. We decided to go with full transcriptome alignments instead and integrated EricScript into bcbio. We'd still be interested in something more modern, though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280827732
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290:13,Availability,down,downstream,13,"If one has a downstream fusion pipeline that uses transcriptome mapping, you can already get those from the -z=<output.sam> option for a while. The real challenge is how to properly control the false positive rate. That's the main thing special purpose downstream software must solve.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290:253,Availability,down,downstream,253,"If one has a downstream fusion pipeline that uses transcriptome mapping, you can already get those from the -z=<output.sam> option for a while. The real challenge is how to properly control the false positive rate. That's the main thing special purpose downstream software must solve.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290:31,Deployability,pipeline,pipeline,31,"If one has a downstream fusion pipeline that uses transcriptome mapping, you can already get those from the -z=<output.sam> option for a while. The real challenge is how to properly control the false positive rate. That's the main thing special purpose downstream software must solve.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-517011119:59,Deployability,pipeline,pipeline,59,"Hi @rob-p,; We are working towards creating fusion calling pipeline based on Salmon/Pizzly. It would be helpful to see the current state of the repository and try to replicate some of the experiments we have done with it. We seem to be hitting good specificity but lagging a bit short on sensitivity.; Thanks,; Prateek",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-517011119
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-1017768886:53,Deployability,update,updates,53,Hello @rob-p! I was wondering if there have been any updates on the fusion/detection of spanning reads problem. I'm about to embark on a project to process many bacterial transcriptomes from many different genomes/species and plan to use salmon. I would love to be able to detect polycistronic transcripts through the identification of spanning reads.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-1017768886
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-1017768886:75,Safety,detect,detection,75,Hello @rob-p! I was wondering if there have been any updates on the fusion/detection of spanning reads problem. I'm about to embark on a project to process many bacterial transcriptomes from many different genomes/species and plan to use salmon. I would love to be able to detect polycistronic transcripts through the identification of spanning reads.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-1017768886
https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-1017768886:273,Safety,detect,detect,273,Hello @rob-p! I was wondering if there have been any updates on the fusion/detection of spanning reads problem. I'm about to embark on a project to process many bacterial transcriptomes from many different genomes/species and plan to use salmon. I would love to be able to detect polycistronic transcripts through the identification of spanning reads.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-1017768886
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429:81,Availability,error,error,81,"The problem you're encountering here seems to be a result of a memory allocation error. Basically, building the index requires considerably more memory than actually storing it (and using it for quantification). One option would be to try and build the index with smaller k-mers, which should require less memory. It looks like you successfully indexed 3.8 / 4.1 billion nucleotides, so you're reasonably close to done. The other option will only work with the newest commits of Salmon (i.e. you'd have to clone the repository and build) --- however, they allow building a perfect hash index rather than using the google dense hash we use by default. The perfect hash construction uses an external memory algorithm, and it takes considerably less memory to build the index. A pre-compiled binary exposing this option should also be available later this week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429:832,Availability,avail,available,832,"The problem you're encountering here seems to be a result of a memory allocation error. Basically, building the index requires considerably more memory than actually storing it (and using it for quantification). One option would be to try and build the index with smaller k-mers, which should require less memory. It looks like you successfully indexed 3.8 / 4.1 billion nucleotides, so you're reasonably close to done. The other option will only work with the newest commits of Salmon (i.e. you'd have to clone the repository and build) --- however, they allow building a perfect hash index rather than using the google dense hash we use by default. The perfect hash construction uses an external memory algorithm, and it takes considerably less memory to build the index. A pre-compiled binary exposing this option should also be available later this week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429:581,Security,hash,hash,581,"The problem you're encountering here seems to be a result of a memory allocation error. Basically, building the index requires considerably more memory than actually storing it (and using it for quantification). One option would be to try and build the index with smaller k-mers, which should require less memory. It looks like you successfully indexed 3.8 / 4.1 billion nucleotides, so you're reasonably close to done. The other option will only work with the newest commits of Salmon (i.e. you'd have to clone the repository and build) --- however, they allow building a perfect hash index rather than using the google dense hash we use by default. The perfect hash construction uses an external memory algorithm, and it takes considerably less memory to build the index. A pre-compiled binary exposing this option should also be available later this week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429:627,Security,hash,hash,627,"The problem you're encountering here seems to be a result of a memory allocation error. Basically, building the index requires considerably more memory than actually storing it (and using it for quantification). One option would be to try and build the index with smaller k-mers, which should require less memory. It looks like you successfully indexed 3.8 / 4.1 billion nucleotides, so you're reasonably close to done. The other option will only work with the newest commits of Salmon (i.e. you'd have to clone the repository and build) --- however, they allow building a perfect hash index rather than using the google dense hash we use by default. The perfect hash construction uses an external memory algorithm, and it takes considerably less memory to build the index. A pre-compiled binary exposing this option should also be available later this week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429:663,Security,hash,hash,663,"The problem you're encountering here seems to be a result of a memory allocation error. Basically, building the index requires considerably more memory than actually storing it (and using it for quantification). One option would be to try and build the index with smaller k-mers, which should require less memory. It looks like you successfully indexed 3.8 / 4.1 billion nucleotides, so you're reasonably close to done. The other option will only work with the newest commits of Salmon (i.e. you'd have to clone the repository and build) --- however, they allow building a perfect hash index rather than using the google dense hash we use by default. The perfect hash construction uses an external memory algorithm, and it takes considerably less memory to build the index. A pre-compiled binary exposing this option should also be available later this week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:82,Availability,down,downloaded,82,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:672,Availability,Error,Error,672,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:819,Deployability,update,updated,819,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:700,Integrability,message,message,700,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:408,Safety,Detect,Detecting,408,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:442,Safety,Detect,Detecting,442,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:590,Safety,Detect,Detecting,590,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:626,Safety,Detect,Detecting,626,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:43,Security,access,access,43,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051:445,Deployability,release,release,445,"Hi Nick,. If that doesn't work, you can use [this](https://github.com/COMBINE-lab/salmon/files/197982/SalmonBeta-0.6.5-pre_CentOS5.tar.gz) salmon executable to try the perfect hash indexing. If you pass the `--perfectHash` flag when indexing, it will use the minimum perfect hash rather than Google's dense hash. Also, please use this executable anyway when _quantifying_ your reads, as it fixes a potential bug with 64-bit indices in the older release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051:176,Security,hash,hash,176,"Hi Nick,. If that doesn't work, you can use [this](https://github.com/COMBINE-lab/salmon/files/197982/SalmonBeta-0.6.5-pre_CentOS5.tar.gz) salmon executable to try the perfect hash indexing. If you pass the `--perfectHash` flag when indexing, it will use the minimum perfect hash rather than Google's dense hash. Also, please use this executable anyway when _quantifying_ your reads, as it fixes a potential bug with 64-bit indices in the older release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051:275,Security,hash,hash,275,"Hi Nick,. If that doesn't work, you can use [this](https://github.com/COMBINE-lab/salmon/files/197982/SalmonBeta-0.6.5-pre_CentOS5.tar.gz) salmon executable to try the perfect hash indexing. If you pass the `--perfectHash` flag when indexing, it will use the minimum perfect hash rather than Google's dense hash. Also, please use this executable anyway when _quantifying_ your reads, as it fixes a potential bug with 64-bit indices in the older release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051:307,Security,hash,hash,307,"Hi Nick,. If that doesn't work, you can use [this](https://github.com/COMBINE-lab/salmon/files/197982/SalmonBeta-0.6.5-pre_CentOS5.tar.gz) salmon executable to try the perfect hash indexing. If you pass the `--perfectHash` flag when indexing, it will use the minimum perfect hash rather than Google's dense hash. Also, please use this executable anyway when _quantifying_ your reads, as it fixes a potential bug with 64-bit indices in the older release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203994051
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:159,Deployability,release,release,159,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:1139,Performance,perform,performance,1139,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:249,Security,hash,hash,249,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:353,Security,hash,hash,353,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:409,Security,hash,hash,409,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:476,Security,hash,hash,476,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:543,Security,hash,hash,543,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:690,Security,hash,hash,690,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:710,Security,hash,hash,710,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:749,Security,hash,hash,749,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:837,Security,hash,hash,837,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:915,Security,hash,hash,915,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:1225,Security,hash,hash,1225,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:1265,Security,hash,hash,1265,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:1406,Security,hash,hash,1406,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:1468,Security,hash,hash,1468,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238:610,Testability,benchmark,benchmarks,610,"Hi Nick,. No problem at all; sorry for not providing a better explanation (I'm planning on writing one up for when this feature is listed in the next official release). In terms of strategy, my recommendation would be to use the default (the `dense hash`) unless indexing memory becomes a problem. The main differences are the following:; - The perfect hash uses an external memory algorithm to construct the hash function, and so requires less memory.; - Because the perfect hash function is built in external memory, **construction** of the hash using this data structure is sower. I don't have longitudinal benchmarks, but it is somewhere between 2 and 5x slower to populate the perfect hash than the dense hash.; - Once constructed, the perfect hash is _considerably_ smaller, and so quantification on an index built using a perfect hash will require only ~50% of the memory that is required when using a dense hash. Obviously if you're quantifying on the same machine that was able to build the index, this isn't a problem. However, if you're shipping the index to smaller memory computers, then this is something to consider.; - The performance difference in terms of mapping speed is very minimal; the minimum perfect hash can be 5-10% slower than the dense hash, but this difference is usually only a matter of seconds. Also, the total runtime difference can be even less since the smaller perfect hash can be read more quickly from disk than the larger dense hash. So, the standard recommendation would be use the default unless you run into memory problems building the index; in that case, try enabling the `--perfectHash` flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-204069238
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203627077:101,Testability,test,tested,101,"Hi Josh,. My best guess is that something is awry with the 64-bit index. That code-path is less well-tested (since I don't really have any transcriptomes in my collection that exceed the size of a 32-bit signed int). If you're able to share the txome and / or the index itself, I'd be happy to try and reproduce and fix this. Actually, I'd be really happy to squash any bugs in the 64-bit code path. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203627077
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203633436:282,Testability,test,tested,282,"OK, could you send me a private e-mail address so I don't post links for; the data publicly?. On Wed, Mar 30, 2016 at 3:42 PM, Rob Patro notifications@github.com wrote:. > Hi Josh,; > ; > My best guess is that something is awry with the 64-bit index. That; > code-path is less well-tested (since I don't really have any transcriptomes; > in my collection that exceed the size of a 32-bit signed int). If you're; > able to share the txome and / or the index itself, I'd be happy to try and; > reproduce and fix this. Actually, I'd be really happy to squash any bugs in; > the 64-bit code path.; > ; > --Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203627077",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203633436
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203656485:144,Availability,down,down,144,"Sure; its rob.[lastname]@cs.stonybrook.edu. Sorry for the trouble you're encountering with the 64-bit index, but thanks for helping me track it down to fix!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203656485
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203700011:25,Availability,down,down,25,"Ok, I think I tracked it down! I'd forgot to replace `int` with the generic `OffsetT` in one function. This led to the `int64_t` being interpreted as an `int32_t` and hence ... overflow. I'll fix this upstream and push a new salmon binary (by the end of the week). Luckily, this only affects mapping and not index building, so you can use the index you already have.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203700011
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203990167:48,Deployability,release,release,48,"Rather than hang you up in any way waiting on a release that adds ancillary improvements, I'm just putting an updated binary right here that addresses this issue. Please let me know if this allows you to run your dataset on the large index successfully.; [SalmonBeta-0.6.5-pre_CentOS5.tar.gz](https://github.com/COMBINE-lab/salmon/files/197982/SalmonBeta-0.6.5-pre_CentOS5.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203990167
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203990167:110,Deployability,update,updated,110,"Rather than hang you up in any way waiting on a release that adds ancillary improvements, I'm just putting an updated binary right here that addresses this issue. Please let me know if this allows you to run your dataset on the large index successfully.; [SalmonBeta-0.6.5-pre_CentOS5.tar.gz](https://github.com/COMBINE-lab/salmon/files/197982/SalmonBeta-0.6.5-pre_CentOS5.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203990167
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:858,Availability,echo,echo,858,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:694,Testability,Log,Logs,694,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:735,Testability,log,logs,735,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:919,Testability,log,logs,919,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:973,Testability,log,logs,973,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:993,Testability,log,log,993,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:1047,Testability,log,logs,1047,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:1065,Testability,log,log,1065,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:65,Performance,load,load,65,"That's very strange in that it doesn't even seem to be trying to load the index! I obviously don't have the same set of reads you do, but here is what I get when using this pre-compiled binary on the 64-bit index (this is a small read set from single-cell data, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in th",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1043,Performance,Load,Loading,1043," even seem to be trying to load the index! I obviously don't have the same set of reads you do, but here is what I get when using this pre-compiled binary on the 64-bit index (this is a small read set from single-cell data, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1114,Performance,Load,Loading,1114,"ds you do, but here is what I get when using this pre-compiled binary on the 64-bit index (this is a small read set from single-cell data, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1180,Performance,Load,Loading,1180,"ompiled binary on the 64-bit index (this is a small read set from single-cell data, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective le",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1246,Performance,Load,Loading,1246,"ata, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1316,Performance,Load,Loading,1316,"t/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [j",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1576,Performance,load,loading,1576,"rsion of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [jointLog] [info] finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1731,Performance,load,loaded,1731,"mon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [jointLog] [info] finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1803,Performance,load,loading,1803,"range_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [jointLog] [info] finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] [jointLog] [info] iteration = 200 | max rel diff. = 0.0452885;",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:2427,Performance,optimiz,optimizer,2427,"bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [jointLog] [info] finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] [jointLog] [info] iteration = 200 | max rel diff. = 0.0452885; [2016-03-31 14:13:28.046] [jointLog] [info] iteration = 300 | max rel diff. = 0.0323517; [2016-03-31 14:13:29.037] [jointLog] [info] iteration = 400 | max rel diff. = 0.0173087; [2016-03-31 14:13:29.842] [jointLog] [info] iteration = 500 | max rel diff. = 0.0173241; [2016-03-31 14:13:30.837] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131171; [2016-03-31 14:13:31.633] [jointLog] [info] iteration = 700 | max rel diff. = 0.0117939; [2016-03-31 14:13:32.631] [jointLog] [info] iteration = 800 | max rel diff. = 0.0102536; [2016-03-31 14:13:32.724] [jointLog] [info] iteration = 813 | max rel diff. = 0.00845215; [2016-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:3474,Performance,optimiz,optimizer,3474,"finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] [jointLog] [info] iteration = 200 | max rel diff. = 0.0452885; [2016-03-31 14:13:28.046] [jointLog] [info] iteration = 300 | max rel diff. = 0.0323517; [2016-03-31 14:13:29.037] [jointLog] [info] iteration = 400 | max rel diff. = 0.0173087; [2016-03-31 14:13:29.842] [jointLog] [info] iteration = 500 | max rel diff. = 0.0173241; [2016-03-31 14:13:30.837] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131171; [2016-03-31 14:13:31.633] [jointLog] [info] iteration = 700 | max rel diff. = 0.0117939; [2016-03-31 14:13:32.631] [jointLog] [info] iteration = 800 | max rel diff. = 0.0102536; [2016-03-31 14:13:32.724] [jointLog] [info] iteration = 813 | max rel diff. = 0.00845215; [2016-03-31 14:13:32.998] [jointLog] [info] Finished optimizer; [2016-03-31 14:13:32.998] [jointLog] [info] writing output. [2016-03-31 14:13:36.554] [jointLog] [warning] NOTE: Read Lib [( ../strange_peak/19232_1_1.fastq, ../strange_peak/19232_1_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: quant_binary/libFormatCounts.txt for details; ```. of course, it takes a stupid amount of time to load the giant index the first time around, but it seems able to do this successfully on my end (using the data you shared). Do you have any idea why it may have quit? What if you try running it with `gdb`; e.g.?. ```; $ gdb /home/jorvis/salmon/bin/salmon; (gbd) r quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; ```. does that give any more info into why it's not even loading the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:3900,Performance,load,load,3900,"finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] [jointLog] [info] iteration = 200 | max rel diff. = 0.0452885; [2016-03-31 14:13:28.046] [jointLog] [info] iteration = 300 | max rel diff. = 0.0323517; [2016-03-31 14:13:29.037] [jointLog] [info] iteration = 400 | max rel diff. = 0.0173087; [2016-03-31 14:13:29.842] [jointLog] [info] iteration = 500 | max rel diff. = 0.0173241; [2016-03-31 14:13:30.837] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131171; [2016-03-31 14:13:31.633] [jointLog] [info] iteration = 700 | max rel diff. = 0.0117939; [2016-03-31 14:13:32.631] [jointLog] [info] iteration = 800 | max rel diff. = 0.0102536; [2016-03-31 14:13:32.724] [jointLog] [info] iteration = 813 | max rel diff. = 0.00845215; [2016-03-31 14:13:32.998] [jointLog] [info] Finished optimizer; [2016-03-31 14:13:32.998] [jointLog] [info] writing output. [2016-03-31 14:13:36.554] [jointLog] [warning] NOTE: Read Lib [( ../strange_peak/19232_1_1.fastq, ../strange_peak/19232_1_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: quant_binary/libFormatCounts.txt for details; ```. of course, it takes a stupid amount of time to load the giant index the first time around, but it seems able to do this successfully on my end (using the data you shared). Do you have any idea why it may have quit? What if you try running it with `gdb`; e.g.?. ```; $ gdb /home/jorvis/salmon/bin/salmon; (gbd) r quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; ```. does that give any more info into why it's not even loading the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:4328,Performance,load,loading,4328,"finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] [jointLog] [info] iteration = 200 | max rel diff. = 0.0452885; [2016-03-31 14:13:28.046] [jointLog] [info] iteration = 300 | max rel diff. = 0.0323517; [2016-03-31 14:13:29.037] [jointLog] [info] iteration = 400 | max rel diff. = 0.0173087; [2016-03-31 14:13:29.842] [jointLog] [info] iteration = 500 | max rel diff. = 0.0173241; [2016-03-31 14:13:30.837] [jointLog] [info] iteration = 600 | max rel diff. = 0.0131171; [2016-03-31 14:13:31.633] [jointLog] [info] iteration = 700 | max rel diff. = 0.0117939; [2016-03-31 14:13:32.631] [jointLog] [info] iteration = 800 | max rel diff. = 0.0102536; [2016-03-31 14:13:32.724] [jointLog] [info] iteration = 813 | max rel diff. = 0.00845215; [2016-03-31 14:13:32.998] [jointLog] [info] Finished optimizer; [2016-03-31 14:13:32.998] [jointLog] [info] writing output. [2016-03-31 14:13:36.554] [jointLog] [warning] NOTE: Read Lib [( ../strange_peak/19232_1_1.fastq, ../strange_peak/19232_1_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: quant_binary/libFormatCounts.txt for details; ```. of course, it takes a stupid amount of time to load the giant index the first time around, but it seems able to do this successfully on my end (using the data you shared). Do you have any idea why it may have quit? What if you try running it with `gdb`; e.g.?. ```; $ gdb /home/jorvis/salmon/bin/salmon; (gbd) r quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; ```. does that give any more info into why it's not even loading the index?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1584,Security,hash,hash,1584,"rsion of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [jointLog] [info] finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:1747,Security,hash,hash,1747,"mon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in the equivalence classes. [2016-03-31 14:13:24.480] [jointLog] [warning] Only 159824 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-03-31 14:13:24.480] [jointLog] [info] Mapping rate = 36.3942%. [2016-03-31 14:13:24.480] [jointLog] [info] finished quantifyLibrary(); [2016-03-31 14:13:24.480] [jointLog] [info] Starting optimizer; [2016-03-31 14:13:25.441] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-03-31 14:13:25.660] [jointLog] [info] iteration = 0 | max rel diff. = 13.7627; [2016-03-31 14:13:26.460] [jointLog] [info] iteration = 100 | max rel diff. = 0.100799; [2016-03-31 14:13:27.252] ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:912,Testability,Log,Logs,912,"That's very strange in that it doesn't even seem to be trying to load the index! I obviously don't have the same set of reads you do, but here is what I get when using this pre-compiled binary on the 64-bit index (this is a small read set from single-cell data, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in th",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023:949,Testability,log,logs,949,"That's very strange in that it doesn't even seem to be trying to load the index! I obviously don't have the same set of reads you do, but here is what I get when using this pre-compiled binary on the 64-bit index (this is a small read set from single-cell data, which is why the total # of reads is so small). ```; rob@feynman:/mnt/scratch3/rob/JoshTest$ ~/SoftwareStaging/salmon/scripts/SalmonBeta-0.6.5-pre_CentOS5/bin/salmon quant -p 15 -i salmon_index -l IU -1 ../strange_peak/19232_1_1.fastq -2 ../strange_peak/19232_1_2.fastq -o quant_binary; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 15 }; # [ index ] => { salmon_index }; # [ libType ] => { IU }; # [ mates1 ] => { ../strange_peak/19232_1_1.fastq }; # [ mates2 ] => { ../strange_peak/19232_1_2.fastq }; # [ output ] => { quant_binary }; Logs will be written to quant_binary/logs; there is 1[2016-03-31 14:05:14.184] [jointLog] [info] parsing read library format; lib; Loading 64-bit quasi index[2016-03-31 14:05:14.266] [stderrLog] [info] Loading Suffix Array; [2016-03-31 14:05:14.266] [jointLog] [info] Loading Quasi index. [2016-03-31 14:07:58.647] [stderrLog] [info] Loading Transcript Info; [2016-03-31 14:08:59.703] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-31 14:09:06.744] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-31 14:09:08.123] [stderrLog] [info] Computing transcript lengths; [2016-03-31 14:09:08.240] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-31 14:09:15.789] [jointLog] [info] done; [2016-03-31 14:09:15.786] [stderrLog] [info] Successfully loaded position hash; [2016-03-31 14:09:15.789] [stderrLog] [info] Done loading index. [2016-03-31 14:09:36.623] [jointLog] [info] Computed 8083 rich equivalence classes for further processing; [2016-03-31 14:09:36.623] [jointLog] [info] Counted 159824 total reads in th",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204066023
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204084502:86,Performance,load,load,86,"Great. I'm not sure why the old index was problematic, but I'm glad this one seems to load successfully etc. Also, I'm glad the read set is rather large, because this is one of those cases where the index loading time might otherwise trump the time related to map the reads on a smaller dataset! I have some work to do in speeding up the loading of large indices.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204084502
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204084502:205,Performance,load,loading,205,"Great. I'm not sure why the old index was problematic, but I'm glad this one seems to load successfully etc. Also, I'm glad the read set is rather large, because this is one of those cases where the index loading time might otherwise trump the time related to map the reads on a smaller dataset! I have some work to do in speeding up the loading of large indices.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204084502
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204084502:338,Performance,load,loading,338,"Great. I'm not sure why the old index was problematic, but I'm glad this one seems to load successfully etc. Also, I'm glad the read set is rather large, because this is one of those cases where the index loading time might otherwise trump the time related to map the reads on a smaller dataset! I have some work to do in speeding up the loading of large indices.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204084502
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204085138:35,Performance,load,loading,35,Interesting. It got past the index loading step for me in under 10 seconds at least. I could time it more properly if you like after this run has completed.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204085138
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204098008:91,Integrability,protocol,protocols,91,"Yes, this is a set of transcripts assembled using a few different Trinity and Velvet/Oases protocols, merged together. I'm testing reduction with different tools along with relative abundance estimation.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204098008
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204098008:123,Testability,test,testing,123,"Yes, this is a set of transcripts assembled using a few different Trinity and Velvet/Oases protocols, merged together. I'm testing reduction with different tools along with relative abundance estimation.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204098008
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204206663:47,Deployability,update,update,47,"Yes, shared volumes :( - thanks @rob-p for the update - I'll give it a shot on our large index and hopefully feel the benefit!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204206663
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-220450290:934,Security,hash,hash,934,"@rob-p I tried SalmonBeta-0.6.5-pre_CentOS5.tar.gz but for some reason, it still make 32-bit index on my x86_64 machine. What do you think I am doing wrong?. ```; $ salmon index -t emase.pooled.transcripts.fa -i salmon; Version Info: This is the most recent version of Salmon.; [2016-05-19 16:06:55.048] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 920000 transcriptsElapsed time: 24.0224s. Replaced 12 non-ATCG nucleotides; Clipped poly-A tails from 4247 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0972664s; Writing sequence data to file . . . done; Elapsed time: 0.872786s; [info] Building 32-bit suffix array (length of generalized text is 1561273393); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 3.65916s; done; Elapsed time: 265.19s; processed 1561000000 positions; khash had 135536906 keys; saving hash to disk . . . done; Elapsed time: 11.27s; [2016-05-19 16:19:10.357] [jLog] [info] done building index; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-220450290
https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-220451342:55,Integrability,depend,dependent,55,"Hi @kbchoi-jax — the index size (i.e. 32 or 64-bit) is dependent only on how long the reference is, not the width of the machine on which you're running Salmon. That is, if the reference is < 2.1G, then a 32-bit index will always be used (even on a 64-bit machine). The purpose of the ""64-bit"" index is that it uses 64-bit indices when building the suffix array, so that it can distinguish positions on much larger reference sequences (up to 9223372036854775808 characters . . . but you'd run out of memory long before that ;P).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-220451342
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-209989267:132,Deployability,update,updates,132,"I might add that the progress display is pretty, but having an option to exclude it from the stderr logging, or even have no status updates, would be helpful for log file analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-209989267
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-209989267:100,Testability,log,logging,100,"I might add that the progress display is pretty, but having an option to exclude it from the stderr logging, or even have no status updates, would be helpful for log file analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-209989267
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-209989267:162,Testability,log,log,162,"I might add that the progress display is pretty, but having an option to exclude it from the stderr logging, or even have no status updates, would be helpful for log file analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-209989267
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-237040761:20,Availability,error,error,20,I think logging non-error output to stderr is OK.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-237040761
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-237040761:8,Testability,log,logging,8,I think logging non-error output to stderr is OK.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-237040761
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636:128,Availability,error,errors,128,"The current behavior, which I think is the most reasonable for now, is to keep logging messages to stderr, even if they are not errors. This lets us use stdout for output which may need to be redirected to other programs (e.g. mapping results).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636:87,Integrability,message,messages,87,"The current behavior, which I think is the most reasonable for now, is to keep logging messages to stderr, even if they are not errors. This lets us use stdout for output which may need to be redirected to other programs (e.g. mapping results).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636:79,Testability,log,logging,79,"The current behavior, which I think is the most reasonable for now, is to keep logging messages to stderr, even if they are not errors. This lets us use stdout for output which may need to be redirected to other programs (e.g. mapping results).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636
https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-375116281:4,Availability,down,downside,4,"The downside of this choice, @rob-p and @mdshw5, is that the user has to do this kind of thing to get the long documentation into `less`:. `salmon quant --help-reads 2>&1 | less`. And this behavior is very unusual among command-line tools when invoking `--help`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-375116281
https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218589200:413,Deployability,release,release,413,"Hi Valentine,. Thanks for reporting this! Do you have any recollection of what option might be incompatible with Gibbs? Specifically, it's interesting that it doesn't work with Gibbs (it looks like you're getting `std::numeric_limits<double>::min()` everywhere) but works with Bootstrapping. I will certainly look into this and will document (and make an explicit warning) any known incompatibilities in the next release. I'd very much like to fix the issue with Gibbs sampling, as it's substantially faster than bootstrapping for a large number of samples. Actually, there's a fairly substantial upgrade to the bias modeling that is just about ready and will be part of the next release (which is, in fact, what has delayed v0.7.0 for so long). Regarding converting counts back to TPM, what you're doing there looks like it's actually converting to NPM (nucleotides per million) which is a relative abundance measure that is not normalized for transcript length. To get TPM estimates from the bootstrap numbers what you would want to do would be something like: `TPM = 1e6 * ((bootstraps / effective_lengths) / (bootstraps / effective_lengths).sum())`. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218589200
https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218589200:597,Deployability,upgrade,upgrade,597,"Hi Valentine,. Thanks for reporting this! Do you have any recollection of what option might be incompatible with Gibbs? Specifically, it's interesting that it doesn't work with Gibbs (it looks like you're getting `std::numeric_limits<double>::min()` everywhere) but works with Bootstrapping. I will certainly look into this and will document (and make an explicit warning) any known incompatibilities in the next release. I'd very much like to fix the issue with Gibbs sampling, as it's substantially faster than bootstrapping for a large number of samples. Actually, there's a fairly substantial upgrade to the bias modeling that is just about ready and will be part of the next release (which is, in fact, what has delayed v0.7.0 for so long). Regarding converting counts back to TPM, what you're doing there looks like it's actually converting to NPM (nucleotides per million) which is a relative abundance measure that is not normalized for transcript length. To get TPM estimates from the bootstrap numbers what you would want to do would be something like: `TPM = 1e6 * ((bootstraps / effective_lengths) / (bootstraps / effective_lengths).sum())`. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218589200
https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218589200:680,Deployability,release,release,680,"Hi Valentine,. Thanks for reporting this! Do you have any recollection of what option might be incompatible with Gibbs? Specifically, it's interesting that it doesn't work with Gibbs (it looks like you're getting `std::numeric_limits<double>::min()` everywhere) but works with Bootstrapping. I will certainly look into this and will document (and make an explicit warning) any known incompatibilities in the next release. I'd very much like to fix the issue with Gibbs sampling, as it's substantially faster than bootstrapping for a large number of samples. Actually, there's a fairly substantial upgrade to the bias modeling that is just about ready and will be part of the next release (which is, in fact, what has delayed v0.7.0 for so long). Regarding converting counts back to TPM, what you're doing there looks like it's actually converting to NPM (nucleotides per million) which is a relative abundance measure that is not normalized for transcript length. To get TPM estimates from the bootstrap numbers what you would want to do would be something like: `TPM = 1e6 * ((bootstraps / effective_lengths) / (bootstraps / effective_lengths).sum())`. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218589200
https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561:208,Availability,down,down,208,"Hi Valentine,. That's not good! I suppose that testing the gibbs sampling should be added to our standard set of regression tests. Can you provide me with a data set that reproduces this issue? I'll track it down and figure out why Gibbs is behaving badly. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561
https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561:47,Testability,test,testing,47,"Hi Valentine,. That's not good! I suppose that testing the gibbs sampling should be added to our standard set of regression tests. Can you provide me with a data set that reproduces this issue? I'll track it down and figure out why Gibbs is behaving badly. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561
https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561:124,Testability,test,tests,124,"Hi Valentine,. That's not good! I suppose that testing the gibbs sampling should be added to our standard set of regression tests. Can you provide me with a data set that reproduces this issue? I'll track it down and figure out why Gibbs is behaving badly. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561
https://github.com/COMBINE-lab/salmon/issues/60#issuecomment-281436353:209,Deployability,release,release,209,"There was previously a bug that could lead to this behavior if the transcript to gene mapping was incomplete (i.e. if there were transcripts without an appropriately mapping gene). This is fixed in the latest release. Nonetheless, I'll note that [tximport](http://bioconductor.org/packages/release/bioc/html/tximport.html) is now the preferred way to aggregate abundances to the gene level.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/60#issuecomment-281436353
https://github.com/COMBINE-lab/salmon/issues/60#issuecomment-281436353:290,Deployability,release,release,290,"There was previously a bug that could lead to this behavior if the transcript to gene mapping was incomplete (i.e. if there were transcripts without an appropriately mapping gene). This is fixed in the latest release. Nonetheless, I'll note that [tximport](http://bioconductor.org/packages/release/bioc/html/tximport.html) is now the preferred way to aggregate abundances to the gene level.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/60#issuecomment-281436353
https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-227424950:367,Testability,test,testing,367,"Hi Valentine,. Thanks for all of the detailed info to reproduce this; I'll try and take a look at it soon. Since there is _a lot_ of work going on in the develop branch (and good stuff coming in v0.7.0), it actually looks like `--useFSPD` will be replaced with a `--posBias` flag that models both 5' and 3' position specific bias. Of course, we're still working on / testing that feature. In the mean time, I'll see if I can find what's causing this problem. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-227424950
https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373:726,Deployability,release,release,726,"Hi @vals,. So there was a very subtle bug in `useFSPD` that would (in a very non-reproducible manner) trigger such a segfault. It was related to some very tricky locking behavior. However, the manner in which `useFSPD` corrected for position specific bias isn't actually compatible with our new sequence-specific and fragment-gc bias models. Thus, I've deprecated `useFSPD`. The replacement is the flag `posBias`. This models the same type of positional bias, but does so in a way that is compatible with our other bias models. It also doesn't rely on the tricky threading behavior, so it should be more stable. Unlike sequence-specific and fragment-gc bias, however, the `posBias` option is still _experimental_ in the 0.7.0 release. However, we have been testing it internally, and I'd be very grateful for your feedback if you have a chance to try it out. Assuming things look good, we can promote it from experimental in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373
https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373:934,Deployability,release,release,934,"Hi @vals,. So there was a very subtle bug in `useFSPD` that would (in a very non-reproducible manner) trigger such a segfault. It was related to some very tricky locking behavior. However, the manner in which `useFSPD` corrected for position specific bias isn't actually compatible with our new sequence-specific and fragment-gc bias models. Thus, I've deprecated `useFSPD`. The replacement is the flag `posBias`. This models the same type of positional bias, but does so in a way that is compatible with our other bias models. It also doesn't rely on the tricky threading behavior, so it should be more stable. Unlike sequence-specific and fragment-gc bias, however, the `posBias` option is still _experimental_ in the 0.7.0 release. However, we have been testing it internally, and I'd be very grateful for your feedback if you have a chance to try it out. Assuming things look good, we can promote it from experimental in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373
https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373:757,Testability,test,testing,757,"Hi @vals,. So there was a very subtle bug in `useFSPD` that would (in a very non-reproducible manner) trigger such a segfault. It was related to some very tricky locking behavior. However, the manner in which `useFSPD` corrected for position specific bias isn't actually compatible with our new sequence-specific and fragment-gc bias models. Thus, I've deprecated `useFSPD`. The replacement is the flag `posBias`. This models the same type of positional bias, but does so in a way that is compatible with our other bias models. It also doesn't rely on the tricky threading behavior, so it should be more stable. Unlike sequence-specific and fragment-gc bias, however, the `posBias` option is still _experimental_ in the 0.7.0 release. However, we have been testing it internally, and I'd be very grateful for your feedback if you have a chance to try it out. Assuming things look good, we can promote it from experimental in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373
https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373:814,Usability,feedback,feedback,814,"Hi @vals,. So there was a very subtle bug in `useFSPD` that would (in a very non-reproducible manner) trigger such a segfault. It was related to some very tricky locking behavior. However, the manner in which `useFSPD` corrected for position specific bias isn't actually compatible with our new sequence-specific and fragment-gc bias models. Thus, I've deprecated `useFSPD`. The replacement is the flag `posBias`. This models the same type of positional bias, but does so in a way that is compatible with our other bias models. It also doesn't rely on the tricky threading behavior, so it should be more stable. Unlike sequence-specific and fragment-gc bias, however, the `posBias` option is still _experimental_ in the 0.7.0 release. However, we have been testing it internally, and I'd be very grateful for your feedback if you have a chance to try it out. Assuming things look good, we can promote it from experimental in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64#issuecomment-241234373
https://github.com/COMBINE-lab/salmon/issues/65#issuecomment-231729597:638,Integrability,message,message,638,"Hi Assa,. The problem is that you've not provided the input files via the appropriate `-1` and `-2` flags. For your particular command, the command line should look like . ``` bash; $ salmon quant -p 16 --biasCorrect --libType IU -1 <(zcat ${base}_1.fastq.gz ) -2 <(zcat ${base}_2.fastq.gz) -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base ; ```. Notice this looks almost the same as what you had before, except that the reads are prefixed by the relevant `-1` and `-2` flags, and come directly after the library type flags. Please let me know if this fixes the issue for you. I'll add a more informative message in such a situation.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65#issuecomment-231729597
https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-233659056:271,Availability,down,downloaded,271,"Hi Rob,; since dog [as well as cow and pig] is not well-annotated compared to human and mouse, I cannot post a link to the transcriptome fasta because, to the best of my knowledge, there is none officially provided/curated by a consortium for the current dog assembly. I downloaded the Ensembl annotation from UCSC (assembly: canFam3; track: Ensembl Genes; table: ensGene) and selected as output ""sequence - all upper case - repeat masking: lowercase"". That results in a transcriptome fasta of approx. ~350MB; Good luck with your deadline!. +Peter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-233659056
https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-233659056:432,Availability,mask,masking,432,"Hi Rob,; since dog [as well as cow and pig] is not well-annotated compared to human and mouse, I cannot post a link to the transcriptome fasta because, to the best of my knowledge, there is none officially provided/curated by a consortium for the current dog assembly. I downloaded the Ensembl annotation from UCSC (assembly: canFam3; track: Ensembl Genes; table: ensGene) and selected as output ""sequence - all upper case - repeat masking: lowercase"". That results in a transcriptome fasta of approx. ~350MB; Good luck with your deadline!. +Peter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-233659056
https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054:164,Deployability,release,release,164,"Hi Peter,. Obviously, I got tied up with other obligations a bit longer than I thought! Sorry for the delay. Anyway, I've run both of these samples with the newest release, using parameters as close as I can (given that the bias correction flags have changed in 0.7.0). Both samples seem to run cleanly. Would you mind testing with the latest release and seeing if the issue is resolved? Here is the procedure I used:. Index with k=19 (I think this is what you did), using the default `quasi` index. ```; > salmon index -t Canis_familiaris.CanFam3.1.cdna.all.fa.gz -i index -k 19; ```. Run sample `SRR636842`:. ```; > salmon quant -i index -p 16 -l IU -1 SRR636842_1.fastq.gz -2 SRR636842_2.fastq.gz --seqBias -o quant_SRR636842 --useVBOpt; ```. here, the mapping rate was ~78.8%. Run sample `SRR636843`:. ```; >salmon quant -i index -p 16 -l IU -1 SRR636843_1.fastq.gz -2 SRR636843_2.fastq.gz --seqBias -o quant_SRR636843 --useVBOpt; ```. here, the mapping rate was ~79.5%. The mapping rates may differ for you a bit, since I used [this](ftp://ftp.ensembl.org/pub/release-85/fasta/canis_familiaris/cdna/Canis_familiaris.CanFam3.1.cdna.all.fa.gz) Ensembl transcript set directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054
https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054:343,Deployability,release,release,343,"Hi Peter,. Obviously, I got tied up with other obligations a bit longer than I thought! Sorry for the delay. Anyway, I've run both of these samples with the newest release, using parameters as close as I can (given that the bias correction flags have changed in 0.7.0). Both samples seem to run cleanly. Would you mind testing with the latest release and seeing if the issue is resolved? Here is the procedure I used:. Index with k=19 (I think this is what you did), using the default `quasi` index. ```; > salmon index -t Canis_familiaris.CanFam3.1.cdna.all.fa.gz -i index -k 19; ```. Run sample `SRR636842`:. ```; > salmon quant -i index -p 16 -l IU -1 SRR636842_1.fastq.gz -2 SRR636842_2.fastq.gz --seqBias -o quant_SRR636842 --useVBOpt; ```. here, the mapping rate was ~78.8%. Run sample `SRR636843`:. ```; >salmon quant -i index -p 16 -l IU -1 SRR636843_1.fastq.gz -2 SRR636843_2.fastq.gz --seqBias -o quant_SRR636843 --useVBOpt; ```. here, the mapping rate was ~79.5%. The mapping rates may differ for you a bit, since I used [this](ftp://ftp.ensembl.org/pub/release-85/fasta/canis_familiaris/cdna/Canis_familiaris.CanFam3.1.cdna.all.fa.gz) Ensembl transcript set directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054
https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054:1065,Deployability,release,release-,1065,"Hi Peter,. Obviously, I got tied up with other obligations a bit longer than I thought! Sorry for the delay. Anyway, I've run both of these samples with the newest release, using parameters as close as I can (given that the bias correction flags have changed in 0.7.0). Both samples seem to run cleanly. Would you mind testing with the latest release and seeing if the issue is resolved? Here is the procedure I used:. Index with k=19 (I think this is what you did), using the default `quasi` index. ```; > salmon index -t Canis_familiaris.CanFam3.1.cdna.all.fa.gz -i index -k 19; ```. Run sample `SRR636842`:. ```; > salmon quant -i index -p 16 -l IU -1 SRR636842_1.fastq.gz -2 SRR636842_2.fastq.gz --seqBias -o quant_SRR636842 --useVBOpt; ```. here, the mapping rate was ~78.8%. Run sample `SRR636843`:. ```; >salmon quant -i index -p 16 -l IU -1 SRR636843_1.fastq.gz -2 SRR636843_2.fastq.gz --seqBias -o quant_SRR636843 --useVBOpt; ```. here, the mapping rate was ~79.5%. The mapping rates may differ for you a bit, since I used [this](ftp://ftp.ensembl.org/pub/release-85/fasta/canis_familiaris/cdna/Canis_familiaris.CanFam3.1.cdna.all.fa.gz) Ensembl transcript set directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054
https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054:319,Testability,test,testing,319,"Hi Peter,. Obviously, I got tied up with other obligations a bit longer than I thought! Sorry for the delay. Anyway, I've run both of these samples with the newest release, using parameters as close as I can (given that the bias correction flags have changed in 0.7.0). Both samples seem to run cleanly. Would you mind testing with the latest release and seeing if the issue is resolved? Here is the procedure I used:. Index with k=19 (I think this is what you did), using the default `quasi` index. ```; > salmon index -t Canis_familiaris.CanFam3.1.cdna.all.fa.gz -i index -k 19; ```. Run sample `SRR636842`:. ```; > salmon quant -i index -p 16 -l IU -1 SRR636842_1.fastq.gz -2 SRR636842_2.fastq.gz --seqBias -o quant_SRR636842 --useVBOpt; ```. here, the mapping rate was ~78.8%. Run sample `SRR636843`:. ```; >salmon quant -i index -p 16 -l IU -1 SRR636843_1.fastq.gz -2 SRR636843_2.fastq.gz --seqBias -o quant_SRR636843 --useVBOpt; ```. here, the mapping rate was ~79.5%. The mapping rates may differ for you a bit, since I used [this](ftp://ftp.ensembl.org/pub/release-85/fasta/canis_familiaris/cdna/Canis_familiaris.CanFam3.1.cdna.all.fa.gz) Ensembl transcript set directly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-241235054
https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-238090033:1479,Energy Efficiency,allocate,allocated,1479,"-zero). Thus, if the only mapping for a read disagrees with the expected type, it will still be used. There is a way to modify this behavior, but since stranded library prep is imperfect, the default behavior is the most reasonable for most situations. The reason that you'll see consistency in most cases, regardless of the library type, is as follows. Imagine that I have a read that maps to transcript 1 in the forward orientation and transcript 2 in the reverse orientation. Further, imagine I have a stranded library, and I expect all reads to map in the reverse orientation. If the mapping to transcript 1 is ""spurious"", there are unlikely to be many othe reads mapping to that transcript in this manner, while we would expect other reads to map to transcript 2 in the prescribed manner. Since Salmon considers all of the reads in its probabilistic model when deciding how each read should be allocated, the fact that many reads map to transcript 2 will increase its abundance and, likewise, increase the probability that we assign this read to transcript 2 --- that is, the other mappings will help us make the right choice, regardless of the fact that we neglected to assign a stranded library type. That said, there are situations where the library type makes a difference. This is most often for a few transcripts that are very sequence similar (e.g. Paralogs that happen to be on opposite strands). In this case, most of the reads that map to one transcript will map to the other as well. In this case, the much larger conditional probability of agreeing with the prescribed library type will cause these reads to be allocated to the transcript to which they map in the expected orientation. However, the fraction of such transcripts is usually a small proportion of all expressed transcripts in an experiment, which is why, even if you do have a stranded library and some strand-specific expression, you'd expect the overall concordance to be very high between runs with different provide",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-238090033
https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-238090033:2208,Energy Efficiency,allocate,allocated,2208,"ed. There is a way to modify this behavior, but since stranded library prep is imperfect, the default behavior is the most reasonable for most situations. The reason that you'll see consistency in most cases, regardless of the library type, is as follows. Imagine that I have a read that maps to transcript 1 in the forward orientation and transcript 2 in the reverse orientation. Further, imagine I have a stranded library, and I expect all reads to map in the reverse orientation. If the mapping to transcript 1 is ""spurious"", there are unlikely to be many othe reads mapping to that transcript in this manner, while we would expect other reads to map to transcript 2 in the prescribed manner. Since Salmon considers all of the reads in its probabilistic model when deciding how each read should be allocated, the fact that many reads map to transcript 2 will increase its abundance and, likewise, increase the probability that we assign this read to transcript 2 --- that is, the other mappings will help us make the right choice, regardless of the fact that we neglected to assign a stranded library type. That said, there are situations where the library type makes a difference. This is most often for a few transcripts that are very sequence similar (e.g. Paralogs that happen to be on opposite strands). In this case, most of the reads that map to one transcript will map to the other as well. In this case, the much larger conditional probability of agreeing with the prescribed library type will cause these reads to be allocated to the transcript to which they map in the expected orientation. However, the fraction of such transcripts is usually a small proportion of all expressed transcripts in an experiment, which is why, even if you do have a stranded library and some strand-specific expression, you'd expect the overall concordance to be very high between runs with different provided library types. Let me know if this answers your question, and if you have any others. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-238090033
https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-238090033:258,Usability,simpl,simply,258,"Hi @gresteban ,. Thanks for the kind words. I'm working on improving the documentation even more for v0.7.0, which should land soon. Regarding your question, what you're seeing is expected behavior. That is, for the vast majority of transcripts, Salmon will simply do the ""right thing"" regardless of the library type. This is because the library type is used as a ""soft"" rather than a ""hard"" filter when determining where a read may originate from (i.e. Orientations other than the expected type have a probability orders of magnitude smaller than the expected type, but still non-zero). Thus, if the only mapping for a read disagrees with the expected type, it will still be used. There is a way to modify this behavior, but since stranded library prep is imperfect, the default behavior is the most reasonable for most situations. The reason that you'll see consistency in most cases, regardless of the library type, is as follows. Imagine that I have a read that maps to transcript 1 in the forward orientation and transcript 2 in the reverse orientation. Further, imagine I have a stranded library, and I expect all reads to map in the reverse orientation. If the mapping to transcript 1 is ""spurious"", there are unlikely to be many othe reads mapping to that transcript in this manner, while we would expect other reads to map to transcript 2 in the prescribed manner. Since Salmon considers all of the reads in its probabilistic model when deciding how each read should be allocated, the fact that many reads map to transcript 2 will increase its abundance and, likewise, increase the probability that we assign this read to transcript 2 --- that is, the other mappings will help us make the right choice, regardless of the fact that we neglected to assign a stranded library type. That said, there are situations where the library type makes a difference. This is most often for a few transcripts that are very sequence similar (e.g. Paralogs that happen to be on opposite strands). In this cas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-238090033
https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-388851366:686,Testability,test,testing,686,"Hi Rob, ; I'd like to ask a follow-up question to this thread:. In your reply above, you said:; > the library type is used as a ""soft"" rather than a ""hard"" filter when determining where a read may originate from (i.e. Orientations other than the expected type have a probability orders of magnitude smaller than the expected type, but still non-zero). Thus, if the only mapping for a read disagrees with the expected type, it will still be used. There is a way to modify this behavior, but since stranded library prep is imperfect, the default behavior is the most reasonable for most situations. I wonder how can I enforce the ""correct"" usage of the strand information by Salmon. I am testing Salmon on some data and there seem to be cases of overlap between two genes (on opposite strands), when the values produced by Salmon seem suspicious. Best, ; Alex",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-388851366
https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-388863963:386,Deployability,release,release,386,"Hi Alex,. The appropriate way to _force_ salmon to use the library type as a hard constraint is to pass the option `--incompatPrior 0.0` on the command line. This will tell salmon that it should consider a fragment mapping different than the library type to be impossible (i.e. this mapping should simply be discarded). This will actually be the default behavior starting from the next release anyway, as the current behavior seems to confuse more people than not. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-388863963
https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-388863963:298,Usability,simpl,simply,298,"Hi Alex,. The appropriate way to _force_ salmon to use the library type as a hard constraint is to pass the option `--incompatPrior 0.0` on the command line. This will tell salmon that it should consider a fragment mapping different than the library type to be impossible (i.e. this mapping should simply be discarded). This will actually be the default behavior starting from the next release anyway, as the current behavior seems to confuse more people than not. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67#issuecomment-388863963
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239522831:14,Deployability,install,installed,14,"Currently the installed `salmon` executable has `RPATH` set, which isn't needed on Mac OS, which uses absolute paths to dynamic libraries. ```; ❯❯❯ otool -l /usr/local/bin/salmon |grep -A2 RPATH; cmd LC_RPATH; cmdsize 56; path /usr/local/Cellar/salmon/0.6.0_1/bin (offset 12); --; cmd LC_RPATH; cmdsize 56; path /usr/local/Cellar/salmon/0.6.0_1/lib (offset 12); --; cmd LC_RPATH; cmdsize 32; path @executable_path (offset 12); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239522831
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239532970:19,Deployability,patch,patch,19,It looks like this patch had no effect at all. :confused:. ```; ❯❯❯ cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME/tmp/salmon ..; ❯❯❯ make; ❯❯❯ make install; ❯❯❯ otool -l /Users/sjackman/tmp/salmon/bin/salmon |grep -A2 RPATH; cmd LC_RPATH; cmdsize 48; path /Users/sjackman/tmp/salmon/bin (offset 12); --; cmd LC_RPATH; cmdsize 48; path /Users/sjackman/tmp/salmon/lib (offset 12); --; cmd LC_RPATH; cmdsize 32; path @executable_path (offset 12); ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239532970
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239532970:142,Deployability,install,install,142,It looks like this patch had no effect at all. :confused:. ```; ❯❯❯ cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME/tmp/salmon ..; ❯❯❯ make; ❯❯❯ make install; ❯❯❯ otool -l /Users/sjackman/tmp/salmon/bin/salmon |grep -A2 RPATH; cmd LC_RPATH; cmdsize 48; path /Users/sjackman/tmp/salmon/bin (offset 12); --; cmd LC_RPATH; cmdsize 48; path /Users/sjackman/tmp/salmon/lib (offset 12); --; cmd LC_RPATH; cmdsize 32; path @executable_path (offset 12); ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239532970
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239534893:202,Deployability,install,installing,202,"> Default RPATH settings; > By default if you don't change any RPATH related settings, CMake will link the executables and shared libraries with full RPATH to all used libraries in the build tree. When installing, it will clear the RPATH of these targets so they are installed with an empty RPATH. https://cmake.org/Wiki/CMake_RPATH_handling#Default_RPATH_settings. We want this default `RPATH` behaviour from `cmake`. I'm unsure why we're getting non-default behaviour.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239534893
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239534893:267,Deployability,install,installed,267,"> Default RPATH settings; > By default if you don't change any RPATH related settings, CMake will link the executables and shared libraries with full RPATH to all used libraries in the build tree. When installing, it will clear the RPATH of these targets so they are installed with an empty RPATH. https://cmake.org/Wiki/CMake_RPATH_handling#Default_RPATH_settings. We want this default `RPATH` behaviour from `cmake`. I'm unsure why we're getting non-default behaviour.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239534893
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239534893:222,Usability,clear,clear,222,"> Default RPATH settings; > By default if you don't change any RPATH related settings, CMake will link the executables and shared libraries with full RPATH to all used libraries in the build tree. When installing, it will clear the RPATH of these targets so they are installed with an empty RPATH. https://cmake.org/Wiki/CMake_RPATH_handling#Default_RPATH_settings. We want this default `RPATH` behaviour from `cmake`. I'm unsure why we're getting non-default behaviour.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239534893
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406:163,Deployability,install,install,163,"That seems to fix it! Any thoughts on these other incantations I have there?. ```; ##; # This ensures that the salmon executable should work with or without `make install`; ##; # Grumble grumble . . . OSX; if (APPLE); # only attempt install_name_tool for tbb if we installed it; if (${TBB_LIBRARY_DIRS} MATCHES ${GAT_SOURCE_DIR}/external/install/lib); add_custom_command(TARGET salmon; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/salmon; ); add_custom_command(TARGET unitTests; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/unitTests; ); endif(); else(); # related to complete static linking --- on hold ; set (BOOST_THREAD_LIBRARY); endif(). ```. i.e. is this incantation necessary, or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406:265,Deployability,install,installed,265,"That seems to fix it! Any thoughts on these other incantations I have there?. ```; ##; # This ensures that the salmon executable should work with or without `make install`; ##; # Grumble grumble . . . OSX; if (APPLE); # only attempt install_name_tool for tbb if we installed it; if (${TBB_LIBRARY_DIRS} MATCHES ${GAT_SOURCE_DIR}/external/install/lib); add_custom_command(TARGET salmon; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/salmon; ); add_custom_command(TARGET unitTests; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/unitTests; ); endif(); else(); # related to complete static linking --- on hold ; set (BOOST_THREAD_LIBRARY); endif(). ```. i.e. is this incantation necessary, or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406:338,Deployability,install,install,338,"That seems to fix it! Any thoughts on these other incantations I have there?. ```; ##; # This ensures that the salmon executable should work with or without `make install`; ##; # Grumble grumble . . . OSX; if (APPLE); # only attempt install_name_tool for tbb if we installed it; if (${TBB_LIBRARY_DIRS} MATCHES ${GAT_SOURCE_DIR}/external/install/lib); add_custom_command(TARGET salmon; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/salmon; ); add_custom_command(TARGET unitTests; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/unitTests; ); endif(); else(); # related to complete static linking --- on hold ; set (BOOST_THREAD_LIBRARY); endif(). ```. i.e. is this incantation necessary, or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406:807,Deployability,install,install,807,"That seems to fix it! Any thoughts on these other incantations I have there?. ```; ##; # This ensures that the salmon executable should work with or without `make install`; ##; # Grumble grumble . . . OSX; if (APPLE); # only attempt install_name_tool for tbb if we installed it; if (${TBB_LIBRARY_DIRS} MATCHES ${GAT_SOURCE_DIR}/external/install/lib); add_custom_command(TARGET salmon; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/salmon; ); add_custom_command(TARGET unitTests; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/unitTests; ); endif(); else(); # related to complete static linking --- on hold ; set (BOOST_THREAD_LIBRARY); endif(). ```. i.e. is this incantation necessary, or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406:1325,Deployability,install,install,1325,"That seems to fix it! Any thoughts on these other incantations I have there?. ```; ##; # This ensures that the salmon executable should work with or without `make install`; ##; # Grumble grumble . . . OSX; if (APPLE); # only attempt install_name_tool for tbb if we installed it; if (${TBB_LIBRARY_DIRS} MATCHES ${GAT_SOURCE_DIR}/external/install/lib); add_custom_command(TARGET salmon; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/salmon; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/salmon; ); add_custom_command(TARGET unitTests; POST_BUILD; COMMAND install_name_tool -change libtbb.dylib @rpath/libtbb.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc.dylib @rpath/libtbbmalloc.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -change libtbbmalloc_proxy.dylib @rpath/libtbbmalloc_proxy.dylib ${GAT_SOURCE_DIR}/build/src/unitTests; COMMAND install_name_tool -add_rpath ${GAT_SOURCE_DIR}/external/install/lib ${GAT_SOURCE_DIR}/build/src/unitTests; ); endif(); else(); # related to complete static linking --- on hold ; set (BOOST_THREAD_LIBRARY); endif(). ```. i.e. is this incantation necessary, or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239542406
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239594511:68,Deployability,install,installed,68,"On my system, `cmake` found (somehow, I didn't tell it) TBB that is installed in `/usr/local/opt/tbb/lib/libtbb.dylib`. What does `otool -L salmon` report on your system after `make install`?. ``` sh; ❯❯❯ otool -L ~/tmp/salmon/bin/salmon; /Users/sjackman/tmp/salmon/bin/salmon:; /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); /usr/local/opt/tbb/lib/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); /usr/local/opt/tbb/lib/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239594511
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239594511:182,Deployability,install,install,182,"On my system, `cmake` found (somehow, I didn't tell it) TBB that is installed in `/usr/local/opt/tbb/lib/libtbb.dylib`. What does `otool -L salmon` report on your system after `make install`?. ``` sh; ❯❯❯ otool -L ~/tmp/salmon/bin/salmon; /Users/sjackman/tmp/salmon/bin/salmon:; /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); /usr/local/opt/tbb/lib/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); /usr/local/opt/tbb/lib/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239594511
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239594781:636,Deployability,install,installed,636,"Mine reports:. ```; ~/S/s/build ❯❯❯ otool -L ../bin/salmon; ../bin/salmon:; /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); @rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); @rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```. I think the difference may be that in my build, the salmon build system d/l and installed libtbb (which it does if it's not present on the system already).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239594781
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008:155,Availability,down,downloading,155,"I'm surprised that the `@rpath` showed up, when I thought that we had disabled that. So long as `brew install salmon` works on Mac, I wouldn't worry about downloading and installing dependencies. Leave that chore to the package manager.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008:102,Deployability,install,install,102,"I'm surprised that the `@rpath` showed up, when I thought that we had disabled that. So long as `brew install salmon` works on Mac, I wouldn't worry about downloading and installing dependencies. Leave that chore to the package manager.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008:171,Deployability,install,installing,171,"I'm surprised that the `@rpath` showed up, when I thought that we had disabled that. So long as `brew install salmon` works on Mac, I wouldn't worry about downloading and installing dependencies. Leave that chore to the package manager.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008:182,Integrability,depend,dependencies,182,"I'm surprised that the `@rpath` showed up, when I thought that we had disabled that. So long as `brew install salmon` works on Mac, I wouldn't worry about downloading and installing dependencies. Leave that chore to the package manager.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239627288:79,Deployability,release,release,79,Is it possible to have homebrew pull from the head of develop before I tag the release to make sure this fix works under homebrew science?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239627288
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714:71,Deployability,patch,patch,71,"I'm testing it now. ``` sh; brew edit salmon; ```. Then add. ``` ruby; patch do; url ""https://github.com/COMBINE-lab/salmon/pull/70.patch""; sha256 ""7129eac8591ad954cca30576519071b1f5ea2a36206f973a1aef0bc1eb5d20da""; end; ```. Then. ``` sh; brew install salmon --build-bottle; brew bottle salmon --json -v; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714:132,Deployability,patch,patch,132,"I'm testing it now. ``` sh; brew edit salmon; ```. Then add. ``` ruby; patch do; url ""https://github.com/COMBINE-lab/salmon/pull/70.patch""; sha256 ""7129eac8591ad954cca30576519071b1f5ea2a36206f973a1aef0bc1eb5d20da""; end; ```. Then. ``` sh; brew install salmon --build-bottle; brew bottle salmon --json -v; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714:244,Deployability,install,install,244,"I'm testing it now. ``` sh; brew edit salmon; ```. Then add. ``` ruby; patch do; url ""https://github.com/COMBINE-lab/salmon/pull/70.patch""; sha256 ""7129eac8591ad954cca30576519071b1f5ea2a36206f973a1aef0bc1eb5d20da""; end; ```. Then. ``` sh; brew install salmon --build-bottle; brew bottle salmon --json -v; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714:4,Testability,test,testing,4,"I'm testing it now. ``` sh; brew edit salmon; ```. Then add. ``` ruby; patch do; url ""https://github.com/COMBINE-lab/salmon/pull/70.patch""; sha256 ""7129eac8591ad954cca30576519071b1f5ea2a36206f973a1aef0bc1eb5d20da""; end; ```. Then. ``` sh; brew install salmon --build-bottle; brew bottle salmon --json -v; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628714
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628911:17,Testability,test,test,17,"Great; this will test against develop, right? Not master. Because 0.7.0 is coming from develop.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239628911
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631165:21,Deployability,release,released,21,I tested against the released 0.6.0 tarball.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631165
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631165:2,Testability,test,tested,2,I tested against the released 0.6.0 tarball.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631165
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631182:53,Safety,Detect,Detecting,53,"Success!. ```; ❯❯❯ brew bottle salmon --json -v; ==> Detecting if salmon-0.6.0_1.el_capitan.bottle.1.tar.gz is relocatable...; ./salmon-0.6.0_1.el_capitan.bottle.1.tar.gz; bottle do; cellar :any; revision 1; sha256 ""8c646bf4e16567180377628fb99fce3a98eeec8b9a55e9140699e0d76b423810"" => :el_capitan; end; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631182
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631230:12,Deployability,release,release,12,"I'd like to release a relocatable bottle of 0.6.0. Would you like to merge this PR and tag Salmon 0.6.1, or would you prefer that I release a revised bottle of Salmon 0.6.0. The revised bottle has the version number `0.6.0_1`. I'm perfectly fine with either.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631230
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631230:132,Deployability,release,release,132,"I'd like to release a relocatable bottle of 0.6.0. Would you like to merge this PR and tag Salmon 0.6.1, or would you prefer that I release a revised bottle of Salmon 0.6.0. The revised bottle has the version number `0.6.0_1`. I'm perfectly fine with either.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631230
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631598:122,Testability,test,test,122,"Awesome! I have a slight preference for 0.6.0_1, since there's no real change to the _codebase_ from 0.6.0. Is it easy to test this against develop (can I tell it to pull from there)? I'd like to test that as well so that, hopefully, I can get 0.7.0 out the door and we can get it in homebrew science by Tues. when the students will be using it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631598
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631598:196,Testability,test,test,196,"Awesome! I have a slight preference for 0.6.0_1, since there's no real change to the _codebase_ from 0.6.0. Is it easy to test this against develop (can I tell it to pull from there)? I'd like to test that as well so that, hopefully, I can get 0.7.0 out the door and we can get it in homebrew science by Tues. when the students will be using it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239631598
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632730:70,Testability,test,test,70,"If you'd like to commit the equivalent of this PR into develop, I can test it for you. Give me the PR or commit SHA1, and I'll test it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632730
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632730:127,Testability,test,test,127,"If you'd like to commit the equivalent of this PR into develop, I can test it for you. Give me the PR or commit SHA1, and I'll test it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632730
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810:39,Deployability,INSTALL,INSTALL,39,"Great! One thing I found is that if I `INSTALL` the unitTests like I've been doing, they fail to find the appropriate libraries (again if they were fetched). I pushed a fix for this in develop. Basically, you just have to copy, not install, the unit test executable. That's done with the following incantation:. ```; add_custom_command(TARGET unitTests POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:unitTests> ${GAT_SOURCE_DIR}/tests/$<TARGET_FILE_NAME:unitTests>; COMMENT ""Copying unitTests""; ); ```. I don't know if this is necessary for homebrew or not, since it has no effect on the salmon binary itself.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810:232,Deployability,install,install,232,"Great! One thing I found is that if I `INSTALL` the unitTests like I've been doing, they fail to find the appropriate libraries (again if they were fetched). I pushed a fix for this in develop. Basically, you just have to copy, not install, the unit test executable. That's done with the following incantation:. ```; add_custom_command(TARGET unitTests POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:unitTests> ${GAT_SOURCE_DIR}/tests/$<TARGET_FILE_NAME:unitTests>; COMMENT ""Copying unitTests""; ); ```. I don't know if this is necessary for homebrew or not, since it has no effect on the salmon binary itself.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810:250,Testability,test,test,250,"Great! One thing I found is that if I `INSTALL` the unitTests like I've been doing, they fail to find the appropriate libraries (again if they were fetched). I pushed a fix for this in develop. Basically, you just have to copy, not install, the unit test executable. That's done with the following incantation:. ```; add_custom_command(TARGET unitTests POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:unitTests> ${GAT_SOURCE_DIR}/tests/$<TARGET_FILE_NAME:unitTests>; COMMENT ""Copying unitTests""; ); ```. I don't know if this is necessary for homebrew or not, since it has no effect on the salmon binary itself.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810:441,Testability,test,tests,441,"Great! One thing I found is that if I `INSTALL` the unitTests like I've been doing, they fail to find the appropriate libraries (again if they were fetched). I pushed a fix for this in develop. Basically, you just have to copy, not install, the unit test executable. That's done with the following incantation:. ```; add_custom_command(TARGET unitTests POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:unitTests> ${GAT_SOURCE_DIR}/tests/$<TARGET_FILE_NAME:unitTests>; COMMENT ""Copying unitTests""; ); ```. I don't know if this is necessary for homebrew or not, since it has no effect on the salmon binary itself.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632810
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632891:193,Deployability,release,release,193,"You can pull from this commit sha on develop to test the equivalent changes on that branch `bd7096e0fa055e0a71ab03a52d99977bcb61c905`. If this works, I think I'm pretty much good to go for the release. Just doing some last minute clean up and finishing up the release notes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632891
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632891:260,Deployability,release,release,260,"You can pull from this commit sha on develop to test the equivalent changes on that branch `bd7096e0fa055e0a71ab03a52d99977bcb61c905`. If this works, I think I'm pretty much good to go for the release. Just doing some last minute clean up and finishing up the release notes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632891
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632891:48,Testability,test,test,48,"You can pull from this commit sha on develop to test the equivalent changes on that branch `bd7096e0fa055e0a71ab03a52d99977bcb61c905`. If this works, I think I'm pretty much good to go for the release. Just doing some last minute clean up and finishing up the release notes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239632891
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239634152:4,Testability,test,testing,4,I'm testing now whether `develop` bd7096e0fa055e0a71ab03a52d99977bcb61c905 is relocatable.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239634152
https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239634438:19,Safety,Detect,Detecting,19,"Success!. ```; ==> Detecting if salmon-HEAD-bd7096e_2.el_capitan.bottle.tar.gz is relocatable...; ./salmon-HEAD-bd7096e_2.el_capitan.bottle.tar.gz; bottle do; cellar :any; sha256 ""467695cb8b24ef5806a2087bfe58cc77b924b82cb110391a23513a05d9aac34e"" => :el_capitan; end; ```. Tag 0.7.0 whenever you're ready. Will you submit the PR to bump the Homebrew Science Salmon formula?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239634438
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556614:80,Deployability,install,install,80,"And I made one in Python :) https://github.com/Teichlab/readquant , you can pip install it. It also reads QC metrics from the directories. It's not updated for 0.7.0 yet though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556614
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556614:148,Deployability,update,updated,148,"And I made one in Python :) https://github.com/Teichlab/readquant , you can pip install it. It also reads QC metrics from the directories. It's not updated for 0.7.0 yet though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556614
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885:255,Deployability,pipeline,pipeline,255,"@roryk I don't think an R package is the right answer :) . My real motivation is to load into Degust: http://www.vicbioinformatics.com/degust/. It can be done with simple Unix cut/paste or with a python script too. But I don't want to depend on R for the pipeline, or even littler. @vals I'll take a look at your script, but still be better if part of Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885:235,Integrability,depend,depend,235,"@roryk I don't think an R package is the right answer :) . My real motivation is to load into Degust: http://www.vicbioinformatics.com/degust/. It can be done with simple Unix cut/paste or with a python script too. But I don't want to depend on R for the pipeline, or even littler. @vals I'll take a look at your script, but still be better if part of Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885:84,Performance,load,load,84,"@roryk I don't think an R package is the right answer :) . My real motivation is to load into Degust: http://www.vicbioinformatics.com/degust/. It can be done with simple Unix cut/paste or with a python script too. But I don't want to depend on R for the pipeline, or even littler. @vals I'll take a look at your script, but still be better if part of Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885:164,Usability,simpl,simple,164,"@roryk I don't think an R package is the right answer :) . My real motivation is to load into Degust: http://www.vicbioinformatics.com/degust/. It can be done with simple Unix cut/paste or with a python script too. But I don't want to depend on R for the pipeline, or even littler. @vals I'll take a look at your script, but still be better if part of Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-240556885
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-299711727:109,Deployability,release,release,109,That's not to say I don't see the utility of having this built in. I'll try and add this command to the next release ;).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-299711727
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-303569258:43,Deployability,install,installed,43,What is the usage for `quantmerge`? I just installed from the develop branch..,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-303569258
https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-335956508:63,Deployability,release,release,63,This command is implemented in develop and will be in the next release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/77#issuecomment-335956508
https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241225575:68,Testability,test,tested,68,"Hi @zhangchipku,. The referenced commit should fix this issue. I've tested `--incompatPrior 0` in alignment and read-based mode with and without VB. The bug was the result of a double-precision floating point comparison close to machine precision returning an unexpected result. The behavior has been fixed (and modified). I'm still planning to do more testing, but feel free to test this out if you can build from source (on the develop branch). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241225575
https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241225575:353,Testability,test,testing,353,"Hi @zhangchipku,. The referenced commit should fix this issue. I've tested `--incompatPrior 0` in alignment and read-based mode with and without VB. The bug was the result of a double-precision floating point comparison close to machine precision returning an unexpected result. The behavior has been fixed (and modified). I'm still planning to do more testing, but feel free to test this out if you can build from source (on the develop branch). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241225575
https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241225575:379,Testability,test,test,379,"Hi @zhangchipku,. The referenced commit should fix this issue. I've tested `--incompatPrior 0` in alignment and read-based mode with and without VB. The bug was the result of a double-precision floating point comparison close to machine precision returning an unexpected result. The behavior has been fixed (and modified). I'm still planning to do more testing, but feel free to test this out if you can build from source (on the develop branch). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241225575
https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241237213:47,Testability,test,test,47,"@zhangchipku — here's a pre-compiled binary to test, in case you're unable to build a binary from develop on the target machine. [SalmonBeta-0.7.1-pre-aug20_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/428673/SalmonBeta-0.7.1-pre-aug20_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78#issuecomment-241237213
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241603077:75,Deployability,update,update,75,"Hi Ryan,. You're right. This fact is not documented and it should be. I'll update the docs to address this. Using the `A` library type with pre-computed alignments has one additional complication that doesn't arise in the quasi-mapping mode. That is, many aligners offer the user the capability of aligning the reads with a prescribed library type (e.g. TopHat, HISAT, etc.), so that in this case the implied library type depends not only on how the reads map to the underlying transcriptome, but also on the parameters with which the reads were aligned with the upstream alignment tool. . However, I don't suppose this needs to be a ""blocking"" technicality. I'll add this feature to the list for the next minor release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241603077
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241603077:712,Deployability,release,release,712,"Hi Ryan,. You're right. This fact is not documented and it should be. I'll update the docs to address this. Using the `A` library type with pre-computed alignments has one additional complication that doesn't arise in the quasi-mapping mode. That is, many aligners offer the user the capability of aligning the reads with a prescribed library type (e.g. TopHat, HISAT, etc.), so that in this case the implied library type depends not only on how the reads map to the underlying transcriptome, but also on the parameters with which the reads were aligned with the upstream alignment tool. . However, I don't suppose this needs to be a ""blocking"" technicality. I'll add this feature to the list for the next minor release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241603077
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241603077:422,Integrability,depend,depends,422,"Hi Ryan,. You're right. This fact is not documented and it should be. I'll update the docs to address this. Using the `A` library type with pre-computed alignments has one additional complication that doesn't arise in the quasi-mapping mode. That is, many aligners offer the user the capability of aligning the reads with a prescribed library type (e.g. TopHat, HISAT, etc.), so that in this case the implied library type depends not only on how the reads map to the underlying transcriptome, but also on the parameters with which the reads were aligned with the upstream alignment tool. . However, I don't suppose this needs to be a ""blocking"" technicality. I'll add this feature to the list for the next minor release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241603077
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241813836:140,Performance,perform,performs,140,"Yes; precisely. In the alignment-based case, Salmon will infer the library type from the alignments. In the case you mention above (someone performs stranded alignment using an unstranded library), Salmon would incorrectly infer a stranded type, though it would actually be a byproduct of passing incorrect options to the aligner. In the read-based mode, since we have control over both the mapping and quantification steps, we can avoid such an issue. However, it seems to me _ok_ to incorrectly infer a library type if we were passed incorrect alignments in the first place, right?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241813836
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241813836:432,Safety,avoid,avoid,432,"Yes; precisely. In the alignment-based case, Salmon will infer the library type from the alignments. In the case you mention above (someone performs stranded alignment using an unstranded library), Salmon would incorrectly infer a stranded type, though it would actually be a byproduct of passing incorrect options to the aligner. In the read-based mode, since we have control over both the mapping and quantification steps, we can avoid such an issue. However, it seems to me _ok_ to incorrectly infer a library type if we were passed incorrect alignments in the first place, right?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241813836
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241900687:892,Deployability,release,release,892,"A BAM file can contain both paired and single-end reads. I haven't been using Salmon long enough to know whether it supports a mixture of paired and single reads. If it doesn't, then there's no issue, because you know immediately after reading the first mapped read whether it is paired. If Salmon does support a mixture of paired and single reads, then you have a problem, because you could have, for example, a BAM file with 10 million single-end reads and then one paired set of 2 reads. In other words, you can't conclude a BAM file is single-end only except by checking every read in the file. I think this means that in the worst case, `--libtype A` would require 2 passes through the BAM file, once to check for paired reads and then again to actually run the quantification. Here's a strategy that might work without 2 passes, possibly at the cost of increased peak memory usage. The release notes say that `--libType A` uses the first 50k reads to infer the lib type. So, read from the BAM file until enough read pairs (25k pairs?) have been read, and then infer the paired library type from those. However, if the first 100k reads don't yield 25k pairs, then just infer the orientation of the unpaired/first mate reads. In this case, now feed the input into 3 separate runs of the quantification at once, one for each possible paired library type. For example, if the first-read orientation is inferred as `SF`, then the 3 possible paired library types are `ISF`, `MSF`, and `OSF`. Run the entire file through each of these 3 quantifaction runs, and then decide afterward which one turned out to be correct (probably whichever one counted the most concordantly paired mates?). Then kill the other 2 runs and finish running the chosen one through the rest of the algorithm. That should avoid having to make multiple passes through the input, but you will triple some component of the memory usage up to the point where the two wrong runs are killed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241900687
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241900687:1795,Safety,avoid,avoid,1795,"A BAM file can contain both paired and single-end reads. I haven't been using Salmon long enough to know whether it supports a mixture of paired and single reads. If it doesn't, then there's no issue, because you know immediately after reading the first mapped read whether it is paired. If Salmon does support a mixture of paired and single reads, then you have a problem, because you could have, for example, a BAM file with 10 million single-end reads and then one paired set of 2 reads. In other words, you can't conclude a BAM file is single-end only except by checking every read in the file. I think this means that in the worst case, `--libtype A` would require 2 passes through the BAM file, once to check for paired reads and then again to actually run the quantification. Here's a strategy that might work without 2 passes, possibly at the cost of increased peak memory usage. The release notes say that `--libType A` uses the first 50k reads to infer the lib type. So, read from the BAM file until enough read pairs (25k pairs?) have been read, and then infer the paired library type from those. However, if the first 100k reads don't yield 25k pairs, then just infer the orientation of the unpaired/first mate reads. In this case, now feed the input into 3 separate runs of the quantification at once, one for each possible paired library type. For example, if the first-read orientation is inferred as `SF`, then the 3 possible paired library types are `ISF`, `MSF`, and `OSF`. Run the entire file through each of these 3 quantifaction runs, and then decide afterward which one turned out to be correct (probably whichever one counted the most concordantly paired mates?). Then kill the other 2 runs and finish running the chosen one through the rest of the algorithm. That should avoid having to make multiple passes through the input, but you will triple some component of the memory usage up to the point where the two wrong runs are killed.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-241900687
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463:1556,Deployability,update,update,1556,"Thanks for the thorough suggestions. Actually, we fall into the easier case since Salmon does not support mixing single and paired-end reads in a single BAM file. When performing quantification on a single sample, the reads for that sample must follow a uniform library type. For paired-end reads, the BAM file can contain paired-end and single-end alignments (i.e. orphans), but the reads must all have been paired _in sequencing_. Mixing different library types in the BAM file makes it difficult to assess the compatibility of a fragment with the expected library type, especially if fragments from the different library types are expected to exist in a specific ratio in the input. Anyway, my main motivation for having the separate `AS` and `AP` types was to prevent the need to ""peek"" in the file, since, currently, there is not an easy way to peek the first read without opening the first file twice. However, I've decided that the benefit of having the same uniform (and simpler) interface of `A` always representing automatic library type detection is probably worth it, so I've pushed this implementation (commit 6116b2a). So, when the user provides the `A` library type, Salmon will peek into the first record in the BAM file to determine if the fragment was paired in sequencing or not, and will then set the single / paired-end status on that basis. The only corollary to this is that, in alignment-based mode, the `A` flag is not compatible with an input stream (i.e. the input must be a regular file). I will be sure to document this when I update the docs for the version bump.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463:988,Integrability,interface,interface,988,"Thanks for the thorough suggestions. Actually, we fall into the easier case since Salmon does not support mixing single and paired-end reads in a single BAM file. When performing quantification on a single sample, the reads for that sample must follow a uniform library type. For paired-end reads, the BAM file can contain paired-end and single-end alignments (i.e. orphans), but the reads must all have been paired _in sequencing_. Mixing different library types in the BAM file makes it difficult to assess the compatibility of a fragment with the expected library type, especially if fragments from the different library types are expected to exist in a specific ratio in the input. Anyway, my main motivation for having the separate `AS` and `AP` types was to prevent the need to ""peek"" in the file, since, currently, there is not an easy way to peek the first read without opening the first file twice. However, I've decided that the benefit of having the same uniform (and simpler) interface of `A` always representing automatic library type detection is probably worth it, so I've pushed this implementation (commit 6116b2a). So, when the user provides the `A` library type, Salmon will peek into the first record in the BAM file to determine if the fragment was paired in sequencing or not, and will then set the single / paired-end status on that basis. The only corollary to this is that, in alignment-based mode, the `A` flag is not compatible with an input stream (i.e. the input must be a regular file). I will be sure to document this when I update the docs for the version bump.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463:168,Performance,perform,performing,168,"Thanks for the thorough suggestions. Actually, we fall into the easier case since Salmon does not support mixing single and paired-end reads in a single BAM file. When performing quantification on a single sample, the reads for that sample must follow a uniform library type. For paired-end reads, the BAM file can contain paired-end and single-end alignments (i.e. orphans), but the reads must all have been paired _in sequencing_. Mixing different library types in the BAM file makes it difficult to assess the compatibility of a fragment with the expected library type, especially if fragments from the different library types are expected to exist in a specific ratio in the input. Anyway, my main motivation for having the separate `AS` and `AP` types was to prevent the need to ""peek"" in the file, since, currently, there is not an easy way to peek the first read without opening the first file twice. However, I've decided that the benefit of having the same uniform (and simpler) interface of `A` always representing automatic library type detection is probably worth it, so I've pushed this implementation (commit 6116b2a). So, when the user provides the `A` library type, Salmon will peek into the first record in the BAM file to determine if the fragment was paired in sequencing or not, and will then set the single / paired-end status on that basis. The only corollary to this is that, in alignment-based mode, the `A` flag is not compatible with an input stream (i.e. the input must be a regular file). I will be sure to document this when I update the docs for the version bump.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463:1048,Safety,detect,detection,1048,"Thanks for the thorough suggestions. Actually, we fall into the easier case since Salmon does not support mixing single and paired-end reads in a single BAM file. When performing quantification on a single sample, the reads for that sample must follow a uniform library type. For paired-end reads, the BAM file can contain paired-end and single-end alignments (i.e. orphans), but the reads must all have been paired _in sequencing_. Mixing different library types in the BAM file makes it difficult to assess the compatibility of a fragment with the expected library type, especially if fragments from the different library types are expected to exist in a specific ratio in the input. Anyway, my main motivation for having the separate `AS` and `AP` types was to prevent the need to ""peek"" in the file, since, currently, there is not an easy way to peek the first read without opening the first file twice. However, I've decided that the benefit of having the same uniform (and simpler) interface of `A` always representing automatic library type detection is probably worth it, so I've pushed this implementation (commit 6116b2a). So, when the user provides the `A` library type, Salmon will peek into the first record in the BAM file to determine if the fragment was paired in sequencing or not, and will then set the single / paired-end status on that basis. The only corollary to this is that, in alignment-based mode, the `A` flag is not compatible with an input stream (i.e. the input must be a regular file). I will be sure to document this when I update the docs for the version bump.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463:979,Usability,simpl,simpler,979,"Thanks for the thorough suggestions. Actually, we fall into the easier case since Salmon does not support mixing single and paired-end reads in a single BAM file. When performing quantification on a single sample, the reads for that sample must follow a uniform library type. For paired-end reads, the BAM file can contain paired-end and single-end alignments (i.e. orphans), but the reads must all have been paired _in sequencing_. Mixing different library types in the BAM file makes it difficult to assess the compatibility of a fragment with the expected library type, especially if fragments from the different library types are expected to exist in a specific ratio in the input. Anyway, my main motivation for having the separate `AS` and `AP` types was to prevent the need to ""peek"" in the file, since, currently, there is not an easy way to peek the first read without opening the first file twice. However, I've decided that the benefit of having the same uniform (and simpler) interface of `A` always representing automatic library type detection is probably worth it, so I've pushed this implementation (commit 6116b2a). So, when the user provides the `A` library type, Salmon will peek into the first record in the BAM file to determine if the fragment was paired in sequencing or not, and will then set the single / paired-end status on that basis. The only corollary to this is that, in alignment-based mode, the `A` flag is not compatible with an input stream (i.e. the input must be a regular file). I will be sure to document this when I update the docs for the version bump.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-242399463
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-243438079:108,Safety,detect,detection,108,"Given the alternatives, I think this is currently the best approach for implementing automatic library type detection in alignment-based mode. I'll add an appropriate note to the documentation to specify that streaming input cannot be used with automatic library type detection when using the `A` library type --- otherwise it should work as in the read-based mode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-243438079
https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-243438079:268,Safety,detect,detection,268,"Given the alternatives, I think this is currently the best approach for implementing automatic library type detection in alignment-based mode. I'll add an appropriate note to the documentation to specify that streaming input cannot be used with automatic library type detection when using the `A` library type --- otherwise it should work as in the read-based mode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/79#issuecomment-243438079
https://github.com/COMBINE-lab/salmon/issues/80#issuecomment-243138374:233,Deployability,update,updates,233,"Hi @uros-sipetic,. Indeed, you're right on both fronts. I've just pushed commit 423b622, which addresses these. It removes one of the duplicate flags --- keeping the one with the same description as in the mapping-based mode, and it updates the default `--fldMax` in alignment-based mode to be 1000 for consistency with mapping-based mode. Thanks for pointing these out!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/80#issuecomment-243138374
https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243602381:213,Availability,down,down,213,"Hi @gresteban,. Thanks for reporting this. Did this happen when running with the automatic library type detection or with `-l SF`? It is _not_ intended, but knowing what code path was executed will help me narrow down the source of the bug.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243602381
https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243602381:104,Safety,detect,detection,104,"Hi @gresteban,. Thanks for reporting this. Did this happen when running with the automatic library type detection or with `-l SF`? It is _not_ intended, but knowing what code path was executed will help me narrow down the source of the bug.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243602381
https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243652543:824,Deployability,release,release,824,"Hi @gresteban,. Thanks for reporting this. One issue is that the library types are kept encoded in a dense table. Some codes correspond to ""invalid"" library types (i.e. types we'd never see in practice like single end, with a paired-end strandedness type like forward-reverse, etc.). Even those these never garner counts, the `lib_format_counts.json` file was generated by enumerating all possible library type codes, which is why you see more than 12 different library formats even though there are only 12 valid formats. The other issue was that, though the encoding was right internally, I was writing out single end, stranded, forward reads as 'F' and single end, stranded, reverse reads as 'R' when these should be 'SF' and 'SR'. This issue should be addressed by commit a944f7d, and the fix will make it into the next release of Salmon. Thanks again!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243652543
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243813359:23,Usability,learn,learn,23,"Side note: does Salmon learn the fragment length distribution from the data, using the user-provided values as a starting point? Is it even possible to do this for stranded single-end data? (I know it's possible for unstranded single-end.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243813359
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:893,Availability,down,down,893,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:1627,Availability,reliab,reliably,1627,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:623,Deployability,update,update,623,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:611,Energy Efficiency,efficient,efficiently,611,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:1206,Energy Efficiency,efficient,efficiently,1206,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:973,Integrability,depend,depend,973,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:1297,Usability,learn,learns,1297,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243845991:384,Testability,test,test,384,"No additional ideas from me. I didn't cover single-end when coding up alpine, but I would go about it just as you describe. re: ""under the naive implementation in the single-end case"", I guess the _super-naive_ implementation is to just use the FLD mean to compute the observed GC model (ignore the distribution for this estimation task). It might get close enough. I guess one could test by comparing the GC bias estimates from running paired with read 1 & 2 vs running single end with just 1 or 2.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243845991
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-245366321:114,Testability,test,test,114,"Alright, I'll have a go at the simple model. @mikelove, once I have it implemented we can figure out a reasonable test. Actually, enabling the feature was _way_ easier than I thought. The actual bias application code (via re-estimation of effective lengths) can remain the same. I now have code-paths to build GC bias models treating single-end reads as equal to the _conditional_ mean fragment length (given the transcript). Let me know what you think would be a good way to test it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-245366321
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-245366321:476,Testability,test,test,476,"Alright, I'll have a go at the simple model. @mikelove, once I have it implemented we can figure out a reasonable test. Actually, enabling the feature was _way_ easier than I thought. The actual bias application code (via re-estimation of effective lengths) can remain the same. I now have code-paths to build GC bias models treating single-end reads as equal to the _conditional_ mean fragment length (given the transcript). Let me know what you think would be a good way to test it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-245366321
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-245366321:31,Usability,simpl,simple,31,"Alright, I'll have a go at the simple model. @mikelove, once I have it implemented we can figure out a reasonable test. Actually, enabling the feature was _way_ easier than I thought. The actual bias application code (via re-estimation of effective lengths) can remain the same. I now have code-paths to build GC bias models treating single-end reads as equal to the _conditional_ mean fragment length (given the transcript). Let me know what you think would be a good way to test it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-245366321
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791:358,Availability,robust,robust,358,"I would think the best way to test it would be as Mike says: run Salmon on a paired-end library with bias-correction enabled, and then re-run it on only read 1 of the same library, only read 2, and on all the reads but treating it as single-end, and see how close it comes in each case. I would say it's also important to test whether the bias estimation is robust against modest misspecification of the mean fragment size, since that is often not known very accurately.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791:30,Testability,test,test,30,"I would think the best way to test it would be as Mike says: run Salmon on a paired-end library with bias-correction enabled, and then re-run it on only read 1 of the same library, only read 2, and on all the reads but treating it as single-end, and see how close it comes in each case. I would say it's also important to test whether the bias estimation is robust against modest misspecification of the mean fragment size, since that is often not known very accurately.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791:322,Testability,test,test,322,"I would think the best way to test it would be as Mike says: run Salmon on a paired-end library with bias-correction enabled, and then re-run it on only read 1 of the same library, only read 2, and on all the reads but treating it as single-end, and see how close it comes in each case. I would say it's also important to test whether the bias estimation is robust against modest misspecification of the mean fragment size, since that is often not known very accurately.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164908:60,Testability,test,test,60,"Unfortunately, I don't necessarily have a great data set to test on, since my motivation for requesting this feature was that I'm working on a single-end dataset.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164908
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-291810537:107,Testability,test,tested,107,"Hi,; Sorry for reviving this old thread, but could you confirm that this option was indeed implemented and tested, and let me know which version of Salmon it was implemented on?; Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-291810537
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-320479168:59,Deployability,release,release,59,It does seem that this option is implemented on the latest release (0.8.2). With single-end data with the --gcBias flag there is a warning about the implementation being experimental. Have you had a chance to test the results? Would be very interested to hear,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-320479168
https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-320479168:209,Testability,test,test,209,It does seem that this option is implemented on the latest release (0.8.2). With single-end data with the --gcBias flag there is a warning about the implementation being experimental. Have you had a chance to test the results? Would be very interested to hear,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-320479168
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244773065:368,Testability,log,logic,368,"Hi @uros-sipetic,. Thanks for reporting this. I can't reproduce the issue that, when I pass an argument to `writeMappings`, the SAM data is still written to stdout. Could you tell me if you're using the pre-compiled binary, and if so, what type of system you're running on? However, I can produce a different issue which may be related (and might be an issue with the logic for checking if a directory exists). Can you try the following command in your case and tell me what happens?. `salmon quant -i ucsc.hg19.transcriptome_salmon_index -1 reads.pe_1.fastq -2 reads.pe_2.fastq --writeMappings test_output/mappings_info -o test_output -l A -p 2`. also, you should be able to do `--writeMappings ./mappings_info`. The problem appears to be with the code that checks if the parent path where the mapping info is to be written exists or not:. ``` c++; // get the parent directory; bfs::path qmDir = boost::filesystem::path(sopt.qmFileName).parent_path();; // if it's not already a directory that exists; bool qmDirSuccess = boost::filesystem::is_directory(qmDir);; ```. The issue is that `sopt.qmFileName` need not be a ""canonical"" path, so that the call to parent_path might return the empty string, which results in an exception being thrown (and, at least caught and reported) when boost tries to create the parent directory """". The solution is to canonicalize the path, which I'm doing now. However, if you provide a qualified path (either fully-qualified or even relatively qualified), then it should work. Specifically, if I provide a non-empty argument to `--writeMappings` I don't get any output on stdout.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244773065
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040:713,Testability,test,test,713,"Hi @rob-p ; I did use the pre-compiled binaries and the system I use is ubuntu 14.04.; Hmm.. even with the change you wrote, I seem to be getting similar results.; Does the order of parameters matter? I.e. in my command line, should I put -o first and then --writeMappings?. EDIT: Sorry, actually this might have worked, it's just that my read files were too big, and the run didn't actually even finish because I ran out of memory, and at the time of run cancellation I didn't see the resulting file (but all the other files Salmon output files were present) so I assumed it hasn't even been generated. My command-line window also froze up, so I couldn't see if what the stdout looked like. ; I'll definitely re-test when I find smaller files. . EDIT2: Ok, so I retested with smaller files, the run was successful, but still no resulting file. I'll be rechecking this for any mistakes, if I did something wrong. Here's the logs in case it means anything:. Version Info: This is the most recent version of Salmon.; salmon (mapping-based) v0.7.2; [ program ] => salmon; [ command ] => quant; [ index ] => { ucsc.hg19.transcriptome_salmon_index }; [ libType ] => { A }; [ mates1 ] => { reads.pe_1.fastq }; [ mates2 ] => { reads.pe_2.fastq }; [ output ] => { reads.pe_salmon_quant }; [ threads ] => { 2 }; [ auxDir ] => { aux_info }; [ writeMappings ] => { }; [ ] => { reads.pe.salmon_quant_mapping_info.sam }; Logs will be written to reads.pe_salmon_quant/logs",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040:924,Testability,log,logs,924,"Hi @rob-p ; I did use the pre-compiled binaries and the system I use is ubuntu 14.04.; Hmm.. even with the change you wrote, I seem to be getting similar results.; Does the order of parameters matter? I.e. in my command line, should I put -o first and then --writeMappings?. EDIT: Sorry, actually this might have worked, it's just that my read files were too big, and the run didn't actually even finish because I ran out of memory, and at the time of run cancellation I didn't see the resulting file (but all the other files Salmon output files were present) so I assumed it hasn't even been generated. My command-line window also froze up, so I couldn't see if what the stdout looked like. ; I'll definitely re-test when I find smaller files. . EDIT2: Ok, so I retested with smaller files, the run was successful, but still no resulting file. I'll be rechecking this for any mistakes, if I did something wrong. Here's the logs in case it means anything:. Version Info: This is the most recent version of Salmon.; salmon (mapping-based) v0.7.2; [ program ] => salmon; [ command ] => quant; [ index ] => { ucsc.hg19.transcriptome_salmon_index }; [ libType ] => { A }; [ mates1 ] => { reads.pe_1.fastq }; [ mates2 ] => { reads.pe_2.fastq }; [ output ] => { reads.pe_salmon_quant }; [ threads ] => { 2 }; [ auxDir ] => { aux_info }; [ writeMappings ] => { }; [ ] => { reads.pe.salmon_quant_mapping_info.sam }; Logs will be written to reads.pe_salmon_quant/logs",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040:1408,Testability,Log,Logs,1408,"Hi @rob-p ; I did use the pre-compiled binaries and the system I use is ubuntu 14.04.; Hmm.. even with the change you wrote, I seem to be getting similar results.; Does the order of parameters matter? I.e. in my command line, should I put -o first and then --writeMappings?. EDIT: Sorry, actually this might have worked, it's just that my read files were too big, and the run didn't actually even finish because I ran out of memory, and at the time of run cancellation I didn't see the resulting file (but all the other files Salmon output files were present) so I assumed it hasn't even been generated. My command-line window also froze up, so I couldn't see if what the stdout looked like. ; I'll definitely re-test when I find smaller files. . EDIT2: Ok, so I retested with smaller files, the run was successful, but still no resulting file. I'll be rechecking this for any mistakes, if I did something wrong. Here's the logs in case it means anything:. Version Info: This is the most recent version of Salmon.; salmon (mapping-based) v0.7.2; [ program ] => salmon; [ command ] => quant; [ index ] => { ucsc.hg19.transcriptome_salmon_index }; [ libType ] => { A }; [ mates1 ] => { reads.pe_1.fastq }; [ mates2 ] => { reads.pe_2.fastq }; [ output ] => { reads.pe_salmon_quant }; [ threads ] => { 2 }; [ auxDir ] => { aux_info }; [ writeMappings ] => { }; [ ] => { reads.pe.salmon_quant_mapping_info.sam }; Logs will be written to reads.pe_salmon_quant/logs",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040:1454,Testability,log,logs,1454,"Hi @rob-p ; I did use the pre-compiled binaries and the system I use is ubuntu 14.04.; Hmm.. even with the change you wrote, I seem to be getting similar results.; Does the order of parameters matter? I.e. in my command line, should I put -o first and then --writeMappings?. EDIT: Sorry, actually this might have worked, it's just that my read files were too big, and the run didn't actually even finish because I ran out of memory, and at the time of run cancellation I didn't see the resulting file (but all the other files Salmon output files were present) so I assumed it hasn't even been generated. My command-line window also froze up, so I couldn't see if what the stdout looked like. ; I'll definitely re-test when I find smaller files. . EDIT2: Ok, so I retested with smaller files, the run was successful, but still no resulting file. I'll be rechecking this for any mistakes, if I did something wrong. Here's the logs in case it means anything:. Version Info: This is the most recent version of Salmon.; salmon (mapping-based) v0.7.2; [ program ] => salmon; [ command ] => quant; [ index ] => { ucsc.hg19.transcriptome_salmon_index }; [ libType ] => { A }; [ mates1 ] => { reads.pe_1.fastq }; [ mates2 ] => { reads.pe_2.fastq }; [ output ] => { reads.pe_salmon_quant }; [ threads ] => { 2 }; [ auxDir ] => { aux_info }; [ writeMappings ] => { }; [ ] => { reads.pe.salmon_quant_mapping_info.sam }; Logs will be written to reads.pe_salmon_quant/logs",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244780040
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244903765:23,Testability,test,testing,23,"Hi @rob-p ; So I tried testing again, running Salmon without any scripts, and again I keep having the same issue. The command line part with the parameter in question is (copy-pasted): ; ""--writeMappings test_output/mappings_info"" ; and the cmd_info.json file looks the same as before, with the """" key. ; Do I need to call that parameter differently, like --writeMappings=file_name, or...? ; If I did made some stupid mistake, sorry then upfront for wasting your time, in the meantime I'll try and test this a couple of more times in the next few days and try and see what's up.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244903765
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244903765:498,Testability,test,test,498,"Hi @rob-p ; So I tried testing again, running Salmon without any scripts, and again I keep having the same issue. The command line part with the parameter in question is (copy-pasted): ; ""--writeMappings test_output/mappings_info"" ; and the cmd_info.json file looks the same as before, with the """" key. ; Do I need to call that parameter differently, like --writeMappings=file_name, or...? ; If I did made some stupid mistake, sorry then upfront for wasting your time, in the meantime I'll try and test this a couple of more times in the next few days and try and see what's up.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244903765
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244935740:531,Deployability,release,release,531,"Ok, I was able to reproduce your issue. Interestingly, it happens for me _only_ with the pre-compiled binary. My guess is that it's a problem with using both default and implicit options with the older version of boost with which the pre-compiled binary was made (I make the binary under a docker image with an old version of CentOS to maximize compatibility). A temporary work-around is to use the form `--writeMapping=test_output/mappings_info`, which seems to solve the issue that was occurring. I'll make a note of this on the release page and see if I can find a way around this when building the next binary release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244935740
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244935740:614,Deployability,release,release,614,"Ok, I was able to reproduce your issue. Interestingly, it happens for me _only_ with the pre-compiled binary. My guess is that it's a problem with using both default and implicit options with the older version of boost with which the pre-compiled binary was made (I make the binary under a docker image with an old version of CentOS to maximize compatibility). A temporary work-around is to use the form `--writeMapping=test_output/mappings_info`, which seems to solve the issue that was occurring. I'll make a note of this on the release page and see if I can find a way around this when building the next binary release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244935740
https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244982752:341,Deployability,release,release,341,"Hi @uros-sipetic,. Actually, it looks like what you're seeing is [actually the intended behavior](http://stackoverflow.com/questions/39351580/default-and-implicit-arguments-in-boost-program-options), and the behavior where `--writeMappings ./test_output` works is actually unexpected. Thus, I don't anticipate this being ""fixed"" in a future release, since it's actually behaving as expected. So, you can use either `--writeMappings=<outfile>` to get the correct behavior. I might look into why my system accepts `--writeMappings <outfile>`, but probably won't dig too deep since I expect the behavior is probably ill defined.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/86#issuecomment-244982752
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:781,Deployability,release,releases,781,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:572,Integrability,interface,interfaces,572,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:762,Integrability,synchroniz,synchronize,762,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:1274,Performance,optimiz,optimizations,1274,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:1419,Performance,optimiz,optimizations,1419,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:1549,Performance,optimiz,optimizations,1549,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704:196,Usability,simpl,simply,196,"Hi @satta,. Thanks for bringing this to my attention. I am of two minds on this proposal. On one hand, I agree that it is cleaner, in theory, to have a RapMap shared library to which Salmon could simply link. Currently, Salmon pulls in the relevant portions of the RapMap code to call what is essentially an ill-defined public API for mapping. On the other hand, I have two concerns about separating the code at this point, one is major the other minor. The major concern is that both Salmon and RapMap are still very much under active development, core code and even the interfaces are undergoing reasonably rapid changes (thus the versioning < 1.0). This allows me to easily add features that may potentially benefit Salmon to the RapMap codebase, and then to synchronize Salmon releases with particular commits (tags) in the RapMap codebase. The current build system makes it very easy to pull in the appropriately versioned RapMap code. On the other hand, I have very little experience in properly versioning shared libraries so I would have to understand that better and how this could be done without complicating the build process. My _minor_ concern is that I don't know what effect, if any, separating the code into a separate shared library might have on compiler optimizations. Right now, since the relevant RapMap code is compiled alongside Salmon and they are linked together into the same module, certain optimizations may be possible that would not be so when linking to a shared library. My educated guess is that the effect of such optimizations would be negligible, but it's something that may be worth some exploration first. Overall, I'm very open to this idea, but I think I need to do some homework on it before we can commit and undertake the change.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-246027704
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447234788:44,Deployability,release,release,44,"Hi,; I've just uploaded the latest upstream release of salmon to Debian and like to bring up this topic again. I noticed that RapMap is tagging releases even with salmon- prefix. I have no idea why the release tags are choosen this way but I was confused in the first moment.; Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447234788
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447234788:144,Deployability,release,releases,144,"Hi,; I've just uploaded the latest upstream release of salmon to Debian and like to bring up this topic again. I noticed that RapMap is tagging releases even with salmon- prefix. I have no idea why the release tags are choosen this way but I was confused in the first moment.; Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447234788
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447234788:202,Deployability,release,release,202,"Hi,; I've just uploaded the latest upstream release of salmon to Debian and like to bring up this topic again. I noticed that RapMap is tagging releases even with salmon- prefix. I have no idea why the release tags are choosen this way but I was confused in the first moment.; Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447234788
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180:335,Deployability,release,releases,335,"Hi @tillea,. Thanks for taking care of pushing this to Debian. The reason for the tags are as follows. Though RapMap is a stand-alone tool, the main mapping algorithm is used (as a library, via an API) within salmon. There are sometimes changes made to the RapMap codebase that are relevant only for salmon. Since we distribute salmon releases via a few channels (including bioconda), we want to have reproducible builds at stable point releases. Thus, every release of salmon is ""paired"" with a corresponding tagged version of RapMap, which is the exact RapMap version used in that version of salmon. Since salmon is updated more frequently than RapMap, and since many times the relevant changes only have an effect for salmon, this approach was taken to not require a major RapMap version bump prior to each new salmon release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180:437,Deployability,release,releases,437,"Hi @tillea,. Thanks for taking care of pushing this to Debian. The reason for the tags are as follows. Though RapMap is a stand-alone tool, the main mapping algorithm is used (as a library, via an API) within salmon. There are sometimes changes made to the RapMap codebase that are relevant only for salmon. Since we distribute salmon releases via a few channels (including bioconda), we want to have reproducible builds at stable point releases. Thus, every release of salmon is ""paired"" with a corresponding tagged version of RapMap, which is the exact RapMap version used in that version of salmon. Since salmon is updated more frequently than RapMap, and since many times the relevant changes only have an effect for salmon, this approach was taken to not require a major RapMap version bump prior to each new salmon release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180:459,Deployability,release,release,459,"Hi @tillea,. Thanks for taking care of pushing this to Debian. The reason for the tags are as follows. Though RapMap is a stand-alone tool, the main mapping algorithm is used (as a library, via an API) within salmon. There are sometimes changes made to the RapMap codebase that are relevant only for salmon. Since we distribute salmon releases via a few channels (including bioconda), we want to have reproducible builds at stable point releases. Thus, every release of salmon is ""paired"" with a corresponding tagged version of RapMap, which is the exact RapMap version used in that version of salmon. Since salmon is updated more frequently than RapMap, and since many times the relevant changes only have an effect for salmon, this approach was taken to not require a major RapMap version bump prior to each new salmon release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180:618,Deployability,update,updated,618,"Hi @tillea,. Thanks for taking care of pushing this to Debian. The reason for the tags are as follows. Though RapMap is a stand-alone tool, the main mapping algorithm is used (as a library, via an API) within salmon. There are sometimes changes made to the RapMap codebase that are relevant only for salmon. Since we distribute salmon releases via a few channels (including bioconda), we want to have reproducible builds at stable point releases. Thus, every release of salmon is ""paired"" with a corresponding tagged version of RapMap, which is the exact RapMap version used in that version of salmon. Since salmon is updated more frequently than RapMap, and since many times the relevant changes only have an effect for salmon, this approach was taken to not require a major RapMap version bump prior to each new salmon release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180
https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180:821,Deployability,release,release,821,"Hi @tillea,. Thanks for taking care of pushing this to Debian. The reason for the tags are as follows. Though RapMap is a stand-alone tool, the main mapping algorithm is used (as a library, via an API) within salmon. There are sometimes changes made to the RapMap codebase that are relevant only for salmon. Since we distribute salmon releases via a few channels (including bioconda), we want to have reproducible builds at stable point releases. Thus, every release of salmon is ""paired"" with a corresponding tagged version of RapMap, which is the exact RapMap version used in that version of salmon. Since salmon is updated more frequently than RapMap, and since many times the relevant changes only have an effect for salmon, this approach was taken to not require a major RapMap version bump prior to each new salmon release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87#issuecomment-447482180
https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770:583,Availability,down,downstream,583,"Hi Pete,. Yup, this would be my recommended way to handle it. Since salmon accepts streaming input, you could do something like:. ```; salmon quant -i index -l A -1 <(gzcat rep1_muliplex1_1.fq.gz rep1_mutliplex2_1.fq.gz) -2 <(gzcat rep1_multiplex1_2.fq.gz rep1_multiplex2_2.fq.gz) [other options etc.]; ```. to avoid creating the intermediate concatenated files on disk. This will treat all the multiplexed samples from the same replicate as one giant input read stream (conceptually representing a single replicate). As far as merging / combining Salmon output, if you're doing the downstream analysis in R, the tximport package is nice. Otherwise, @vals has a python tool [readquant](https://github.com/Teichlab/readquant) that can also do some merging. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770
https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770:311,Safety,avoid,avoid,311,"Hi Pete,. Yup, this would be my recommended way to handle it. Since salmon accepts streaming input, you could do something like:. ```; salmon quant -i index -l A -1 <(gzcat rep1_muliplex1_1.fq.gz rep1_mutliplex2_1.fq.gz) -2 <(gzcat rep1_multiplex1_2.fq.gz rep1_multiplex2_2.fq.gz) [other options etc.]; ```. to avoid creating the intermediate concatenated files on disk. This will treat all the multiplexed samples from the same replicate as one giant input read stream (conceptually representing a single replicate). As far as merging / combining Salmon output, if you're doing the downstream analysis in R, the tximport package is nice. Otherwise, @vals has a python tool [readquant](https://github.com/Teichlab/readquant) that can also do some merging. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770
https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245413908:752,Availability,down,downstream,752,"Excellent, I was hoping streaming input would 'just work'. Thanks, Rob!. On Wed., 7 Sep. 2016, 4:45 pm Rob Patro, notifications@github.com wrote:. > Hi Pete,; > ; > Yup, this would be my recommended way to handle it. Since salmon accepts; > streaming input, you could do something like:; > ; > salmon quant -i index -l A -1 <(gzcat rep1_muliplex1_1.fq.gz rep1_mutliplex2_1.fq.gz) -2 <(gzcat rep1_multiplex1_2.fq.gz rep1_multiplex2_2.fq.gz) [other options etc.]; > ; > to avoid creating the intermediate concatenated files on disk. This will; > treat all the multiplexed samples from the same replicate as one giant; > input read stream (conceptually representing a single replicate). As far as; > merging / combining Salmon output, if you're doing the downstream analysis; > in R, the tximport package is nice. Otherwise, @vals; > https://github.com/vals has a python tool readquant; > https://github.com/Teichlab/readquant that can also do some merging.; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ABAEjUsIBA5yK5R7MPW38jiuH0xx_IRCks5qnyJJgaJpZM4J3L2E; > .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245413908
https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245413908:471,Safety,avoid,avoid,471,"Excellent, I was hoping streaming input would 'just work'. Thanks, Rob!. On Wed., 7 Sep. 2016, 4:45 pm Rob Patro, notifications@github.com wrote:. > Hi Pete,; > ; > Yup, this would be my recommended way to handle it. Since salmon accepts; > streaming input, you could do something like:; > ; > salmon quant -i index -l A -1 <(gzcat rep1_muliplex1_1.fq.gz rep1_mutliplex2_1.fq.gz) -2 <(gzcat rep1_multiplex1_2.fq.gz rep1_multiplex2_2.fq.gz) [other options etc.]; > ; > to avoid creating the intermediate concatenated files on disk. This will; > treat all the multiplexed samples from the same replicate as one giant; > input read stream (conceptually representing a single replicate). As far as; > merging / combining Salmon output, if you're doing the downstream analysis; > in R, the tximport package is nice. Otherwise, @vals; > https://github.com/vals has a python tool readquant; > https://github.com/Teichlab/readquant that can also do some merging.; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ABAEjUsIBA5yK5R7MPW38jiuH0xx_IRCks5qnyJJgaJpZM4J3L2E; > .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245413908
https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-245930320:116,Deployability,update,update,116,"Thanks! I don't have a CentOS 5 setup anywhere where I could test, but if it should be fixed then I'll go ahead and update the formula and bug you about it if anyone runs into problems.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-245930320
https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-245930320:61,Testability,test,test,61,"Thanks! I don't have a CentOS 5 setup anywhere where I could test, but if it should be fixed then I'll go ahead and update the formula and bug you about it if anyone runs into problems.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-245930320
https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-245999418:107,Deployability,install,installed,107,"Is there some way I can pass a custom CFLAGS to the libbwa build? The Makefile there assumes a system-wide installed zlib, which bioconda doesn't have on its docker image, so the bwa build needs to get the -I and -L flags to point to the correct place.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-245999418
https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-246025112:170,Modifiability,variab,variables,170,"Hrmm --- [this](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L366) is the relevant part of the CMakeFile that builds this. It uses the `CC` and `CXX` variables, but doesn't explicitly pass along any others. The first thing to check is what variables the bwa makefile respects, and then to propagate these along via CMake.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-246025112
https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-246025112:260,Modifiability,variab,variables,260,"Hrmm --- [this](https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L366) is the relevant part of the CMakeFile that builds this. It uses the `CC` and `CXX` variables, but doesn't explicitly pass along any others. The first thing to check is what variables the bwa makefile respects, and then to propagate these along via CMake.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-246025112
https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-246073102:391,Deployability,install,installed,391,"Got this working, I had to make some edits to CMakeLists.txt:. ```; sed -i 's/.\/autogen.sh/CFLAGS=-fPIC CPPFLAGS=-fPIC .\/autogen.sh/' CMakeLists.txt; sed -i 's/CFLAGS+=${STADEN_LIB}/CFLAGS+=${STADEN_LIB} CFLAGS+=-lz/' CMakeLists.txt; ```. jemalloc wasn't getting passed the -fPIC flag properly so was causing some problems and libstaden was having some troubles finding the non-systemwide installed zlib.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89#issuecomment-246073102
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:94,Deployability,release,release,94,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:131,Deployability,release,release,131,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:351,Deployability,release,release,351,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:717,Deployability,release,release,717,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:817,Integrability,message,messages,817,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:1114,Integrability,message,messages,1114,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:809,Testability,log,logging,809,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758:1106,Testability,log,logging,1106,"Hi @nskbe,. The issue you're seeing with the mapping file name is related to this note in the release notes:. > Note: In the 0.7.2 release, the file provided to --writeMappings must use a qualified path (e.g. --writeMappings=./out.sam rather than --writeMappings=out.sam), this constraint is already addressed on develop and will be fixed in the next release. . Essentially, the code should internally qualify the filepath before checking if a directory exists, but it doesn't. The fix for this is to pass the file name as a qualified path (i.e. adding `./` before the file name when you want it in the current directory). This is already resolved in develop and the fix for this annoyance will make it into the next release. Regarding the issue with writing the information to `stdout`; actually, all of the logging messages are written to `stderr`. If you don't redirect `stdout`, then you'll see everything, but the intended usage for that mode is something like:. ```; salmon quant -i idx [other options] --writeMappings > out.sam; ```. This will redirect standard out to out.sam. You'll still see the logging messages on the console, since they are written to `stderr`, but all of the mapping contents are redirected to the file. Let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247072758
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:406,Integrability,message,messages,406,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:754,Performance,Load,Loading,754,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:832,Performance,Load,Loading,832,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:918,Performance,Load,Loading,918,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:999,Performance,Load,Loading,999,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:1083,Performance,Load,Loading,1083,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:1380,Performance,load,loading,1380,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:1465,Performance,load,loaded,1465,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:1550,Performance,load,loading,1550,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:1388,Security,hash,hash,1388,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:1481,Security,hash,hash,1481,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586:240,Testability,test,test,240,"Hi, Rob, thanks for the quick reply! By the way, great job on salmon!. Using ./ did fix the issue. About the stdout issue, I'm running:. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x --writeMappings > out.sam. and not all messages are output to stderr (I'm not using 2> ). The ones starting with ### do, but others end up in out.sam. out.sam starts with:. ESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:37:38.908] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [jointLog] [info] Loading 32-bit quasi index; ESC[00mESC[1m[2016-09-14 11:37:43.996] [stderrLog] [info] Loading Suffix Array ; ESC[00mESC[1m[2016-09-14 11:38:06.669] [stderrLog] [info] Loading Transcript Info ; ESC[00mESC[1m[2016-09-14 11:38:12.374] [stderrLog] [info] Loading Rank-Select Bit Array; ESC[00mESC[1m[2016-09-14 11:38:12.444] [stderrLog] [info] There were 95309 set bits in the bit array; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Computing transcript lengths; ESC[00mESC[1m[2016-09-14 11:38:12.700] [stderrLog] [info] Waiting to finish loading hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Successfully loaded position hash; ESC[00mESC[1m[2016-09-14 11:39:49.792] [stderrLog] [info] Done loading index; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] done; ESC[00mESC[1m[2016-09-14 11:39:49.792] [jointLog] [info] Index contained 95309 targets; ESC[00mESC[33mESC[1m[2016-09-14 11:40:18.128] [jointLog] [warning] Fragment GC bias correction is currently only implemented for paired-end libraries. Disabling fragment GC bias correction for this run; ESC[00m@HD VN:1.0 SO:unknown",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247078586
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247079124:49,Testability,log,log,49,"Hrmm, that shouldn't happen (i.e. that's why the log is called `stderrLog`). So something is strange there. I'll take a look. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247079124
https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247083685:282,Deployability,release,release,282,"Ahh --- I see what's happening. This is the offending line:. https://github.com/COMBINE-lab/salmon/blob/develop/src/SalmonUtils.cpp#L1346. I must have changed it and forgotten to change back at some point. That should be stderr, not stdout. I'll fix this in develop and build a new release. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90#issuecomment-247083685
https://github.com/COMBINE-lab/salmon/pull/92#issuecomment-249087178:134,Deployability,release,release,134,Sorry it took me so long to get around to this. Thanks for the PR! I merged into develop instead of master since I'm working on a new release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/92#issuecomment-249087178
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-249524891:607,Deployability,update,update,607,"I would argue that Kallisto is ""cheating"" a bit by looking at expression of the equivalence classes :p, avoiding the ambiguous assignment issue. Just offering an opinion as a Salmon fan, but to me it seems extremely hard to make the data generation model of coverage based sequencing compatible with umi-tags. I've been thinking a bit about this, and actually, if the PCR bias model in 0.7/Alpine is good, it might even make sense to _ignore_ the UMI and quantify the expression based the mRNA tags alone. In this case you would just need to change transcript length to be constant per transcript, and only update effectiveLength's based on the sequence biases. The reason you have UMI's in the first place, is that 3'/5'-tag libraries will have much lower complexity than full-length libraries, and due to that you can argue that PCR bias will be a larger problem. But if it is possible to accurately account for the PCR bias with GC content, maybe they are not so needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-249524891
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-249524891:104,Safety,avoid,avoiding,104,"I would argue that Kallisto is ""cheating"" a bit by looking at expression of the equivalence classes :p, avoiding the ambiguous assignment issue. Just offering an opinion as a Salmon fan, but to me it seems extremely hard to make the data generation model of coverage based sequencing compatible with umi-tags. I've been thinking a bit about this, and actually, if the PCR bias model in 0.7/Alpine is good, it might even make sense to _ignore_ the UMI and quantify the expression based the mRNA tags alone. In this case you would just need to change transcript length to be constant per transcript, and only update effectiveLength's based on the sequence biases. The reason you have UMI's in the first place, is that 3'/5'-tag libraries will have much lower complexity than full-length libraries, and due to that you can argue that PCR bias will be a larger problem. But if it is possible to accurately account for the PCR bias with GC content, maybe they are not so needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-249524891
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-251217506:400,Testability,test,tested,400,"Hi guys,. I'm certainly open to adding this type of thing if there's sufficient desire for it. I agree with @vals that making umi tags compatible with a data generation model based on expected coverage seems very difficult. Then, the question just becomes what is the best way to support umi-tagged data. I'm open to suggestions, as well as to good datasets against which different approaches may be tested. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-251217506
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-255853373:829,Energy Efficiency,efficient,efficient,829,"Thanks, both, for your thoughts here. . As I understand it, current UMI quantification approaches take a BAM file with read alignments and then (hopefully in some smart way) count unique UMIs from reads aligned to (overlapping?) genomic features of interest. In the first instance, can Salmon produce output compatible with those sorts of approaches? (I seem to recall it's possible to output (pseudo)BAMs, but I have not yet had a need for this.). @vals: your suggestion of just ignoring UMIs is interesting - hadn't thought about that. It would be cool to figure out if that actually works as you suggest it might. I don't have any brilliant brainwaves to offer at the moment, but to you first point, Rob, I _definitely_ think the desire is/will be there. The sheer number of cells being sequenced demands very computationally efficient quantification, and since Salmon is at least as accurate as competitors while being extremely fast, in my mind Salmon is the leading contender for very wide use. Apparently 10X is about to drop a dataset of 1.3M cells, so yeah...fast methods needed. D.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-255853373
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-259996802:468,Testability,test,test,468,"Hi all,. I'm just chiming in here to say that we are _definitely_ interested in supporting scRNA-seq data ""out of the box"". At this point, it's really just a matter of deciding what the best approach is. That is, do we have a sufficiently good idea of the appropriate ""model"" for scRNA-seq to implement that, or is a de-duplicated UMI count over transcripts and equivalence classes the best we can do at this point. I'm open to ideas, thoughts, and suggests on how to test this as we start incorporating this feature into Salmon. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-259996802
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-259998653:305,Testability,test,test,305,"@rob-p There are other applications (e.g. RNA from extracellular vesicles, low input RNASeq) that use UMIs. I'm not sure this should be restricted just to the scRNA-seq case. I don't know how the models would differ for each use case. I don't have any firm thoughts on it at the moment, but happy to help test the different approaches.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-259998653
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589:1912,Availability,recover,recovered,1912,"A bit delayed, but this relates to the questions I've been asking on the salmon gitter. . First, it's worth pointing out that the new 10x (v2) sequencing is a lot more like other bead methods, where (i) index reads (i7/i5) are for labelling biological samples (ii) read1 contains the combined cell and molecular/UMI barcodes (ii) read2 is the transcript 3' read. So it seems there is now some data format convergence. Either way, I'd guess that ongoing iterations of the high throughput platforms will keep one read for the transcript 3', reserving the other 2 or 3 reads for some combination of the sample, cell and molecular barcodes. . Before thinking about how to best collapse UMIs, there's also the issue of how best to QC the barcodes and beads. Jim Namesh has [some functions](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf); as does [Vasilis Ntranos](https://github.com/pachterlab/scRNA-Seq-TCC-prep/blob/master/README.md). Arguably this has nothing to do with salmon/kallisto though I think the kallisto guys were smart to include it. It's a good filter even if only for speeding things up. Then it's really what might be the most appropriate demultiplexing of fastqs to allow compatibility between tecnhiques, I guess. I quite like how the kallisto workflow ends up with a fastq per cell together with a matching UMI file. Then at the very least one can ignore the UMIs (perhaps going with what @vals suggests). Not sure if that's helpful. But thought to chime in as somebody we would love to see salmon working on the high throughput single-cell platforms that have sample, cell and molecular barcodes. Even if only to test how worthwhile UMIs genuinely are for most applications. This may be a controversial comment, but I suspect for me UMIs will largely end up the same way as spike-ins: useful for quantifying endogenous RNA recovered per cell but perhaps not all that useful beyond that for low read depth single-cell signature profiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589:502,Performance,throughput,throughput,502,"Hi @rob-p and @davismcc . A bit delayed, but this relates to the questions I've been asking on the salmon gitter. . First, it's worth pointing out that the new 10x (v2) sequencing is a lot more like other bead methods, where (i) index reads (i7/i5) are for labelling biological samples (ii) read1 contains the combined cell and molecular/UMI barcodes (ii) read2 is the transcript 3' read. So it seems there is now some data format convergence. Either way, I'd guess that ongoing iterations of the high throughput platforms will keep one read for the transcript 3', reserving the other 2 or 3 reads for some combination of the sample, cell and molecular barcodes. . Before thinking about how to best collapse UMIs, there's also the issue of how best to QC the barcodes and beads. Jim Namesh has [some functions](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf); as does [Vasilis Ntranos](https://github.com/pachterlab/scRNA-Seq-TCC-prep/blob/master/README.md). Arguably this has nothing to do with salmon/kallisto though I think the kallisto guys were smart to include it. It's a good filter even if only for speeding things up. Then it's really what might be the most appropriate demultiplexing of fastqs to allow compatibility between tecnhiques, I guess. I quite like how the kallisto workflow ends up with a fastq per cell together with a matching UMI file. Then at the very least one can ignore the UMIs (perhaps going with what @vals suggests). Not sure if that's helpful. But thought to chime in as somebody we would love to see salmon working on the high throughput single-cell platforms that have sample, cell and molecular barcodes. Even if only to test how worthwhile UMIs genuinely are for most applications. This may be a controversial comment, but I suspect for me UMIs will largely end up the same way as spike-ins: useful for quantifying endogenous RNA recovered per cell but perhaps not all that useful beyond that for low read depth single-",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589:1606,Performance,throughput,throughput,1606,"A bit delayed, but this relates to the questions I've been asking on the salmon gitter. . First, it's worth pointing out that the new 10x (v2) sequencing is a lot more like other bead methods, where (i) index reads (i7/i5) are for labelling biological samples (ii) read1 contains the combined cell and molecular/UMI barcodes (ii) read2 is the transcript 3' read. So it seems there is now some data format convergence. Either way, I'd guess that ongoing iterations of the high throughput platforms will keep one read for the transcript 3', reserving the other 2 or 3 reads for some combination of the sample, cell and molecular barcodes. . Before thinking about how to best collapse UMIs, there's also the issue of how best to QC the barcodes and beads. Jim Namesh has [some functions](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf); as does [Vasilis Ntranos](https://github.com/pachterlab/scRNA-Seq-TCC-prep/blob/master/README.md). Arguably this has nothing to do with salmon/kallisto though I think the kallisto guys were smart to include it. It's a good filter even if only for speeding things up. Then it's really what might be the most appropriate demultiplexing of fastqs to allow compatibility between tecnhiques, I guess. I quite like how the kallisto workflow ends up with a fastq per cell together with a matching UMI file. Then at the very least one can ignore the UMIs (perhaps going with what @vals suggests). Not sure if that's helpful. But thought to chime in as somebody we would love to see salmon working on the high throughput single-cell platforms that have sample, cell and molecular barcodes. Even if only to test how worthwhile UMIs genuinely are for most applications. This may be a controversial comment, but I suspect for me UMIs will largely end up the same way as spike-ins: useful for quantifying endogenous RNA recovered per cell but perhaps not all that useful beyond that for low read depth single-cell signature profiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589:1912,Safety,recover,recovered,1912,"A bit delayed, but this relates to the questions I've been asking on the salmon gitter. . First, it's worth pointing out that the new 10x (v2) sequencing is a lot more like other bead methods, where (i) index reads (i7/i5) are for labelling biological samples (ii) read1 contains the combined cell and molecular/UMI barcodes (ii) read2 is the transcript 3' read. So it seems there is now some data format convergence. Either way, I'd guess that ongoing iterations of the high throughput platforms will keep one read for the transcript 3', reserving the other 2 or 3 reads for some combination of the sample, cell and molecular barcodes. . Before thinking about how to best collapse UMIs, there's also the issue of how best to QC the barcodes and beads. Jim Namesh has [some functions](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf); as does [Vasilis Ntranos](https://github.com/pachterlab/scRNA-Seq-TCC-prep/blob/master/README.md). Arguably this has nothing to do with salmon/kallisto though I think the kallisto guys were smart to include it. It's a good filter even if only for speeding things up. Then it's really what might be the most appropriate demultiplexing of fastqs to allow compatibility between tecnhiques, I guess. I quite like how the kallisto workflow ends up with a fastq per cell together with a matching UMI file. Then at the very least one can ignore the UMIs (perhaps going with what @vals suggests). Not sure if that's helpful. But thought to chime in as somebody we would love to see salmon working on the high throughput single-cell platforms that have sample, cell and molecular barcodes. Even if only to test how worthwhile UMIs genuinely are for most applications. This may be a controversial comment, but I suspect for me UMIs will largely end up the same way as spike-ins: useful for quantifying endogenous RNA recovered per cell but perhaps not all that useful beyond that for low read depth single-cell signature profiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589:1702,Testability,test,test,1702,"A bit delayed, but this relates to the questions I've been asking on the salmon gitter. . First, it's worth pointing out that the new 10x (v2) sequencing is a lot more like other bead methods, where (i) index reads (i7/i5) are for labelling biological samples (ii) read1 contains the combined cell and molecular/UMI barcodes (ii) read2 is the transcript 3' read. So it seems there is now some data format convergence. Either way, I'd guess that ongoing iterations of the high throughput platforms will keep one read for the transcript 3', reserving the other 2 or 3 reads for some combination of the sample, cell and molecular barcodes. . Before thinking about how to best collapse UMIs, there's also the issue of how best to QC the barcodes and beads. Jim Namesh has [some functions](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf); as does [Vasilis Ntranos](https://github.com/pachterlab/scRNA-Seq-TCC-prep/blob/master/README.md). Arguably this has nothing to do with salmon/kallisto though I think the kallisto guys were smart to include it. It's a good filter even if only for speeding things up. Then it's really what might be the most appropriate demultiplexing of fastqs to allow compatibility between tecnhiques, I guess. I quite like how the kallisto workflow ends up with a fastq per cell together with a matching UMI file. Then at the very least one can ignore the UMIs (perhaps going with what @vals suggests). Not sure if that's helpful. But thought to chime in as somebody we would love to see salmon working on the high throughput single-cell platforms that have sample, cell and molecular barcodes. Even if only to test how worthwhile UMIs genuinely are for most applications. This may be a controversial comment, but I suspect for me UMIs will largely end up the same way as spike-ins: useful for quantifying endogenous RNA recovered per cell but perhaps not all that useful beyond that for low read depth single-cell signature profiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282336377:653,Integrability,interface,interface,653,"Hi @davismcc, . Yes; this is very high-up on our to-do list. Right now, we are primarily limited by people (students and myself) able to actually hack away on the codebase. I would say that adding support for single-cell data is in the top 1-3 features on our todo list right now. I'd also encourage you to voice your support for this feature on our [survey](https://docs.google.com/forms/d/e/1FAIpQLSeWhBNE_fA_0uVHvbAlAulDmfmowv7rAYla879DZpqCARyRTQ/viewform), which we will use to prioritize feature development. In addition to the implementation, the other big ""question"" will be how to support the broadest variety of such data with the most uniform interface and implementation. It seems like barcoding / UMI tagging is a bit ""wild-west"" right now where every protocol uses it's own format to encode the relevant information. I think that, in that case, some form of pre-processing (a la @vals work), might be the best solution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282336377
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282336377:764,Integrability,protocol,protocol,764,"Hi @davismcc, . Yes; this is very high-up on our to-do list. Right now, we are primarily limited by people (students and myself) able to actually hack away on the codebase. I would say that adding support for single-cell data is in the top 1-3 features on our todo list right now. I'd also encourage you to voice your support for this feature on our [survey](https://docs.google.com/forms/d/e/1FAIpQLSeWhBNE_fA_0uVHvbAlAulDmfmowv7rAYla879DZpqCARyRTQ/viewform), which we will use to prioritize feature development. In addition to the implementation, the other big ""question"" will be how to support the broadest variety of such data with the most uniform interface and implementation. It seems like barcoding / UMI tagging is a bit ""wild-west"" right now where every protocol uses it's own format to encode the relevant information. I think that, in that case, some form of pre-processing (a la @vals work), might be the best solution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282336377
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659:578,Availability,error,error,578,"Hi @rob-p . Totally understood (even more severe current limitations here) - survey completed. I think there'll ""always"" be Illumina-level coding (we use it to multiplex samples or cells), but I suspect most (all?) wild-west method will be some form of using the one read for barcoding. So as long as I can stipulate which bases in the read are which kind of barcode (cell/molecular) that'd be a good start. Of course having more mature methods than the current [drop-seq protocol](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf) to error correct, remove poly-A, remove adaptor sequences etc. always very welcome. (I suspect @vals is onto something... I still struggle to be entirely convinced that UMIs, as currently used, have the long-term legs that some people think.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659:615,Energy Efficiency,adapt,adaptor,615,"Hi @rob-p . Totally understood (even more severe current limitations here) - survey completed. I think there'll ""always"" be Illumina-level coding (we use it to multiplex samples or cells), but I suspect most (all?) wild-west method will be some form of using the one read for barcoding. So as long as I can stipulate which bases in the read are which kind of barcode (cell/molecular) that'd be a good start. Of course having more mature methods than the current [drop-seq protocol](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf) to error correct, remove poly-A, remove adaptor sequences etc. always very welcome. (I suspect @vals is onto something... I still struggle to be entirely convinced that UMIs, as currently used, have the long-term legs that some people think.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659:472,Integrability,protocol,protocol,472,"Hi @rob-p . Totally understood (even more severe current limitations here) - survey completed. I think there'll ""always"" be Illumina-level coding (we use it to multiplex samples or cells), but I suspect most (all?) wild-west method will be some form of using the one read for barcoding. So as long as I can stipulate which bases in the read are which kind of barcode (cell/molecular) that'd be a good start. Of course having more mature methods than the current [drop-seq protocol](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf) to error correct, remove poly-A, remove adaptor sequences etc. always very welcome. (I suspect @vals is onto something... I still struggle to be entirely convinced that UMIs, as currently used, have the long-term legs that some people think.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659:615,Modifiability,adapt,adaptor,615,"Hi @rob-p . Totally understood (even more severe current limitations here) - survey completed. I think there'll ""always"" be Illumina-level coding (we use it to multiplex samples or cells), but I suspect most (all?) wild-west method will be some form of using the one read for barcoding. So as long as I can stipulate which bases in the read are which kind of barcode (cell/molecular) that'd be a good start. Of course having more mature methods than the current [drop-seq protocol](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf) to error correct, remove poly-A, remove adaptor sequences etc. always very welcome. (I suspect @vals is onto something... I still struggle to be entirely convinced that UMIs, as currently used, have the long-term legs that some people think.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-371817266:409,Safety,detect,detection,409,"It looks like they're starting work on scRNA support: https://github.com/COMBINE-lab/salmon/blob/a41c6b4e38fb23e51b59dc4a0a450071dc92c180/src/CollapsedCellOptimizer.cpp. Seems like @k3yavi is doing most of the implementation so far. Our group would definitely be interested in this functionality, but I understand how difficult resourcing for new features can be. Thanks for all the hard work!. Edit: Barcode detection / preprocessor looks like it lives here: https://github.com/k3yavi/alevin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-371817266
https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-394000666:498,Usability,feedback,feedback,498,"Hi @mdshw5,. @k3yavi was originally developing the barcode algorithm in a separate repo, but all of this work has been merged into the salmon repo now. The new `alevin` command runs the single-cell method, which handles barcode identification and correction, mapping and UMI deduplication, and which is described in this [bioRxiv preprint](https://www.biorxiv.org/content/early/2018/06/01/335000) that just landed. We're still actively developing and improving the method and very much welcome any feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-394000666
https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189:169,Availability,reliab,reliable,169,"Hi @vasisht,. Actually, the settings of these flags aren't incorrect according to the [SAM spec](https://samtools.github.io/hts-specs/SAMv1.pdf):. > Bit 0x4 is the only reliable place to tell whether the read is unmapped. If 0x4 is set, no assumptions can be made about RNAME, POS, CIGAR, MAPQ, and bits 0x2, 0x100, and 0x800. That is, if the unmapped flag is set, then there is not a specific ""correct"" setting for these other fields, since they should most likely be ignored anyway. That being said, concordant with some small changes in the [most-recent RapMap](https://github.com/COMBINE-lab/RapMap/releases/tag/v0.4.0), the CIGAR string will be set to `*` for unmapped reads in future versions of Salmon. We may consider setting other fields to `*` for unmapped reads to simplify the output, but, as the SAM spec suggests, these fields offer quite a bit of freedom in terms of ""legal"" values if the unmapped flag is set anyway.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189
https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189:603,Deployability,release,releases,603,"Hi @vasisht,. Actually, the settings of these flags aren't incorrect according to the [SAM spec](https://samtools.github.io/hts-specs/SAMv1.pdf):. > Bit 0x4 is the only reliable place to tell whether the read is unmapped. If 0x4 is set, no assumptions can be made about RNAME, POS, CIGAR, MAPQ, and bits 0x2, 0x100, and 0x800. That is, if the unmapped flag is set, then there is not a specific ""correct"" setting for these other fields, since they should most likely be ignored anyway. That being said, concordant with some small changes in the [most-recent RapMap](https://github.com/COMBINE-lab/RapMap/releases/tag/v0.4.0), the CIGAR string will be set to `*` for unmapped reads in future versions of Salmon. We may consider setting other fields to `*` for unmapped reads to simplify the output, but, as the SAM spec suggests, these fields offer quite a bit of freedom in terms of ""legal"" values if the unmapped flag is set anyway.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189
https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189:776,Usability,simpl,simplify,776,"Hi @vasisht,. Actually, the settings of these flags aren't incorrect according to the [SAM spec](https://samtools.github.io/hts-specs/SAMv1.pdf):. > Bit 0x4 is the only reliable place to tell whether the read is unmapped. If 0x4 is set, no assumptions can be made about RNAME, POS, CIGAR, MAPQ, and bits 0x2, 0x100, and 0x800. That is, if the unmapped flag is set, then there is not a specific ""correct"" setting for these other fields, since they should most likely be ignored anyway. That being said, concordant with some small changes in the [most-recent RapMap](https://github.com/COMBINE-lab/RapMap/releases/tag/v0.4.0), the CIGAR string will be set to `*` for unmapped reads in future versions of Salmon. We may consider setting other fields to `*` for unmapped reads to simplify the output, but, as the SAM spec suggests, these fields offer quite a bit of freedom in terms of ""legal"" values if the unmapped flag is set anyway.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189
https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171:110,Availability,error,error,110,"@rob-p That's a good point. I have been relying on Picard for validating the files and this was flagged as an error. Incorrectly so as you point out. Is there any validation for the CIGAR strings that are generated? In some cases with some of the shorter transcripts, the operator falls of the end of the reference. ENST00000424567 is 135 bp long. . ```; NB501336:15:H3KVTBGXY:1:13202:16266:9834 99 ENST00000424567 1 1 1S150M = 1 -135 GTAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAATTCGATAAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAAAATCCACTGCCCGAGATCGGAAGAGCACACGTCAGAACTCCAGTCACCGTAGAAGCTCGTATGCCGTCTTCG * NH:i:7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171
https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171:62,Security,validat,validating,62,"@rob-p That's a good point. I have been relying on Picard for validating the files and this was flagged as an error. Incorrectly so as you point out. Is there any validation for the CIGAR strings that are generated? In some cases with some of the shorter transcripts, the operator falls of the end of the reference. ENST00000424567 is 135 bp long. . ```; NB501336:15:H3KVTBGXY:1:13202:16266:9834 99 ENST00000424567 1 1 1S150M = 1 -135 GTAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAATTCGATAAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAAAATCCACTGCCCGAGATCGGAAGAGCACACGTCAGAACTCCAGTCACCGTAGAAGCTCGTATGCCGTCTTCG * NH:i:7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171
https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171:163,Security,validat,validation,163,"@rob-p That's a good point. I have been relying on Picard for validating the files and this was flagged as an error. Incorrectly so as you point out. Is there any validation for the CIGAR strings that are generated? In some cases with some of the shorter transcripts, the operator falls of the end of the reference. ENST00000424567 is 135 bp long. . ```; NB501336:15:H3KVTBGXY:1:13202:16266:9834 99 ENST00000424567 1 1 1S150M = 1 -135 GTAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAATTCGATAAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAAAATCCACTGCCCGAGATCGGAAGAGCACACGTCAGAACTCCAGTCACCGTAGAAGCTCGTATGCCGTCTTCG * NH:i:7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171
https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-250509570:269,Performance,load,loaded,269,"Hi John,. Thanks for reporting this. Indeed this is an oversight. The gencode option is applied in quasi-mapping mode during index construction, but there is no indexing step in alignment mode. So, this transformation should be applied when the reference sequences are loaded in alignment-based mode. I'll add this option to alignment-based quant for v0.7.3, which should be coming soon. Thanks again for reporting this. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-250509570
https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-854355704:109,Availability,error,errors,109,"Sorry to add on previous issue but I am trying to run salmon quant using --gencode flag but it still outputs errors that header names in BAM file cannot be found in the input fasta. . gencode.M24.transcript.fa was indexed by minimap2 and reads were aligned using map-ont mode, using the unsorted BAM file ran the following command: . ```; salmon quant --noErrorModel --gencode -p 4 -t /home/callum/Genome_files/gencode.vM24.transcripts.fa -l U -a alignments/O1.bam -o counts/O1_salmon; ```. Example line from the error output. ; ```; [2021-06-04 13:48:14.728] [jointLog] [critical] Transcript ENSMUST00000078393.6|ENSMUSG00000062279.6|OTTMUSG00000071892.1|OTTMUST00000173863.1|Gm10237-201|Gm10237|336|processed_pseudogene| appeared in the BAM header, but was not in the provided FASTA file ; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-854355704
https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-854355704:513,Availability,error,error,513,"Sorry to add on previous issue but I am trying to run salmon quant using --gencode flag but it still outputs errors that header names in BAM file cannot be found in the input fasta. . gencode.M24.transcript.fa was indexed by minimap2 and reads were aligned using map-ont mode, using the unsorted BAM file ran the following command: . ```; salmon quant --noErrorModel --gencode -p 4 -t /home/callum/Genome_files/gencode.vM24.transcripts.fa -l U -a alignments/O1.bam -o counts/O1_salmon; ```. Example line from the error output. ; ```; [2021-06-04 13:48:14.728] [jointLog] [critical] Transcript ENSMUST00000078393.6|ENSMUSG00000062279.6|OTTMUSG00000071892.1|OTTMUST00000173863.1|Gm10237-201|Gm10237|336|processed_pseudogene| appeared in the BAM header, but was not in the provided FASTA file ; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-854355704
https://github.com/COMBINE-lab/salmon/issues/96#issuecomment-250982842:155,Integrability,interface,interface,155,"Hi Amy,. Unfortunately, when you reply to github via e-mail, it doesn't include attachments. Could you please either upload the files here (the github web interface supports drag-and-drop), or just send me an email. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/96#issuecomment-250982842
https://github.com/COMBINE-lab/salmon/issues/96#issuecomment-250983890:330,Integrability,interface,interface,330,"Thanks for your patience Rob - I am new to github.; Here are the files you requested. On Sun, Oct 2, 2016 at 1:20 PM, Rob Patro notifications@github.com wrote:. > Hi Amy,; > ; > Unfortunately, when you reply to github via e-mail, it doesn't include; > attachments. Could you please either upload the files here (the github web; > interface supports drag-and-drop), or just send me an email.; > ; > Thanks,; > Rob; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/96#issuecomment-250982842,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/AVgEwlnL21CDlhAcRpCEHgNo2UcN-mpPks5qv-fCgaJpZM4KLJrJ; > . ## . Amy K. Voltz, Ph.D.; avoltz@umd.edu; Assistant Clinical Professor; First-Year Innovation & Research Experience; Terrapin Genome Project; Office: Microbiology 1126B; **\* check out our new lab space in BioPsych Building room 2217 ***",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/96#issuecomment-250983890
https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242:897,Deployability,release,release,897,"Hi @rhlampe,. Currently, there is no way to prevent the salmon indexer from using more memory if it is needed ot build the index. However, if there is a limit placed by the cluster, it will likely just result in a `bad_alloc` exception from the indexer. The number of sequences alone can tell you a bit about scaling, but the total number of nuclotides being indexed is actually a better predictor of resource usage. How many nucleotides, total, are the references you're considering? While we are working on ways to make the indexing scheme highly scalable, it's worth noting that, to achieve some of it's speed, salmon pre-computes a lot of information it its index (so that the index can become fairly large). One thing I might suggest, if you want to attempt to index and quantify on a very large reference, is to use the `--perfectHash` index in the newest development version of Salmon (pre-release tarball attached below). The latest version (for which the official version should appear soon) represents a number of improvements to index construction. The default indexer has reduced memory usage by ~40%, and the new `--perfectHash` indexer, while somewhat slower, reduces the memory usage even more (by an additional 40-50%). With a fixed memory budget, then, it should allow you to index ever larger references. --Rob. [Salmon-v0.7.3-pre_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/512019/Salmon-v0.7.3-pre_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242
https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242:1084,Energy Efficiency,reduce,reduced,1084,"Hi @rhlampe,. Currently, there is no way to prevent the salmon indexer from using more memory if it is needed ot build the index. However, if there is a limit placed by the cluster, it will likely just result in a `bad_alloc` exception from the indexer. The number of sequences alone can tell you a bit about scaling, but the total number of nuclotides being indexed is actually a better predictor of resource usage. How many nucleotides, total, are the references you're considering? While we are working on ways to make the indexing scheme highly scalable, it's worth noting that, to achieve some of it's speed, salmon pre-computes a lot of information it its index (so that the index can become fairly large). One thing I might suggest, if you want to attempt to index and quantify on a very large reference, is to use the `--perfectHash` index in the newest development version of Salmon (pre-release tarball attached below). The latest version (for which the official version should appear soon) represents a number of improvements to index construction. The default indexer has reduced memory usage by ~40%, and the new `--perfectHash` indexer, while somewhat slower, reduces the memory usage even more (by an additional 40-50%). With a fixed memory budget, then, it should allow you to index ever larger references. --Rob. [Salmon-v0.7.3-pre_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/512019/Salmon-v0.7.3-pre_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242
https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242:1174,Energy Efficiency,reduce,reduces,1174,"Hi @rhlampe,. Currently, there is no way to prevent the salmon indexer from using more memory if it is needed ot build the index. However, if there is a limit placed by the cluster, it will likely just result in a `bad_alloc` exception from the indexer. The number of sequences alone can tell you a bit about scaling, but the total number of nuclotides being indexed is actually a better predictor of resource usage. How many nucleotides, total, are the references you're considering? While we are working on ways to make the indexing scheme highly scalable, it's worth noting that, to achieve some of it's speed, salmon pre-computes a lot of information it its index (so that the index can become fairly large). One thing I might suggest, if you want to attempt to index and quantify on a very large reference, is to use the `--perfectHash` index in the newest development version of Salmon (pre-release tarball attached below). The latest version (for which the official version should appear soon) represents a number of improvements to index construction. The default indexer has reduced memory usage by ~40%, and the new `--perfectHash` indexer, while somewhat slower, reduces the memory usage even more (by an additional 40-50%). With a fixed memory budget, then, it should allow you to index ever larger references. --Rob. [Salmon-v0.7.3-pre_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/512019/Salmon-v0.7.3-pre_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242
https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242:549,Performance,scalab,scalable,549,"Hi @rhlampe,. Currently, there is no way to prevent the salmon indexer from using more memory if it is needed ot build the index. However, if there is a limit placed by the cluster, it will likely just result in a `bad_alloc` exception from the indexer. The number of sequences alone can tell you a bit about scaling, but the total number of nuclotides being indexed is actually a better predictor of resource usage. How many nucleotides, total, are the references you're considering? While we are working on ways to make the indexing scheme highly scalable, it's worth noting that, to achieve some of it's speed, salmon pre-computes a lot of information it its index (so that the index can become fairly large). One thing I might suggest, if you want to attempt to index and quantify on a very large reference, is to use the `--perfectHash` index in the newest development version of Salmon (pre-release tarball attached below). The latest version (for which the official version should appear soon) represents a number of improvements to index construction. The default indexer has reduced memory usage by ~40%, and the new `--perfectHash` indexer, while somewhat slower, reduces the memory usage even more (by an additional 40-50%). With a fixed memory budget, then, it should allow you to index ever larger references. --Rob. [Salmon-v0.7.3-pre_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/512019/Salmon-v0.7.3-pre_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242
https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242:388,Safety,predict,predictor,388,"Hi @rhlampe,. Currently, there is no way to prevent the salmon indexer from using more memory if it is needed ot build the index. However, if there is a limit placed by the cluster, it will likely just result in a `bad_alloc` exception from the indexer. The number of sequences alone can tell you a bit about scaling, but the total number of nuclotides being indexed is actually a better predictor of resource usage. How many nucleotides, total, are the references you're considering? While we are working on ways to make the indexing scheme highly scalable, it's worth noting that, to achieve some of it's speed, salmon pre-computes a lot of information it its index (so that the index can become fairly large). One thing I might suggest, if you want to attempt to index and quantify on a very large reference, is to use the `--perfectHash` index in the newest development version of Salmon (pre-release tarball attached below). The latest version (for which the official version should appear soon) represents a number of improvements to index construction. The default indexer has reduced memory usage by ~40%, and the new `--perfectHash` indexer, while somewhat slower, reduces the memory usage even more (by an additional 40-50%). With a fixed memory budget, then, it should allow you to index ever larger references. --Rob. [Salmon-v0.7.3-pre_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/512019/Salmon-v0.7.3-pre_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97#issuecomment-251759242
https://github.com/COMBINE-lab/salmon/issues/98#issuecomment-252635252:1198,Deployability,release,release,1198,"Hi @gresteban,. Yes, here's what's happening. Salmon's aggregation strategy is to collect the transcript-level abundances and then aggregate them to the gene level (this means summing the counts / TPMs, and doing an abundance weighted combination of the lengths / effective lengths). If there is no gene annotated for a transcript, than Salmon's behavior is to treat this transcript as it's own (single isoform) gene, and the gene name should be the name of this transcript. This is to retain the totality of the originally computed expression (i.e. the gene level results will have the same total read count and TPM as the transcript level results). I realize that this default behavior may not be a one-size-fits-all solution. If you have a suggestion for a different way to handle this, I'd be happy to hear it. I'll double check the code, but I believe the reason you're only seeing the warning show up once is that Salmon reports the warning the first time it sees such an occurrence, but not thereafter. That's sort of confusing default behavior, so I'll fix that up anyway. Also, I should mention that, generally, I now recommend that people use [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) for transcript to gene level aggregation. Within a single sample, it's default strategy is equivalent to what Salmon does. However, it has some nice extra features, like the ability to do transcript -> gene aggregation across multiple samples while accounting for the variation in the effective gene length (abundance weighted average of isoform lengths) across samples. Let me know if you have other questions about this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/98#issuecomment-252635252
https://github.com/COMBINE-lab/salmon/issues/98#issuecomment-252642473:576,Performance,perform,perform,576,"Hi @rob-p,. Thanks for your prompt and detailed reply as usual. I was mostly concerned for seeing it happening only once when there are many more transcripts with no gene associated. Since reporting a warning for each transcript with no gene associated could be too noisy, maybe reporting a warning with the total number of transcripts without annotation would be enough. (And not placing any transcript in the ""quant.gene.sf"" file). Btw, thanks for the possibility to generate a .sam file introduced in version 0.7.2. That's very useful for some of the analyses I'll have to perform with my data. I appreciate that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/98#issuecomment-252642473
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:404,Availability,avail,available,404,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:446,Availability,avail,available,446,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:135,Deployability,release,release,135,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:497,Deployability,release,releases,497,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:562,Deployability,upgrade,upgrade,562,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:6130,Integrability,message,messages,6130,"ter poly-A clipping); counted k-mers for 80000 transcripts[2016-11-04 12:41:39.926] [jointLog] [warning] Entry with header [ENST00000436204], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 90000 transcripts[2016-11-04 12:41:40.016] [jointLog] [warning] Entry with header [ENST00000473810], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 140000 transcripts[2016-11-04 12:41:40.568] [jointLog] [warning] Entry with header [ENST00000437226], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.570] [jointLog] [warning] Entry with header [ENST00000428001], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.574] [jointLog] [warning] Entry with header [ENST00000445788], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.576] [jointLog] [warning] Entry with header [ENST00000489969], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.578] [jointLog] [warning] Entry with header [ENST00000411692], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 150000 transcriptsElapsed time: 2.85251s. Replaced 6009 non-ATCG nucleotides; Clipped poly-A tails from 1120 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0151688s; Writing sequence data to file . . . done; Elapsed time: 0.13411s; [info] Building 32-bit suffix array (length of generalized text is 258980005); ...; ...; [more messages here]; ...; ...; khash had 99651131 keys; saving hash to disk . . . done; Elapsed time: 4.98016s; [2016-11-04 12:45:45.948] [jLog] [info] done building index; ```. So the index builds successfully. The process took ~3 min on my local machine. I wonder what could be happening on your end. Is the process using any resources, or just hanging?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:25,Security,access,access,25,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:6188,Security,hash,hash,6188,"ter poly-A clipping); counted k-mers for 80000 transcripts[2016-11-04 12:41:39.926] [jointLog] [warning] Entry with header [ENST00000436204], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 90000 transcripts[2016-11-04 12:41:40.016] [jointLog] [warning] Entry with header [ENST00000473810], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 140000 transcripts[2016-11-04 12:41:40.568] [jointLog] [warning] Entry with header [ENST00000437226], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.570] [jointLog] [warning] Entry with header [ENST00000428001], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.574] [jointLog] [warning] Entry with header [ENST00000445788], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.576] [jointLog] [warning] Entry with header [ENST00000489969], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:40.578] [jointLog] [warning] Entry with header [ENST00000411692], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 150000 transcriptsElapsed time: 2.85251s. Replaced 6009 non-ATCG nucleotides; Clipped poly-A tails from 1120 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0151688s; Writing sequence data to file . . . done; Elapsed time: 0.13411s; [info] Building 32-bit suffix array (length of generalized text is 258980005); ...; ...; [more messages here]; ...; ...; khash had 99651131 keys; saving hash to disk . . . done; Elapsed time: 4.98016s; [2016-11-04 12:45:45.948] [jLog] [info] done building index; ```. So the index builds successfully. The process took ~3 min on my local machine. I wonder what could be happening on your end. Is the process using any resources, or just hanging?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912
https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258491545:35,Energy Efficiency,monitor,monitoring,35,"I gave it another try, as I wasn't monitoring resources before. It's trying to make a liar of me! It is working fine now after wasting my entire day. :/ It took under a minute. I had tried to run it a dozen times by the time I gave up and posted. Oh well, thanks for the help! I'll go hide in shame somewhere now and convince myself I didn't imagine the whole thing :D",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258491545
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248:447,Deployability,update,update,447,"Hi @ramezrawas,. Can you say precisely what you mean by reproducible? Do you mean that the values in the .sf file are not identical? If so, this is expected behavior. It exists for a number of reasons. The big one is that the initial phase of salmon uses an online inference algorithm so that specific details of the solution are dependent on the order in which the reads are processed (which is random given that multiple threads parse reads and update estimates asynchronously). However, the more important point here is that the inference estimates returned by Salmon (and, for that matter, every other transcript-level expression tool) are the result of a statistical optimization procedure that cannot guarantee a unique global optimal solution (and, in fact, even if a global optimum could be guaranteed, there may be multiple different optima). Thus, there is uncertainty inherent in the statistical problem being solved. Of course, if one ordered updates in the same way and set up the initial conditions precisely the same, there would be convergence to the same result, but any sense of confidence there is illusory. However, Salmon does provide a way to quantify, statistically, confidence in the result. The `--numBootstraps` option will do bootstrap sampling, or the `--numGibbsSamples` option will perform posterior Gibbs sampling. Both of these techniques will provide samples from the posterior distribution, and the variance of these samples will give you some information about the variance in the results that are due purely to the inherent statistical uncertainty in the problem. In the `scripts` folder there is a python script `ConvertBootstrapsToTSV.py` that will convert either the bootstrap or gibbs samples to a easily readable tsv format. These samples represent the estimated number of reads coming from each transcript when sampling from the posterior. These can be used to empirically estimate that statistical uncertainty in the abundance estimates of the different tran",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248:955,Deployability,update,updates,955,"y precisely what you mean by reproducible? Do you mean that the values in the .sf file are not identical? If so, this is expected behavior. It exists for a number of reasons. The big one is that the initial phase of salmon uses an online inference algorithm so that specific details of the solution are dependent on the order in which the reads are processed (which is random given that multiple threads parse reads and update estimates asynchronously). However, the more important point here is that the inference estimates returned by Salmon (and, for that matter, every other transcript-level expression tool) are the result of a statistical optimization procedure that cannot guarantee a unique global optimal solution (and, in fact, even if a global optimum could be guaranteed, there may be multiple different optima). Thus, there is uncertainty inherent in the statistical problem being solved. Of course, if one ordered updates in the same way and set up the initial conditions precisely the same, there would be convergence to the same result, but any sense of confidence there is illusory. However, Salmon does provide a way to quantify, statistically, confidence in the result. The `--numBootstraps` option will do bootstrap sampling, or the `--numGibbsSamples` option will perform posterior Gibbs sampling. Both of these techniques will provide samples from the posterior distribution, and the variance of these samples will give you some information about the variance in the results that are due purely to the inherent statistical uncertainty in the problem. In the `scripts` folder there is a python script `ConvertBootstrapsToTSV.py` that will convert either the bootstrap or gibbs samples to a easily readable tsv format. These samples represent the estimated number of reads coming from each transcript when sampling from the posterior. These can be used to empirically estimate that statistical uncertainty in the abundance estimates of the different transcripts. Finally, I'll not",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248:330,Integrability,depend,dependent,330,"Hi @ramezrawas,. Can you say precisely what you mean by reproducible? Do you mean that the values in the .sf file are not identical? If so, this is expected behavior. It exists for a number of reasons. The big one is that the initial phase of salmon uses an online inference algorithm so that specific details of the solution are dependent on the order in which the reads are processed (which is random given that multiple threads parse reads and update estimates asynchronously). However, the more important point here is that the inference estimates returned by Salmon (and, for that matter, every other transcript-level expression tool) are the result of a statistical optimization procedure that cannot guarantee a unique global optimal solution (and, in fact, even if a global optimum could be guaranteed, there may be multiple different optima). Thus, there is uncertainty inherent in the statistical problem being solved. Of course, if one ordered updates in the same way and set up the initial conditions precisely the same, there would be convergence to the same result, but any sense of confidence there is illusory. However, Salmon does provide a way to quantify, statistically, confidence in the result. The `--numBootstraps` option will do bootstrap sampling, or the `--numGibbsSamples` option will perform posterior Gibbs sampling. Both of these techniques will provide samples from the posterior distribution, and the variance of these samples will give you some information about the variance in the results that are due purely to the inherent statistical uncertainty in the problem. In the `scripts` folder there is a python script `ConvertBootstrapsToTSV.py` that will convert either the bootstrap or gibbs samples to a easily readable tsv format. These samples represent the estimated number of reads coming from each transcript when sampling from the posterior. These can be used to empirically estimate that statistical uncertainty in the abundance estimates of the different tran",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248:2190,Integrability,depend,depending,2190," parse reads and update estimates asynchronously). However, the more important point here is that the inference estimates returned by Salmon (and, for that matter, every other transcript-level expression tool) are the result of a statistical optimization procedure that cannot guarantee a unique global optimal solution (and, in fact, even if a global optimum could be guaranteed, there may be multiple different optima). Thus, there is uncertainty inherent in the statistical problem being solved. Of course, if one ordered updates in the same way and set up the initial conditions precisely the same, there would be convergence to the same result, but any sense of confidence there is illusory. However, Salmon does provide a way to quantify, statistically, confidence in the result. The `--numBootstraps` option will do bootstrap sampling, or the `--numGibbsSamples` option will perform posterior Gibbs sampling. Both of these techniques will provide samples from the posterior distribution, and the variance of these samples will give you some information about the variance in the results that are due purely to the inherent statistical uncertainty in the problem. In the `scripts` folder there is a python script `ConvertBootstrapsToTSV.py` that will convert either the bootstrap or gibbs samples to a easily readable tsv format. These samples represent the estimated number of reads coming from each transcript when sampling from the posterior. These can be used to empirically estimate that statistical uncertainty in the abundance estimates of the different transcripts. Finally, I'll note that while, for the reasons described above, the output is not purely deterministic. The difference between subsequent runs of salmon (with differences changing depending on the order in which reads are parsed and processed) is typically small (and much smaller than the statistical uncertainty in the abundance estimates of the transcripts). I'd be happy to answer any other questions you have. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248:672,Performance,optimiz,optimization,672,"Hi @ramezrawas,. Can you say precisely what you mean by reproducible? Do you mean that the values in the .sf file are not identical? If so, this is expected behavior. It exists for a number of reasons. The big one is that the initial phase of salmon uses an online inference algorithm so that specific details of the solution are dependent on the order in which the reads are processed (which is random given that multiple threads parse reads and update estimates asynchronously). However, the more important point here is that the inference estimates returned by Salmon (and, for that matter, every other transcript-level expression tool) are the result of a statistical optimization procedure that cannot guarantee a unique global optimal solution (and, in fact, even if a global optimum could be guaranteed, there may be multiple different optima). Thus, there is uncertainty inherent in the statistical problem being solved. Of course, if one ordered updates in the same way and set up the initial conditions precisely the same, there would be convergence to the same result, but any sense of confidence there is illusory. However, Salmon does provide a way to quantify, statistically, confidence in the result. The `--numBootstraps` option will do bootstrap sampling, or the `--numGibbsSamples` option will perform posterior Gibbs sampling. Both of these techniques will provide samples from the posterior distribution, and the variance of these samples will give you some information about the variance in the results that are due purely to the inherent statistical uncertainty in the problem. In the `scripts` folder there is a python script `ConvertBootstrapsToTSV.py` that will convert either the bootstrap or gibbs samples to a easily readable tsv format. These samples represent the estimated number of reads coming from each transcript when sampling from the posterior. These can be used to empirically estimate that statistical uncertainty in the abundance estimates of the different tran",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248:1312,Performance,perform,perform,1312,"ithm so that specific details of the solution are dependent on the order in which the reads are processed (which is random given that multiple threads parse reads and update estimates asynchronously). However, the more important point here is that the inference estimates returned by Salmon (and, for that matter, every other transcript-level expression tool) are the result of a statistical optimization procedure that cannot guarantee a unique global optimal solution (and, in fact, even if a global optimum could be guaranteed, there may be multiple different optima). Thus, there is uncertainty inherent in the statistical problem being solved. Of course, if one ordered updates in the same way and set up the initial conditions precisely the same, there would be convergence to the same result, but any sense of confidence there is illusory. However, Salmon does provide a way to quantify, statistically, confidence in the result. The `--numBootstraps` option will do bootstrap sampling, or the `--numGibbsSamples` option will perform posterior Gibbs sampling. Both of these techniques will provide samples from the posterior distribution, and the variance of these samples will give you some information about the variance in the results that are due purely to the inherent statistical uncertainty in the problem. In the `scripts` folder there is a python script `ConvertBootstrapsToTSV.py` that will convert either the bootstrap or gibbs samples to a easily readable tsv format. These samples represent the estimated number of reads coming from each transcript when sampling from the posterior. These can be used to empirically estimate that statistical uncertainty in the abundance estimates of the different transcripts. Finally, I'll note that while, for the reasons described above, the output is not purely deterministic. The difference between subsequent runs of salmon (with differences changing depending on the order in which reads are parsed and processed) is typically small (and mu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-259464248
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:1329,Availability,down,downstream,1329,"ne phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the other hand, if you are in need of something that produces identical output between runs (but that still also lets you assess uncertainty), then you can give [piscem](https://github.com/COMBINE-lab/piscem) => [piscem-infer](https://github.com/COMBINE-lab/piscem-infer) a try. That tool already work",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:1821,Availability,down,downstream,1821,"h read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the other hand, if you are in need of something that produces identical output between runs (but that still also lets you assess uncertainty), then you can give [piscem](https://github.com/COMBINE-lab/piscem) => [piscem-infer](https://github.com/COMBINE-lab/piscem-infer) a try. That tool already works well, but it is in active development and we'd certainly be happy to help build features that you and others might find useful, and would be happy to chat about that if you like.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:846,Deployability,update,updates,846,"Hi @nh13,. This is not something for which we currently have support or something that we currently plan. I'd be open to it, but I'm honestly not sure how to cleanly do it in the current architecture, and doing so would certainly incur a performance hit. Salmon runs 2 phases of inference; and online phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:707,Integrability,depend,depend,707,"Hi @nh13,. This is not something for which we currently have support or something that we currently plan. I'd be open to it, but I'm honestly not sure how to cleanly do it in the current architecture, and doing so would certainly incur a performance hit. Salmon runs 2 phases of inference; and online phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:238,Performance,perform,performance,238,"Hi @nh13,. This is not something for which we currently have support or something that we currently plan. I'd be open to it, but I'm honestly not sure how to cleanly do it in the current architecture, and doing so would certainly incur a performance hit. Salmon runs 2 phases of inference; and online phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:350,Security,access,access,350,"Hi @nh13,. This is not something for which we currently have support or something that we currently plan. I'd be open to it, but I'm honestly not sure how to cleanly do it in the current architecture, and doing so would certainly incur a performance hit. Salmon runs 2 phases of inference; and online phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:984,Testability,test,tested,984,"Hi @nh13,. This is not something for which we currently have support or something that we currently plan. I'd be open to it, but I'm honestly not sure how to cleanly do it in the current architecture, and doing so would certainly incur a performance hit. Salmon runs 2 phases of inference; and online phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:1936,Testability,test,testing,1936,"h read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the other hand, if you are in need of something that produces identical output between runs (but that still also lets you assess uncertainty), then you can give [piscem](https://github.com/COMBINE-lab/piscem) => [piscem-infer](https://github.com/COMBINE-lab/piscem-infer) a try. That tool already works well, but it is in active development and we'd certainly be happy to help build features that you and others might find useful, and would be happy to chat about that if you like.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538:670,Usability,learn,learned,670,"Hi @nh13,. This is not something for which we currently have support or something that we currently plan. I'd be open to it, but I'm honestly not sure how to cleanly do it in the current architecture, and doing so would certainly incur a performance hit. Salmon runs 2 phases of inference; and online phase and an offline phase. The online phase has access to _fragment-level_ information that is then summarized away during the offline phase (like the specific locations of each read, the length of each observed fragment, etc.). That information goes away when the reads are summarized into range-factorized equivalence classes. Moreover, some of the model parameters learned during the online phase will depend (in their details) on the order in which observations are made. Ostensibly, observing the same data in the same order **and issuing updates to shared model parameters from worker threads in the same order** should result in identical values, however this has never been tested and was never a design goal. The reason for this is that differences between runs are within the bounds of the inherent inferential uncertainty of the estimated parameters anyway. That is, if one is relying on a specific value at a level of precision such that a different run of salmon would produce a value different enough to change a downstream analysis, then one is imparting more precision on the estimates than they can provide. Other methods that produce identical results between runs for these values may produce the same output, but the accuracy of the output at that level shouldn't be trusted in this case. The uncertainty of the parameter estimates can be evaluated based on the Gibb samples (or bootstrap replicates) that salmon computes. Of course, the small differences between runs rarely lead to differences in downstream analysis (almost certainly at the gene level and also at the transcript level if you use a differential testing method that is aware of inferential uncertainty). On the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102#issuecomment-2159300538
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259461445:199,Deployability,release,release,199,"Hi @remyschwab,. Yes, this is a known issue and is a result of an incompatibility with jemalloc (which we use as our memory allocator). JEmalloc has issued a fix and this will be present in the next release. For the time-being, I can provide you with an updated binary if that would help. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259461445
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259461445:254,Deployability,update,updated,254,"Hi @remyschwab,. Yes, this is a known issue and is a result of an incompatibility with jemalloc (which we use as our memory allocator). JEmalloc has issued a fix and this will be present in the next release. For the time-being, I can provide you with an updated binary if that would help. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259461445
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259466544:76,Deployability,update,updated,76,"GitHub supports uploading files directly in the issues, so I'll compile the updated binary and I'll drop it right here (I'll do this today, but it might be an hour or so). Once you have it, you can confirm if it works for you (I'm still on 10.11, so I'll have to build it there, but with the updated dependency).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259466544
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259466544:292,Deployability,update,updated,292,"GitHub supports uploading files directly in the issues, so I'll compile the updated binary and I'll drop it right here (I'll do this today, but it might be an hour or so). Once you have it, you can confirm if it works for you (I'm still on 10.11, so I'll have to build it there, but with the updated dependency).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259466544
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259466544:300,Integrability,depend,dependency,300,"GitHub supports uploading files directly in the issues, so I'll compile the updated binary and I'll drop it right here (I'll do this today, but it might be an hour or so). Once you have it, you can confirm if it works for you (I'm still on 10.11, so I'll have to build it there, but with the updated dependency).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259466544
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259472964:221,Availability,error,error,221,"It's still not working. If I type ./bin/salmon I get:. salmon(68460,0x7fffdb32f3c0) malloc: **\* malloc_zone_unregister() failed for 0x7fffdb325000; version : 0.7.1. So maybe it's working okay but it's still printing the error message.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259472964
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259472964:227,Integrability,message,message,227,"It's still not working. If I type ./bin/salmon I get:. salmon(68460,0x7fffdb32f3c0) malloc: **\* malloc_zone_unregister() failed for 0x7fffdb325000; version : 0.7.1. So maybe it's working okay but it's still printing the error message.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259472964
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259483994:36,Availability,error,error,36,I'm actually still getting the same error.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259483994
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488142:49,Availability,error,error,49,"Ok, that's interesting. I am certain this is the error, because I had a student compiling salmon on OS 10.12 come to my office yesterday and we were able to fix the issue with exactly the change I'm using here. I have one more idea (and one more shot before I try upgrading to 10.12). Could you try the binary attached below?. [Salmon-0.7.3-pre_OSX_10.11.tar.gz](https://github.com/COMBINE-lab/salmon/files/581546/Salmon-0.7.3-pre_OSX_10.11.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488142
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488873:3,Availability,error,error,3,No error so far! Thanks a bunch. I'll let you know if I get any more errors,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488873
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488873:69,Availability,error,errors,69,No error so far! Thanks a bunch. I'll let you know if I get any more errors,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488873
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-268402355:0,Deployability,Update,Updated,0,Updated to resolve a short options conflict and fix issue #111 (which only occurred on the develop branch with the combination of `--useVBOpt` and `--numGibbsSamples`). [Salmon-0.7.3-pre_OSX_10.12.tar.gz](https://github.com/COMBINE-lab/salmon/files/665033/Salmon-0.7.3-pre_OSX_10.12.tar.gz),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-268402355
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294840673:96,Availability,error,error,96,Has Sierra issue been fixed? Binary release Salmon-0.8.2_macOS_10.12.tar.gz; still gives malloc error under OSX 10.12.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294840673
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294840673:36,Deployability,release,release,36,Has Sierra issue been fixed? Binary release Salmon-0.8.2_macOS_10.12.tar.gz; still gives malloc error under OSX 10.12.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294840673
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429:16,Availability,error,error,16,"Hi @jjv5,. This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the [conda build](https://anaconda.org/bioconda/salmon) to see if that works for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429:71,Availability,error,error,71,"Hi @jjv5,. This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the [conda build](https://anaconda.org/bioconda/salmon) to see if that works for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:53,Availability,down,downloading,53,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:115,Availability,down,download,115,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:1117,Availability,error,error,1117,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:1172,Availability,error,error,1172,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:106,Deployability,release,releases,106,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:912,Performance,Perform,Perform,912,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033:1106,Availability,error,error,1106,"I think that's the right binary. You can check the sha256 sum:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ shasum -a256 bin/salmon; 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; ```. You can also check the libraries that `salmon` is seeing:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ otool -L bin/salmon; 	bin/salmon:; 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); 	/usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); 	@rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); ```. but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033:1018,Integrability,message,message,1018,"I think that's the right binary. You can check the sha256 sum:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ shasum -a256 bin/salmon; 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; ```. You can also check the libraries that `salmon` is seeing:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ otool -L bin/salmon; 	bin/salmon:; 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); 	/usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); 	@rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); ```. but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033:1085,Integrability,message,message,1085,"I think that's the right binary. You can check the sha256 sum:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ shasum -a256 bin/salmon; 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; ```. You can also check the libraries that `salmon` is seeing:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ otool -L bin/salmon; 	bin/salmon:; 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); 	/usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); 	@rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); ```. but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033:1171,Integrability,message,message,1171,"I think that's the right binary. You can check the sha256 sum:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ shasum -a256 bin/salmon; 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; ```. You can also check the libraries that `salmon` is seeing:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ otool -L bin/salmon; 	bin/salmon:; 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); 	/usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); 	@rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); ```. but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583:1329,Availability,error,error,1329,"salmon does run and completes normally so I guess it's just the warning; from jemalloc. . Is this expected for sailfish also? I get the same message about malloc.; . On 2017-04-18 09:55, Rob Patro wrote:. > I think that's the right binary. You can check the sha256 sum:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ shasum -a256 bin/salmon; > 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; > ; > You can also check the libraries that salmon is seeing:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ otool -L bin/salmon; > bin/salmon:; > /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); > /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); > /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); > @rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); > /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); > ; > but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12). ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [1], or mute the thread [2].; . Links:; ------; [1]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033; [2]; https://github.com/notifications/unsubscribe-auth/AA45u0ozBxeE-i6orJcGrgIw4NstAXNvks5rxMDegaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583:141,Integrability,message,message,141,"salmon does run and completes normally so I guess it's just the warning; from jemalloc. . Is this expected for sailfish also? I get the same message about malloc.; . On 2017-04-18 09:55, Rob Patro wrote:. > I think that's the right binary. You can check the sha256 sum:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ shasum -a256 bin/salmon; > 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; > ; > You can also check the libraries that salmon is seeing:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ otool -L bin/salmon; > bin/salmon:; > /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); > /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); > /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); > @rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); > /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); > ; > but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12). ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [1], or mute the thread [2].; . Links:; ------; [1]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033; [2]; https://github.com/notifications/unsubscribe-auth/AA45u0ozBxeE-i6orJcGrgIw4NstAXNvks5rxMDegaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583:1241,Integrability,message,message,1241,"salmon does run and completes normally so I guess it's just the warning; from jemalloc. . Is this expected for sailfish also? I get the same message about malloc.; . On 2017-04-18 09:55, Rob Patro wrote:. > I think that's the right binary. You can check the sha256 sum:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ shasum -a256 bin/salmon; > 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; > ; > You can also check the libraries that salmon is seeing:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ otool -L bin/salmon; > bin/salmon:; > /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); > /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); > /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); > @rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); > /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); > ; > but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12). ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [1], or mute the thread [2].; . Links:; ------; [1]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033; [2]; https://github.com/notifications/unsubscribe-auth/AA45u0ozBxeE-i6orJcGrgIw4NstAXNvks5rxMDegaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583:1308,Integrability,message,message,1308,"salmon does run and completes normally so I guess it's just the warning; from jemalloc. . Is this expected for sailfish also? I get the same message about malloc.; . On 2017-04-18 09:55, Rob Patro wrote:. > I think that's the right binary. You can check the sha256 sum:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ shasum -a256 bin/salmon; > 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; > ; > You can also check the libraries that salmon is seeing:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ otool -L bin/salmon; > bin/salmon:; > /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); > /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); > /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); > @rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); > /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); > ; > but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12). ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [1], or mute the thread [2].; . Links:; ------; [1]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033; [2]; https://github.com/notifications/unsubscribe-auth/AA45u0ozBxeE-i6orJcGrgIw4NstAXNvks5rxMDegaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583
https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583:1394,Integrability,message,message,1394,"salmon does run and completes normally so I guess it's just the warning; from jemalloc. . Is this expected for sailfish also? I get the same message about malloc.; . On 2017-04-18 09:55, Rob Patro wrote:. > I think that's the right binary. You can check the sha256 sum:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ shasum -a256 bin/salmon; > 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; > ; > You can also check the libraries that salmon is seeing:; > ; > rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; > $ otool -L bin/salmon; > bin/salmon:; > /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); > /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); > /usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); > @rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); > @rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); > /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); > ; > but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12). ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [1], or mute the thread [2].; . Links:; ------; [1]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033; [2]; https://github.com/notifications/unsubscribe-auth/AA45u0ozBxeE-i6orJcGrgIw4NstAXNvks5rxMDegaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294858583
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122:37,Availability,fault,fault,37,"Ok, I realized that the Segmentation fault was not caused by passing multiple bam files, but by including either the `--seqBias` or `--gcBias` arguments. . The following command generates the segmentation fault:. ```; salmon quant -t transcripts.fasta -g gene_annotations.gtf -l IU -p 8 -o quantitation -a Aligned.toTranscriptome.bam --seqBias --gcBias; ```. and returns the following output before exiting:. ```; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ geneMap ] => { gene_annotations.gtf }; # [ libType ] => { IU }; # [ threads ] => { 8 }; # [ output ] => { quantitation }; # [ alignments ] => {Aligned.toTranscriptome.bam }; # [ seqBias ] => { }; # [ gcBias ] => { }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Aligned.toTranscriptome.bam"", fasta = ""transcripts.fasta"" . . .WARNING: Transcript ENSMUST00000185127 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000180893 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000206884 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000181916 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000202657 appears in the reference but did not appear in the BAM; [truncated]. replaced 3 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current round; ```. follow by the segmentation fold. The same command without the `--seqBias --gcBias` arguments succeeds. Perhas bias correction is not supported (or even necessary) when quantifying from a bam file?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122:205,Availability,fault,fault,205,"Ok, I realized that the Segmentation fault was not caused by passing multiple bam files, but by including either the `--seqBias` or `--gcBias` arguments. . The following command generates the segmentation fault:. ```; salmon quant -t transcripts.fasta -g gene_annotations.gtf -l IU -p 8 -o quantitation -a Aligned.toTranscriptome.bam --seqBias --gcBias; ```. and returns the following output before exiting:. ```; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ geneMap ] => { gene_annotations.gtf }; # [ libType ] => { IU }; # [ threads ] => { 8 }; # [ output ] => { quantitation }; # [ alignments ] => {Aligned.toTranscriptome.bam }; # [ seqBias ] => { }; # [ gcBias ] => { }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Aligned.toTranscriptome.bam"", fasta = ""transcripts.fasta"" . . .WARNING: Transcript ENSMUST00000185127 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000180893 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000206884 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000181916 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000202657 appears in the reference but did not appear in the BAM; [truncated]. replaced 3 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current round; ```. follow by the segmentation fold. The same command without the `--seqBias --gcBias` arguments succeeds. Perhas bias correction is not supported (or even necessary) when quantifying from a bam file?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122:849,Testability,Log,Logs,849,"Ok, I realized that the Segmentation fault was not caused by passing multiple bam files, but by including either the `--seqBias` or `--gcBias` arguments. . The following command generates the segmentation fault:. ```; salmon quant -t transcripts.fasta -g gene_annotations.gtf -l IU -p 8 -o quantitation -a Aligned.toTranscriptome.bam --seqBias --gcBias; ```. and returns the following output before exiting:. ```; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ geneMap ] => { gene_annotations.gtf }; # [ libType ] => { IU }; # [ threads ] => { 8 }; # [ output ] => { quantitation }; # [ alignments ] => {Aligned.toTranscriptome.bam }; # [ seqBias ] => { }; # [ gcBias ] => { }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Aligned.toTranscriptome.bam"", fasta = ""transcripts.fasta"" . . .WARNING: Transcript ENSMUST00000185127 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000180893 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000206884 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000181916 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000202657 appears in the reference but did not appear in the BAM; [truncated]. replaced 3 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current round; ```. follow by the segmentation fold. The same command without the `--seqBias --gcBias` arguments succeeds. Perhas bias correction is not supported (or even necessary) when quantifying from a bam file?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122:886,Testability,log,logs,886,"Ok, I realized that the Segmentation fault was not caused by passing multiple bam files, but by including either the `--seqBias` or `--gcBias` arguments. . The following command generates the segmentation fault:. ```; salmon quant -t transcripts.fasta -g gene_annotations.gtf -l IU -p 8 -o quantitation -a Aligned.toTranscriptome.bam --seqBias --gcBias; ```. and returns the following output before exiting:. ```; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ geneMap ] => { gene_annotations.gtf }; # [ libType ] => { IU }; # [ threads ] => { 8 }; # [ output ] => { quantitation }; # [ alignments ] => {Aligned.toTranscriptome.bam }; # [ seqBias ] => { }; # [ gcBias ] => { }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Aligned.toTranscriptome.bam"", fasta = ""transcripts.fasta"" . . .WARNING: Transcript ENSMUST00000185127 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000180893 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000206884 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000181916 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000202657 appears in the reference but did not appear in the BAM; [truncated]. replaced 3 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current round; ```. follow by the segmentation fold. The same command without the `--seqBias --gcBias` arguments succeeds. Perhas bias correction is not supported (or even necessary) when quantifying from a bam file?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431:898,Availability,error,error,898,"Hi @tomsing1,. Thanks for following up on this --- I was scratching my head about why multiple libraries might be causing an issue. Both `--seqBias` and `--gcBias` are relatively new features, and have definitely undergone more testing under the ""quasi-mapping"" codepath than the alignment-based codepath (though it's passed our internal regression tests on both). That being said, bias correction is equally valid regardless of whether you're using quasi-mapping or quantifying from a bam file directly. I'd be happy to take a look if you can provide a small example (a subset of the reads in the bam file?) that triggers the behavior. One thought might be that, for some reason, positions in the bam file could disagree with what's provided in the corresponding fasta. However, that's just a guess and I'd have to try and debug the segfault once I can reproduce it. Thanks again for the detailed error report and the update!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431:919,Deployability,update,update,919,"Hi @tomsing1,. Thanks for following up on this --- I was scratching my head about why multiple libraries might be causing an issue. Both `--seqBias` and `--gcBias` are relatively new features, and have definitely undergone more testing under the ""quasi-mapping"" codepath than the alignment-based codepath (though it's passed our internal regression tests on both). That being said, bias correction is equally valid regardless of whether you're using quasi-mapping or quantifying from a bam file directly. I'd be happy to take a look if you can provide a small example (a subset of the reads in the bam file?) that triggers the behavior. One thought might be that, for some reason, positions in the bam file could disagree with what's provided in the corresponding fasta. However, that's just a guess and I'd have to try and debug the segfault once I can reproduce it. Thanks again for the detailed error report and the update!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431:228,Testability,test,testing,228,"Hi @tomsing1,. Thanks for following up on this --- I was scratching my head about why multiple libraries might be causing an issue. Both `--seqBias` and `--gcBias` are relatively new features, and have definitely undergone more testing under the ""quasi-mapping"" codepath than the alignment-based codepath (though it's passed our internal regression tests on both). That being said, bias correction is equally valid regardless of whether you're using quasi-mapping or quantifying from a bam file directly. I'd be happy to take a look if you can provide a small example (a subset of the reads in the bam file?) that triggers the behavior. One thought might be that, for some reason, positions in the bam file could disagree with what's provided in the corresponding fasta. However, that's just a guess and I'd have to try and debug the segfault once I can reproduce it. Thanks again for the detailed error report and the update!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431:349,Testability,test,tests,349,"Hi @tomsing1,. Thanks for following up on this --- I was scratching my head about why multiple libraries might be causing an issue. Both `--seqBias` and `--gcBias` are relatively new features, and have definitely undergone more testing under the ""quasi-mapping"" codepath than the alignment-based codepath (though it's passed our internal regression tests on both). That being said, bias correction is equally valid regardless of whether you're using quasi-mapping or quantifying from a bam file directly. I'd be happy to take a look if you can provide a small example (a subset of the reads in the bam file?) that triggers the behavior. One thought might be that, for some reason, positions in the bam file could disagree with what's provided in the corresponding fasta. However, that's just a guess and I'd have to try and debug the segfault once I can reproduce it. Thanks again for the detailed error report and the update!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:2638,Availability,fault,fault,2638,"files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.gz; cut -f1 -d ""."" Mus_musculus.GRCm38.cdna.all.fa > transcripts_unversioned.fa. head transcripts_unversioned.fa; >ENSMUST00000178537; GGGACAGGGGGC; >ENSMUST00000178862; GGGACTGGGGGGGC; >ENSMUST00000196221; ATGGCATAT; >ENSMUST00000179664; ATGGCATATCA; >ENSMUST00000177564; ATCGGAGGGATACGAG; [truncated]; ```. Then I try to run `salmon`:. ```; wget ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz; gunzip Mus_musculus.GRCm38.86.gtf.gz; salmon quant -t transcripts_unversioned.fa -g Mus_musculus.GRCm38.86.gtf -l IU -p 1 -o quantitation -a subsample.bam --seqBias --gcBias; ```. but get the segmentation fault. Omitting the `--seqBias --gcBias` options makes it work. Perhaps you can already spot where I am doing something wrong? If not, you can find the subsample.bam file [here](https://drive.google.com/open?id=0BzX9viKJksNtak0xako0VXptLW8). (The other files are publically available, as shown above.). Does that help? Please let me know if there is anything I can do to help you understand this better.; Best,; Thomas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:2912,Availability,avail,available,2912,"files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.gz; cut -f1 -d ""."" Mus_musculus.GRCm38.cdna.all.fa > transcripts_unversioned.fa. head transcripts_unversioned.fa; >ENSMUST00000178537; GGGACAGGGGGC; >ENSMUST00000178862; GGGACTGGGGGGGC; >ENSMUST00000196221; ATGGCATAT; >ENSMUST00000179664; ATGGCATATCA; >ENSMUST00000177564; ATCGGAGGGATACGAG; [truncated]; ```. Then I try to run `salmon`:. ```; wget ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz; gunzip Mus_musculus.GRCm38.86.gtf.gz; salmon quant -t transcripts_unversioned.fa -g Mus_musculus.GRCm38.86.gtf -l IU -p 1 -o quantitation -a subsample.bam --seqBias --gcBias; ```. but get the segmentation fault. Omitting the `--seqBias --gcBias` options makes it work. Perhaps you can already spot where I am doing something wrong? If not, you can find the subsample.bam file [here](https://drive.google.com/open?id=0BzX9viKJksNtak0xako0VXptLW8). (The other files are publically available, as shown above.). Does that help? Please let me know if there is anything I can do to help you understand this better.; Best,; Thomas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:358,Deployability,release,release-,358,"Hi Rob,. thanks a lot for your quick response and apologies for misdiagnosing my problem earlier. ## Data sources. The dataset I am looking at is from the SRA e.g. [this experiment](http://www.ebi.ac.uk/ena/data/view/SRR1033785). My workflow uses thes following genome sequence:; - Mus_musculus.GRCm38.dna.primary_assembly.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz). the following transcripts fasta files (concatenated before use):; - Mus_musculus.GRCm38.cdna.all.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; - Mus_musculus.GRCm38.ncrna.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/ncrna/Mus_musculus.GRCm38.ncrna.fa.gz. and this gene annotation file; - Mus_musculus.GRCm38.86.gtf.gz; - ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz. all from ensembl version 86. ## Workflow; - I built a STAR index with the GTF and genome FASTA files listed above. ; - The FASTQ files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:573,Deployability,release,release-,573,"Hi Rob,. thanks a lot for your quick response and apologies for misdiagnosing my problem earlier. ## Data sources. The dataset I am looking at is from the SRA e.g. [this experiment](http://www.ebi.ac.uk/ena/data/view/SRR1033785). My workflow uses thes following genome sequence:; - Mus_musculus.GRCm38.dna.primary_assembly.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz). the following transcripts fasta files (concatenated before use):; - Mus_musculus.GRCm38.cdna.all.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; - Mus_musculus.GRCm38.ncrna.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/ncrna/Mus_musculus.GRCm38.ncrna.fa.gz. and this gene annotation file; - Mus_musculus.GRCm38.86.gtf.gz; - ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz. all from ensembl version 86. ## Workflow; - I built a STAR index with the GTF and genome FASTA files listed above. ; - The FASTQ files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:707,Deployability,release,release-,707,"Hi Rob,. thanks a lot for your quick response and apologies for misdiagnosing my problem earlier. ## Data sources. The dataset I am looking at is from the SRA e.g. [this experiment](http://www.ebi.ac.uk/ena/data/view/SRR1033785). My workflow uses thes following genome sequence:; - Mus_musculus.GRCm38.dna.primary_assembly.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz). the following transcripts fasta files (concatenated before use):; - Mus_musculus.GRCm38.cdna.all.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; - Mus_musculus.GRCm38.ncrna.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/ncrna/Mus_musculus.GRCm38.ncrna.fa.gz. and this gene annotation file; - Mus_musculus.GRCm38.86.gtf.gz; - ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz. all from ensembl version 86. ## Workflow; - I built a STAR index with the GTF and genome FASTA files listed above. ; - The FASTQ files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:868,Deployability,release,release-,868,"Hi Rob,. thanks a lot for your quick response and apologies for misdiagnosing my problem earlier. ## Data sources. The dataset I am looking at is from the SRA e.g. [this experiment](http://www.ebi.ac.uk/ena/data/view/SRR1033785). My workflow uses thes following genome sequence:; - Mus_musculus.GRCm38.dna.primary_assembly.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz). the following transcripts fasta files (concatenated before use):; - Mus_musculus.GRCm38.cdna.all.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; - Mus_musculus.GRCm38.ncrna.fa.gz; - ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/ncrna/Mus_musculus.GRCm38.ncrna.fa.gz. and this gene annotation file; - Mus_musculus.GRCm38.86.gtf.gz; - ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz. all from ensembl version 86. ## Workflow; - I built a STAR index with the GTF and genome FASTA files listed above. ; - The FASTQ files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:1890,Deployability,release,release-,1890,"RCm38.86.gtf.gz. all from ensembl version 86. ## Workflow; - I built a STAR index with the GTF and genome FASTA files listed above. ; - The FASTQ files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.gz; cut -f1 -d ""."" Mus_musculus.GRCm38.cdna.all.fa > transcripts_unversioned.fa. head transcripts_unversioned.fa; >ENSMUST00000178537; GGGACAGGGGGC; >ENSMUST00000178862; GGGACTGGGGGGGC; >ENSMUST00000196221; ATGGCATAT; >ENSMUST00000179664; ATGGCATATCA; >ENSMUST00000177564; ATCGGAGGGATACGAG; [truncated]; ```. Then I try to run `salmon`:. ```; wget ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz; gunzip Mus_musculus.GRCm38.86.gtf.gz; salmon quant -t transcripts_unversioned.fa -g Mus_musculus.GRCm38.86.gtf -l IU -p 1 -o quantitation -a subsample.bam --seqBias --gcBias; ```. but get the segmentation fault. Omitting the `--seqBias --gcBias` options makes it work. Perhaps you can already spot where I am doing something wrong? If not, you can find the subsample.bam file [here](https://drive.google.com/open?id=0BzX9viKJksNtak0xako0VXptLW8). (The other files are publicall",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459:2374,Deployability,release,release-,2374,"files were extracted from the SRA experiment with [fastq-dump](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=fastq-dump).; - Reads were aligned with STAR to the index and `unsorted` alignments to the transcriptome were returned (this keeps the paired-ends next to each other). I noticed that the cDNA FASTA files from ensembl include the transcript version, e.g. `ENSMUST00000178537.1` in the FASTA header. The GTF file specifies the transcript id and its version in different fields. Therefore, the STAR index does not include the version suffix. Instead, only the transcript ids are listed, e.g. `ENSMUST00000178537`. To provide a FASTA file with transcript identifiers that match those in STAR's BAM file, I pre-processed Ensembl's FASTA file with the following command:. ```; wget ftp://ftp.ensembl.org/pub/release-86/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; gunzip Mus_musculus.GRCm38.cdna.all.fa.gz; cut -f1 -d ""."" Mus_musculus.GRCm38.cdna.all.fa > transcripts_unversioned.fa. head transcripts_unversioned.fa; >ENSMUST00000178537; GGGACAGGGGGC; >ENSMUST00000178862; GGGACTGGGGGGGC; >ENSMUST00000196221; ATGGCATAT; >ENSMUST00000179664; ATGGCATATCA; >ENSMUST00000177564; ATCGGAGGGATACGAG; [truncated]; ```. Then I try to run `salmon`:. ```; wget ftp://ftp.ensembl.org/pub/release-86/gtf/mus_musculus/Mus_musculus.GRCm38.86.gtf.gz; gunzip Mus_musculus.GRCm38.86.gtf.gz; salmon quant -t transcripts_unversioned.fa -g Mus_musculus.GRCm38.86.gtf -l IU -p 1 -o quantitation -a subsample.bam --seqBias --gcBias; ```. but get the segmentation fault. Omitting the `--seqBias --gcBias` options makes it work. Perhaps you can already spot where I am doing something wrong? If not, you can find the subsample.bam file [here](https://drive.google.com/open?id=0BzX9viKJksNtak0xako0VXptLW8). (The other files are publically available, as shown above.). Does that help? Please let me know if there is anything I can do to help you understand this better.; Best,; Thomas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261744459
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963:119,Availability,Down,Download,119,"If it's useful, I made an example where you can run beginning to end to reproduce (didn't see this thread beforehand). Download these:. ```; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz. ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_1.fastq.gz; ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_2.fastq.gz; ```. Using STAR 2.5.2b. ```; star --runThreadN 6 \; --runMode genomeGenerate \; --genomeDir ensembl87 \; --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa \; --sjdbGTFfile Homo_sapiens.GRCh38.87.gtf \; --sjdbOverhang 100. star --runThreadN 6 \; --genomeDir ensembl87 \; --readFilesIn ERR188297_1.fastq ERR188297_2.fastq \; --outFileNamePrefix star/ \; --outSAMtype BAM Unsorted \; --quantMode TranscriptomeSAM; ```. Then, following Thomas, I chop the version numbers from the FASTA. ```; cut -f1 -d ""."" Homo_sapiens.GRCh38.cdna.all.fa > transcripts_unversioned.fa; ```. Now Salmon v0.7.2. Without `--gcBias` it runs to completion. Although nothing in `libParams` dir... ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_test; ```. With `--gcBias` produces segfault:. ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant --gcBias -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_testGC; ```. ```; ^M^MESC[0;32mprocessedESC[0;31m 0 ESC[0;32mreads in current roundESC[0;0m/nas02/home/m/i/milove/.lsbatch/1481837415.333618.shell: line 9: 29198 Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963:1769,Availability,fault,fault,1769,"If it's useful, I made an example where you can run beginning to end to reproduce (didn't see this thread beforehand). Download these:. ```; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz. ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_1.fastq.gz; ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_2.fastq.gz; ```. Using STAR 2.5.2b. ```; star --runThreadN 6 \; --runMode genomeGenerate \; --genomeDir ensembl87 \; --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa \; --sjdbGTFfile Homo_sapiens.GRCh38.87.gtf \; --sjdbOverhang 100. star --runThreadN 6 \; --genomeDir ensembl87 \; --readFilesIn ERR188297_1.fastq ERR188297_2.fastq \; --outFileNamePrefix star/ \; --outSAMtype BAM Unsorted \; --quantMode TranscriptomeSAM; ```. Then, following Thomas, I chop the version numbers from the FASTA. ```; cut -f1 -d ""."" Homo_sapiens.GRCh38.cdna.all.fa > transcripts_unversioned.fa; ```. Now Salmon v0.7.2. Without `--gcBias` it runs to completion. Although nothing in `libParams` dir... ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_test; ```. With `--gcBias` produces segfault:. ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant --gcBias -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_testGC; ```. ```; ^M^MESC[0;32mprocessedESC[0;31m 0 ESC[0;32mreads in current roundESC[0;0m/nas02/home/m/i/milove/.lsbatch/1481837415.333618.shell: line 9: 29198 Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963:167,Deployability,release,release-,167,"If it's useful, I made an example where you can run beginning to end to reproduce (didn't see this thread beforehand). Download these:. ```; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz. ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_1.fastq.gz; ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_2.fastq.gz; ```. Using STAR 2.5.2b. ```; star --runThreadN 6 \; --runMode genomeGenerate \; --genomeDir ensembl87 \; --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa \; --sjdbGTFfile Homo_sapiens.GRCh38.87.gtf \; --sjdbOverhang 100. star --runThreadN 6 \; --genomeDir ensembl87 \; --readFilesIn ERR188297_1.fastq ERR188297_2.fastq \; --outFileNamePrefix star/ \; --outSAMtype BAM Unsorted \; --quantMode TranscriptomeSAM; ```. Then, following Thomas, I chop the version numbers from the FASTA. ```; cut -f1 -d ""."" Homo_sapiens.GRCh38.cdna.all.fa > transcripts_unversioned.fa; ```. Now Salmon v0.7.2. Without `--gcBias` it runs to completion. Although nothing in `libParams` dir... ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_test; ```. With `--gcBias` produces segfault:. ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant --gcBias -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_testGC; ```. ```; ^M^MESC[0;32mprocessedESC[0;31m 0 ESC[0;32mreads in current roundESC[0;0m/nas02/home/m/i/milove/.lsbatch/1481837415.333618.shell: line 9: 29198 Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963:275,Deployability,release,release-,275,"If it's useful, I made an example where you can run beginning to end to reproduce (didn't see this thread beforehand). Download these:. ```; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz. ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_1.fastq.gz; ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_2.fastq.gz; ```. Using STAR 2.5.2b. ```; star --runThreadN 6 \; --runMode genomeGenerate \; --genomeDir ensembl87 \; --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa \; --sjdbGTFfile Homo_sapiens.GRCh38.87.gtf \; --sjdbOverhang 100. star --runThreadN 6 \; --genomeDir ensembl87 \; --readFilesIn ERR188297_1.fastq ERR188297_2.fastq \; --outFileNamePrefix star/ \; --outSAMtype BAM Unsorted \; --quantMode TranscriptomeSAM; ```. Then, following Thomas, I chop the version numbers from the FASTA. ```; cut -f1 -d ""."" Homo_sapiens.GRCh38.cdna.all.fa > transcripts_unversioned.fa; ```. Now Salmon v0.7.2. Without `--gcBias` it runs to completion. Although nothing in `libParams` dir... ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_test; ```. With `--gcBias` produces segfault:. ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant --gcBias -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_testGC; ```. ```; ^M^MESC[0;32mprocessedESC[0;31m 0 ESC[0;32mreads in current roundESC[0;0m/nas02/home/m/i/milove/.lsbatch/1481837415.333618.shell: line 9: 29198 Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963:372,Deployability,release,release-,372,"If it's useful, I made an example where you can run beginning to end to reproduce (didn't see this thread beforehand). Download these:. ```; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz. ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_1.fastq.gz; ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_2.fastq.gz; ```. Using STAR 2.5.2b. ```; star --runThreadN 6 \; --runMode genomeGenerate \; --genomeDir ensembl87 \; --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa \; --sjdbGTFfile Homo_sapiens.GRCh38.87.gtf \; --sjdbOverhang 100. star --runThreadN 6 \; --genomeDir ensembl87 \; --readFilesIn ERR188297_1.fastq ERR188297_2.fastq \; --outFileNamePrefix star/ \; --outSAMtype BAM Unsorted \; --quantMode TranscriptomeSAM; ```. Then, following Thomas, I chop the version numbers from the FASTA. ```; cut -f1 -d ""."" Homo_sapiens.GRCh38.cdna.all.fa > transcripts_unversioned.fa; ```. Now Salmon v0.7.2. Without `--gcBias` it runs to completion. Although nothing in `libParams` dir... ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_test; ```. With `--gcBias` produces segfault:. ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant --gcBias -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_testGC; ```. ```; ^M^MESC[0;32mprocessedESC[0;31m 0 ESC[0;32mreads in current roundESC[0;0m/nas02/home/m/i/milove/.lsbatch/1481837415.333618.shell: line 9: 29198 Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:430,Availability,ERROR,ERROR,430," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:531,Availability,ERROR,ERROR,531," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:632,Availability,ERROR,ERROR,632," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:733,Availability,ERROR,ERROR,733," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:834,Availability,ERROR,ERROR,834," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:935,Availability,ERROR,ERROR,935," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1036,Availability,ERROR,ERROR,1036," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1137,Availability,ERROR,ERROR,1137," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1238,Availability,ERROR,ERROR,1238," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1339,Availability,ERROR,ERROR,1339," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1440,Availability,ERROR,ERROR,1440,"ript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1541,Availability,ERROR,ERROR,1541,"ript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1642,Availability,ERROR,ERROR,1642,"ript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1743,Availability,ERROR,ERROR,1743,"ript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1844,Availability,ERROR,ERROR,1844,"ript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1945,Availability,ERROR,ERROR,1945,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2046,Availability,ERROR,ERROR,2046,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2147,Availability,ERROR,ERROR,2147,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2248,Availability,ERROR,ERROR,2248,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2349,Availability,ERROR,ERROR,2349,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2450,Availability,ERROR,ERROR,2450,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2551,Availability,ERROR,ERROR,2551,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2652,Availability,ERROR,ERROR,2652,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:2753,Availability,ERROR,ERROR,2753,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316:423,Availability,error,errors,423,"Ok, the missing transcripts (from the reference FASTA) were definitely *the* problem. I created a transcript fasta using the genome FASTA and GTF file that were fed to STAR. Specifically, I used the command:. ```; $ ./gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.87.gtf; ```. this produced transcript fasta that led to no warnings (fasta sequences not present in BAM) or errors (BAM sequences not present in fasta). This also allowed quantification (with bias correction) to run to completion. @mikelove, can you validate that this fixes things on your end? If so, perhaps @tomsing1 could also validate that this is the same root cause of the issue for him? In that case, I think that the right thing for me to do is to merge in the change that yells very loudly and bails if we find BAM header entries not present in the transcriptome FASTA.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316:565,Security,validat,validate,565,"Ok, the missing transcripts (from the reference FASTA) were definitely *the* problem. I created a transcript fasta using the genome FASTA and GTF file that were fed to STAR. Specifically, I used the command:. ```; $ ./gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.87.gtf; ```. this produced transcript fasta that led to no warnings (fasta sequences not present in BAM) or errors (BAM sequences not present in fasta). This also allowed quantification (with bias correction) to run to completion. @mikelove, can you validate that this fixes things on your end? If so, perhaps @tomsing1 could also validate that this is the same root cause of the issue for him? In that case, I think that the right thing for me to do is to merge in the change that yells very loudly and bails if we find BAM header entries not present in the transcriptome FASTA.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316:646,Security,validat,validate,646,"Ok, the missing transcripts (from the reference FASTA) were definitely *the* problem. I created a transcript fasta using the genome FASTA and GTF file that were fed to STAR. Specifically, I used the command:. ```; $ ./gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.87.gtf; ```. this produced transcript fasta that led to no warnings (fasta sequences not present in BAM) or errors (BAM sequences not present in fasta). This also allowed quantification (with bias correction) to run to completion. @mikelove, can you validate that this fixes things on your end? If so, perhaps @tomsing1 could also validate that this is the same root cause of the issue for him? In that case, I think that the right thing for me to do is to merge in the change that yells very loudly and bails if we find BAM header entries not present in the transcriptome FASTA.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267608771:19,Safety,avoid,avoids,19,I can confirm this avoids the problem. Thanks Rob. I used rsem-prepare-reference with the GTF and genome FASTA and used the transcripts.fa produced by rsem with salmon quant. No problems. One minor thing I noticed is that the `libParams` dir is empty with or without GC bias still. Is that expected with the alignment based quantification?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267608771
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178:97,Availability,error,error,97,"Hi Mike,. Glad to hear this fixes it. I pushed a commit that does the check, prints out a useful error message (that suggests how you can make a compatible transcriptome fasta) and then bails. Regarding the `libParams` directory --- that is actually a somewhat anachronistic directory anyway. Currently, I've been moving all of the parameters into their own (gzipped) files in the `aux_info` directory. I've kept `libParams` there for backward compatibility sake, but I think it's confusing if the fld appears in multiple places, but the other parameters appear somewhere else, so perhaps it's time to remove it (and note such in the next version's release notes).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178:649,Deployability,release,release,649,"Hi Mike,. Glad to hear this fixes it. I pushed a commit that does the check, prints out a useful error message (that suggests how you can make a compatible transcriptome fasta) and then bails. Regarding the `libParams` directory --- that is actually a somewhat anachronistic directory anyway. Currently, I've been moving all of the parameters into their own (gzipped) files in the `aux_info` directory. I've kept `libParams` there for backward compatibility sake, but I think it's confusing if the fld appears in multiple places, but the other parameters appear somewhere else, so perhaps it's time to remove it (and note such in the next version's release notes).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178:103,Integrability,message,message,103,"Hi Mike,. Glad to hear this fixes it. I pushed a commit that does the check, prints out a useful error message (that suggests how you can make a compatible transcriptome fasta) and then bails. Regarding the `libParams` directory --- that is actually a somewhat anachronistic directory anyway. Currently, I've been moving all of the parameters into their own (gzipped) files in the `aux_info` directory. I've kept `libParams` there for backward compatibility sake, but I think it's confusing if the fld appears in multiple places, but the other parameters appear somewhere else, so perhaps it's time to remove it (and note such in the next version's release notes).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-456201406:143,Availability,error,error,143,"I've encountered a very similar scenario - I've used STAR for alignment and next ran salmon quant with transcripts data.. I'm also getting the error:. `[2019-01-21 23:11:38.495] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment`. But the correction suggested above using gttread does not solve my issue.. any suggestions?. Edit: apologies, it appears I forgot to use the `--quantMode TranscriptomeSAM` flag in STAR. now that I had the suggested fix works just fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-456201406
https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-456201406:303,Security,access,access,303,"I've encountered a very similar scenario - I've used STAR for alignment and next ran salmon quant with transcripts data.. I'm also getting the error:. `[2019-01-21 23:11:38.495] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment`. But the correction suggested above using gttread does not solve my issue.. any suggestions?. Edit: apologies, it appears I forgot to use the `--quantMode TranscriptomeSAM` flag in STAR. now that I had the suggested fix works just fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-456201406
https://github.com/COMBINE-lab/salmon/issues/105#issuecomment-262035535:125,Deployability,release,release,125,"Hi @shannonekj,. Thanks for reporting this. This is resolved upstream & in the develop branch, and will be fixed in the next release of Salmon. Sorry for the inconvenience!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105#issuecomment-262035535
https://github.com/COMBINE-lab/salmon/issues/105#issuecomment-281438049:26,Deployability,release,release,26,This fix is in the newest release (v0.8.0).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105#issuecomment-281438049
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263408444:176,Energy Efficiency,allocate,allocate,176,"Hi @xinbindai,. What you are seeing in both Salmon and RSEM is the expected behavior. This is because, to a large extent, the entire purpose of these tools is to appropriately allocate mulit-mapping reads. In your case, it is likely the case that one of the two very similar transcripts could account for all of the reads, while the other could not. For example, image I have a simple scenario where I have two transcripts:. ```; ACACACTGTGTGTG; ACACACGGTGTGTG; ```. Now, imagine I observe the ""reads"":. ```; ACAC; ACAC; CACA; CACA; ACTG; CTGT; GTGT; TGTG; TGTG; ```. The majority of these reads could have come from either transcript (and are equally likely to have come from both). However, the fact that we observe `ACGT` and `CTGT` is rather strong evidence that we could explain all of the reads via the first transcript while positing 0 (or close to 0) abundance for the second. On a much larger scale, this is what Salmon and RSEM are doing --- they are finding the most likely abundances of the transcripts given the observed data (the reads). When there is unique evidence of one of the two variants, and no unique evidence of the other, the maximum likelihood estimate for the variant with no unique evidence is very small. I'm not sure how many reads you are mapping, but you likely got a somewhat different estimate from eXpress since it tends to regularize it's abundance estimates a bit more strongly than Salmon or RSEM. That being said, this is the intended behavior of these tools, they are meant to probabilistically allocate multi-mapping fragments to similar transcripts in a manner that maximizes a global likelihood, so I don't think that what you are seeing is un-expected. In fact, it is consistent with the probabilistic model that underlies all three tools.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263408444
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263408444:1535,Energy Efficiency,allocate,allocate,1535,"Hi @xinbindai,. What you are seeing in both Salmon and RSEM is the expected behavior. This is because, to a large extent, the entire purpose of these tools is to appropriately allocate mulit-mapping reads. In your case, it is likely the case that one of the two very similar transcripts could account for all of the reads, while the other could not. For example, image I have a simple scenario where I have two transcripts:. ```; ACACACTGTGTGTG; ACACACGGTGTGTG; ```. Now, imagine I observe the ""reads"":. ```; ACAC; ACAC; CACA; CACA; ACTG; CTGT; GTGT; TGTG; TGTG; ```. The majority of these reads could have come from either transcript (and are equally likely to have come from both). However, the fact that we observe `ACGT` and `CTGT` is rather strong evidence that we could explain all of the reads via the first transcript while positing 0 (or close to 0) abundance for the second. On a much larger scale, this is what Salmon and RSEM are doing --- they are finding the most likely abundances of the transcripts given the observed data (the reads). When there is unique evidence of one of the two variants, and no unique evidence of the other, the maximum likelihood estimate for the variant with no unique evidence is very small. I'm not sure how many reads you are mapping, but you likely got a somewhat different estimate from eXpress since it tends to regularize it's abundance estimates a bit more strongly than Salmon or RSEM. That being said, this is the intended behavior of these tools, they are meant to probabilistically allocate multi-mapping fragments to similar transcripts in a manner that maximizes a global likelihood, so I don't think that what you are seeing is un-expected. In fact, it is consistent with the probabilistic model that underlies all three tools.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263408444
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263408444:378,Usability,simpl,simple,378,"Hi @xinbindai,. What you are seeing in both Salmon and RSEM is the expected behavior. This is because, to a large extent, the entire purpose of these tools is to appropriately allocate mulit-mapping reads. In your case, it is likely the case that one of the two very similar transcripts could account for all of the reads, while the other could not. For example, image I have a simple scenario where I have two transcripts:. ```; ACACACTGTGTGTG; ACACACGGTGTGTG; ```. Now, imagine I observe the ""reads"":. ```; ACAC; ACAC; CACA; CACA; ACTG; CTGT; GTGT; TGTG; TGTG; ```. The majority of these reads could have come from either transcript (and are equally likely to have come from both). However, the fact that we observe `ACGT` and `CTGT` is rather strong evidence that we could explain all of the reads via the first transcript while positing 0 (or close to 0) abundance for the second. On a much larger scale, this is what Salmon and RSEM are doing --- they are finding the most likely abundances of the transcripts given the observed data (the reads). When there is unique evidence of one of the two variants, and no unique evidence of the other, the maximum likelihood estimate for the variant with no unique evidence is very small. I'm not sure how many reads you are mapping, but you likely got a somewhat different estimate from eXpress since it tends to regularize it's abundance estimates a bit more strongly than Salmon or RSEM. That being said, this is the intended behavior of these tools, they are meant to probabilistically allocate multi-mapping fragments to similar transcripts in a manner that maximizes a global likelihood, so I don't think that what you are seeing is un-expected. In fact, it is consistent with the probabilistic model that underlies all three tools.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263408444
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263783167:725,Availability,down,downstream,725,"Hi @rob-p , thank you for so quick response. I spent some time organizing my demo data. Here is link for demo: ftp://bioinfo.noble.org/pub/for-github/. Two genes, with transcript name MSAD_157177.t1 and MSAD_200218.t1, get significantly different expression value in two runs, although they are almost identical. . Below are NumReads from Salmon:; ```; runA runB; MSAD_200218.t1 636.8 12201.2; MSAD_157177.t1 9307.1 0.8; ```. I agree with the necessity of allocating mulit-mapping reads. However, our problem is MSAD_157177.t1 received most of mapping reads in runA (9307 vs 636) but lost all of mapping reads in runB (0.8 vs 12201). And MSAD_200218.t1 has totally opposite result. Such different behavior for two genes make downstream Deseq2 reported both genes as significantly DE genes across samples but we know it is false result. Look at histogram.jpg , you will find it is pretty common phenomena over samples in terms of normalized RPKM. . I did a quick test for runB using eXpress, here is eff_counts:; ```; MSAD_200218.t1 5406; MSAD_157177.t1 3990; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263783167
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263783167:962,Testability,test,test,962,"Hi @rob-p , thank you for so quick response. I spent some time organizing my demo data. Here is link for demo: ftp://bioinfo.noble.org/pub/for-github/. Two genes, with transcript name MSAD_157177.t1 and MSAD_200218.t1, get significantly different expression value in two runs, although they are almost identical. . Below are NumReads from Salmon:; ```; runA runB; MSAD_200218.t1 636.8 12201.2; MSAD_157177.t1 9307.1 0.8; ```. I agree with the necessity of allocating mulit-mapping reads. However, our problem is MSAD_157177.t1 received most of mapping reads in runA (9307 vs 636) but lost all of mapping reads in runB (0.8 vs 12201). And MSAD_200218.t1 has totally opposite result. Such different behavior for two genes make downstream Deseq2 reported both genes as significantly DE genes across samples but we know it is false result. Look at histogram.jpg , you will find it is pretty common phenomena over samples in terms of normalized RPKM. . I did a quick test for runB using eXpress, here is eff_counts:; ```; MSAD_200218.t1 5406; MSAD_157177.t1 3990; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263783167
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798:1720,Performance,optimiz,optimization,1720," Run B. ![image](https://cloud.githubusercontent.com/assets/361470/20741292/4f8243a0-b697-11e6-93ae-29d4b48327cd.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741299/60f84c1a-b697-11e6-9f83-1554ff471e94.png). So, as you can see, there is a substantial amount of uncertainty in RunA, especially for `MSAD_200218.t1`. This can explain how you see this transcript obtaining different numbers of reads over different executions for Run A. Specifically, the inferential uncertainty for this transcript is high, and though the mean of the posterior is close to the value you report above, the range is quite large (200 - 1200) reads (potentially even larger with more bootstraps, but 100 gives us a reasonable window on posterior variance). On the other hand, the EM algorithm *really* wants to assign ~0.8 reads to `MSAD_157177.t1` in Run B. To test how much this might be the result of the tendency of the EM algorithm toward sparsity, I tried processing both samples with Salmon's `--useVBOpt` flag --- causing it to use the variational bayesian optimization algorithm, which yields considerably more *regularized* estimates. The posterior distributions obtained using the VB optimizer are:. ### Run A (VB Opt). ![image](https://cloud.githubusercontent.com/assets/361470/20741629/916b3446-b699-11e6-9f92-b8b6d3519981.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741636/98510f06-b699-11e6-8d9f-34f1c353c3e6.png). ### Run B (VB Opt). ![image](https://cloud.githubusercontent.com/assets/361470/20741642/a1341686-b699-11e6-9a87-8a30f87cd49c.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741645/a7340d5c-b699-11e6-90dd-55f9795bac8f.png). So, while there are some small differences for Run A and transcript `MSAD_200218.t1` in Run B, you can see that the most striking difference is `MSAD_157177.t1` in Run B. The number of estimated reads isn't quite as high as with eXpress, but a considerable number of reads map to `MSAD_157177.t1` (and the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798:1850,Performance,optimiz,optimizer,1850,"0/20741299/60f84c1a-b697-11e6-9f83-1554ff471e94.png). So, as you can see, there is a substantial amount of uncertainty in RunA, especially for `MSAD_200218.t1`. This can explain how you see this transcript obtaining different numbers of reads over different executions for Run A. Specifically, the inferential uncertainty for this transcript is high, and though the mean of the posterior is close to the value you report above, the range is quite large (200 - 1200) reads (potentially even larger with more bootstraps, but 100 gives us a reasonable window on posterior variance). On the other hand, the EM algorithm *really* wants to assign ~0.8 reads to `MSAD_157177.t1` in Run B. To test how much this might be the result of the tendency of the EM algorithm toward sparsity, I tried processing both samples with Salmon's `--useVBOpt` flag --- causing it to use the variational bayesian optimization algorithm, which yields considerably more *regularized* estimates. The posterior distributions obtained using the VB optimizer are:. ### Run A (VB Opt). ![image](https://cloud.githubusercontent.com/assets/361470/20741629/916b3446-b699-11e6-9f92-b8b6d3519981.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741636/98510f06-b699-11e6-8d9f-34f1c353c3e6.png). ### Run B (VB Opt). ![image](https://cloud.githubusercontent.com/assets/361470/20741642/a1341686-b699-11e6-9a87-8a30f87cd49c.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741645/a7340d5c-b699-11e6-90dd-55f9795bac8f.png). So, while there are some small differences for Run A and transcript `MSAD_200218.t1` in Run B, you can see that the most striking difference is `MSAD_157177.t1` in Run B. The number of estimated reads isn't quite as high as with eXpress, but a considerable number of reads map to `MSAD_157177.t1` (and the posterior variance is still rather large). Given that the behavior you observe using default settings in Salmon is similar to what you observe in RSEM, my guess is that the all",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798:3456,Performance,optimiz,optimization,3456," see that the most striking difference is `MSAD_157177.t1` in Run B. The number of estimated reads isn't quite as high as with eXpress, but a considerable number of reads map to `MSAD_157177.t1` (and the posterior variance is still rather large). Given that the behavior you observe using default settings in Salmon is similar to what you observe in RSEM, my guess is that the allocation for `MSAD_157177.t1` in Run B from both of these methods is a result of the strong tendency of the EM algorithm toward sparsity. Though eXpress uses a variant of the EM algorithm, it's actually an *online* EM algorithm, and makes use of a small prior, both of which regularize the estimates it produces. In an offline algorithm (or the offline phase of a dual-algorithm method like Salmon), the same thing can be achieved by using a ""more Bayesian"" inference algorithm than the EM (in this case, using the VBEM algorithm). Most of the time, there is very strong agreement between the estimates produced by different optimization algorithms, but sometimes, as in this case, they can differ considerably. It's still an open area of research and analysis to determine if one such method is ""better"" than another. However, if you have strong external information telling you that `MSAD_157177.t1` should actually be expressed at a non-trivial level in Run B, it looks like the VBEM is giving you a better estimate here. Coming back to the suggestion in your original post, there is no good way, in the optimization procedure to ""switch off the re-assignment between similar genes"", since that is the entire point of the algorithm, and heuristically disabling certain reassignments would destroy any statistical guarantees of the procedure. However, regularizing the estimates is an alternative way of balancing the likelihood based assignment of the EM algorithm with some prior belief (and the strength of this prior belief can be tweaked, in Salmon, by modifying the `--vbPrior` argument when the `--useVBOpt` flag",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798:3938,Performance,optimiz,optimization,3938,"thm, it's actually an *online* EM algorithm, and makes use of a small prior, both of which regularize the estimates it produces. In an offline algorithm (or the offline phase of a dual-algorithm method like Salmon), the same thing can be achieved by using a ""more Bayesian"" inference algorithm than the EM (in this case, using the VBEM algorithm). Most of the time, there is very strong agreement between the estimates produced by different optimization algorithms, but sometimes, as in this case, they can differ considerably. It's still an open area of research and analysis to determine if one such method is ""better"" than another. However, if you have strong external information telling you that `MSAD_157177.t1` should actually be expressed at a non-trivial level in Run B, it looks like the VBEM is giving you a better estimate here. Coming back to the suggestion in your original post, there is no good way, in the optimization procedure to ""switch off the re-assignment between similar genes"", since that is the entire point of the algorithm, and heuristically disabling certain reassignments would destroy any statistical guarantees of the procedure. However, regularizing the estimates is an alternative way of balancing the likelihood based assignment of the EM algorithm with some prior belief (and the strength of this prior belief can be tweaked, in Salmon, by modifying the `--vbPrior` argument when the `--useVBOpt` flag is passed; a larger prior leads to more regularization). I hate to leave my analysis with a less than decisive answer, but I'm afraid this is the current state of the research here, and so this is about the best analysis I can currently offer. However, I will mention another project we're working on that relates to this by means of regularization across samples. That tool is [shoal](https://github.com/COMBINE-lab/shoal), and it's a method that takes the output of Salmon, and explicitly borrows information across all of the samples in an experiment to try a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798
https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798:1517,Testability,test,test,1517," Run B. ![image](https://cloud.githubusercontent.com/assets/361470/20741292/4f8243a0-b697-11e6-93ae-29d4b48327cd.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741299/60f84c1a-b697-11e6-9f83-1554ff471e94.png). So, as you can see, there is a substantial amount of uncertainty in RunA, especially for `MSAD_200218.t1`. This can explain how you see this transcript obtaining different numbers of reads over different executions for Run A. Specifically, the inferential uncertainty for this transcript is high, and though the mean of the posterior is close to the value you report above, the range is quite large (200 - 1200) reads (potentially even larger with more bootstraps, but 100 gives us a reasonable window on posterior variance). On the other hand, the EM algorithm *really* wants to assign ~0.8 reads to `MSAD_157177.t1` in Run B. To test how much this might be the result of the tendency of the EM algorithm toward sparsity, I tried processing both samples with Salmon's `--useVBOpt` flag --- causing it to use the variational bayesian optimization algorithm, which yields considerably more *regularized* estimates. The posterior distributions obtained using the VB optimizer are:. ### Run A (VB Opt). ![image](https://cloud.githubusercontent.com/assets/361470/20741629/916b3446-b699-11e6-9f92-b8b6d3519981.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741636/98510f06-b699-11e6-8d9f-34f1c353c3e6.png). ### Run B (VB Opt). ![image](https://cloud.githubusercontent.com/assets/361470/20741642/a1341686-b699-11e6-9a87-8a30f87cd49c.png). ![image](https://cloud.githubusercontent.com/assets/361470/20741645/a7340d5c-b699-11e6-90dd-55f9795bac8f.png). So, while there are some small differences for Run A and transcript `MSAD_200218.t1` in Run B, you can see that the most striking difference is `MSAD_157177.t1` in Run B. The number of estimated reads isn't quite as high as with eXpress, but a considerable number of reads map to `MSAD_157177.t1` (and the ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263793798
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:753,Deployability,release,release,753,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:124,Energy Efficiency,allocate,allocated,124,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:1233,Testability,test,testing,1233,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:196,Usability,simpl,simplified,196,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:428,Usability,simpl,simply,428,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:625,Usability,simpl,simply,625,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:848,Usability,clear,clear,848,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889:1043,Usability,simpl,simply,1043,"Hi @jan-g1,. The length of a feature is used during inference to determine the likelihood that multimapping reads should be allocated to different targets. You're describing what is essentially a simplified model where P(f | t) (i.e., the probability of a fragment given a transcript) is independent of length(t). There's currently no option to disable length normalization completely in Salmon, and you can't ""de-normalize"" by simply multiplying by a factor because those weights are considered during each and every round of the EM (or VBEM) algorithm. However, supporting this should actually be very straight-forward. We simply assign a uniform and identical length to all transcripts for the purpose of inference. I can add such a flag in the next release, though it will initially have to be incompatible with bias correction (since it's not clear right now how the biases for which we account interact with this type of sequencing). Also, it would be possible to run salmon with `--dumpEq`, and then to have a little script / tool that simply re-runs the EM, but without different length factors, using the equivalence class file. I might be able to hack something like that together on short notice if you'd be interested in testing it out. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264659889
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264812173:137,Deployability,release,release,137,"Hi @rob-p ,. thank you very much for your quick and detailed answer. I really appreciate that you will include this feature in your next release.; Indeed, I'm interested in testing out your suggested script/tool !. Best,; Jan",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264812173
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264812173:173,Testability,test,testing,173,"Hi @rob-p ,. thank you very much for your quick and detailed answer. I really appreciate that you will include this feature in your next release.; Indeed, I'm interested in testing out your suggested script/tool !. Best,; Jan",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-264812173
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-268994712:576,Availability,error,errors,576,"Hi @rob-p ,. Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. With UMI's you can deduplicate fragments _before_ inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-268994712
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-268994712:517,Security,hash,hash,517,"Hi @rob-p ,. Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. With UMI's you can deduplicate fragments _before_ inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-268994712
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:933,Availability,error,errors,933,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:1356,Availability,reliab,reliably,1356,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:469,Performance,perform,performance,469,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:1068,Safety,detect,detect,1068,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:1338,Safety,detect,detect,1338,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:874,Security,hash,hash,874,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269042747:25,Availability,error,errors,25,"I don't think sequencing errors of the UMI's is a big issue. I was thinking more of the reads. I've been thinking in terms of (read, UMI) pairs and (transcript, UMI) pairs, and what the relation between them is. Now, during mapping, an equivalence class get a count every time a read is mapped to it right? How feasible would it be to keep track of all UMI's which have been assigned to an equivalence task?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269042747
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269043952:112,Availability,error,errors,112,"Counting (transcript, UMIs) is what ""kallisto pseudo"" with the --umi option; does, right?. Yes, there are a few errors in the UMIs. The Kallisto wrapper tries to; correct them. But this is really very rare. Not sure if it's worth the; time. Like ~100 out of 200.000 reads? I would have to check again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269043952
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269043952:145,Integrability,wrap,wrapper,145,"Counting (transcript, UMIs) is what ""kallisto pseudo"" with the --umi option; does, right?. Yes, there are a few errors in the UMIs. The Kallisto wrapper tries to; correct them. But this is really very rare. Not sure if it's worth the; time. Like ~100 out of 200.000 reads? I would have to check again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269043952
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269054923:116,Availability,error,errors,116,"> On Dec 23, 2016, at 3:35 PM, Valentine Svensson <notifications@github.com> wrote:; > ; > I don't think sequencing errors of the UMI's is a big issue. I was thinking more of the reads.; > ; > I've been thinking in terms of (read, UMI) pairs and (transcript, UMI) pairs, and what the relation between them is.; > ; > Now, during mapping, an equivalence class get a count every time a read is mapped to it right? How feasible would it be to keep track of all UMI's which have been assigned to an equivalence task?; > ; It would be almost trivial.; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269054923
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269069945:469,Testability,test,test,469,"OK, so it seems like adding the UMI <-> eq class counting should be pretty straightforward. @vals, so when you say effective length should be kept constant, you mean we shouldn't adjust for bias, or that we don't expect a transcript length effect at all? Also, is there a basic primer I can read up on regarding the details of the data format (e.g. where in each read I should look for the tag, how long the tag is expected to be, etc.)? I'll be relying on you guys to test stuff out and point me at relevant data sets as I go forward with implementing this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269069945
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269070288:197,Security,access,access,197,"Hi Rob,. All of the different single-cell library prep methods put the cellular barcodes and UMI in different places; what we've been doing is sticking that information in the read name so we have access to it post alignment. Valentine has this awesome repository: https://github.com/vals/umis that does that part via fastqtransform, and has example regexes for a bunch of the different commonly used chemistries:. https://github.com/vals/umis/tree/master/examples. It might be easiest to support the format that Vals is spitting out and assume the user has stuck that information in the read name as a first go rather than re-implement that stuff.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269070288
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269658634:214,Integrability,protocol,protocol,214,"Hey Rob,. Regarding file pairs, in some cases e.g. the FW read contains the mRNA Tag and a Cell Barcode, while the RV read contains the UMI and some non-informative sequence. In particular in the 10X Chromium (V1) protocol there are 4 files! FW, RV as well as I5 and I7 index reads. I don't remember exactly which read contains what information right now though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269658634
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269662717:33,Integrability,protocol,protocol,33,"The Klein group has a new inDrop protocol that has the 4 file format as well that should be cropping up in publications sometime soon. Not sure if it is nicked from the 10x folks but it is:. ```; {; ""read1"": ""(?P<name>[^\\s]+).*\\n(?P<seq>.*)\\n\\+(.*)\\n(?P<qual>.*)\\n"",; ""read2"": ""(.*)\\n(?P<CB1>.*)\\n(.*)\\n(.*)\\n"",; ""read3"": ""(.*)\\n(?P<SB>.*)\\n(.*)\\n(.*)\\n"",; ""read4"": ""(.*)\\n(?P<CB2>.{8})(?P<MB>.{6})\\n(.*)\\n(.*)\\n""; }; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269662717
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-274638652:220,Deployability,release,release,220,"Ok so 0.8.0 contains the option to turn off all length correction, but I've pushed back the milestone for fully supporting the barcoding. This is because there's already a lot of new stuff in 0.8.0 and I needed to cut a release to coincide with the paper. Just dropping in here to explain the modified milestone and re-iterate my interest in and commitment to this feature ;P.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-274638652
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-277223659:57,Integrability,protocol,protocol,57,"Just chiming in, we have bulk RNA-seq data using a NuGen protocol that has the UMI (for paired end data) in the index read. This is very common in the DNA-seq circles so not a one-off protocol. Would be nice if UMIs could be used for PE reads in distinguishing duplicates.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-277223659
https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-277223659:184,Integrability,protocol,protocol,184,"Just chiming in, we have bulk RNA-seq data using a NuGen protocol that has the UMI (for paired end data) in the index read. This is very common in the DNA-seq circles so not a one-off protocol. Would be nice if UMIs could be used for PE reads in distinguishing duplicates.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-277223659
https://github.com/COMBINE-lab/salmon/issues/109#issuecomment-267003338:63,Usability,simpl,simple,63,"I like the opt-in structure, I think in general keeping models simple by default is a good way of doing things. I know people just run programs without reading documentation and expect it to work perfectly. But I think somewhere, maybe even in the default quantification help, there should be a table or decision tree with information about how to choose options. E.g. > ""Did you do random hexamer priming? -> Use the --seqBias option.""",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/109#issuecomment-267003338
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:558,Availability,error,errorminEQClassWeight,558, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:580,Availability,error,errorminEQClassWeight,580, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:602,Availability,error,errorminEQClassWeight,602, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:624,Availability,error,errorminEQClassWeight,624, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:646,Availability,error,errorminEQClassWeight,646, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:668,Availability,error,errorminEQClassWeight,668, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:690,Availability,error,errorminEQClassWeight,690, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:712,Availability,error,errorminEQClassWeight,712, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:734,Availability,error,errorminEQClassWeight,734, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:756,Availability,error,errorminEQClassWeight,756, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:778,Availability,error,errorminEQClassWeight,778, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:800,Availability,error,errorminEQClassWeight,800, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:822,Availability,error,errorminEQClassWeight,822, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:844,Availability,error,errorminEQClassWeight,844, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:866,Availability,error,errorminEQClassWeight,866, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:888,Availability,error,errorminEQClassWeight,888, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:910,Availability,error,errorminEQClassWeight,910, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:932,Availability,error,errorminEQClassWeight,932, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:954,Availability,error,errorminEQClassWeight,954, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:976,Availability,error,errorminEQClassWeight,976, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:998,Availability,error,errorminEQClassWeight,998, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1020,Availability,error,errorminEQClassWeight,1020, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1042,Availability,error,errorminEQClassWeight,1042, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1064,Availability,error,errorminEQClassWeight,1064, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1086,Availability,error,errorminEQClassWeight,1086, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1108,Availability,error,errorminEQClassWeight,1108, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1130,Availability,error,errorminEQClassWeight,1130, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1152,Availability,error,errorminEQClassWeight,1152, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1174,Availability,error,errorminEQClassWeight,1174, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1196,Availability,error,errorminEQClassWeight,1196, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1218,Availability,error,errorminEQClassWeight,1218, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1240,Availability,error,errorminEQClassWeight,1240, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1262,Availability,error,errorminEQClassWeight,1262, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1284,Availability,error,errorminEQClassWeight,1284, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1306,Availability,error,errorminEQClassWeight,1306, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1328,Availability,error,errorminEQClassWeight,1328, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1350,Availability,error,errorminEQClassWeight,1350, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1372,Availability,error,errorminEQClassWeight,1372, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1394,Availability,error,errorminEQClassWeight,1394, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1416,Availability,error,errorminEQClassWeight,1416, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1438,Availability,error,errorminEQClassWeight,1438, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1460,Availability,error,errorminEQClassWeight,1460, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1482,Availability,error,errorminEQClassWeight,1482, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1504,Availability,error,errorminEQClassWeight,1504, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1526,Availability,error,errorminEQClassWeight,1526,``; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1548,Availability,error,errorminEQClassWeight,1548,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1570,Availability,error,errorminEQClassWeight,1570,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1592,Availability,error,errorminEQClassWeight,1592,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1614,Availability,error,errorminEQClassWeight,1614,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1636,Availability,error,errorminEQClassWeight,1636,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1658,Availability,error,errorminEQClassWeight,1658,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1680,Availability,error,errorminEQClassWeight,1680,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1702,Availability,error,errorminEQClassWeight,1702,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1724,Availability,error,errorminEQClassWeight,1724,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1746,Availability,error,errorminEQClassWeight,1746,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1768,Availability,error,errorminEQClassWeight,1768,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1790,Availability,error,errorminEQClassWeight,1790,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1812,Availability,error,errorminEQClassWeight,1812,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1834,Availability,error,errorminEQClassWeight,1834,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1856,Availability,error,errorminEQClassWeight,1856,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1878,Availability,error,errorminEQClassWeight,1878,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1900,Availability,error,errorminEQClassWeight,1900,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1922,Availability,error,errorminEQClassWeight,1922,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1944,Availability,error,errorminEQClassWeight,1944,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1966,Availability,error,errorminEQClassWeight,1966,rrorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:1988,Availability,error,errorminEQClassWeight,1988,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2010,Availability,error,errorminEQClassWeight,2010,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2032,Availability,error,errorminEQClassWeight,2032,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2054,Availability,error,errorminEQClassWeight,2054,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2076,Availability,error,errorminEQClassWeight,2076,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2098,Availability,error,errorminEQClassWeight,2098,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2120,Availability,error,errorminEQClassWeight,2120,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2142,Availability,error,errorminEQClassWeight,2142,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2164,Availability,error,errorminEQClassWeight,2164,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2186,Availability,error,errorminEQClassWeight,2186,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2208,Availability,error,errorminEQClassWeight,2208,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2230,Availability,error,errorminEQClassWeight,2230,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2252,Availability,error,errorminEQClassWeight,2252,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2274,Availability,error,errorminEQClassWeight,2274,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2296,Availability,error,errorminEQClassWeight,2296,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2318,Availability,error,errorminEQClassWeight,2318,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2340,Availability,error,errorminEQClassWeight,2340,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2362,Availability,error,errorminEQClassWeight,2362,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2384,Availability,error,errorminEQClassWeight,2384,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2406,Availability,error,errorminEQClassWeight,2406,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2428,Availability,error,errorminEQClassWeight,2428,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2450,Availability,error,errorminEQClassWeight,2450,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2472,Availability,error,errorminEQClassWeight,2472,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2494,Availability,error,errorminEQClassWeight,2494,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2516,Availability,error,errorminEQClassWeight,2516,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2538,Availability,error,errorminEQClassWeight,2538,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2560,Availability,error,errorminEQClassWeight,2560,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2582,Availability,error,errorminEQClassWeight,2582,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2604,Availability,error,errorminEQClassWeight,2604,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2626,Availability,error,errorminEQClassWeight,2626,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2648,Availability,error,errorminEQClassWeight,2648,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2670,Availability,error,errorminEQClassWeight,2670,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2692,Availability,error,errorminEQClassWeight,2692,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2714,Availability,error,errorminEQClassWeight,2714,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2736,Availability,error,errorminEQClassWeight,2736,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2758,Availability,error,errorminEQClassWeight,2758,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2780,Availability,error,errorminEQClassWeight,2780,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2802,Availability,error,errorminEQClassWeight,2802,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2824,Availability,error,errorminEQClassWeight,2824,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2846,Availability,error,errorminEQClassWeight,2846,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2868,Availability,error,errorminEQClassWeight,2868,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2890,Availability,error,errorminEQClassWeight,2890,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2912,Availability,error,errorminEQClassWeight,2912,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2934,Availability,error,errorminEQClassWeight,2934,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:2956,Availability,error,errorminEQClassWeight,2956,inEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266893086:30,Availability,error,error,30,"Hi @DarwinAwardWinner,. Great error report! Thanks for the details. The `minEQClassWeight` error is actually very interesting (i.e. the fact that it's hitting that code path during the Gibbs sampling). Would you be able to share the data set (or a part of the data set) that reproduces the issue? I'd be happy to take a look and see if I can figure out what's going on.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266893086
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266893086:91,Availability,error,error,91,"Hi @DarwinAwardWinner,. Great error report! Thanks for the details. The `minEQClassWeight` error is actually very interesting (i.e. the fact that it's hitting that code path during the Gibbs sampling). Would you be able to share the data set (or a part of the data set) that reproduces the issue? I'd be happy to take a look and see if I can figure out what's going on.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266893086
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266896459:329,Security,firewall,firewalled,329,"Yes, the data is all public, so I have no problems sharing it, except finding a place to host it publically. I can't just link to the public source because there's some preprocessing steps. Both the FASTQ and the Salmon index are over 1.5 GB, so they're too big for my free Dropbox account, and my institute's network is tightly firewalled, so I can't just server if via a local server. Do you have any suggestions?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266896459
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266898682:114,Availability,down,download,114,"I've just used https://transfer.pcloud.com/ to share the files with you. I think you should get an email with the download link. I've included the FASTQ, the index (entire folder in a tar.gz) and the compiled-from-source salmon executable that I used.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266898682
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204:415,Availability,error,errorminEQClassWeight,415,"So I got the data and am trying to repro the issue now (thanks!). Quick question. I noticed in your example command you have `--libType ISF`. However, you have single-end reads, so the appropriate library type would be `SF` (i.e., they can't be ""inward"" facing reads, b/c there is no mate for each read). When I run your command as is, but replace `ISF` as `SF`, my run completes successfully, and I don't get any `errorminEQClassWeight` output. Could you let me know if this makes any difference for you (also, sorry that, apparently, we're not outputting a useful error message when one passes in a paired-end library type with single-end data). edit: Actually, it's even stranger. I noticed that in your command the library type comes *after* the reads to which it refers, but in this case, Salmon will not apply that library type to those reads (which explains why you're not getting a warning message). The restriction that the `--libType` flag comes before the reads it describes is buried in [the docs](http://salmon.readthedocs.io/en/latest/salmon.html#using-salmon), but I definitely need to make that clearer. Anyway, the point is that, in this case, Salmon should apply the ""default"" single-end library type (i.e., `U`) to your reads. So, presumably, that was what was happening when you saw the strange behavior during Gibbs sampling (and is also what was happening when my Gibbs sampling run completed successfully).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204:566,Availability,error,error,566,"So I got the data and am trying to repro the issue now (thanks!). Quick question. I noticed in your example command you have `--libType ISF`. However, you have single-end reads, so the appropriate library type would be `SF` (i.e., they can't be ""inward"" facing reads, b/c there is no mate for each read). When I run your command as is, but replace `ISF` as `SF`, my run completes successfully, and I don't get any `errorminEQClassWeight` output. Could you let me know if this makes any difference for you (also, sorry that, apparently, we're not outputting a useful error message when one passes in a paired-end library type with single-end data). edit: Actually, it's even stranger. I noticed that in your command the library type comes *after* the reads to which it refers, but in this case, Salmon will not apply that library type to those reads (which explains why you're not getting a warning message). The restriction that the `--libType` flag comes before the reads it describes is buried in [the docs](http://salmon.readthedocs.io/en/latest/salmon.html#using-salmon), but I definitely need to make that clearer. Anyway, the point is that, in this case, Salmon should apply the ""default"" single-end library type (i.e., `U`) to your reads. So, presumably, that was what was happening when you saw the strange behavior during Gibbs sampling (and is also what was happening when my Gibbs sampling run completed successfully).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204:572,Integrability,message,message,572,"So I got the data and am trying to repro the issue now (thanks!). Quick question. I noticed in your example command you have `--libType ISF`. However, you have single-end reads, so the appropriate library type would be `SF` (i.e., they can't be ""inward"" facing reads, b/c there is no mate for each read). When I run your command as is, but replace `ISF` as `SF`, my run completes successfully, and I don't get any `errorminEQClassWeight` output. Could you let me know if this makes any difference for you (also, sorry that, apparently, we're not outputting a useful error message when one passes in a paired-end library type with single-end data). edit: Actually, it's even stranger. I noticed that in your command the library type comes *after* the reads to which it refers, but in this case, Salmon will not apply that library type to those reads (which explains why you're not getting a warning message). The restriction that the `--libType` flag comes before the reads it describes is buried in [the docs](http://salmon.readthedocs.io/en/latest/salmon.html#using-salmon), but I definitely need to make that clearer. Anyway, the point is that, in this case, Salmon should apply the ""default"" single-end library type (i.e., `U`) to your reads. So, presumably, that was what was happening when you saw the strange behavior during Gibbs sampling (and is also what was happening when my Gibbs sampling run completed successfully).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204:898,Integrability,message,message,898,"So I got the data and am trying to repro the issue now (thanks!). Quick question. I noticed in your example command you have `--libType ISF`. However, you have single-end reads, so the appropriate library type would be `SF` (i.e., they can't be ""inward"" facing reads, b/c there is no mate for each read). When I run your command as is, but replace `ISF` as `SF`, my run completes successfully, and I don't get any `errorminEQClassWeight` output. Could you let me know if this makes any difference for you (also, sorry that, apparently, we're not outputting a useful error message when one passes in a paired-end library type with single-end data). edit: Actually, it's even stranger. I noticed that in your command the library type comes *after* the reads to which it refers, but in this case, Salmon will not apply that library type to those reads (which explains why you're not getting a warning message). The restriction that the `--libType` flag comes before the reads it describes is buried in [the docs](http://salmon.readthedocs.io/en/latest/salmon.html#using-salmon), but I definitely need to make that clearer. Anyway, the point is that, in this case, Salmon should apply the ""default"" single-end library type (i.e., `U`) to your reads. So, presumably, that was what was happening when you saw the strange behavior during Gibbs sampling (and is also what was happening when my Gibbs sampling run completed successfully).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204:1111,Usability,clear,clearer,1111,"So I got the data and am trying to repro the issue now (thanks!). Quick question. I noticed in your example command you have `--libType ISF`. However, you have single-end reads, so the appropriate library type would be `SF` (i.e., they can't be ""inward"" facing reads, b/c there is no mate for each read). When I run your command as is, but replace `ISF` as `SF`, my run completes successfully, and I don't get any `errorminEQClassWeight` output. Could you let me know if this makes any difference for you (also, sorry that, apparently, we're not outputting a useful error message when one passes in a paired-end library type with single-end data). edit: Actually, it's even stranger. I noticed that in your command the library type comes *after* the reads to which it refers, but in this case, Salmon will not apply that library type to those reads (which explains why you're not getting a warning message). The restriction that the `--libType` flag comes before the reads it describes is buried in [the docs](http://salmon.readthedocs.io/en/latest/salmon.html#using-salmon), but I definitely need to make that clearer. Anyway, the point is that, in this case, Salmon should apply the ""default"" single-end library type (i.e., `U`) to your reads. So, presumably, that was what was happening when you saw the strange behavior during Gibbs sampling (and is also what was happening when my Gibbs sampling run completed successfully).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266932730:80,Usability,simpl,simply,80,"Well, if they *were* paired end, they would be ISF. I assumed that Salmon would simply ignore the pairing information if you fed it single-end reads. (I think this is how some other tools work, maybe?) I'll retry with fixed library specifications and see if that fixes things. Edit: I just noticed your edit. I'll reply again in a minute.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266932730
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:3787,Integrability,protocol,protocol,3787, [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [info] iteration = 200 | max rel diff. = 0.103587; [2016-12-13 22:40:25.102] [jointLog] [info] iteration = 300 | max rel diff. = 0.144748; [2016-12-13 22:40:25.815] [jointLog] [info] iteration = 400 | max rel diff. = 0.231057; [2016-12-13 22:40:26.505] [jointLog] [info] iteration = 500 | max rel diff. = 0.0156154; [2016-12-13 22:40:27.020] [jointLog] [info] iteration = 570 | max rel diff. = 0.00955966; [2016-12-13 22:40:27.052] [jointLog] [info] Finished optimizer; [2016-12-13 22:40:27.052] [jointLog] [info] writing output. [2016-12-13 22:40:27.523] [jointLog] [info] Starting Gibbs Sampler 1 week; 100% [=====================================================] in 44s; [2016-12-13 22:41:12.189] [jointLog] [info] Finished Gibbs Sampler; [2016-12-13 22:41:12.190] [jointLog] [warning] NOTE: Read Lib [SRR2454059.fq.gz] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: test_quant/lib_format_counts.json for details; ```. edit: One note is that I was using my build of the same commit number. I'm running the executable you compiled now (since I had to put the appropriate libraries in the `LD_LIBRARY_PATH` to get it to be happy).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1375,Performance,Load,Loading,1375,"d in the log) that there was a mapping bias (i.e. that the data look stranded). Specifically, here is what I get when I run (a close approximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence c",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1441,Performance,Load,Loading,1441,"ok stranded). Specifically, here is what I get when I run (a close approximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1506,Performance,Load,Loading,1506,proximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quant,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1579,Performance,Load,Loading,1579,g38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting opti,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1649,Performance,Load,Loading,1649,-useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equi,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1908,Performance,load,loading,1908, ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1972,Performance,load,loading,1972, => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [info] iteration = 200 | max rel diff. = 0.103587; [2016-12-13 22:40:25.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:2586,Performance,optimiz,optimizer,2586, Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [info] iteration = 200 | max rel diff. = 0.103587; [2016-12-13 22:40:25.102] [jointLog] [info] iteration = 300 | max rel diff. = 0.144748; [2016-12-13 22:40:25.815] [jointLog] [info] iteration = 400 | max rel diff. = 0.231057; [2016-12-13 22:40:26.505] [jointLog] [info] iteration = 500 | max rel diff. = 0.0156154; [2016-12-13 22:40:27.020] [jointLog] [info] iteration = 570 | max rel diff. = 0.00955966; [2016-12-13 22:40:27.052] [jointLog] [info] Finished optimizer; [2016-12-13 22:40:27.052] [jointLog] [info] writing output. [2016-12-13 22:40:27.523] [jointLog] [info] Starting Gibbs Sampler 1 week; 100% [=====================================================] in 44s; [2016-12,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:3363,Performance,optimiz,optimizer,3363, [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [info] iteration = 200 | max rel diff. = 0.103587; [2016-12-13 22:40:25.102] [jointLog] [info] iteration = 300 | max rel diff. = 0.144748; [2016-12-13 22:40:25.815] [jointLog] [info] iteration = 400 | max rel diff. = 0.231057; [2016-12-13 22:40:26.505] [jointLog] [info] iteration = 500 | max rel diff. = 0.0156154; [2016-12-13 22:40:27.020] [jointLog] [info] iteration = 570 | max rel diff. = 0.00955966; [2016-12-13 22:40:27.052] [jointLog] [info] Finished optimizer; [2016-12-13 22:40:27.052] [jointLog] [info] writing output. [2016-12-13 22:40:27.523] [jointLog] [info] Starting Gibbs Sampler 1 week; 100% [=====================================================] in 44s; [2016-12-13 22:41:12.189] [jointLog] [info] Finished Gibbs Sampler; [2016-12-13 22:41:12.190] [jointLog] [warning] NOTE: Read Lib [SRR2454059.fq.gz] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: test_quant/lib_format_counts.json for details; ```. edit: One note is that I was using my build of the same commit number. I'm running the executable you compiled now (since I had to put the appropriate libraries in the `LD_LIBRARY_PATH` to get it to be happy).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:3730,Safety,Detect,Detected,3730, [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [info] iteration = 200 | max rel diff. = 0.103587; [2016-12-13 22:40:25.102] [jointLog] [info] iteration = 300 | max rel diff. = 0.144748; [2016-12-13 22:40:25.815] [jointLog] [info] iteration = 400 | max rel diff. = 0.231057; [2016-12-13 22:40:26.505] [jointLog] [info] iteration = 500 | max rel diff. = 0.0156154; [2016-12-13 22:40:27.020] [jointLog] [info] iteration = 570 | max rel diff. = 0.00955966; [2016-12-13 22:40:27.052] [jointLog] [info] Finished optimizer; [2016-12-13 22:40:27.052] [jointLog] [info] writing output. [2016-12-13 22:40:27.523] [jointLog] [info] Starting Gibbs Sampler 1 week; 100% [=====================================================] in 44s; [2016-12-13 22:41:12.189] [jointLog] [info] Finished Gibbs Sampler; [2016-12-13 22:41:12.190] [jointLog] [warning] NOTE: Read Lib [SRR2454059.fq.gz] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: test_quant/lib_format_counts.json for details; ```. edit: One note is that I was using my build of the same commit number. I'm running the executable you compiled now (since I had to put the appropriate libraries in the `LD_LIBRARY_PATH` to get it to be happy).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1916,Security,hash,hash,1916, ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 targets. processed 19000000 fragments; hits: 65897209; hits per frag: 3.47349. [2016-12-13 22:40:22.572] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:40:22.572] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:40:22.618] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:40:22.618] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:40:22.619] [jointLog] [info] Starting optimizer; [2016-12-13 22:40:22.904] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:40:22.911] [jointLog] [info] iteration = 0 | max rel diff. = 299.976; [2016-12-13 22:40:23.620] [jointLog] [info] iteration = 100 | max rel diff. = 0.121769; [2016-12-13 22:40:24.367] [jointLog] [,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:393,Testability,log,log,393,"No, that shouldn't cause a problem. When I ran your command (including the `ISF` and placing the `--libType` after the set of reads), my run still completed successfully (and didn't produce any warnings during Gibbs sampling). Salmon's behavior when running in unstranded mode on stranded data is simply to map the reads in the orientation they match, and to report on the console (and in the log) that there was a mapping bias (i.e. that the data look stranded). Specifically, here is what I get when I run (a close approximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1151,Testability,Log,Logs,1151,"ype` after the set of reads), my run still completed successfully (and didn't produce any warnings during Gibbs sampling). Salmon's behavior when running in unstranded mode on stranded data is simply to map the reads in the orientation they match, and to report on the console (and in the log) that there was a mapping bias (i.e. that the data look stranded). Specifically, here is what I get when I run (a close approximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:1186,Testability,log,logs,1186,"ype` after the set of reads), my run still completed successfully (and didn't produce any warnings during Gibbs sampling). Salmon's behavior when running in unstranded mode on stranded data is simply to map the reads in the orientation they match, and to report on the console (and in the log) that there was a mapping bias (i.e. that the data look stranded). Specifically, here is what I get when I run (a close approximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22:39:07.653] [jointLog] [info] done; [2016-12-13 22:39:07.653] [jointLog] [info] Index contained 182608 ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878:297,Usability,simpl,simply,297,"No, that shouldn't cause a problem. When I ran your command (including the `ISF` and placing the `--libType` after the set of reads), my run still completed successfully (and didn't produce any warnings during Gibbs sampling). Salmon's behavior when running in unstranded mode on stranded data is simply to map the reads in the orientation they match, and to report on the console (and in the log) that there was a mapping bias (i.e. that the data look stranded). Specifically, here is what I get when I run (a close approximation of) your command. ```; $salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --useVBOpt --output test_quant --; numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:38:54.413] [jointLog] [info] parsing read library format; [2016-12-13 22:38:54.413] [jointLog] [info] There is 1 library.; [2016-12-13 22:38:56.240] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:38:56.240] [jointLog] [info] Loading Quasi index; [2016-12-13 22:38:56.240] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:39:01.268] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:39:02.630] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:39:03.041] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:39:03.159] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:39:03.160] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:39:07.653] [stderrLog] [info] Done loading index; [2016-12-13 22",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266934878
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:108,Availability,error,error,108,"Yup, but I'm just trying to work backward. That is, first figure out what's going on with the `minEqWeight` error, and then figure out if that's related to what was causing it to hang. The issue right now is just that I can't seem to easily repro either Gibbs error. I just ran using the binary you compiled with the following command, and got this output:. ```; $LD_LIBRARY_PATH=~/SoftwareStaging/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:260,Availability,error,error,260,"Yup, but I'm just trying to work backward. That is, first figure out what's going on with the `minEqWeight` error, and then figure out if that's related to what was causing it to hang. The issue right now is just that I can't seem to easily repro either Gibbs error. I just ran using the binary you compiled with the following command, and got this output:. ```; $LD_LIBRARY_PATH=~/SoftwareStaging/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:3652,Integrability,protocol,protocol,3652,tLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [info] iteration = 200 | max rel diff. = 0.102915; [2016-12-13 22:45:35.612] [jointLog] [info] iteration = 300 | max rel diff. = 0.145792; [2016-12-13 22:45:36.357] [jointLog] [info] iteration = 400 | max rel diff. = 0.217489; [2016-12-13 22:45:37.055] [jointLog] [info] iteration = 500 | max rel diff. = 0.0159298; [2016-12-13 22:45:37.628] [jointLog] [info] iteration = 569 | max rel diff. = 0.00958049; [2016-12-13 22:45:37.653] [jointLog] [info] Finished optimizer; [2016-12-13 22:45:37.653] [jointLog] [info] writing output. [2016-12-13 22:45:38.213] [jointLog] [info] Starting Gibbs Sampler; 100% [=====================================================] in 31s; [2016-12-13 22:46:10.451] [jointLog] [info] Finished Gibbs Sampler; [2016-12-13 22:46:10.451] [jointLog] [warning] NOTE: Read Lib [SRR2454059.fq.gz] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: test_quant/lib_format_counts.json for details; ```. i.e. I don't seem to get the complaints from the Gibbs sampler and all output files look to be created properly. I'm trying to figure out what could be different.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1247,Performance,Load,Loading,1247,"bbs error. I just ran using the binary you compiled with the following command, and got this output:. ```; $LD_LIBRARY_PATH=~/SoftwareStaging/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1312,Performance,Load,Loading,1312,"g command, and got this output:. ```; $LD_LIBRARY_PATH=~/SoftwareStaging/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1385,Performance,Load,Loading,1385,ing/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantify,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1452,Performance,Load,Loading,1452,g38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting opti,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1522,Performance,Load,Loading,1522,-us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equi,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1781,Performance,load,loading,1781, ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [i,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1845,Performance,load,loading,1845, => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [info] iteration = 200 | max rel diff. = 0.102915; [2016-12-13 22:45:35.6,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:2459,Performance,optimiz,optimizer,2459, Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [info] iteration = 200 | max rel diff. = 0.102915; [2016-12-13 22:45:35.612] [jointLog] [info] iteration = 300 | max rel diff. = 0.145792; [2016-12-13 22:45:36.357] [jointLog] [info] iteration = 400 | max rel diff. = 0.217489; [2016-12-13 22:45:37.055] [jointLog] [info] iteration = 500 | max rel diff. = 0.0159298; [2016-12-13 22:45:37.628] [jointLog] [info] iteration = 569 | max rel diff. = 0.00958049; [2016-12-13 22:45:37.653] [jointLog] [info] Finished optimizer; [2016-12-13 22:45:37.653] [jointLog] [info] writing output. [2016-12-13 22:45:38.213] [jointLog] [info] Starting Gibbs Sampler; 100% [=====================================================] in 31s; [2016-12-13 22:4,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:3235,Performance,optimiz,optimizer,3235,tLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [info] iteration = 200 | max rel diff. = 0.102915; [2016-12-13 22:45:35.612] [jointLog] [info] iteration = 300 | max rel diff. = 0.145792; [2016-12-13 22:45:36.357] [jointLog] [info] iteration = 400 | max rel diff. = 0.217489; [2016-12-13 22:45:37.055] [jointLog] [info] iteration = 500 | max rel diff. = 0.0159298; [2016-12-13 22:45:37.628] [jointLog] [info] iteration = 569 | max rel diff. = 0.00958049; [2016-12-13 22:45:37.653] [jointLog] [info] Finished optimizer; [2016-12-13 22:45:37.653] [jointLog] [info] writing output. [2016-12-13 22:45:38.213] [jointLog] [info] Starting Gibbs Sampler; 100% [=====================================================] in 31s; [2016-12-13 22:46:10.451] [jointLog] [info] Finished Gibbs Sampler; [2016-12-13 22:46:10.451] [jointLog] [warning] NOTE: Read Lib [SRR2454059.fq.gz] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: test_quant/lib_format_counts.json for details; ```. i.e. I don't seem to get the complaints from the Gibbs sampler and all output files look to be created properly. I'm trying to figure out what could be different.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:3595,Safety,Detect,Detected,3595,tLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [info] iteration = 200 | max rel diff. = 0.102915; [2016-12-13 22:45:35.612] [jointLog] [info] iteration = 300 | max rel diff. = 0.145792; [2016-12-13 22:45:36.357] [jointLog] [info] iteration = 400 | max rel diff. = 0.217489; [2016-12-13 22:45:37.055] [jointLog] [info] iteration = 500 | max rel diff. = 0.0159298; [2016-12-13 22:45:37.628] [jointLog] [info] iteration = 569 | max rel diff. = 0.00958049; [2016-12-13 22:45:37.653] [jointLog] [info] Finished optimizer; [2016-12-13 22:45:37.653] [jointLog] [info] writing output. [2016-12-13 22:45:38.213] [jointLog] [info] Starting Gibbs Sampler; 100% [=====================================================] in 31s; [2016-12-13 22:46:10.451] [jointLog] [info] Finished Gibbs Sampler; [2016-12-13 22:46:10.451] [jointLog] [warning] NOTE: Read Lib [SRR2454059.fq.gz] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: test_quant/lib_format_counts.json for details; ```. i.e. I don't seem to get the complaints from the Gibbs sampler and all output files look to be created properly. I'm trying to figure out what could be different.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1789,Security,hash,hash,1789, ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000001 fragments; hits: 65897764; hits per frag: 3.48152. [2016-12-13 22:45:33.192] [jointLog] [info] Computed 137534 rich equivalence classes for further processing; [2016-12-13 22:45:33.192] [jointLog] [info] Counted 16265961 total reads in the equivalence classes; [2016-12-13 22:45:33.233] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 22:45:33.233] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 22:45:33.234] [jointLog] [info] Starting optimizer; [2016-12-13 22:45:33.516] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 22:45:33.523] [jointLog] [info] iteration = 0 | max rel diff. = 299.95; [2016-12-13 22:45:34.217] [jointLog] [info] iteration = 100 | max rel diff. = 0.122252; [2016-12-13 22:45:34.912] [jointLog] [i,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1024,Testability,Log,Logs,1024,"Yup, but I'm just trying to work backward. That is, first figure out what's going on with the `minEqWeight` error, and then figure out if that's related to what was causing it to hang. The issue right now is just that I can't seem to easily repro either Gibbs error. I just ran using the binary you compiled with the following command, and got this output:. ```; $LD_LIBRARY_PATH=~/SoftwareStaging/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584:1059,Testability,log,logs,1059,"Yup, but I'm just trying to work backward. That is, first figure out what's going on with the `minEqWeight` error, and then figure out if that's related to what was causing it to hang. The issue right now is just that I can't seem to easily repro either Gibbs error. I just ran using the binary you compiled with the following command, and got this output:. ```; $LD_LIBRARY_PATH=~/SoftwareStaging/salmon/lib:$LD_LIBRARY_PATH ./salmon quant --index Salmon_index_hg38.analysisSet_knownGene --unmatedReads SRR2454059.fq.gz --libType ISF --us; eVBOpt --output test_quant --numGibbsSamples 100 --threads 16; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { SRR2454059.fq.gz }; ### [ libType ] => { ISF }; ### [ useVBOpt ] => { }; ### [ output ] => { test_quant }; ### [ numGibbsSamples ] => { 100 }; ### [ threads ] => { 16 }; Logs will be written to test_quant/logs; [2016-12-13 22:44:07.409] [jointLog] [info] parsing read library format; [2016-12-13 22:44:07.409] [jointLog] [info] There is 1 library.; [2016-12-13 22:44:09.318] [jointLog] [info] Loading Quasi index; [2016-12-13 22:44:09.318] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 22:44:09.318] [stderrLog] [info] Loading Suffix Array; [2016-12-13 22:44:15.002] [stderrLog] [info] Loading Transcript Info; [2016-12-13 22:44:16.278] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 22:44:16.625] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 22:44:16.680] [stderrLog] [info] Computing transcript lengths; [2016-12-13 22:44:16.681] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 22:44:20.485] [stderrLog] [info] Done loading index; [2016-12-13 22:44:20.485] [jointLog] [info] done; [2016-12-13 22:44:20.485] [jointLog] [info] Index contained 182608 targets. processed 19000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935584
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935953:122,Performance,optimiz,optimization,122,"We seem to get the same mapping rate etc., so I'm assuming something different is happening between the end of the normal optimization and the Gibbs sampling between your run and my run.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266935953
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266936224:37,Testability,test,testing,37,"I really hope it doesn't 😟 , but the testing I've been doing is on 64-bit 14.10. I have a 16.04 box I can try it on as well. running on the 16.10 machine now to see if I can repro.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266936224
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266938104:493,Availability,error,error,493,"Damn; I get the same behavior on ~~16.10~~ (actually, my box is 16.04, but I'm skeptical that this specific version issue is the cause of the behavior) as I get on 14.10 (using the executable you provided). It runs to completion and modulo our less-than-ideal handling of the `--libType` flag coming after the `--unmatedReads` flag, it completes without the Gibbs warning. When I run with `--seqBias` and `--gcBias`, I get the same behavior (it runs and finishes w/o hanging or outputting the error messages). I'm going to take a look at the relevant code path to see if anything stands out to me.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266938104
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266938104:499,Integrability,message,messages,499,"Damn; I get the same behavior on ~~16.10~~ (actually, my box is 16.04, but I'm skeptical that this specific version issue is the cause of the behavior) as I get on 14.10 (using the executable you provided). It runs to completion and modulo our less-than-ideal handling of the `--libType` flag coming after the `--unmatedReads` flag, it completes without the Gibbs warning. When I run with `--seqBias` and `--gcBias`, I get the same behavior (it runs and finishes w/o hanging or outputting the error messages). I'm going to take a look at the relevant code path to see if anything stands out to me.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266938104
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266948036:350,Availability,down,down,350,"Great; hopefully I'll be able to repro the issue with the other sample. No rush, as I'll be finishing putting together the final for my class tomorrow morning (and so will be testing the sample between writing exam questions ;P). I just hope this doesn't turn out to be an environment / machine-specific behavior (those are *the worst* bugs to track down and fix).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266948036
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266948036:175,Testability,test,testing,175,"Great; hopefully I'll be able to repro the issue with the other sample. No rush, as I'll be finishing putting together the final for my class tomorrow morning (and so will be testing the sample between writing exam questions ;P). I just hope this doesn't turn out to be an environment / machine-specific behavior (those are *the worst* bugs to track down and fix).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266948036
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266950738:253,Performance,multi-thread,multi-threading,253,"Ok, the worst possible thing happened: I ran it a second time and it worked just fine. Does Salmon use any random number generation, and if so, is there an option to set the seed to get a deterministic run? Or is it potentially non-deterministic due to multi-threading?. One additional threading-related tidbit: I believe that when it does get stuck, a single CPU core is at 100% and the others are all unused.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266950738
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967:228,Integrability,depend,depending,228,"Damn. There are random numbers, but even setting the seed, the multi-threaded nature of almost all steps leads to non-deterministic behavior. The behavior you describe sounds like some sort of race condition that gets triggered depending on when threads get to different parts of the code. I couldn't get the hanging with the other dataset over multiple (~10) runs. So even if it's completely non-deterministic you seem to be getting it with higher frequency in your system. Is it always in the Gibbs phase? One question / thought, did salmon fetch and build the Intel TBB dependency, or are you using a system version?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967:573,Integrability,depend,dependency,573,"Damn. There are random numbers, but even setting the seed, the multi-threaded nature of almost all steps leads to non-deterministic behavior. The behavior you describe sounds like some sort of race condition that gets triggered depending on when threads get to different parts of the code. I couldn't get the hanging with the other dataset over multiple (~10) runs. So even if it's completely non-deterministic you seem to be getting it with higher frequency in your system. Is it always in the Gibbs phase? One question / thought, did salmon fetch and build the Intel TBB dependency, or are you using a system version?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967:63,Performance,multi-thread,multi-threaded,63,"Damn. There are random numbers, but even setting the seed, the multi-threaded nature of almost all steps leads to non-deterministic behavior. The behavior you describe sounds like some sort of race condition that gets triggered depending on when threads get to different parts of the code. I couldn't get the hanging with the other dataset over multiple (~10) runs. So even if it's completely non-deterministic you seem to be getting it with higher frequency in your system. Is it always in the Gibbs phase? One question / thought, did salmon fetch and build the Intel TBB dependency, or are you using a system version?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967:193,Performance,race condition,race condition,193,"Damn. There are random numbers, but even setting the seed, the multi-threaded nature of almost all steps leads to non-deterministic behavior. The behavior you describe sounds like some sort of race condition that gets triggered depending on when threads get to different parts of the code. I couldn't get the hanging with the other dataset over multiple (~10) runs. So even if it's completely non-deterministic you seem to be getting it with higher frequency in your system. Is it always in the Gibbs phase? One question / thought, did salmon fetch and build the Intel TBB dependency, or are you using a system version?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266951967
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:221,Deployability,install,install,221,"I think it probably fetched and built it? Here's what CmakeCache.txt says:. ```; $ grep TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:316,Deployability,install,install,316,"I think it probably fetched and built it? Here's what CmakeCache.txt says:. ```; $ grep TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:385,Deployability,install,install,385,"I think it probably fetched and built it? Here's what CmakeCache.txt says:. ```; $ grep TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:541,Deployability,install,install,541,"I think it probably fetched and built it? Here's what CmakeCache.txt says:. ```; $ grep TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:613,Deployability,install,install,613,"I think it probably fetched and built it? Here's what CmakeCache.txt says:. ```; $ grep TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:2266,Energy Efficiency,monitor,monitor,2266,"B_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc; arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqd; q dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4; _2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb tpr_sh; adow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm x; saveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bugs :; bogomips : 5985.57; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:; ...; [And 7 more cores]; $ uname -a; Linux salomon24 4.4.0-51-generic #72-Ubuntu SMP Thu Nov 24 18:29:54 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -d; Description: Ubuntu 16.04.1 LTS; ```. lshw output: [salomon24-lshw.txt](https://github.com/COMBINE-lab/salmon/files/650904/salomon24-lshw.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:2708,Energy Efficiency,power,power,2708,"B_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc; arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqd; q dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4; _2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb tpr_sh; adow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm x; saveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bugs :; bogomips : 5985.57; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:; ...; [And 7 more cores]; $ uname -a; Linux salomon24 4.4.0-51-generic #72-Ubuntu SMP Thu Nov 24 18:29:54 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -d; Description: Ubuntu 16.04.1 LTS; ```. lshw output: [salomon24-lshw.txt](https://github.com/COMBINE-lab/salmon/files/650904/salomon24-lshw.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:813,Modifiability,variab,variable,813,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:915,Modifiability,variab,variable,915,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1003,Modifiability,variab,variable,1003,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1093,Modifiability,variab,variable,1093,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1173,Modifiability,variab,variable,1173,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1265,Modifiability,variab,variable,1265,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1355,Modifiability,variab,variable,1355,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1449,Modifiability,variab,variable,1449,"p TBB CMakeCache.txt; //TBB debug library directory; TBB_DEBUG_LIBRARY_DIRS:PATH=; TBB_INCLUDE_DIR:PATH=/home/ryan/src/salmon/external/install/include; //TBB include directory; TBB_INCLUDE_DIRS:PATH=/home/ryan/src/salmon/external/install/include; TBB_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbb.so; TBB_LIBRARY_DEBUG:FILEPATH=TBB_LIBRARY_DEBUG-NOTFOUND; //TBB library directory; TBB_LIBRARY_DIRS:PATH=/home/ryan/src/salmon/external/install/lib; TBB_MALLOC_LIBRARY:FILEPATH=/home/ryan/src/salmon/external/install/lib/libtbbmalloc.so; TBB_MALLOC_LIBRARY_DEBUG:FILEPATH=TBB_MALLOC_LIBRARY_DEBUG-NOTFOUND; TBB_RECONFIGURE:UNINITIALIZED=TRUE; TBB_WILL_RECONFIGURE:UNINITIALIZED=FALSE; //ADVANCED property for variable: TBB_DEBUG_LIBRARY_DIRS; TBB_DEBUG_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIR; TBB_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_INCLUDE_DIRS; TBB_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts a",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657:1819,Performance,cache,cache,1819,"B_INCLUDE_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY; TBB_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DEBUG; TBB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_LIBRARY_DIRS; TBB_LIBRARY_DIRS-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY; TBB_MALLOC_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: TBB_MALLOC_LIBRARY_DEBUG; TBB_MALLOC_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```. Also, here's the output of every hardware/OS reporting command I can think of:. ```; $ cat /proc/cpuinfo; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 63; model name : Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz; stepping : 2; microcode : 0x36; cpu MHz : 3300.000; cache size : 10240 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 15; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36; clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc; arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqd; q dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4; _2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb tpr_sh; adow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm x; saveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bugs :; bogomips : 5985.57; clflush size : 64; cache_alignment : 64; address sizes : 46 bits physical, 48 bits virtual; power management:; ...; [And 7 more cores]; $ uname -a; Linux salomon24 4.4.0-51-generic #72-Ubuntu SMP Thu Nov 24 18:29:54 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -d; Description: Ubuntu 16.04.1 LTS; ```. lshw output: [salomon24-lshw.txt](https://github.com/COMBINE-lab/salmon/files/650904/salomon24-lshw.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266953657
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267140418:192,Availability,down,down,192,"Ok, nothing about your hardware, as reported, above, raises any ideas. I'll keep looking at the code that executes between the end of VBEM and Gibbs. However, one thing we might try to narrow down the offending region is running salmon under `gdb` (I can do this as well, but it's not useful on my end yet since I can't get the hanging behavior). If you run salmon under `gdb` and then issue a `SIGINT` (i.e., press `ctrl+C`) when the hanging behavior occurs, this will return you to `gdb`. At that point, you can issue the backtrace command (`bt`) at the `gdb` prompt, and it will tell us where in the code the thread was at the point the process was interrupted. Hopefully, this can narrow things down to an offending function.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267140418
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267140418:699,Availability,down,down,699,"Ok, nothing about your hardware, as reported, above, raises any ideas. I'll keep looking at the code that executes between the end of VBEM and Gibbs. However, one thing we might try to narrow down the offending region is running salmon under `gdb` (I can do this as well, but it's not useful on my end yet since I can't get the hanging behavior). If you run salmon under `gdb` and then issue a `SIGINT` (i.e., press `ctrl+C`) when the hanging behavior occurs, this will return you to `gdb`. At that point, you can issue the backtrace command (`bt`) at the `gdb` prompt, and it will tell us where in the code the thread was at the point the process was interrupted. Hopefully, this can narrow things down to an offending function.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267140418
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069:34,Availability,error,error,34,"I haven't got it to reproduce the error yet, but I did see the error in one more run outside of gdb. . On the plus side, I did find this: http://stackoverflow.com/questions/6545763/how-can-i-rerun-a-program-with-gdb-until-a-segmentation-fault-occurs. So now I can have it keep trying forever.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069:63,Availability,error,error,63,"I haven't got it to reproduce the error yet, but I did see the error in one more run outside of gdb. . On the plus side, I did find this: http://stackoverflow.com/questions/6545763/how-can-i-rerun-a-program-with-gdb-until-a-segmentation-fault-occurs. So now I can have it keep trying forever.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069:237,Availability,fault,fault-occurs,237,"I haven't got it to reproduce the error yet, but I did see the error in one more run outside of gdb. . On the plus side, I did find this: http://stackoverflow.com/questions/6545763/how-can-i-rerun-a-program-with-gdb-until-a-segmentation-fault-occurs. So now I can have it keep trying forever.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267331282:428,Security,access,access,428,"Man, I was afraid it would be hard to repro _inside_ of GDB. Sorry about that! The solution you found does seem generally useful though. Another possibility is to try to run it outside GDB, but to use `strace` (see the first answer [here](http://unix.stackexchange.com/questions/166541/how-to-know-where-a-program-is-stuck-in-linux)). This would let the program run outside of GDB (where you can repro the issue), but still get access to the stack at the point of the hanging.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267331282
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267357651:71,Testability,log,log,71,"Ok, new plan:. ```sh; while true; do; strace -s 99 -f -o salmon-strace.log \; salmon quant \; --index /home/ryan/references/hg38/Salmon_index_$REF \; --libType SR --unmatedReads fastq_files/$SAMPLE.fq.gz\; --threads 8 --seqBias --gcBias --useVBOpt --dumpEq --dumpEqWeights \; --geneMap /home/ryan/references/hg38/Salmon_index_$REF/genemap.txt \; --output salmon_temp/REF/$SAMPLE \; --auxDir aux_info \; --numGibbsSamples 100; done; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267357651
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760:97,Security,secur,security,97,"Ok, I have an strace file from a hung run. I couldn't attach with gdb because the default system security settings prohibit it. I'll change the settings and try to get a gdb backtrace, but in the meantime, here's the strace log. Note that it was hung for about 2 hours before I was able to collect the log. https://www.dropbox.com/s/zn7qzo55wtcrbyg/salmon-strace.log.gz?dl=0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760:224,Testability,log,log,224,"Ok, I have an strace file from a hung run. I couldn't attach with gdb because the default system security settings prohibit it. I'll change the settings and try to get a gdb backtrace, but in the meantime, here's the strace log. Note that it was hung for about 2 hours before I was able to collect the log. https://www.dropbox.com/s/zn7qzo55wtcrbyg/salmon-strace.log.gz?dl=0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760:302,Testability,log,log,302,"Ok, I have an strace file from a hung run. I couldn't attach with gdb because the default system security settings prohibit it. I'll change the settings and try to get a gdb backtrace, but in the meantime, here's the strace log. Note that it was hung for about 2 hours before I was able to collect the log. https://www.dropbox.com/s/zn7qzo55wtcrbyg/salmon-strace.log.gz?dl=0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760:363,Testability,log,log,363,"Ok, I have an strace file from a hung run. I couldn't attach with gdb because the default system security settings prohibit it. I'll change the settings and try to get a gdb backtrace, but in the meantime, here's the strace log. Note that it was hung for about 2 hours before I was able to collect the log. https://www.dropbox.com/s/zn7qzo55wtcrbyg/salmon-strace.log.gz?dl=0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267413760
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267424145:117,Testability,log,log,117,"30-some MB to 7.5GB ... that's some damn good compression. While strace won't let me see the offending function, the log *definitely* indicates that there's just a bunch of threads waiting. This must mean that there's the potential for a deadlock condition somewhere. Is it the case that this happened once the Gibbs sampler had started? That's the code I've been looking in, but all of the threading there is handled by Intel's TBB library (apart from a call to actually dump each recorded Gibbs sample, which uses a `std::lock_guard`, which, hopefully, isn't broken).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267424145
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267428600:276,Availability,down,down,276,"Yup, the execution is *definitely* inside the Gibbs sampler at that point, since that's the code that sets up the progress bar etc. So, I'll focus my attention there until (if/when) we can get a specific offending function name. Thanks so much for all your help tracking this down so far; I really appreciate it!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267428600
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267428600:114,Usability,progress bar,progress bar,114,"Yup, the execution is *definitely* inside the Gibbs sampler at that point, since that's the code that sets up the progress bar etc. So, I'll focus my attention there until (if/when) we can get a specific offending function name. Thanks so much for all your help tracking this down so far; I really appreciate it!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267428600
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:503,Deployability,configurat,configuration,503,"Success???. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::inter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:522,Deployability,configurat,configuration,522,"Success???. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::inter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:457,Modifiability,config,configured,457,"Success???. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::inter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:503,Modifiability,config,configuration,503,"Success???. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::inter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:522,Modifiability,config,configuration,522,"Success???. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::inter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:1202,Performance,optimiz,optimized,1202,"icense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface9::internal::start_for<tbb::blocked_range<unsigned long>, sampleRoundNonCollapsedMultithreaded_(std::vector<std::pair<TranscriptGroup const, TGValue>, std::allocator<std::pair<Transcri",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748:1374,Performance,optimiz,optimized,1374," the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29332; [New LWP 29334]; [New LWP 29335]; [New LWP 29336]; [New LWP 21224]; [New LWP 21225]; [New LWP 21226]; [New LWP 21227]; [New LWP 21228]; [New LWP 21229]; [New LWP 21230]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; 193	../sysdeps/ieee754/dbl-64/e_log.c: No such file or directory.; #0 0x00007fcb8cf73789 in __ieee754_log_avx (x=<optimized out>) at ../sysdeps/ieee754/dbl-64/e_log.c:193; #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface9::internal::start_for<tbb::blocked_range<unsigned long>, sampleRoundNonCollapsedMultithreaded_(std::vector<std::pair<TranscriptGroup const, TGValue>, std::allocator<std::pair<TranscriptGroup const, TGValue> > >&, std::vector<bool, std::allocator<bool> >&, std::vector<unsigned long, std::allocator<unsigned long> >&, std::vector<double, std::allocator<do",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267488748
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1020,Performance,Load,Loading,1020,mon run that I got the backtrace from:. ```; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog],MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1085,Performance,Load,Loading,1085,e most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further process,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1158,Performance,Load,Loading,1158,-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 tota,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1225,Performance,Load,Loading,1225,### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [joint,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1295,Performance,Load,Loading,1295,et_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [jointLog] [info] Mapping rate = 72.5194%. [2016-12-15 16:01:44.948] [jointLog],MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1554,Performance,load,loading,1554, ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [jointLog] [info] Mapping rate = 72.5194%. [2016-12-15 16:01:44.948] [jointLog] [info] finished quantifyLibrary(); [2016-12-15 16:01:44.949] [jointLog] [info] Starting optimizer; [2016-12-15 16:01:45.059] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-15 16:01:45.075] [jointLog] [info] i,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1618,Performance,load,loading,1618,_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [jointLog] [info] Mapping rate = 72.5194%. [2016-12-15 16:01:44.948] [jointLog] [info] finished quantifyLibrary(); [2016-12-15 16:01:44.949] [jointLog] [info] Starting optimizer; [2016-12-15 16:01:45.059] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-15 16:01:45.075] [jointLog] [info] iteration = 0 | max rel diff. = 261.892; [2016-12-15 16:01:45.248] [join,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:2398,Performance,optimiz,optimizer,2398,"in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [jointLog] [info] Mapping rate = 72.5194%. [2016-12-15 16:01:44.948] [jointLog] [info] finished quantifyLibrary(); [2016-12-15 16:01:44.949] [jointLog] [info] Starting optimizer; [2016-12-15 16:01:45.059] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-15 16:01:45.075] [jointLog] [info] iteration = 0 | max rel diff. = 261.892; [2016-12-15 16:01:45.248] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2016-12-15 16:11:15.738] [jointLog] [info] Computed expected counts (for bias correction); [2016-12-15 16:11:15.739] [jointLog] [info] processed bias for 0.0% of the transcripts; [2016-12-15 16:13:07.074] [jointLog] [info] processed bias for 10.0% of the transcripts; [2016-12-15 16:14:57.019] [jointLog] [info] processed bias for 20.0% of the transcripts; [2016-12-15 16:16:40.365] [jointLog] [info] processed bias for 30.0% of the transcripts; [2016-12-15 16:18:25.798] [jointLog] [info] processed bias for 40.0% of the transcripts; [2016-12-15 16:20:13.944] [jointLog] [info] processed bias for 50.0% of the transcripts; [2016-12-15 16:21:52.350] [jointLog] [info] processed bias for 100.0% of ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:3999,Performance,optimiz,optimizer,3999,"ounted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [jointLog] [info] Mapping rate = 72.5194%. [2016-12-15 16:01:44.948] [jointLog] [info] finished quantifyLibrary(); [2016-12-15 16:01:44.949] [jointLog] [info] Starting optimizer; [2016-12-15 16:01:45.059] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-15 16:01:45.075] [jointLog] [info] iteration = 0 | max rel diff. = 261.892; [2016-12-15 16:01:45.248] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2016-12-15 16:11:15.738] [jointLog] [info] Computed expected counts (for bias correction); [2016-12-15 16:11:15.739] [jointLog] [info] processed bias for 0.0% of the transcripts; [2016-12-15 16:13:07.074] [jointLog] [info] processed bias for 10.0% of the transcripts; [2016-12-15 16:14:57.019] [jointLog] [info] processed bias for 20.0% of the transcripts; [2016-12-15 16:16:40.365] [jointLog] [info] processed bias for 30.0% of the transcripts; [2016-12-15 16:18:25.798] [jointLog] [info] processed bias for 40.0% of the transcripts; [2016-12-15 16:20:13.944] [jointLog] [info] processed bias for 50.0% of the transcripts; [2016-12-15 16:21:52.350] [jointLog] [info] processed bias for 100.0% of the transcripts; [2016-12-15 16:21:53.854] [jointLog] [info] iteration = 100 | max rel diff. = 0.250674; [2016-12-15 16:22:12.498] [jointLog] [info] iteration = 200 | max rel diff. = 0.251947; [2016-12-15 16:22:14.261] [jointLog] [info] iteration = 300 | max rel diff. = 0.377281; [2016-12-15 16:22:15.769] [jointLog] [info] iteration = 400 | max rel diff. = 0.121203; [2016-12-15 16:22:17.427] [jointLog] [info] iteration = 500 | max rel diff. = 0.0203027; [2016-12-15 16:22:18.761] [jointLog] [info] iteration = 583 | max rel diff. = 0.00813273; [2016-12-15 16:22:18.773] [jointLog] [info] Finished optimizer; [2016-12-15 16:22:18.773] [jointLog] [info] writing output. [2016-12-15 16:22:19.744] [jointLog] [info] Starting Gibbs Sampler 1 week; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:1562,Security,hash,hash,1562, ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-12-15 16:01:44.937] [jointLog] [info] Computed 119318 rich equivalence classes for further processing; [2016-12-15 16:01:44.937] [jointLog] [info] Counted 12227080 total reads in the equivalence classes; [2016-12-15 16:01:44.948] [jointLog] [info] Mapping rate = 72.5194%. [2016-12-15 16:01:44.948] [jointLog] [info] finished quantifyLibrary(); [2016-12-15 16:01:44.949] [jointLog] [info] Starting optimizer; [2016-12-15 16:01:45.059] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-15 16:01:45.075] [jointLog] [info] i,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:15,Testability,log,log,15,And here's the log of the Salmon run that I got the backtrace from:. ```; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-1,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:781,Testability,Log,Logs,781,And here's the log of the Salmon run that I got the backtrace from:. ```; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-1,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196:832,Testability,log,logs,832,And here's the log of the Salmon run that I got the backtrace from:. ```; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ libType ] => { SR }; ### [ unmatedReads ] => { fastq_files/SRR2454069.fq.gz }; ### [ threads ] => { 8 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_temp/REF/SRR2454069 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 10 }; Logs will be written to salmon_temp/REF/SRR2454069/logs; [2016-12-15 15:58:50.157] [jointLog] [info] parsing read library format; [2016-12-15 15:58:50.157] [jointLog] [info] There is 1 library.; [2016-12-15 15:58:50.189] [jointLog] [info] Loading Quasi index; [2016-12-15 15:58:50.189] [jointLog] [info] Loading 32-bit quasi index; [2016-12-15 15:58:50.189] [stderrLog] [info] Loading Suffix Array; [2016-12-15 15:58:50.513] [stderrLog] [info] Loading Transcript Info; [2016-12-15 15:58:50.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-15 15:58:50.661] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-15 15:58:50.677] [stderrLog] [info] Computing transcript lengths; [2016-12-15 15:58:50.677] [stderrLog] [info] Waiting to finish loading hash; [2016-12-15 15:58:50.677] [stderrLog] [info] Done loading index; [2016-12-15 15:58:50.677] [jointLog] [info] done; [2016-12-15 15:58:50.677] [jointLog] [info] Index contained 182608 targets; [2016-12-15 15:58:51.587] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries. Please use this option with caution. processed 16500000 fragments; hits: 44017772; hits per frag: 2.67057. [2016-1,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267489196
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267491370:341,Testability,log,logarithm,341,"Whoaa! Ok. This is something. It's hanging in a place where we have no client (i.e., Salmon) threading code. It's inside an Intel TBB for loop. But, according to gdb, the TBB libraries that are executing at this point are system ones (/usr/lib/x86_64-linux-gnu/libtbb.so.2). Also interesting is that the full backtrace is into a call to the logarithm function, which shouldn't block. Could you spin up another Salmon process but with Salmon's copy of TBB in the LD_LIBRARY_PATH before the system one, just to make sure that's not the issue? It's likely not, but it's worth being sure. Whatever ends up causing this, I have a feeling it will be something very strange.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267491370
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267493389:1224,Deployability,install,install,1224,"salmon; $ ldd `which salmon`; linux-vdso.so.1 => (0x00007ffd8d9c0000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f20010a9000); libtbb.so.2 => /usr/lib/x86_64-linux-gnu/libtbb.so.2 (0x00007f2000e6b000); libgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f2000c49000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f2000a41000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f2000737000); libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f2000521000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f2000158000); /lib64/ld-linux-x86-64.so.2 (0x000055aeef1e1000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f1ffff53000); libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f1fffbd1000); $ ldd ~/src/salmon/build/src/salmon; linux-vdso.so.1 => (0x00007fffdc2d7000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f990745d000); libtbb.so.2 => /home/ryan/src/salmon/build/src/../../external/install/lib/libtbb.so.2 (0x00007f990722f000); libgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f990700d000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f9906e05000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f9906afb000); libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f99068e5000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f990651c000); /lib64/ld-linux-x86-64.so.2 (0x0000564b94030000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f9906317000); libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f9905f95000); $ md5sum `which salmon` ~/src/salmon/build/src/salmon; 90831f998ff897969da448043c590f61 /home/ryan/bin/salmon; 90831f998ff897969da448043c590f61 /home/ryan/src/salmon/build/src/salmon; ```. I don't know enough about how dynamic linking works to explain this. Anyway, I did `export LD_LIBRARY_PATH=/home/ryan/src/salmon/external/install/lib` and now I'm running `while true; do salmon ...; done` again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267493389
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267493389:2152,Deployability,install,install,2152,"salmon; $ ldd `which salmon`; linux-vdso.so.1 => (0x00007ffd8d9c0000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f20010a9000); libtbb.so.2 => /usr/lib/x86_64-linux-gnu/libtbb.so.2 (0x00007f2000e6b000); libgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f2000c49000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f2000a41000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f2000737000); libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f2000521000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f2000158000); /lib64/ld-linux-x86-64.so.2 (0x000055aeef1e1000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f1ffff53000); libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f1fffbd1000); $ ldd ~/src/salmon/build/src/salmon; linux-vdso.so.1 => (0x00007fffdc2d7000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f990745d000); libtbb.so.2 => /home/ryan/src/salmon/build/src/../../external/install/lib/libtbb.so.2 (0x00007f990722f000); libgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f990700d000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f9906e05000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f9906afb000); libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f99068e5000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f990651c000); /lib64/ld-linux-x86-64.so.2 (0x0000564b94030000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f9906317000); libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f9905f95000); $ md5sum `which salmon` ~/src/salmon/build/src/salmon; 90831f998ff897969da448043c590f61 /home/ryan/bin/salmon; 90831f998ff897969da448043c590f61 /home/ryan/src/salmon/build/src/salmon; ```. I don't know enough about how dynamic linking works to explain this. Anyway, I did `export LD_LIBRARY_PATH=/home/ryan/src/salmon/external/install/lib` and now I'm running `while true; do salmon ...; done` again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267493389
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:684,Deployability,configurat,configuration,684,"Well, I was just in the middle of writing a comment saying ""it's been running for 6 hours with no hang, I don't think it's gonna happen"", and then it just hung. Here's the backtrace from gdb:. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29153; [New LWP 29155]; [New LWP 29156]; [New LWP 29157]; [New LWP 18084]; [New LWP 18085]; [New LWP 18086]; [New LWP 18087]; [New LWP 18088]; [New LWP 18089]; [New LWP 18090]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x0000000000578b90 in __log_finite@plt (); #0 0x0000000000578b90 in __log_finite@plt (); #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:703,Deployability,configurat,configuration,703,"Well, I was just in the middle of writing a comment saying ""it's been running for 6 hours with no hang, I don't think it's gonna happen"", and then it just hung. Here's the backtrace from gdb:. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29153; [New LWP 29155]; [New LWP 29156]; [New LWP 29157]; [New LWP 18084]; [New LWP 18085]; [New LWP 18086]; [New LWP 18087]; [New LWP 18088]; [New LWP 18089]; [New LWP 18090]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x0000000000578b90 in __log_finite@plt (); #0 0x0000000000578b90 in __log_finite@plt (); #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:3099,Energy Efficiency,schedul,scheduler,3099,", sampleRoundNonCollapsedMultithreaded_(std::vector<std::pair<TranscriptGroup const, TGValue>, std::allocator<std::pair<TranscriptGroup const, TGValue> > >&, std::vector<bool, std::allocator<bool> >&, std::vector<unsigned long, std::allocator<unsigned long> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<unsigned int, std::allocator<unsigned int> >&)::{lambda(tbb::blocked_range<unsigned long> const&)#2}, tbb::auto_partitioner const>::execute() (); #3 0x00007f20171ca492 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all (this=0x7f1fd8dc0c00, parent=..., child=<optimized out>); at ../../src/tbb/custom_scheduler.h:469; #4 0x00007f20171c85a0 in tbb::internal::generic_scheduler::local_spawn_root_and_wait (this=0x7f1fd8dc0c00, first=..., next=@0x7f1fd8db7d38: 0x7f1fd8db7340); at ../../src/tbb/scheduler.cpp:649; #5 0x0000000000632eba in sampleRoundNonCollapsedMultithreaded_(std::vector<std::pair<TranscriptGroup const, TGValue>, std::allocator<std::pair<TranscriptGroup const, TGValue> > >&, std::vector<bool, std::allocator<bool> >&, std::vector<unsigned long, std::allocator<unsigned long> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<unsigned int, std::allocator<unsigned int> >&) (); #6 0x000000000063936f in bool CollapsedGibbsSampler::sample<ReadExperiment>(ReadExperiment&, SalmonOpts&, std::function<bool (std::vector<double, std::allocator<double> > const&)>&, unsigned int) (); #7 0x000000000065d783 in salmonQuantify(int, char**) (); #8 0x000000000057dbcf in main (); Detaching from program: /home/ryan/bin/salmon, process 29153; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:638,Modifiability,config,configured,638,"Well, I was just in the middle of writing a comment saying ""it's been running for 6 hours with no hang, I don't think it's gonna happen"", and then it just hung. Here's the backtrace from gdb:. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29153; [New LWP 29155]; [New LWP 29156]; [New LWP 29157]; [New LWP 18084]; [New LWP 18085]; [New LWP 18086]; [New LWP 18087]; [New LWP 18088]; [New LWP 18089]; [New LWP 18090]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x0000000000578b90 in __log_finite@plt (); #0 0x0000000000578b90 in __log_finite@plt (); #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:684,Modifiability,config,configuration,684,"Well, I was just in the middle of writing a comment saying ""it's been running for 6 hours with no hang, I don't think it's gonna happen"", and then it just hung. Here's the backtrace from gdb:. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29153; [New LWP 29155]; [New LWP 29156]; [New LWP 29157]; [New LWP 18084]; [New LWP 18085]; [New LWP 18086]; [New LWP 18087]; [New LWP 18088]; [New LWP 18089]; [New LWP 18090]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x0000000000578b90 in __log_finite@plt (); #0 0x0000000000578b90 in __log_finite@plt (); #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:703,Modifiability,config,configuration,703,"Well, I was just in the middle of writing a comment saying ""it's been running for 6 hours with no hang, I don't think it's gonna happen"", and then it just hung. Here's the backtrace from gdb:. ```; $ gdb -ex ""attach $(pgrep salmon | head -1)"" -ex bt -ex detach -ex quit; GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1; Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word"".; Attaching to process 29153; [New LWP 29155]; [New LWP 29156]; [New LWP 29157]; [New LWP 18084]; [New LWP 18085]; [New LWP 18086]; [New LWP 18087]; [New LWP 18088]; [New LWP 18089]; [New LWP 18090]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; 0x0000000000578b90 in __log_finite@plt (); #0 0x0000000000578b90 in __log_finite@plt (); #1 0x0000000000637ccc in double std::gamma_distribution<double>::operator()<pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> > >(pcg_detail::engine<unsigned int, unsigned long, pcg_detail::xsh_rr_mixin<unsigned int, unsigned long>, true, pcg_detail::unique_stream<unsigned long>, pcg_detail::default_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520:2867,Performance,optimiz,optimized,2867,"lt_multiplier<unsigned long> >&, std::gamma_distribution<double>::param_type const&) (); #2 0x0000000000634b8d in tbb::interface9::internal::start_for<tbb::blocked_range<unsigned long>, sampleRoundNonCollapsedMultithreaded_(std::vector<std::pair<TranscriptGroup const, TGValue>, std::allocator<std::pair<TranscriptGroup const, TGValue> > >&, std::vector<bool, std::allocator<bool> >&, std::vector<unsigned long, std::allocator<unsigned long> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<unsigned int, std::allocator<unsigned int> >&)::{lambda(tbb::blocked_range<unsigned long> const&)#2}, tbb::auto_partitioner const>::execute() (); #3 0x00007f20171ca492 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all (this=0x7f1fd8dc0c00, parent=..., child=<optimized out>); at ../../src/tbb/custom_scheduler.h:469; #4 0x00007f20171c85a0 in tbb::internal::generic_scheduler::local_spawn_root_and_wait (this=0x7f1fd8dc0c00, first=..., next=@0x7f1fd8db7d38: 0x7f1fd8db7340); at ../../src/tbb/scheduler.cpp:649; #5 0x0000000000632eba in sampleRoundNonCollapsedMultithreaded_(std::vector<std::pair<TranscriptGroup const, TGValue>, std::allocator<std::pair<TranscriptGroup const, TGValue> > >&, std::vector<bool, std::allocator<bool> >&, std::vector<unsigned long, std::allocator<unsigned long> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<unsigned int, std::allocator<unsigned int> >&) (); #6 0x000000000063936f in bool CollapsedGibbsSampler::sample<ReadExperiment>(ReadExperiment&, SalmonOpts&, std::function<bool (std::vector<double, std::allocator<double> > c",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267534520
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883:168,Availability,fault,fault,168,"In other news --- after many many continuous tries, I was finally able to reproduce the issue! I've never been so happy to reproduce a bug. Now to find out if it's our fault or TBB's fault.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883:183,Availability,fault,fault,183,"In other news --- after many many continuous tries, I was finally able to reproduce the issue! I've never been so happy to reproduce a bug. Now to find out if it's our fault or TBB's fault.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883:34,Deployability,continuous,continuous,34,"In other news --- after many many continuous tries, I was finally able to reproduce the issue! I've never been so happy to reproduce a bug. Now to find out if it's our fault or TBB's fault.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795:374,Deployability,release,release,374,"Ok, so using your `while true; do salmon; done` paradigm, I was able to reproduce the issue on your original dataset after a few runs each time. This has made working on the issue much easier. After a lot of debugging and walking through the stack, I'm almost certain the issue is a ""rare"" deadlock bug in the Intel TBB library. They mention having fixed this in the latest release. So, I've updated our CMake file to fetch [that release](https://github.com/01org/tbb/releases/tag/2017_U3). After upgrading to this version of TBB, I've let the data set run all night long (~8 hours so far) and have not seen the hanging behavior. I'll let it keep running for a while, but could you try pulling the latest commit from develop and see if that resolves the problem for you? You'll need to make sure you clean the build directory and remove the previous `CMakeCache.txt` files so that it will pull in and build the new TBB. You'll also need to make sure that these TBB libraries are the ones that are being used by Salmon. Please let me know if this fixes the hanging for you as well (and I'll let you know if I see it again).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795:392,Deployability,update,updated,392,"Ok, so using your `while true; do salmon; done` paradigm, I was able to reproduce the issue on your original dataset after a few runs each time. This has made working on the issue much easier. After a lot of debugging and walking through the stack, I'm almost certain the issue is a ""rare"" deadlock bug in the Intel TBB library. They mention having fixed this in the latest release. So, I've updated our CMake file to fetch [that release](https://github.com/01org/tbb/releases/tag/2017_U3). After upgrading to this version of TBB, I've let the data set run all night long (~8 hours so far) and have not seen the hanging behavior. I'll let it keep running for a while, but could you try pulling the latest commit from develop and see if that resolves the problem for you? You'll need to make sure you clean the build directory and remove the previous `CMakeCache.txt` files so that it will pull in and build the new TBB. You'll also need to make sure that these TBB libraries are the ones that are being used by Salmon. Please let me know if this fixes the hanging for you as well (and I'll let you know if I see it again).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795:430,Deployability,release,release,430,"Ok, so using your `while true; do salmon; done` paradigm, I was able to reproduce the issue on your original dataset after a few runs each time. This has made working on the issue much easier. After a lot of debugging and walking through the stack, I'm almost certain the issue is a ""rare"" deadlock bug in the Intel TBB library. They mention having fixed this in the latest release. So, I've updated our CMake file to fetch [that release](https://github.com/01org/tbb/releases/tag/2017_U3). After upgrading to this version of TBB, I've let the data set run all night long (~8 hours so far) and have not seen the hanging behavior. I'll let it keep running for a while, but could you try pulling the latest commit from develop and see if that resolves the problem for you? You'll need to make sure you clean the build directory and remove the previous `CMakeCache.txt` files so that it will pull in and build the new TBB. You'll also need to make sure that these TBB libraries are the ones that are being used by Salmon. Please let me know if this fixes the hanging for you as well (and I'll let you know if I see it again).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795:468,Deployability,release,releases,468,"Ok, so using your `while true; do salmon; done` paradigm, I was able to reproduce the issue on your original dataset after a few runs each time. This has made working on the issue much easier. After a lot of debugging and walking through the stack, I'm almost certain the issue is a ""rare"" deadlock bug in the Intel TBB library. They mention having fixed this in the latest release. So, I've updated our CMake file to fetch [that release](https://github.com/01org/tbb/releases/tag/2017_U3). After upgrading to this version of TBB, I've let the data set run all night long (~8 hours so far) and have not seen the hanging behavior. I'll let it keep running for a while, but could you try pulling the latest commit from develop and see if that resolves the problem for you? You'll need to make sure you clean the build directory and remove the previous `CMakeCache.txt` files so that it will pull in and build the new TBB. You'll also need to make sure that these TBB libraries are the ones that are being used by Salmon. Please let me know if this fixes the hanging for you as well (and I'll let you know if I see it again).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267766795
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267773540:382,Deployability,install,install,382,Verification that I'm running with the right version of TBB:. ```; $ ls ~/src/salmon/external/tbb* -d; /home/ryan/src/salmon/external/tbb-2017_U3 /home/ryan/src/salmon/external/tbb-2017_U3.tgz; $ ldd `which salmon`; linux-vdso.so.1 => (0x00007ffc739fd000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f5745a93000); libtbb.so.2 => /home/ryan/src/salmon/external/install/lib/libtbb.so.2 (0x00007f5745864000); libgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f5745642000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f574543a000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f5745130000); libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f5744f1a000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f5744b51000); /lib64/ld-linux-x86-64.so.2 (0x000055d36c7b0000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f574494c000); libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f57445ca000); ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267773540
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267840129:125,Testability,log,logical,125,"Ok ... so, now it's hanging in single-threaded code, and it does so in a call to std::gamma_distribution. I'm running out of logical possibilities here. Either (1) undefined behavior somewhere else is affecting the hanging here or (2) `std::gamma_distribution` is in an infinite loop. I'll note that `gamma_distribution` does contain a while loop, but I'd be immensely surprised if the standard libraries distribution sampler had an undiscovered infinite loop.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267840129
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038:70,Modifiability,variab,variable,70,"Nominally, you can use `info locals` and `p x` (where x is a specific variable name) to look at the value of variables in the stack. However, without debug flags, the ability to peek at such values is questionable. Alternatively we could log the values that gamma is being called with before each call . . . but that's going to lead to some crazy logs until the hang occurs.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038:109,Modifiability,variab,variables,109,"Nominally, you can use `info locals` and `p x` (where x is a specific variable name) to look at the value of variables in the stack. However, without debug flags, the ability to peek at such values is questionable. Alternatively we could log the values that gamma is being called with before each call . . . but that's going to lead to some crazy logs until the hang occurs.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038:238,Testability,log,log,238,"Nominally, you can use `info locals` and `p x` (where x is a specific variable name) to look at the value of variables in the stack. However, without debug flags, the ability to peek at such values is questionable. Alternatively we could log the values that gamma is being called with before each call . . . but that's going to lead to some crazy logs until the hang occurs.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038:347,Testability,log,logs,347,"Nominally, you can use `info locals` and `p x` (where x is a specific variable name) to look at the value of variables in the stack. However, without debug flags, the ability to peek at such values is questionable. Alternatively we could log the values that gamma is being called with before each call . . . but that's going to lead to some crazy logs until the hang occurs.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842038
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842175:37,Testability,log,log,37,"Well, it doesn't matter how long the log is, since we only need the last line, right?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842175
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842320:61,Availability,down,down,61,"Yes, that is true. I have one more thing to try before going down that road though. I just pushed a commit (56b127429d65b8aa4fe6f706d508fbc308e554ff ) that replaces that call to the `gamma_distribution` with one from Boost. Can we see if Boost's implementation also triggers this?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842320
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267855087:205,Performance,optimiz,optimizer,205,"It looks like the first several runs crashed with:. ```; ...; [2016-12-18 12:10:47.956] [jointLog] [info] iteration = 519 | max rel diff. = 0.00832947; [2016-12-18 12:10:47.962] [jointLog] [info] Finished optimizer; [2016-12-18 12:10:47.962] [jointLog] [info] writing output. salmon: /usr/include/boost/random/gamma_distribution.hpp:117: boost::random::gamma_distribution<RealType>::gamma_distribution(const result_type&, const result_type&) [with RealType; = double; boost::random::gamma_distribution<RealType>::result_type = double]: Assertion `_alpha > result_type(0)' failed.; ```. And then a run finally hung with:. ```; [2016-12-18 13:31:06.283] [jointLog] [info] iteration = 517 | max rel diff. = 0.00871129; [2016-12-18 13:31:06.289] [jointLog] [info] Finished optimizer; [2016-12-18 13:31:06.289] [jointLog] [info] writing output. [2016-12-18 13:31:06.703] [jointLog] [info] Starting Gibbs Sampler; 0% [> ] ETA > 1 week; ```. Here's another batch of 100 backtraces: [salmon-gdb-bt.zip](https://github.com/COMBINE-lab/salmon/files/659757/salmon-gdb-bt.zip)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267855087
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267855087:769,Performance,optimiz,optimizer,769,"It looks like the first several runs crashed with:. ```; ...; [2016-12-18 12:10:47.956] [jointLog] [info] iteration = 519 | max rel diff. = 0.00832947; [2016-12-18 12:10:47.962] [jointLog] [info] Finished optimizer; [2016-12-18 12:10:47.962] [jointLog] [info] writing output. salmon: /usr/include/boost/random/gamma_distribution.hpp:117: boost::random::gamma_distribution<RealType>::gamma_distribution(const result_type&, const result_type&) [with RealType; = double; boost::random::gamma_distribution<RealType>::result_type = double]: Assertion `_alpha > result_type(0)' failed.; ```. And then a run finally hung with:. ```; [2016-12-18 13:31:06.283] [jointLog] [info] iteration = 517 | max rel diff. = 0.00871129; [2016-12-18 13:31:06.289] [jointLog] [info] Finished optimizer; [2016-12-18 13:31:06.289] [jointLog] [info] writing output. [2016-12-18 13:31:06.703] [jointLog] [info] Starting Gibbs Sampler; 0% [> ] ETA > 1 week; ```. Here's another batch of 100 backtraces: [salmon-gdb-bt.zip](https://github.com/COMBINE-lab/salmon/files/659757/salmon-gdb-bt.zip)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267855087
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267855087:536,Testability,Assert,Assertion,536,"It looks like the first several runs crashed with:. ```; ...; [2016-12-18 12:10:47.956] [jointLog] [info] iteration = 519 | max rel diff. = 0.00832947; [2016-12-18 12:10:47.962] [jointLog] [info] Finished optimizer; [2016-12-18 12:10:47.962] [jointLog] [info] writing output. salmon: /usr/include/boost/random/gamma_distribution.hpp:117: boost::random::gamma_distribution<RealType>::gamma_distribution(const result_type&, const result_type&) [with RealType; = double; boost::random::gamma_distribution<RealType>::result_type = double]: Assertion `_alpha > result_type(0)' failed.; ```. And then a run finally hung with:. ```; [2016-12-18 13:31:06.283] [jointLog] [info] iteration = 517 | max rel diff. = 0.00871129; [2016-12-18 13:31:06.289] [jointLog] [info] Finished optimizer; [2016-12-18 13:31:06.289] [jointLog] [info] writing output. [2016-12-18 13:31:06.703] [jointLog] [info] Starting Gibbs Sampler; 0% [> ] ETA > 1 week; ```. Here's another batch of 100 backtraces: [salmon-gdb-bt.zip](https://github.com/COMBINE-lab/salmon/files/659757/salmon-gdb-bt.zip)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267855087
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267856046:96,Security,validat,validates,96,"Ok, the assertion is useful. That argument shouldn't be 0. But it's also the case that if Boost validates the arguments appropriately, it shouldn't *hang*.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267856046
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267856046:8,Testability,assert,assertion,8,"Ok, the assertion is useful. That argument shouldn't be 0. But it's also the case that if Boost validates the arguments appropriately, it shouldn't *hang*.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267856046
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267866312:404,Performance,optimiz,optimization,404,"I think I figured it out! This behavior is triggered in `gamma_distribution` when the alpha parameter is nan. The issue (i.e. the reason this is going unnoticed elsewhere) is because salmon is compiled with `-Ofast` which turns on `finite-math-only` (the compiler need not handle infinite / nan values properly). So, it looks like the fix should be to insert some nan & inf checks and change the default optimization flags to O3. I should have a fix for you to try soon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267866312
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:186,Deployability,update,updated,186,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:377,Performance,optimiz,optimization,377,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:738,Performance,optimiz,optimization,738,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:705,Safety,safe,safe,705,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:814,Testability,test,tested,814,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:936,Testability,test,test,936,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253:483,Usability,Clear,Clearly,483,"Ok @DarwinAwardWinner, I think it's fixed for real this time. The issue was stemming from an uninitialized prior value in the Gibbs sampler under VBOpt mode (the initialization code was updated on the develop branch, which is where the bug was introduced). This, in turn, was leading to `nan` being passed as the alpha parameter of `std::gamma_distribution`. With the `-Ofast` optimization flags, at least, this leads `std::gamma_distribution()` to hang forever in an infinite loop. Clearly, `nan` should not be passed to `std::gamma_distribution()`, but I'd argue the behavior of looping forever here is not great. Anyway, I fixed the initialization bug, so that this nan should never pop up. Just to be safe, I also changed the default optimization flag to `-O3` so that at least `nan` and `inf` can be properly tested. Since the TBB code and the parallel sampling weren't causing the issue, I've added them back in. Could you please test the latest push (40584e62859fb65463188b50d132c1eb622b21f0) and verify that this resolves the issue for you (*hopefully*!)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267877253
https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-268064091:222,Availability,down,down,222,"Great! Assuming that the hang resulting from feeding nan to `gamma_distribution` was the cause of all of the hanging you were seeing, I'm going to close this issue now. Thanks so much for all of your help in tracking this down and isolating the cause.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-268064091
https://github.com/COMBINE-lab/salmon/issues/112#issuecomment-267609482:269,Deployability,release,release,269,"Hi @mns1972,. Thanks for reporting this issue. Are you on Sierra? There is a known problem with libjemalloc (the memory allocator we use) under OSX 10.12. This has been fixed upstream, and is fixed in the develop branch of Salmon (so the fix will make it into the next release). For the time-being. Could you tell me if the binary below works for you?. --Rob. [Salmon-0.7.3-pre_OSX_10.12.tar.gz](https://github.com/COMBINE-lab/salmon/files/657454/Salmon-0.7.3-pre_OSX_10.12.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112#issuecomment-267609482
https://github.com/COMBINE-lab/salmon/issues/112#issuecomment-267613176:120,Deployability,release,release,120,"Great; glad to hear it. I'm going to close this issue since this fix is already in develop and will make it to the next release. At that point, the fix should make it to homebrew as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112#issuecomment-267613176
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007151:164,Availability,error,error,164,"Hi @sagnikbanerjee15,. It looks like you are providing the `-t` flag with the *reads* rather than the target transcriptome (i.e. set of reference transcripts). The error is saying that the target file does not contain the reference sequences listed in the bam file. The argument to the `-t` flag should be a FASA file that contains the sequence of the reference transcripts, and the names and lengths of those reference transcripts should match the names and lengths encoded in the BAM file. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007151
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007599:516,Performance,perform,performs,516,"Salmon has two modes; alignment-based and quasi-mapping based. When you are using the alignment-based mode (i.e. feeding it a BAM file of aligned reads), you don't need to provide it with the raw reads. This is because all of the relevant information is already contained within the BAM file. . On the other hand, in quasi-mapping mode, you index the set of reference transcripts (using `salmon index`) and then provide salmon with the location of the index and the raw reads (i.e. the FASTQ file). In this case, it performs quasi-mapping (a lightweight stand in for alignment), and so it is not necessary to provide the BAM file. Please refer to quasi-mapping based mode and alignment-based mode in [the documentation](http://salmon.readthedocs.io/en/latest/salmon.html#quasi-mapping-based-mode-including-lightweight-alignment) for more details.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007599
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007769:106,Availability,error,error,106,I just provided the list of transcripts in fasta format with the -t flag but its still giving me the same error.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007769
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270008037:224,Availability,error,error,224,"Are the names consistent between the BAM file and the reference you are providing? What do you get from `samtools view -H ../Data/DRR029379_after_bowtie.bam` versus looking at the reference transcript FASTA file? Also, this error:. ```; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!]; ```. suggests that the BAM file itself could not be opened. Are you certain the relative path to the file is correct from the current working directory?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270008037
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270008037:250,Availability,ERROR,ERROR,250,"Are the names consistent between the BAM file and the reference you are providing? What do you get from `samtools view -H ../Data/DRR029379_after_bowtie.bam` versus looking at the reference transcript FASTA file? Also, this error:. ```; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!]; ```. suggests that the BAM file itself could not be opened. Are you certain the relative path to the file is correct from the current working directory?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270008037
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270012983:4,Availability,error,error,4,"The error you're seeing is a result of the BAM parser (libstaden) finding an inconsistency in the BAM file. Specifically, this line of code seems to be triggering the error that is printed (https://github.com/svn2github/staden-io_lib/blob/master/trunk/io_lib/bam.c#L300). This suggests something is awry with the BAM file / header. While I can't see anything immediately problematic from the snippet of the header you posted above, I do see some curious things even in this short region of the header. Specifically, the first transcript `NC_003070.9:0-30427671`, appears to be > 30 million nucleotides long --- this is a very suspicious length for a transcript. Second, the second and third transcripts appear to be exact duplicates. Though that is not an inconsistency itself, there is no benefit to having a transcript present multiple times and it can adversely affect quantification estimates. Are there any details about how the reference was obtained (or the BAM file created) that might shed light on why the BAM parser finds such an inconsistency?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270012983
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270012983:167,Availability,error,error,167,"The error you're seeing is a result of the BAM parser (libstaden) finding an inconsistency in the BAM file. Specifically, this line of code seems to be triggering the error that is printed (https://github.com/svn2github/staden-io_lib/blob/master/trunk/io_lib/bam.c#L300). This suggests something is awry with the BAM file / header. While I can't see anything immediately problematic from the snippet of the header you posted above, I do see some curious things even in this short region of the header. Specifically, the first transcript `NC_003070.9:0-30427671`, appears to be > 30 million nucleotides long --- this is a very suspicious length for a transcript. Second, the second and third transcripts appear to be exact duplicates. Though that is not an inconsistency itself, there is no benefit to having a transcript present multiple times and it can adversely affect quantification estimates. Are there any details about how the reference was obtained (or the BAM file created) that might shed light on why the BAM parser finds such an inconsistency?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270012983
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-285509185:38,Deployability,update,updates,38,"Hi @sagnikbanerjee15, do you have any updates on this?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-285509185
https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-289310929:61,Deployability,update,updates,61,"I'm going to close this for now, since it seems there are no updates. If there are any more details, we can reopen.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-289310929
https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627:164,Availability,ping,ping,164,"Hi @jblachly,. Thanks for pointing this out. The underlying parser we use should also support gff (&gff3), so I should probably just expand the extension set. I'll ping back here once the relevant changes have been made on the develop branch. I'll also note that, generally, we now recommend [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) as the way to aggregate transcript-level abundance estimates to the gene level, since it provides some nice multi-sample functionality and also allows the user to choose from a few different ways in which the aggregation can be performed. If you're doing any of your downstream analysis in R, it's worth a look. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627
https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627:637,Availability,down,downstream,637,"Hi @jblachly,. Thanks for pointing this out. The underlying parser we use should also support gff (&gff3), so I should probably just expand the extension set. I'll ping back here once the relevant changes have been made on the develop branch. I'll also note that, generally, we now recommend [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) as the way to aggregate transcript-level abundance estimates to the gene level, since it provides some nice multi-sample functionality and also allows the user to choose from a few different ways in which the aggregation can be performed. If you're doing any of your downstream analysis in R, it's worth a look. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627
https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627:337,Deployability,release,release,337,"Hi @jblachly,. Thanks for pointing this out. The underlying parser we use should also support gff (&gff3), so I should probably just expand the extension set. I'll ping back here once the relevant changes have been made on the develop branch. I'll also note that, generally, we now recommend [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) as the way to aggregate transcript-level abundance estimates to the gene level, since it provides some nice multi-sample functionality and also allows the user to choose from a few different ways in which the aggregation can be performed. If you're doing any of your downstream analysis in R, it's worth a look. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627
https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627:598,Performance,perform,performed,598,"Hi @jblachly,. Thanks for pointing this out. The underlying parser we use should also support gff (&gff3), so I should probably just expand the extension set. I'll ping back here once the relevant changes have been made on the develop branch. I'll also note that, generally, we now recommend [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) as the way to aggregate transcript-level abundance estimates to the gene level, since it provides some nice multi-sample functionality and also allows the user to choose from a few different ways in which the aggregation can be performed. If you're doing any of your downstream analysis in R, it's worth a look. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627
https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-273391326:594,Deployability,release,release,594,"Hi @jblachly,. Thanks again for the kind words! I agree that this option is useful for producing some quick gene-level results to show to collaborators. I've just pushed a fix that should allow parsing of (well-formated) files that end in any of {.gtf, .GTF, .gff, .GFF, .gff3, .GFF3}. Furthermore, going over the relevant bug revealed a latent potential bug that could pop up when there was a transcript in the salmon index that was absent from the GTF/GFF file. So this commit fixes this as well. All of this is present on the develop branch, but these changes will make it into the upcoming release (which should hit soon, if you care to wait for it).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-273391326
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-277493942:108,Deployability,deploy,deployment,108,"Thanks, Rob!. I'm running Yosemite 10.10.5. I can look into upgrading my mac, which is overdue. Our primary deployment; is on linux and I'm sure that'll be fine. thx again!. ~b. On Sat, Feb 4, 2017 at 8:49 PM, Rob Patro <notifications@github.com> wrote:. > Hi Brian,; >; > What version of OS X are you running on? The issue you mention with the; > pre-compiled binary is one that arises because of a bug in jemalloc, due; > to Apple trying to be clever; > <https://github.com/Homebrew/homebrew-core/pull/6625>. But that binary; > should be built along with a newer version of jemalloc. While I have a nice; > setup for building widely-compatible linux binaries, I unfortunately, just; > have to build the OS X binaries on one of my 2 Macs (both of which are; > 10.12).; >; > --Rob; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-277491570>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AHMVX7Cn4cuE6h0zAgfI0AK0P6ka8Oahks5rZSqqgaJpZM4L3UvG>; > .; >. -- ; --; Brian J. Haas; The Broad Institute; http://broadinstitute.org/~bhaas <http://broad.mit.edu/~bhaas>",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-277493942
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-279257362:180,Performance,load,loaded,180,Hi. I'm having a similar issue. When I run the Salmon exec I get:. `MacBook-Pro-31:~ alex$ /Users/alex/Desktop/Code/Salmon-v0.8.0_macOS_10.12/bin/salmon ; exit;; dyld: Library not loaded: /usr/local/opt/tbb/lib/libtbbmalloc_proxy.dylib; Referenced from: /Users/alex/Desktop/Code/Salmon-v0.8.0_macOS_10.12/bin/salmon; Reason: image not found; Abort trap: 6; logout; `. I'm running Sierra 10.12.2. Can you advise? What do I specifically need to do to get Salmon to work?. Thanks.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-279257362
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-279257362:342,Safety,Abort,Abort,342,Hi. I'm having a similar issue. When I run the Salmon exec I get:. `MacBook-Pro-31:~ alex$ /Users/alex/Desktop/Code/Salmon-v0.8.0_macOS_10.12/bin/salmon ; exit;; dyld: Library not loaded: /usr/local/opt/tbb/lib/libtbbmalloc_proxy.dylib; Referenced from: /Users/alex/Desktop/Code/Salmon-v0.8.0_macOS_10.12/bin/salmon; Reason: image not found; Abort trap: 6; logout; `. I'm running Sierra 10.12.2. Can you advise? What do I specifically need to do to get Salmon to work?. Thanks.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-279257362
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-279257362:357,Testability,log,logout,357,Hi. I'm having a similar issue. When I run the Salmon exec I get:. `MacBook-Pro-31:~ alex$ /Users/alex/Desktop/Code/Salmon-v0.8.0_macOS_10.12/bin/salmon ; exit;; dyld: Library not loaded: /usr/local/opt/tbb/lib/libtbbmalloc_proxy.dylib; Referenced from: /Users/alex/Desktop/Code/Salmon-v0.8.0_macOS_10.12/bin/salmon; Reason: image not found; Abort trap: 6; logout; `. I'm running Sierra 10.12.2. Can you advise? What do I specifically need to do to get Salmon to work?. Thanks.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-279257362
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-280679945:118,Deployability,pipeline,pipeline,118,"Hi Rob,. Thanks. Sorry for the delay. I’ll give it a try next week. I decided that for my stuff, the full STAR->HTSeq pipeline was more appropriate (nuclear RNAseq..lots of intron). -Alex. > On Feb 17, 2017, at 10:21 AM, Rob Patro <notifications@github.com> wrote:; > ; > Hi @achamess <https://github.com/achamess>, Can you let me know if the solution suggested above works for you?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-280678281>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AHGbcn1bUjqrMtLwp_HXNId583d_aXSlks5rdbsBgaJpZM4L3UvG>.; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-280679945
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410:169,Deployability,release,release,169,"Hi @brianjohnhaas --- I know it's been a while (but I didn't gain access to an older OSX machine in that time). However, you should now be able to get the latest Salmon release on any OSX >= 10.8 via [its Bioconda release](https://bioconda.github.io/recipes/salmon/README.html). Let me know if this works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410:214,Deployability,release,release,214,"Hi @brianjohnhaas --- I know it's been a while (but I didn't gain access to an older OSX machine in that time). However, you should now be able to get the latest Salmon release on any OSX >= 10.8 via [its Bioconda release](https://bioconda.github.io/recipes/salmon/README.html). Let me know if this works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410:66,Security,access,access,66,"Hi @brianjohnhaas --- I know it's been a while (but I didn't gain access to an older OSX machine in that time). However, you should now be able to get the latest Salmon release on any OSX >= 10.8 via [its Bioconda release](https://bioconda.github.io/recipes/salmon/README.html). Let me know if this works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287756041:329,Deployability,release,release,329,"Thanks, Rob! Much appreciated. ~brian. On Mon, Mar 20, 2017 at 9:06 AM, Rob Patro <notifications@github.com> wrote:. > Hi @brianjohnhaas <https://github.com/brianjohnhaas> --- I know it's been; > a while (but I didn't gain access to an older OSX machine in that time).; > However, you should now be able to get the latest Salmon release on any OSX; > >= 10.8 via its Bioconda release; > <https://bioconda.github.io/recipes/salmon/README.html>. Let me know if; > this works for you.; >; > Best,; > Rob; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AHMVX9ed1SrEG30OgxTLVaHzGtq20WI0ks5rnnnngaJpZM4L3UvG>; > .; >. -- ; --; Brian J. Haas; The Broad Institute; http://broadinstitute.org/~bhaas <http://broad.mit.edu/~bhaas>",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287756041
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287756041:376,Deployability,release,release,376,"Thanks, Rob! Much appreciated. ~brian. On Mon, Mar 20, 2017 at 9:06 AM, Rob Patro <notifications@github.com> wrote:. > Hi @brianjohnhaas <https://github.com/brianjohnhaas> --- I know it's been; > a while (but I didn't gain access to an older OSX machine in that time).; > However, you should now be able to get the latest Salmon release on any OSX; > >= 10.8 via its Bioconda release; > <https://bioconda.github.io/recipes/salmon/README.html>. Let me know if; > this works for you.; >; > Best,; > Rob; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AHMVX9ed1SrEG30OgxTLVaHzGtq20WI0ks5rnnnngaJpZM4L3UvG>; > .; >. -- ; --; Brian J. Haas; The Broad Institute; http://broadinstitute.org/~bhaas <http://broad.mit.edu/~bhaas>",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287756041
https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287756041:223,Security,access,access,223,"Thanks, Rob! Much appreciated. ~brian. On Mon, Mar 20, 2017 at 9:06 AM, Rob Patro <notifications@github.com> wrote:. > Hi @brianjohnhaas <https://github.com/brianjohnhaas> --- I know it's been; > a while (but I didn't gain access to an older OSX machine in that time).; > However, you should now be able to get the latest Salmon release on any OSX; > >= 10.8 via its Bioconda release; > <https://bioconda.github.io/recipes/salmon/README.html>. Let me know if; > this works for you.; >; > Best,; > Rob; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287753410>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AHMVX9ed1SrEG30OgxTLVaHzGtq20WI0ks5rnnnngaJpZM4L3UvG>; > .; >. -- ; --; Brian J. Haas; The Broad Institute; http://broadinstitute.org/~bhaas <http://broad.mit.edu/~bhaas>",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117#issuecomment-287756041
https://github.com/COMBINE-lab/salmon/issues/118#issuecomment-278131378:78,Deployability,update,update,78,"Hi @emilyburke,. Absolutely; sorry for the oversight and the confusion. We'll update the documentation to mention this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/118#issuecomment-278131378
https://github.com/COMBINE-lab/salmon/issues/118#issuecomment-278133154:9,Deployability,update,updated,9,"Ok, I've updated the docs and added an explicit note about this in commit 95866337bde0feb57a0c3231efdfa26c847ba141. It has propagated to the documentation now. Thanks again for reporting this and offering this suggestion.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/118#issuecomment-278133154
https://github.com/COMBINE-lab/salmon/issues/118#issuecomment-278461497:33,Deployability,update,update,33,"Perfect, thank you for the quick update!; Emily",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/118#issuecomment-278461497
https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839:803,Availability,error,error,803,"Hi Victor,. Is it the case that `/n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index` is an index of only your genes of interest? If so, that would explain what you're seeing. Salmon assumes that some non-zero fraction of reads map in your sample. In this case, I'd presume that if you have some samples where no reads map to any transcript of your gene of interest, then salmon will complain in exactly the manner mentioned above. Now that I think about it, there are actually two different scenarios that can cause the above. The first is if something goes wrong in the optimization (there should be no way for this to happen, and so it would be the result of a bug if it did). The second is actually if there are no mappable reads. That's not the result of a bug, or even an ""error"" per-se, but just very unexpected input (since, in a typical scenario, this would imply the reads are unmatched with the reference). It might make sense to handle this case separately. However, this is certainly what is causing the output in your case, and you can safely assume that here, were it not for this specific check, Salmon would return an estimated count of 0 for all transcripts in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839
https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839:596,Performance,optimiz,optimization,596,"Hi Victor,. Is it the case that `/n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index` is an index of only your genes of interest? If so, that would explain what you're seeing. Salmon assumes that some non-zero fraction of reads map in your sample. In this case, I'd presume that if you have some samples where no reads map to any transcript of your gene of interest, then salmon will complain in exactly the manner mentioned above. Now that I think about it, there are actually two different scenarios that can cause the above. The first is if something goes wrong in the optimization (there should be no way for this to happen, and so it would be the result of a bug if it did). The second is actually if there are no mappable reads. That's not the result of a bug, or even an ""error"" per-se, but just very unexpected input (since, in a typical scenario, this would imply the reads are unmatched with the reference). It might make sense to handle this case separately. However, this is certainly what is causing the output in your case, and you can safely assume that here, were it not for this specific check, Salmon would return an estimated count of 0 for all transcripts in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839
https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839:1074,Safety,safe,safely,1074,"Hi Victor,. Is it the case that `/n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index` is an index of only your genes of interest? If so, that would explain what you're seeing. Salmon assumes that some non-zero fraction of reads map in your sample. In this case, I'd presume that if you have some samples where no reads map to any transcript of your gene of interest, then salmon will complain in exactly the manner mentioned above. Now that I think about it, there are actually two different scenarios that can cause the above. The first is if something goes wrong in the optimization (there should be no way for this to happen, and so it would be the result of a bug if it did). The second is actually if there are no mappable reads. That's not the result of a bug, or even an ""error"" per-se, but just very unexpected input (since, in a typical scenario, this would imply the reads are unmatched with the reference). It might make sense to handle this case separately. However, this is certainly what is causing the output in your case, and you can safely assume that here, were it not for this specific check, Salmon would return an estimated count of 0 for all transcripts in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279958203:169,Integrability,depend,depending,169,"Hey,. What is your cutoff for considering a gene expressed? Salmon puts a small > 0 expression on most genes. Usually we count genes over e.g. 5 reads, or e.g. > 1 TPM, depending analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279958203
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279960488:206,Deployability,pipeline,pipeline,206,"Hi vals,; Cutoffs for Salmon as well as STAR+featurecounts/RSEM are all >0, no matter it is normalized value (RPKM, TPM) or rawcount. To my knowledge, there shouldn't be a hugh difference between different pipeline in terms of number of detected genes. Somehow, I think Salmon is over-sensitive to some extent. It's good to know that there will be small >0 expression on most genes. That makes the thing clear~. Best!; Gary",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279960488
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279960488:237,Safety,detect,detected,237,"Hi vals,; Cutoffs for Salmon as well as STAR+featurecounts/RSEM are all >0, no matter it is normalized value (RPKM, TPM) or rawcount. To my knowledge, there shouldn't be a hugh difference between different pipeline in terms of number of detected genes. Somehow, I think Salmon is over-sensitive to some extent. It's good to know that there will be small >0 expression on most genes. That makes the thing clear~. Best!; Gary",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279960488
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279960488:404,Usability,clear,clear,404,"Hi vals,; Cutoffs for Salmon as well as STAR+featurecounts/RSEM are all >0, no matter it is normalized value (RPKM, TPM) or rawcount. To my knowledge, there shouldn't be a hugh difference between different pipeline in terms of number of detected genes. Somehow, I think Salmon is over-sensitive to some extent. It's good to know that there will be small >0 expression on most genes. That makes the thing clear~. Best!; Gary",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279960488
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279978182:169,Safety,detect,detected,169,"Hi vals,; Interestingly, I just did the gene number summary for both Salmon and featureCounts. Cutoffs are counts >=5. Still, Salmon gives a roughly 2-fold increment on detected gene number. See from links as follows,; Salmon:; https://flic.kr/p/QRZhVq; featureCounts:; https://flic.kr/p/RXw7FK; I was wondering if my Salmon code attached above was wrong. Best!; Gary",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279978182
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279979792:95,Deployability,pipeline,pipeline,95,"Hi Gary,. Oh that's quite weird!. How do you deal with multimapping reads in the featureCounts pipeline? I haven't looked at this particular data set, but the Sandberg lab usually have very short (single end) reads, which I suspect will multimap a lot?. If you are removing multimapping reads in the featureCounts pipeline before counting, this might explain things, since any genes with ambiguously mappable sequences won't be counted. (In particular, the Sandberg lab tend to use genome references with ambiguous regions removed.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279979792
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279979792:314,Deployability,pipeline,pipeline,314,"Hi Gary,. Oh that's quite weird!. How do you deal with multimapping reads in the featureCounts pipeline? I haven't looked at this particular data set, but the Sandberg lab usually have very short (single end) reads, which I suspect will multimap a lot?. If you are removing multimapping reads in the featureCounts pipeline before counting, this might explain things, since any genes with ambiguously mappable sequences won't be counted. (In particular, the Sandberg lab tend to use genome references with ambiguous regions removed.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279979792
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279981603:786,Safety,detect,detected,786,"Hi vals,; Yes, the data is single end 43bp. Which is very short! So I set the k=19 when doing Salmon indexing for quasi-mapping. My featureCounts script is as follow.; #!/bin/bash. GTF=/home1/garyhe/workingdir/ref/gencode/gencode.v25.primary_assembly.annotation.ercc.gtf. cd /home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned. featureCounts *Aligned.sortedByCoord.out.bam -M -T 24 -a $GTF -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/ilc.unprocessed.matrix.txt. cd /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/. cat ilc.unprocessed.matrix.txt | cut -f1,7- | sed 1d > ilc.matrix.txt. Actually, multimapped reads were all taken into account with the -M option. . And as a matter of fact, a gene counting without multimapped reads was also done. The number of detected gene (cutoff=5) was even lower :(; https://flic.kr/p/S9sPp4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279981603
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279984140:97,Deployability,pipeline,pipelines,97,"Hi Gary,. Ok, I'm out of ideas... Do the number of genes per cell at least correlate between the pipelines?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279984140
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279985466:72,Deployability,pipeline,pipelines,72,"Hi vals,; I don't know the correlation between Salmon and featureCounts pipelines. However, I've just done similar counting with htseq-count (-m union) . The result of gene number is similar (just slightly higher) to featureCounts (w/o multimapped reads). ; https://flic.kr/p/RXy39z; As far as I can tell, count-based methods performs similarly. The number of detected gene is within expectation.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279985466
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279985466:326,Performance,perform,performs,326,"Hi vals,; I don't know the correlation between Salmon and featureCounts pipelines. However, I've just done similar counting with htseq-count (-m union) . The result of gene number is similar (just slightly higher) to featureCounts (w/o multimapped reads). ; https://flic.kr/p/RXy39z; As far as I can tell, count-based methods performs similarly. The number of detected gene is within expectation.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279985466
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279985466:360,Safety,detect,detected,360,"Hi vals,; I don't know the correlation between Salmon and featureCounts pipelines. However, I've just done similar counting with htseq-count (-m union) . The result of gene number is similar (just slightly higher) to featureCounts (w/o multimapped reads). ; https://flic.kr/p/RXy39z; As far as I can tell, count-based methods performs similarly. The number of detected gene is within expectation.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-279985466
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-281438238:15,Deployability,update,update,15,"@kobeho24, Any update on this? Have you had a chance to try any of the suggestions?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-281438238
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-281555424:35,Testability,test,test,35,"Hi Rob,; I haven't got a chance to test whether the suggestions help or not. But I guess it's due to the fact that the read is super short, single-end only as well, thus introduce a huge ambiguity in the quasi-mapping step. Anyway, I will try to test it later.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-281555424
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-281555424:246,Testability,test,test,246,"Hi Rob,; I haven't got a chance to test whether the suggestions help or not. But I guess it's due to the fact that the read is super short, single-end only as well, thus introduce a huge ambiguity in the quasi-mapping step. Anyway, I will try to test it later.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-281555424
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-282327027:44,Safety,detect,detected,44,"Hi Rob and val,; I re-compare the number of detected gene of a new data set (PE100, 96 cells, N.Wilson 2015 Cell Stem Cell) with featureCounts, Salmon and Kallisto. All the three has similar gene detected number in which k-mer based methods produce a slight higher gene number. I guess it's mainly due to the the fact that whether multimapping reads are taken into account. Anyway, it confirms my guess about the the issue described above may just because quasi-mapping is not so friendly with short single end reads, which may introduce a huge ambiguity in the quantitation process. Since my own data set won't be short and single-end, I suppose I will keep using salmon to analyze my data in the future. Thanks for your contribution and help to this issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-282327027
https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-282327027:196,Safety,detect,detected,196,"Hi Rob and val,; I re-compare the number of detected gene of a new data set (PE100, 96 cells, N.Wilson 2015 Cell Stem Cell) with featureCounts, Salmon and Kallisto. All the three has similar gene detected number in which k-mer based methods produce a slight higher gene number. I guess it's mainly due to the the fact that whether multimapping reads are taken into account. Anyway, it confirms my guess about the the issue described above may just because quasi-mapping is not so friendly with short single end reads, which may introduce a huge ambiguity in the quantitation process. Since my own data set won't be short and single-end, I suppose I will keep using salmon to analyze my data in the future. Thanks for your contribution and help to this issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120#issuecomment-282327027
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282048231:574,Security,access,accession,574,"@demis001 salmon currently makes exact matches between the fasta headers and transcript annotations in the GTF, so no - it doesn't work. Since gene level summarization is pretty simple you could just use something like https://github.com/daler/gffutils to read your GTF, drop the version numbers from the GTF entries, then drop the version numbers from the salmon quant.sf file, and join the two yourself. The summarization from tx->gene is just summing each gene's transcripts' TPM values. @rob-p: I do think this is a common enough issue that salmon could handle dropping accession.version numbers with an extra option.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282048231
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282048231:178,Usability,simpl,simple,178,"@demis001 salmon currently makes exact matches between the fasta headers and transcript annotations in the GTF, so no - it doesn't work. Since gene level summarization is pretty simple you could just use something like https://github.com/daler/gffutils to read your GTF, drop the version numbers from the GTF entries, then drop the version numbers from the salmon quant.sf file, and join the two yourself. The summarization from tx->gene is just summing each gene's transcripts' TPM values. @rob-p: I do think this is a common enough issue that salmon could handle dropping accession.version numbers with an extra option.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282048231
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282063258:395,Availability,down,downstream,395,"@demis001, @mdshw5 -- this seems reasonable and easy enough to do. I just don't want to go too deep into the rabbit hole since tximport is my goto recommendation for this problem in the general case. Also, Mike and I have recently added some nice features there (the ability to import gibbs / bootstrap results) that will make it an even more useful way to interact with and process salmon data downstream. My question for implementing this feature is what version ""split string"" should I consider. Is it always '.'? Do some schemes use '_'? Does this string itself have to be a parameter?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282063258
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282331518:48,Security,access,accession,48,"@rob-p I think it's reasonable to support only ""accession.version"" since that seems common (it's used for ensemble at least), and allowing more user parameters means more work implementing, testing, fixing... I'm sure you don't need it, but I implemented something similar to allow a user to pass a custom ""key function"" in one of my python packages: https://github.com/mdshw5/pyfaidx#keyfn. I'm not sure how you would allow custom functions since you're using C++, and you might have to come up with an entire domain-specific language for this, but maybe something exists for this purpose...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282331518
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282331518:190,Testability,test,testing,190,"@rob-p I think it's reasonable to support only ""accession.version"" since that seems common (it's used for ensemble at least), and allowing more user parameters means more work implementing, testing, fixing... I'm sure you don't need it, but I implemented something similar to allow a user to pass a custom ""key function"" in one of my python packages: https://github.com/mdshw5/pyfaidx#keyfn. I'm not sure how you would allow custom functions since you're using C++, and you might have to come up with an entire domain-specific language for this, but maybe something exists for this purpose...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282331518
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282337316:40,Security,access,accession,40,"@rob-p ; I don't know what you mean by ""accession.version"", my initial question was, if you pass "" -g Homo_sapiens.GRCh38.87.chr.gtf"" to salmon to get a gene level count, it will fail to map Transcript to Gene Name. . Instead of asking the user to pass a two column annotation that map ""Transcript to Gene"", it would be nice to support standard format from Ensembl gtf file to generate a gene level count from a solmon CLI. . Am I missing something?. @demis001",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282337316
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282341182:320,Safety,safe,safely,320,"Hi @demis001,. What I mean is that the _standard_ Ensemble format of `transcript_name.transcript_version`, separates the name from the version using a `.`. This is, in no way, a standard or universal rule. For example, what if the gtf file is coming from another source (Gencode, RefSeq, UCSC, something else)? We can't safely assume that one can universally just remove the portion of the identifier after the last `.` to get the un-versioned name. In this case, the question is, what is the right way to handle this, since users are employing all manner of different sources for their reference transcriptomes and not just Ensembl. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282341182
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:694,Availability,avail,available,694,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:931,Availability,down,download,931,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:360,Deployability,update,update,360,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:1124,Security,access,accessions,1124,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:1164,Security,access,accession,1164,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:1210,Security,access,accession,1210,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283453800:16,Availability,down,downloaded,16,"Hi Rob,. I have downloaded the cdna and ncrna from ENSEMBL ftp site and merged, got the gtf file from the same site:. `http://useast.ensembl.org/info/data/ftp/index.html` . **Replaced the version issue as follows:** forward slash before dot, git removed it; >sed -i 's/\.[123456789]//g' Homo_sapiens.GRCh38.87.cdna.ncrna.fa`. **Indexed it:** ; >`salmon index -t Homo_sapiens.GRCh38.87.cdna.ncrna.fa -i Homo_sapiens.GRCh38.cdna.ncrna.quasi.index`. `Did alignment:`. >`salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.chr.gtf`. **Tried this too:**; >`salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.gtf`. Got this error:; >`[2017-03-01 14:52:23.285] [jointLog] [warning] couldn't find transcript named [ENST00000615101] in transcript <-> gene map; returning transcript as it's own gene; `; Did this: ; >`(rseqpipe) [ddjima@jima:1013_quant]$ grep ""ENST"" quant.genes.sf | wc -l; >21370; (rseqpipe) [ddjima@jima:1013_quant]$ grep ""ENSG"" quant.genes.sf | wc -l; >56934; `. Seems don't find gene name for 21370 transcript ... Any idea?. Thank you very much!!!!!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283453800
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283453800:937,Availability,error,error,937,"Hi Rob,. I have downloaded the cdna and ncrna from ENSEMBL ftp site and merged, got the gtf file from the same site:. `http://useast.ensembl.org/info/data/ftp/index.html` . **Replaced the version issue as follows:** forward slash before dot, git removed it; >sed -i 's/\.[123456789]//g' Homo_sapiens.GRCh38.87.cdna.ncrna.fa`. **Indexed it:** ; >`salmon index -t Homo_sapiens.GRCh38.87.cdna.ncrna.fa -i Homo_sapiens.GRCh38.cdna.ncrna.quasi.index`. `Did alignment:`. >`salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.chr.gtf`. **Tried this too:**; >`salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.gtf`. Got this error:; >`[2017-03-01 14:52:23.285] [jointLog] [warning] couldn't find transcript named [ENST00000615101] in transcript <-> gene map; returning transcript as it's own gene; `; Did this: ; >`(rseqpipe) [ddjima@jima:1013_quant]$ grep ""ENST"" quant.genes.sf | wc -l; >21370; (rseqpipe) [ddjima@jima:1013_quant]$ grep ""ENSG"" quant.genes.sf | wc -l; >56934; `. Seems don't find gene name for 21370 transcript ... Any idea?. Thank you very much!!!!!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283453800
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283461979:459,Testability,test,test,459,"Yes, all have entry in the *.fa file but are missing from *.gtf file. > grep ""ENST00000615101"" Homo_sapiens.GRCh38.87.cdna.ncrna.fa; >ENST00000615101 ncrna chromosome:GRCh38:CHR_HSCHR15_4_CTG8:30951585:30951821:1 gene:ENSG00000276152 gene_biotype:misc_RNA transcript_biotype:misc_RNA gene_symbol:Metazoa_SRP description:Metazoan signal recognition particle RNA [Source:RFAM;Acc:RF00017]. >grep ""ENST00000615101"" Homo_sapiens.GRCh38.87.gtf; > NA. Did you ever test salmon using ENSEMBL build?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283461979
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423:39,Deployability,release,release-,39,Sure!; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; # Combine the above two files; >zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz > Homo_sapiens.GRCh38.87.cdna.ncrna.fa; # Get annotation only on known chr; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.chr.gtf.gz; # Get all annotation; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423:140,Deployability,release,release-,140,Sure!; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; # Combine the above two files; >zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz > Homo_sapiens.GRCh38.87.cdna.ncrna.fa; # Get annotation only on known chr; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.chr.gtf.gz; # Get all annotation; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423:423,Deployability,release,release-,423,Sure!; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; # Combine the above two files; >zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz > Homo_sapiens.GRCh38.87.cdna.ncrna.fa; # Get annotation only on known chr; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.chr.gtf.gz; # Get all annotation; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423:540,Deployability,release,release-,540,Sure!; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz; >wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; # Combine the above two files; >zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz > Homo_sapiens.GRCh38.87.cdna.ncrna.fa; # Get annotation only on known chr; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.chr.gtf.gz; # Get all annotation; >wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283466423
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283477075:359,Usability,simpl,simply,359,"Hi @demis001,. I see. There is only one behavior built in (i.e., report the transcript as it's own gene). You can easily filter the gene -level quantification file to get rid of transcripts like this though. The easiest way would be something like:. ```; > cat <(head -1 quant.genes.sf) <(grep ""ENSG*"" quant.genes.sf) > quant.genes.filtered.sf; ```; That is, simply filter the `quant.genes.sf` file for any line that matches `ENSG`, leaving the rest behind (and adding the header line). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283477075
https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283478208:73,Deployability,upgrade,upgrade,73,"I can do that, but wish if the option exist in salmon... mark for future upgrade. I can't thank you enough both of you for your time. Thank you very much for your time!; You may close the issue now.; @demis001",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283478208
https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283458128:65,Deployability,patch,patch,65,Yup --- I see the source of the bug. I will push a fix and cut a patch release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283458128
https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283458128:71,Deployability,release,release,71,Yup --- I see the source of the bug. I will push a fix and cut a patch release.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283458128
https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283484721:49,Deployability,hotfix,hotfix,49,"Hi @vasisht,. Here is a pre-compiled binary of a hotfix that should resolve this issue. The bug will be fixed in the 0.8.1 release that should appear by Monday. However, there are one or two other things I want to include in that release, so I didn't tag another just yet. --Rob. [Salmon-latest_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/812143/Salmon-latest_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283484721
https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283484721:123,Deployability,release,release,123,"Hi @vasisht,. Here is a pre-compiled binary of a hotfix that should resolve this issue. The bug will be fixed in the 0.8.1 release that should appear by Monday. However, there are one or two other things I want to include in that release, so I didn't tag another just yet. --Rob. [Salmon-latest_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/812143/Salmon-latest_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283484721
https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283484721:230,Deployability,release,release,230,"Hi @vasisht,. Here is a pre-compiled binary of a hotfix that should resolve this issue. The bug will be fixed in the 0.8.1 release that should appear by Monday. However, there are one or two other things I want to include in that release, so I didn't tag another just yet. --Rob. [Salmon-latest_linux_x86_64.tar.gz](https://github.com/COMBINE-lab/salmon/files/812143/Salmon-latest_linux_x86_64.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/123#issuecomment-283484721
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-289310854:573,Energy Efficiency,reduce,reduce,573,"Hi @lcolladotor,. That's really strange. It *is* the case that it's possible for Salmon to use more than one thread if you set `-p 1` --- it will use up to 2 threads in this case (1 is always dedicated for parsing). However, none of this would explain the memory usage you see. Adding more threads should not substantially change the memory burden in any way, as the main memory usage is in memory shared between threads and the amount of thread local memory is very small (a few MB at most). I would recommend updating to the latest version of Salmon (v0.8.2), as it does reduce the memory usage even more. I commonly quantify on the human transcriptome, and this uses 3-4G on my machine (with 16 threads). If you're still seeing this behavior with the newest version, we can try and debug further --- though I'm not sure exactly where to look next.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-289310854
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-289539265:11,Deployability,install,install,11,"Hi,. We'll install the latest version of Salmon, make new indexes and run the tests against the new indexes. It'll take us a bit to report back. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-289539265
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-289539265:78,Testability,test,tests,78,"Hi,. We'll install the latest version of Salmon, make new indexes and run the tests against the new indexes. It'll take us a bit to report back. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-289539265
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:701,Availability,echo,echo,701,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:736,Availability,echo,echo,736,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:765,Availability,echo,echo,765,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:787,Availability,echo,echo,787,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:813,Availability,echo,echo,813,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:843,Availability,echo,echo,843,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:873,Availability,echo,echo,873,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:1718,Availability,echo,echo,1718,"echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4109,Availability,echo,echo,4109,"lmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_t",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4144,Availability,echo,echo,4144,"de.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4173,Availability,echo,echo,4173,"de.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4195,Availability,echo,echo,4195,"de.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4221,Availability,echo,echo,4221,"de.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4251,Availability,echo,echo,4251,"de.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4281,Availability,echo,echo,4281,"de.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:5127,Availability,echo,echo,5127,"cho ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7616,Availability,echo,echo,7616,"2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_te",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7651,Availability,echo,echo,7651,"rs/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7680,Availability,echo,echo,7680,"rs/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7702,Availability,echo,echo,7702,"rs/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7728,Availability,echo,echo,7728,"rs/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7758,Availability,echo,echo,7758,"rs/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7788,Availability,echo,echo,7788,"rs/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:8633,Availability,echo,echo,8633,"echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:1431,Deployability,pipeline,pipeline,1431,"$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:1530,Deployability,pipeline,pipeline,1530,"$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:2166,Deployability,pipeline,pipeline,2166,"_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:3065,Deployability,pipeline,pipeline,3065," the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:3163,Deployability,pipeline,pipeline,3163,"/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4839,Deployability,pipeline,pipeline,4839,"#$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:4938,Deployability,pipeline,pipeline,4938," -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:5575,Deployability,pipeline,pipeline,5575,"alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:6475,Deployability,pipeline,pipeline,6475,"the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:6573,Deployability,pipeline,pipeline,6573,"Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:8346,Deployability,pipeline,pipeline,8346,"$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:8445,Deployability,pipeline,pipeline,8445,"$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:9081,Deployability,pipeline,pipeline,9081,"_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:84,Performance,load,load,84,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:3521,Performance,Queue,Queue,3521,"read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:6932,Performance,Queue,Queue,6932,"ead2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:9851,Performance,Load,Loading,9851,"66; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:9927,Performance,Load,Loading,9927," salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:10001,Performance,Load,Loading,10001,"> quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per frag: 1.40287[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 27947",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:10083,Performance,Load,Loading,10083,"n/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per frag: 1.40287[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2794766, hits per frag: 1.40089[A. [32mprocessed[31m 2500000 [32mfragments[0m; h",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:10163,Performance,Load,Loading,10163,"=> { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per frag: 1.40287[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2794766, hits per frag: 1.40089[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3489235, hits per frag: 1.39849[A. [32mprocessed[31m 3000000 [32mfragments",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:10449,Performance,load,loading,10449,"put ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per frag: 1.40287[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2794766, hits per frag: 1.40089[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3489235, hits per frag: 1.39849[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 4183913, hits per frag: 1.39697[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4884560, hits per frag: 1.39759[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 5584692, hits per frag: 1.39792[A. [32mprocessed[31m 4500000 [32mfragmen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:10522,Performance,load,loading,10522,"1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per frag: 1.40287[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2794766, hits per frag: 1.40089[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3489235, hits per frag: 1.39849[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 4183913, hits per frag: 1.39697[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4884560, hits per frag: 1.39759[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 5584692, hits per frag: 1.39792[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 6282640, hits per frag: 1.3977[A. [32mprocessed[31m 5000000 [3",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:23684,Performance,optimiz,optimizer,23684,"[32mprocessed[31m 66000000 [32mfragments[0m; hits: 92174292, hits per frag: 1.39669[A. [32mprocessed[31m 66500000 [32mfragments[0m; hits: 92872684, hits per frag: 1.39669[A. [32mprocessed[31m 67000000 [32mfragments[0m; hits: 93570589, hits per frag: 1.39668[A. [32mprocessed[31m 67500000 [32mfragments[0m; hits: 94262793, hits per frag: 1.39659[A. [32mprocessed[31m 68000000 [32mfragments[0m; hits: 94956043, hits per frag: 1.39652[A. [32mprocessed[31m 68500000 [32mfragments[0m; hits: 95648744, hits per frag: 1.39643. [1m[2017-03-30 11:30:33.005] [jointLog] [info] Computed 505448 rich equivalence classes for further processing; [00m[1m[2017-03-30 11:30:33.005] [jointLog] [info] Counted 30438349 total reads in the equivalence classes ; [00m. [1m[2017-03-30 11:30:50.309] [jointLog] [info] Mapping rate = 44.3635%. [00m[1m[2017-03-30 11:30:50.309] [jointLog] [info] finished quantifyLibrary(); [00m[1m[2017-03-30 11:30:56.208] [jointLog] [info] Starting optimizer; [00m[1m[2017-03-30 11:32:15.204] [jointLog] [info] Marked 4 weighted equivalence classes as degenerate; [00m[1m[2017-03-30 11:32:15.413] [jointLog] [info] iteration = 0 | max rel diff. = 13.3708; [00m[1m[2017-03-30 11:32:31.128] [jointLog] [info] iteration = 100 | max rel diff. = 0.096809; [00m[1m[2017-03-30 11:32:46.546] [jointLog] [info] iteration = 200 | max rel diff. = 0.0617045; [00m[1m[2017-03-30 11:33:01.476] [jointLog] [info] iteration = 300 | max rel diff. = 0.0375335; [00m[1m[2017-03-30 11:33:16.917] [jointLog] [info] iteration = 400 | max rel diff. = 0.0281626; [00m[1m[2017-03-30 11:33:32.635] [jointLog] [info] iteration = 500 | max rel diff. = 0.0213515; [00m[1m[2017-03-30 11:33:48.229] [jointLog] [info] iteration = 600 | max rel diff. = 0.0163419; [00m[1m[2017-03-30 11:34:05.482] [jointLog] [info] iteration = 700 | max rel diff. = 0.0161512; [00m[1m[2017-03-30 11:34:22.202] [jointLog] [info] iteration = 800 | max rel diff. = 0.0161512; [00m[1m[2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:25136,Performance,optimiz,optimizer,25136,"o] iteration = 300 | max rel diff. = 0.0375335; [00m[1m[2017-03-30 11:33:16.917] [jointLog] [info] iteration = 400 | max rel diff. = 0.0281626; [00m[1m[2017-03-30 11:33:32.635] [jointLog] [info] iteration = 500 | max rel diff. = 0.0213515; [00m[1m[2017-03-30 11:33:48.229] [jointLog] [info] iteration = 600 | max rel diff. = 0.0163419; [00m[1m[2017-03-30 11:34:05.482] [jointLog] [info] iteration = 700 | max rel diff. = 0.0161512; [00m[1m[2017-03-30 11:34:22.202] [jointLog] [info] iteration = 800 | max rel diff. = 0.0161512; [00m[1m[2017-03-30 11:34:38.380] [jointLog] [info] iteration = 900 | max rel diff. = 0.0124406; [00m[1m[2017-03-30 11:34:54.979] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0116537; [00m[1m[2017-03-30 11:35:11.215] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0116537; [00m[1m[2017-03-30 11:35:12.190] [jointLog] [info] iteration = 1107 | max rel diff. = 0.00948523; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] writing output . [00m[33m[1m[2017-03-30 11:38:26.886] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/lib_format_counts.json for details. [00m**** Job ends ****; Thu Mar 30 11:38:30 EDT 2017; ```. ### SGE email example info. ```; Job-array task 110632.1 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-066.cm.cluster; Host = compute-066.cm.cluster; Start Time = 03/29/2017 23:27:10; End Time = 03/30/2017 11:38:30; User Time = 06:08:32; System Time = 12:46:46; Wallclock Time = 12:11:20; CPU = 18:55:18; Max vmem = 6.961G; Exit Status = 0; ```. For some reaso",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:25859,Performance,Queue,Queue,25859,"| max rel diff. = 0.0116537; [00m[1m[2017-03-30 11:35:11.215] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0116537; [00m[1m[2017-03-30 11:35:12.190] [jointLog] [info] iteration = 1107 | max rel diff. = 0.00948523; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] writing output . [00m[33m[1m[2017-03-30 11:38:26.886] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/lib_format_counts.json for details. [00m**** Job ends ****; Thu Mar 30 11:38:30 EDT 2017; ```. ### SGE email example info. ```; Job-array task 110632.1 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-066.cm.cluster; Host = compute-066.cm.cluster; Start Time = 03/29/2017 23:27:10; End Time = 03/30/2017 11:38:30; User Time = 06:08:32; System Time = 12:46:46; Wallclock Time = 12:11:20; CPU = 18:55:18; Max vmem = 6.961G; Exit Status = 0; ```. For some reason, sample 1 took quite a bit of time. Samples 2 and 3 were actually much faster:. sample 2:. ```; Job-array task 110632.2 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-051.cm.cluster; Host = compute-051.cm.cluster; Start Time = 03/30/2017 00:22:20; End Time = 03/30/2017 03:33:24; User Time = 02:37:02; System Time = 02:55:26; Wallclock Time = 03:11:04; CPU = 05:32:28; Max vmem = 6.941G; Exit Status = 0; ```. sample 3:. ```; Job-array task 110632.3 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-051.cm.cluster; Host = compute-051.cm.cluster; Start Time = 03/30/2017 03:33:38; End Time = 03/30/2017 05:58:33; User Time = 03:45:",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:26323,Performance,Queue,Queue,26323,"537; [00m[1m[2017-03-30 11:35:12.190] [jointLog] [info] iteration = 1107 | max rel diff. = 0.00948523; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] writing output . [00m[33m[1m[2017-03-30 11:38:26.886] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/lib_format_counts.json for details. [00m**** Job ends ****; Thu Mar 30 11:38:30 EDT 2017; ```. ### SGE email example info. ```; Job-array task 110632.1 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-066.cm.cluster; Host = compute-066.cm.cluster; Start Time = 03/29/2017 23:27:10; End Time = 03/30/2017 11:38:30; User Time = 06:08:32; System Time = 12:46:46; Wallclock Time = 12:11:20; CPU = 18:55:18; Max vmem = 6.961G; Exit Status = 0; ```. For some reason, sample 1 took quite a bit of time. Samples 2 and 3 were actually much faster:. sample 2:. ```; Job-array task 110632.2 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-051.cm.cluster; Host = compute-051.cm.cluster; Start Time = 03/30/2017 00:22:20; End Time = 03/30/2017 03:33:24; User Time = 02:37:02; System Time = 02:55:26; Wallclock Time = 03:11:04; CPU = 05:32:28; Max vmem = 6.941G; Exit Status = 0; ```. sample 3:. ```; Job-array task 110632.3 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-051.cm.cluster; Host = compute-051.cm.cluster; Start Time = 03/30/2017 03:33:38; End Time = 03/30/2017 05:58:33; User Time = 03:45:43; System Time = 00:37:55; Wallclock Time = 02:24:55; CPU = 04:23:38; Max vmem = 6.947G; Exit Status = 0; ```. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:26691,Performance,Queue,Queue,26691,"537; [00m[1m[2017-03-30 11:35:12.190] [jointLog] [info] iteration = 1107 | max rel diff. = 0.00948523; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-30 11:35:12.199] [jointLog] [info] writing output . [00m[33m[1m[2017-03-30 11:38:26.886] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/lib_format_counts.json for details. [00m**** Job ends ****; Thu Mar 30 11:38:30 EDT 2017; ```. ### SGE email example info. ```; Job-array task 110632.1 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-066.cm.cluster; Host = compute-066.cm.cluster; Start Time = 03/29/2017 23:27:10; End Time = 03/30/2017 11:38:30; User Time = 06:08:32; System Time = 12:46:46; Wallclock Time = 12:11:20; CPU = 18:55:18; Max vmem = 6.961G; Exit Status = 0; ```. For some reason, sample 1 took quite a bit of time. Samples 2 and 3 were actually much faster:. sample 2:. ```; Job-array task 110632.2 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-051.cm.cluster; Host = compute-051.cm.cluster; Start Time = 03/30/2017 00:22:20; End Time = 03/30/2017 03:33:24; User Time = 02:37:02; System Time = 02:55:26; Wallclock Time = 03:11:04; CPU = 05:32:28; Max vmem = 6.941G; Exit Status = 0; ```. sample 3:. ```; Job-array task 110632.3 (step6-salmon_test5.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-051.cm.cluster; Host = compute-051.cm.cluster; Start Time = 03/30/2017 03:33:38; End Time = 03/30/2017 05:58:33; User Time = 03:45:43; System Time = 00:37:55; Wallclock Time = 02:24:55; CPU = 04:23:38; Max vmem = 6.947G; Exit Status = 0; ```. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:3009,Safety,Abort,Aborted,3009," the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:6419,Safety,Abort,Aborted,6419,"the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:186,Security,access,access,186,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:10457,Security,hash,hash,10457,"put ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-03-30 05:09:36.706] [jointLog] [info] done; [00m[1m[2017-03-30 05:09:36.790] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 699833, hits per frag: 1.4138[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1395659, hits per frag: 1.40267[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 2097294, hits per frag: 1.40287[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2794766, hits per frag: 1.40089[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3489235, hits per frag: 1.39849[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 4183913, hits per frag: 1.39697[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4884560, hits per frag: 1.39759[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 5584692, hits per frag: 1.39792[A. [32mprocessed[31m 4500000 [32mfragmen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:23,Testability,test,tests,23,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:381,Testability,test,test,381,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:541,Testability,log,logs,541,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:581,Testability,log,logs,581,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:1768,Testability,log,log,1768,"cho ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [join",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:2625,Testability,Log,Logs,2625," ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:2725,Testability,log,logs,2725," ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:51:11.533] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:51:11.545] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:3949,Testability,log,logs,3949,"pool/compute-061/job_scripts/110315: line 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:3989,Testability,log,logs,3989,"e 31: 54922 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}; **** Job ends ****; Wed Mar 29 14:51:13 EDT 2017; ```. ### SGE email info example. ```; Job-array task 110315.1 (step6-salmon_test3.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-061.cm.cluster; Host = compute-061.cm.cluster; Start Time = 03/29/2017 14:51:09; End Time = 03/29/2017 14:51:13; User Time = 00:00:00; System Time = 00:00:02; Wallclock Time = 00:00:04; CPU = 00:00:02; Max vmem = 14.820G; Exit Status = 0; ```. ## 16 cores. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=2G,h_vmem=3G,h_fsize=100G; #$ -N step6-salmon_test4.gsk_phaseII; #$ -pe local 16; #$ -o ./logs/salmon_test4.$TASK_ID.txt; #$ -e ./logs/salmon_test4.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:5177,Testability,log,log,5177,"ho ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [joi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:6035,Testability,Log,Logs,6035,"${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:6135,Testability,log,logs,6135,"${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:53:43 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110316; Job name: step6-salmon_test4.gsk_phaseII; Hostname: compute-067; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 16 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/R10001_D2B1WACXX/logs; [1m[2017-03-29 14:56:39.675] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 14:56:39.733] [jointLog] [info] There is 1 library.; [00mterminate called without an active exception; /cm/local/apps/sge/var/spool/compute-067/job_scripts/110316: line 31: 64339 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7456,Testability,log,logs,7456,"ily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7496,Testability,log,logs,7496,"2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:8683,Testability,log,log,8683,"cho ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [join",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:9540,Testability,Log,Logs,9540," ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:9640,Testability,log,logs,9640," ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 23:27:11 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110632; Job name: step6-salmon_test5.gsk_phaseII; Hostname: compute-066; Task id: ; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/R10001_D2B1WACXX/logs; [1m[2017-03-29 23:59:18.699] [jointLog] [info] parsing read library format; [00m[1m[2017-03-29 23:59:18.721] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-30 00:43:17.278] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-30 00:43:17.237] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-30 00:43:17.273] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-30 02:37:54.437] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-30 03:48:21.310] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-30 04:20:16.735] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-30 04:54:34.486] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-30 04:54:34.487] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-30 05:09:36.706] [stderrLog] [info] Done loading index; [00m[1m[2017-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2601,Availability,echo,echo,2601,"d2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2636,Availability,echo,echo,2636,"r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2665,Availability,echo,echo,2665,"r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2687,Availability,echo,echo,2687,"r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2713,Availability,echo,echo,2713,"r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2743,Availability,echo,echo,2743,"r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2773,Availability,echo,echo,2773,"r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:3661,Availability,echo,echo,3661,"USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENO",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78007,Availability,echo,echo,78007," 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78042,Availability,echo,echo,78042,"on; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78071,Availability,echo,echo,78071,"on; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78093,Availability,echo,echo,78093,"on; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78119,Availability,echo,echo,78119,"on; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78149,Availability,echo,echo,78149,"on; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78179,Availability,echo,echo,78179,"on; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79074,Availability,echo,echo,79074," echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipelin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:762,Deployability,pipeline,pipeline,762,"Hi again,. Together with Mark Miller (JHPCE's admin) we ran more tests. We verified that `Salmon` does indeed use at least 2 threads so now I'm always requesting 2 from SGE. We also noticed that when the jobs fail due to memory (the actual issue in this thread) they fail after the `There is 1 library` message as shown below for one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:3339,Deployability,pipeline,pipeline,3339,"d; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; re",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:3438,Deployability,pipeline,pipeline,3438,"eII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:3886,Deployability,pipeline,pipeline,3886,"heimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:4392,Deployability,pipeline,pipeline,4392,"dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/li",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:4577,Deployability,pipeline,pipeline,4577,"} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:4752,Deployability,pipeline,pipeline,4752," cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:4917,Deployability,pipeline,pipeline,4917,"Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:5085,Deployability,pipeline,pipeline,5085,""", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:5243,Deployability,pipeline,pipeline,5243,"07 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:5414,Deployability,pipeline,pipeline,5414,"mily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/liebe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:5575,Deployability,pipeline,pipeline,5575,"y); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:5739,Deployability,pipeline,pipeline,5739,"tory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/d",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:5885,Deployability,pipeline,pipeline,5885,"); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:6063,Deployability,pipeline,pipeline,6063," or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:6231,Deployability,pipeline,pipeline,6231," or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:6402,Deployability,pipeline,pipeline,6402,"ory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/aja",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:6563,Deployability,pipeline,pipeline,6563," directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:6737,Deployability,pipeline,pipeline,6737,"(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:6901,Deployability,pipeline,pipeline,6901,"ieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:7068,Deployability,pipeline,pipeline,7068,"1/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:7217,Deployability,pipeline,pipeline,7217,"eber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_lin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:7385,Deployability,pipeline,pipeline,7385,"irectory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Sal",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:7543,Deployability,pipeline,pipeline,7543,"T (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:7704,Deployability,pipeline,pipeline,7704,"o such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeli",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:7855,Deployability,pipeline,pipeline,7855,"fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8019,Deployability,pipeline,pipeline,8019,") = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8173,Deployability,pipeline,pipeline,8173,"b"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fff",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8330,Deployability,pipeline,pipeline,8330,"RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8469,Deployability,pipeline,pipeline,8469,"f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8532,Deployability,install,install,8532,"ipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8664,Deployability,pipeline,pipeline,8664,"OENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8727,Deployability,install,install,8727,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8849,Deployability,pipeline,pipeline,8849,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:8912,Deployability,install,install,8912,".so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/sha",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9037,Deployability,pipeline,pipeline,9037,"fe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOEN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9100,Deployability,install,install,9100,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9215,Deployability,pipeline,pipeline,9215,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9278,Deployability,install,install,9278,"; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9406,Deployability,pipeline,pipeline,9406,"4/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9469,Deployability,install,install,9469,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9587,Deployability,pipeline,pipeline,9587,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9650,Deployability,install,install,9650,"/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9771,Deployability,pipeline,pipeline,9771,"b/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:9834,Deployability,install,install,9834,"_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=19, ...}) = 0; open(""/jhpce/shared/community/core/j",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:16618,Deployability,pipeline,pipeline,16618,"ENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=100319, ...}) = 0; mmap(NULL, 100319, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]\300\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x350dc00000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x350dc00000; mprotect(0x350dc17000, 2097152, PROT_NONE) = 0; mmap(0x350de17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x350de17000; mmap(0x350de19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x350de19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_si",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:17161,Deployability,pipeline,pipeline,17161,"40]\300\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x350dc00000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x350dc00000; mprotect(0x350dc17000, 2097152, PROT_NONE) = 0; mmap(0x350de17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x350de17000; mmap(0x350de19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x350de19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:17820,Deployability,pipeline,pipeline,17820,"-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:18455,Deployability,pipeline,pipeline,18455,"\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:18995,Deployability,pipeline,pipeline,18995,"2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:19535,Deployability,pipeline,pipeline,19535,"fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/lib",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:20170,Deployability,pipeline,pipeline,20170,"2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDO",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:20328,Deployability,pipeline,pipeline,20328,"0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:20489,Deployability,pipeline,pipeline,20489,"x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\201\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:21907,Deployability,pipeline,pipeline,21907,"tory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\201\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x350d800000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x350d800000; mprotect(0x350d98a000, 2097152, PROT_NONE) = 0; mmap(0x350db8a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x350db8a000; mmap(0x350db8f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x350db8f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:22066,Deployability,pipeline,pipeline,22066,"1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\201\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x350d800000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x350d800000; mprotect(0x350d98a000, 2097152, PROT_NONE) = 0; mmap(0x350db8a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x350db8a000; mmap(0x350db8f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x350db8f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:22228,Deployability,pipeline,pipeline,22228,"hared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\201\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x350d800000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x350d800000; mprotect(0x350d98a000, 2097152, PROT_NONE) = 0; mmap(0x350db8a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x350db8a000; mmap(0x350db8f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x350db8f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libdl.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340\r@\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFRE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:29396,Deployability,pipeline,pipeline,29396,"NULL, msg_iov(1)=[{""HTTP/1.1 200 OK\r\nServer: GitHub.""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 512; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""Accept-Encoding\r\nX-Fastly-Reques""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 125; epoll_wait(5, {}, 128, 0) = 0; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""Server: GitHub.com\r\nContent-Type""..., 1024}], msg_controllen=0, msg_flags=0}, 0) = 0; epoll_wait(5, {}, 128, 0) = 0; close(6) = 0; futex(0x7fffbee4813c, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, 0x7fffbee48110, 4) = 1; futex(0x7fffbee48110, FUTEX_WAKE_PRIVATE, 1) = 1; futex(0x7fffbedff9d0, FUTEX_WAIT, 32682, NULL) = 0; munmap(0x7fff7edff000, 1073745920) = 0; close(5) = 0; close(3) = 0; close(4) = 0; write(2, ""Version Info: This is the most r""..., 57Version Info: This is the most recent version of Salmon.; ) = 57; write(2, ""### salmon (mapping-based) v0.8.""..., 594### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:34186,Deployability,pipeline,pipeline,34186,"P_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 32683; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff3e5e9ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 32684; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 32685; clock_gettime(CLOCK_REALTIME, {1491423877, 940907968}) = 0; gettid() = 32681; clock_gettime(CLOCK_REALTIME, {1491423877, 941299576}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:34372,Deployability,pipeline,pipeline,34372,"ENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 32684; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 32685; clock_gettime(CLOCK_REALTIME, {1491423877, 940907968}) = 0; gettid() = 32681; clock_gettime(CLOCK_REALTIME, {1491423877, 941299576}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 29360128, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb600000; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb200000; mmap(NULL, 117440512, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb4200000; [1m[2017-04-05 16:24:37.940] [jointLog] [info] parsing read library format; [00m[1m[2017-04-05 16:24:37.941] [jointLog] [info] There is 1 library.; [00mmmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb3e00000; open(""/sys/devices/system/cpu/online"", O_RDONLY|O_CLOEXEC) = 4; read(4, ""0-19\n"", 8192) = 5; close(4) = 0; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:40756,Deployability,pipeline,pipeline,40756,"7ffc3e5de9d0) = 32696; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbbe5dd000; mprotect(0x7ffbbe5dd000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffbfe5dced0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffbfe5dd9d0, tls=0x7ffbfe5dd700, child_tidptr=0x7ffbfe5dd9d0) = 32697; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:37.940] [joint""..., 136) = 136; tgkill(32681, 32681, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```; and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:41262,Deployability,pipeline,pipeline,41262,"mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:37.940] [joint""..., 136) = 136; tgkill(32681, 32681, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```; and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/li",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:41447,Deployability,pipeline,pipeline,41447,"terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:37.940] [joint""..., 136) = 136; tgkill(32681, 32681, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```; and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:41622,Deployability,pipeline,pipeline,41622,", 32681, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```; and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:41787,Deployability,pipeline,pipeline,41787,"Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:41955,Deployability,pipeline,pipeline,41955,""", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:42113,Deployability,pipeline,pipeline,42113,"07 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:42284,Deployability,pipeline,pipeline,42284,"mily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/liebe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:42445,Deployability,pipeline,pipeline,42445,"y); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:42609,Deployability,pipeline,pipeline,42609,"tory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/d",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:42755,Deployability,pipeline,pipeline,42755,"); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:42933,Deployability,pipeline,pipeline,42933," or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:43101,Deployability,pipeline,pipeline,43101," or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:43272,Deployability,pipeline,pipeline,43272,"ory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/aja",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:43433,Deployability,pipeline,pipeline,43433," directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:43607,Deployability,pipeline,pipeline,43607,"(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:43771,Deployability,pipeline,pipeline,43771,"ieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:43938,Deployability,pipeline,pipeline,43938,"1/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:44087,Deployability,pipeline,pipeline,44087,"eber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_lin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:44255,Deployability,pipeline,pipeline,44255,"irectory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Sal",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:44413,Deployability,pipeline,pipeline,44413,"T (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:44574,Deployability,pipeline,pipeline,44574,"o such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeli",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:44725,Deployability,pipeline,pipeline,44725,"fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:44889,Deployability,pipeline,pipeline,44889,") = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45043,Deployability,pipeline,pipeline,45043,"b"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fff",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45200,Deployability,pipeline,pipeline,45200,"RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45339,Deployability,pipeline,pipeline,45339,"f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45402,Deployability,install,install,45402,"ipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45534,Deployability,pipeline,pipeline,45534,"OENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45597,Deployability,install,install,45597,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45719,Deployability,pipeline,pipeline,45719,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45782,Deployability,install,install,45782,".so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/sha",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45907,Deployability,pipeline,pipeline,45907,"fe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOEN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:45970,Deployability,install,install,45970,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46085,Deployability,pipeline,pipeline,46085,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46148,Deployability,install,install,46148,"; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46276,Deployability,pipeline,pipeline,46276,"4/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46339,Deployability,install,install,46339,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46457,Deployability,pipeline,pipeline,46457,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46520,Deployability,install,install,46520,"/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46641,Deployability,pipeline,pipeline,46641,"b/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:46704,Deployability,install,install,46704,"_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=19, ...}) = 0; open(""/jhpce/shared/community/core/j",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:53490,Deployability,pipeline,pipeline,53490,"T (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=101124, ...}) = 0; mmap(NULL, 101124, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]\200\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x3bce800000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce800000; mprotect(0x3bce817000, 2097152, PROT_NONE) = 0; mmap(0x3bcea17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3bcea17000; mmap(0x3bcea19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bcea19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_si",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:54033,Deployability,pipeline,pipeline,54033,"]\200\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x3bce800000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce800000; mprotect(0x3bce817000, 2097152, PROT_NONE) = 0; mmap(0x3bcea17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3bcea17000; mmap(0x3bcea19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bcea19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:54692,Deployability,pipeline,pipeline,54692,"-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:55327,Deployability,pipeline,pipeline,55327,"\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:55867,Deployability,pipeline,pipeline,55867,"2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:56407,Deployability,pipeline,pipeline,56407,"fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/lib",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:57042,Deployability,pipeline,pipeline,57042,"2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDO",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:57200,Deployability,pipeline,pipeline,57200,"0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:57361,Deployability,pipeline,pipeline,57361,"x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755,",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:58778,Deployability,pipeline,pipeline,58778,"ctory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x3bce400000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce400000; mprotect(0x3bce58a000, 2097152, PROT_NONE) = 0; mmap(0x3bce78a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3bce78a000; mmap(0x3bce78f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bce78f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:58937,Deployability,pipeline,pipeline,58937,"-1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x3bce400000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce400000; mprotect(0x3bce58a000, 2097152, PROT_NONE) = 0; mmap(0x3bce78a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3bce78a000; mmap(0x3bce78f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bce78f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:59099,Deployability,pipeline,pipeline,59099,"shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x3bce400000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce400000; mprotect(0x3bce58a000, 2097152, PROT_NONE) = 0; mmap(0x3bce78a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3bce78a000; mmap(0x3bce78f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bce78f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libdl.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340\r\300\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:66162,Deployability,pipeline,pipeline,66162,"NULL, msg_iov(1)=[{""HTTP/1.1 200 OK\r\nServer: GitHub.""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 512; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""Accept-Encoding\r\nX-Fastly-Reques""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 125; epoll_wait(5, {}, 128, 0) = 0; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""Server: GitHub.com\r\nContent-Type""..., 1024}], msg_controllen=0, msg_flags=0}, 0) = 0; epoll_wait(5, {}, 128, 0) = 0; close(6) = 0; futex(0x7fffbee4613c, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, 0x7fffbee46110, 2) = 1; futex(0x7fffbee46110, FUTEX_WAKE_PRIVATE, 1) = 1; futex(0x7fffbedff9d0, FUTEX_WAIT, 10739, NULL) = 0; munmap(0x7fff7edff000, 1073745920) = 0; close(5) = 0; close(3) = 0; close(4) = 0; write(2, ""Version Info: This is the most r""..., 57Version Info: This is the most recent version of Salmon.; ) = 57; write(2, ""### salmon (mapping-based) v0.8.""..., 594### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:70962,Deployability,pipeline,pipeline,70962,"P_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 10740; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff3e5e9ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 10741; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 10742; clock_gettime(CLOCK_REALTIME, {1491423878, 504035343}) = 0; gettid() = 10693; clock_gettime(CLOCK_REALTIME, {1491423878, 507735356}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:71148,Deployability,pipeline,pipeline,71148,"ENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 10741; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 10742; clock_gettime(CLOCK_REALTIME, {1491423878, 504035343}) = 0; gettid() = 10693; clock_gettime(CLOCK_REALTIME, {1491423878, 507735356}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, [1m[2017-04-05 16:24:38.504] [jointLog] [info] parsing read library format; [00m[1m[2017-04-05 16:24:38.507] [jointLog] [info] There is 1 library.; [00m""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 29360128, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb600000; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb200000; mmap(NULL, 117440512, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb4200000; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb3e00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78745,Deployability,pipeline,pipeline,78745," #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Soft",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78844,Deployability,pipeline,pipeline,78844,"eII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79219,Deployability,pipeline,pipeline,79219,"ILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79725,Deployability,pipeline,pipeline,79725,"cl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/li",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79910,Deployability,pipeline,pipeline,79910,"x_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:80085,Deployability,pipeline,pipeline,80085,"12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:80250,Deployability,pipeline,pipeline,80250,"Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:80418,Deployability,pipeline,pipeline,80418,""", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:80576,Deployability,pipeline,pipeline,80576,"07 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:80747,Deployability,pipeline,pipeline,80747,"mily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/liebe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:80908,Deployability,pipeline,pipeline,80908,"y); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:81072,Deployability,pipeline,pipeline,81072,"tory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/d",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:81218,Deployability,pipeline,pipeline,81218,"); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:81396,Deployability,pipeline,pipeline,81396," or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:81564,Deployability,pipeline,pipeline,81564," or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:81735,Deployability,pipeline,pipeline,81735,"ory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/aja",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:81896,Deployability,pipeline,pipeline,81896," directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:82070,Deployability,pipeline,pipeline,82070,"(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:82234,Deployability,pipeline,pipeline,82234,"ieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:82401,Deployability,pipeline,pipeline,82401,"1/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:82550,Deployability,pipeline,pipeline,82550,"eber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_lin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:82718,Deployability,pipeline,pipeline,82718,"irectory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Sal",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:82876,Deployability,pipeline,pipeline,82876,"T (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83037,Deployability,pipeline,pipeline,83037,"o such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeli",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83188,Deployability,pipeline,pipeline,83188,"fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83352,Deployability,pipeline,pipeline,83352,") = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83506,Deployability,pipeline,pipeline,83506,"b"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fff",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83663,Deployability,pipeline,pipeline,83663,"RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83802,Deployability,pipeline,pipeline,83802,"f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83865,Deployability,install,install,83865,"ipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:83997,Deployability,pipeline,pipeline,83997,"OENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84060,Deployability,install,install,84060,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84182,Deployability,pipeline,pipeline,84182,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84245,Deployability,install,install,84245,".so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/sha",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84370,Deployability,pipeline,pipeline,84370,"fe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOEN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84433,Deployability,install,install,84433,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84548,Deployability,pipeline,pipeline,84548,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84611,Deployability,install,install,84611,"; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84739,Deployability,pipeline,pipeline,84739,"4/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84802,Deployability,install,install,84802,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84920,Deployability,pipeline,pipeline,84920,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:84983,Deployability,install,install,84983,"/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:85104,Deployability,pipeline,pipeline,85104,"b/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:85167,Deployability,install,install,85167,"_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=19, ...}) = 0; open(""/jhpce/shared/community/core/j",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:91950,Deployability,pipeline,pipeline,91950,"OENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=100319, ...}) = 0; mmap(NULL, 100319, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]@\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x37e2400000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x37e2400000; mprotect(0x37e2417000, 2097152, PROT_NONE) = 0; mmap(0x37e2617000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x37e2617000; mmap(0x37e2619000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x37e2619000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_si",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:92493,Deployability,pipeline,pipeline,92493,"340]@\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x37e2400000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x37e2400000; mprotect(0x37e2417000, 2097152, PROT_NONE) = 0; mmap(0x37e2617000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x37e2617000; mmap(0x37e2619000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x37e2619000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:93152,Deployability,pipeline,pipeline,93152,"-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:93787,Deployability,pipeline,pipeline,93787,"\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:94327,Deployability,pipeline,pipeline,94327,"2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:94867,Deployability,pipeline,pipeline,94867,"fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/lib",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:95502,Deployability,pipeline,pipeline,95502,"2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDO",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:95660,Deployability,pipeline,pipeline,95660,"0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:95821,Deployability,pipeline,pipeline,95821,"x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\1\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:97239,Deployability,pipeline,pipeline,97239,"tory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\1\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x37e2000000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x37e2000000; mprotect(0x37e218a000, 2097152, PROT_NONE) = 0; mmap(0x37e238a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x37e238a000; mmap(0x37e238f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x37e238f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:97398,Deployability,pipeline,pipeline,97398,"1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\1\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x37e2000000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x37e2000000; mprotect(0x37e218a000, 2097152, PROT_NONE) = 0; mmap(0x37e238a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x37e238a000; mmap(0x37e238f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x37e238f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:97560,Deployability,pipeline,pipeline,97560,"hared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356\1\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x37e2000000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x37e2000000; mprotect(0x37e218a000, 2097152, PROT_NONE) = 0; mmap(0x37e238a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x37e238a000; mmap(0x37e238f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x37e238f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libdl.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340\r\300\3417\0\0\0""..., 832) = 832; fstat(3, {st_mode=S",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:104744,Deployability,pipeline,pipeline,104744,"NULL, msg_iov(1)=[{""HTTP/1.1 200 OK\r\nServer: GitHub.""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 512; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""ccept-Encoding\r\nX-Fastly-Request""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 124; epoll_wait(5, {}, 128, 0) = 0; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""Server: GitHub.com\r\nContent-Type""..., 1024}], msg_controllen=0, msg_flags=0}, 0) = 0; epoll_wait(5, {}, 128, 0) = 0; close(6) = 0; futex(0x7fffbee4413c, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, 0x7fffbee44110, 4) = 1; futex(0x7fffbee44110, FUTEX_WAKE_PRIVATE, 1) = 1; futex(0x7fffbedff9d0, FUTEX_WAIT, 51997, NULL) = 0; munmap(0x7fff7edff000, 1073745920) = 0; close(5) = 0; close(3) = 0; close(4) = 0; write(2, ""Version Info: This is the most r""..., 57Version Info: This is the most recent version of Salmon.; ) = 57; write(2, ""### salmon (mapping-based) v0.8.""..., 594### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:109544,Deployability,pipeline,pipeline,109544,"P_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 51998; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff3e5e9ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 51999; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 52000; clock_gettime(CLOCK_REALTIME, {1491424815, 587265106}) = 0; gettid() = 51996; clock_gettime(CLOCK_REALTIME, {1491424815, 588110132}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:109730,Deployability,pipeline,pipeline,109730,"ENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 51999; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 52000; clock_gettime(CLOCK_REALTIME, {1491424815, 587265106}) = 0; gettid() = 51996; clock_gettime(CLOCK_REALTIME, {1491424815, 588110132}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, [1m[2017-04-05 16:40:15.587] [jointLog] [info] parsing read library format; [00m[1m[2017-04-05 16:40:15.588] [jointLog] [info] There is 1 library.; [00m""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 29360128, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb600000; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb200000; mmap(NULL, 117440512, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb4200000; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb3e00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:121719,Deployability,pipeline,pipeline,121719,"7ff8be5d09d0) = 52025; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ff83e5cf000; mprotect(0x7ff83e5cf000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ff87e5ceed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff87e5cf9d0, tls=0x7ff87e5cf700, child_tidptr=0x7ff87e5cf9d0) = 52026; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:40:15.587] [joint""..., 136) = 136; tgkill(51996, 51996, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:122225,Deployability,pipeline,pipeline,122225,"mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:40:15.587] [joint""..., 136) = 136; tgkill(51996, 51996, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/li",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:122410,Deployability,pipeline,pipeline,122410,"terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:40:15.587] [joint""..., 136) = 136; tgkill(51996, 51996, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:122585,Deployability,pipeline,pipeline,122585,", 51996, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:122750,Deployability,pipeline,pipeline,122750,"Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:122918,Deployability,pipeline,pipeline,122918,""", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/E",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:123076,Deployability,pipeline,pipeline,123076,"07 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:123247,Deployability,pipeline,pipeline,123247,"mily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/liebe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:123408,Deployability,pipeline,pipeline,123408,"y); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:123572,Deployability,pipeline,pipeline,123572,"tory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/d",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:123718,Deployability,pipeline,pipeline,123718,"); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/l",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:123896,Deployability,pipeline,pipeline,123896," or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:124064,Deployability,pipeline,pipeline,124064," or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:124235,Deployability,pipeline,pipeline,124235,"ory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/aja",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:124396,Deployability,pipeline,pipeline,124396," directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:124570,Deployability,pipeline,pipeline,124570,"(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:124734,Deployability,pipeline,pipeline,124734,"ieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipe",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:124901,Deployability,pipeline,pipeline,124901,"1/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softwa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:125050,Deployability,pipeline,pipeline,125050,"eber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_lin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:125218,Deployability,pipeline,pipeline,125218,"irectory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Sal",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:125376,Deployability,pipeline,pipeline,125376,"T (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:125537,Deployability,pipeline,pipeline,125537,"o such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeli",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:125688,Deployability,pipeline,pipeline,125688,"fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory);",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:125852,Deployability,pipeline,pipeline,125852,") = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126006,Deployability,pipeline,pipeline,126006,"b"", {st_mode=S_IFDIR|0775, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fff",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126163,Deployability,pipeline,pipeline,126163,"RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126302,Deployability,pipeline,pipeline,126302,"f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126365,Deployability,install,install,126365,"ipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126497,Deployability,pipeline,pipeline,126497,"OENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126560,Deployability,install,install,126560,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126682,Deployability,pipeline,pipeline,126682,"ile or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126745,Deployability,install,install,126745,".so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/sha",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126870,Deployability,pipeline,pipeline,126870,"fe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOEN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:126933,Deployability,install,install,126933,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127048,Deployability,pipeline,pipeline,127048,"RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127111,Deployability,install,install,127111,"; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127239,Deployability,pipeline,pipeline,127239,"4/bin"", {st_mode=S_IFDIR|0755, st_size=33280, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127302,Deployability,install,install,127302,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127420,Deployability,pipeline,pipeline,127420,"all/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/commu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127483,Deployability,install,install,127483,"/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127604,Deployability,pipeline,pipeline,127604,"b/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:127667,Deployability,install,install,127667,"_x86_64/bin/../../external/install/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../external/install/lib"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/jhpce/shared/community/core/pcre/8.36/lib"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=19, ...}) = 0; open(""/jhpce/shared/community/core/j",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:134453,Deployability,pipeline,pipeline,134453,"T (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=101124, ...}) = 0; mmap(NULL, 101124, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]\200\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x3bce800000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce800000; mprotect(0x3bce817000, 2097152, PROT_NONE) = 0; mmap(0x3bcea17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3bcea17000; mmap(0x3bcea19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bcea19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_si",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:134996,Deployability,pipeline,pipeline,134996,"]\200\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x3bce800000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce800000; mprotect(0x3bce817000, 2097152, PROT_NONE) = 0; mmap(0x3bcea17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3bcea17000; mmap(0x3bcea19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bcea19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:135655,Deployability,pipeline,pipeline,135655,"-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=130728, ...}) = 0; mmap(NULL, 2226056, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfdc3000; mprotect(0x7fffbfde2000, 2097152, PROT_NONE) = 0; mmap(0x7fffbffe2000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0x7fffbffe2000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libtbb.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:136290,Deployability,pipeline,pipeline,136290,"\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\320v\1\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=2271767, ...}) = 0; mmap(NULL, 2500784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbfb60000; mprotect(0x7fffbfbac000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfdac000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4c000) = 0x7fffbfdac000; mmap(0x7fffbfdb0000, 75952, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7fffbfdb0000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:136830,Deployability,pipeline,pipeline,136830,"2_linux_x86_64/bin/../lib/libgomp.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\2405\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=56344, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfb5f000; mmap(NULL, 2151616, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf951000; mprotect(0x7fffbf95e000, 2097152, PROT_NONE) = 0; mmap(0x7fffbfb5e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:137370,Deployability,pipeline,pipeline,137370,"fffbfb5e000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/librt.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 \""\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=50288, ...}) = 0; mmap(NULL, 2132936, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf748000; mprotect(0x7fffbf74f000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf94f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7fffbf94f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/lib",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:138005,Deployability,pipeline,pipeline,138005,"2_linux_x86_64/bin/../lib/libm.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0`>\0\0\0\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0644, st_size=611736, ...}) = 0; mmap(NULL, 2629816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDO",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:138163,Deployability,pipeline,pipeline,138163,"0) = 0x7fffbf4c5000; mprotect(0x7fffbf547000, 2093056, PROT_NONE) = 0; mmap(0x7fffbf746000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:138324,Deployability,pipeline,pipeline,138324,"x81000) = 0x7fffbf746000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libgcc_s.so.1"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\36\0\0\0\0\0\0""..., 832) = 832; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbf4c4000; fstat(3, {st_mode=S_IFREG|0644, st_size=56072, ...}) = 0; mmap(NULL, 2151784, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fffbf2b6000; mprotect(0x7fffbf2c3000, 2097152, PROT_NONE) = 0; mmap(0x7fffbf4c3000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x7fffbf4c3000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755,",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:139741,Deployability,pipeline,pipeline,139741,"ctory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x3bce400000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce400000; mprotect(0x3bce58a000, 2097152, PROT_NONE) = 0; mmap(0x3bce78a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3bce78a000; mmap(0x3bce78f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bce78f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:139900,Deployability,pipeline,pipeline,139900,"-1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x3bce400000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce400000; mprotect(0x3bce58a000, 2097152, PROT_NONE) = 0; mmap(0x3bce78a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3bce78a000; mmap(0x3bce78f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bce78f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or dire",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:140062,Deployability,pipeline,pipeline,140062,"shared/apps/sge/current/lib/linux-x64/libc.so.6"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libc.so.6"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0p\356A\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=1926760, ...}) = 0; mmap(0x3bce400000, 3750152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce400000; mprotect(0x3bce58a000, 2097152, PROT_NONE) = 0; mmap(0x3bce78a000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3bce78a000; mmap(0x3bce78f000, 18696, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bce78f000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../../lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/pcre/8.36/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/jags/4.2.0/lib64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/compiler/gcc/4.4.7/netcdf/4.3.2/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/jhpce/shared/community/core/curl/7.43.0/lib/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/2011.11p1/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libdl.so.2"", O_RDONLY) = -1 ENOENT (No such file or directory); open(""/lib64/libdl.so.2"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340\r\300\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:147073,Deployability,pipeline,pipeline,147073,"31808}}}, 128, 300000) = 1; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""HTTP/1.1 200 OK\r\nServer: GitHub.""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 512; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""ccept-Encoding\r\nX-Fastly-Request""..., 512}], msg_controllen=0, msg_flags=0}, 0) = 124; epoll_wait(5, {}, 128, 0) = 0; recvmsg(6, {msg_name(0)=NULL, msg_iov(1)=[{""Server: GitHub.com\r\nContent-Type""..., 1024}], msg_controllen=0, msg_flags=0}, 0) = 0; epoll_wait(5, {}, 128, 0) = 0; close(6) = 0; futex(0x7fffbee4613c, FUTEX_CMP_REQUEUE_PRIVATE, 1, 2147483647, 0x7fffbee46110, 2) = 1; futex(0x7fffbee46110, FUTEX_WAKE_PRIVATE, 1) = 1; munmap(0x7fff7edff000, 1073745920) = 0; close(5) = 0; close(3) = 0; close(4) = 0; write(2, ""Version Info: This is the most r""..., 57Version Info: This is the most recent version of Salmon.; ) = 57; write(2, ""### salmon (mapping-based) v0.8.""..., 594### salmon (mapping-based) v0.8.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:151863,Deployability,pipeline,pipeline,151863,"P_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 14650; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff3e5e9ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 14651; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 14652; clock_gettime(CLOCK_REALTIME, {1491424829, 790500042}) = 0; gettid() = 14648; clock_gettime(CLOCK_REALTIME, {1491424829, 791313810}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:152049,Deployability,pipeline,pipeline,152049,"ENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff3e5ea9d0, tls=0x7fff3e5ea700, child_tidptr=0x7fff3e5ea9d0) = 14651; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbd200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffebe5e9000; mprotect(0x7ffebe5e9000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffefe5e8ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffefe5e99d0, tls=0x7ffefe5e9700, child_tidptr=0x7ffefe5e99d0) = 14652; clock_gettime(CLOCK_REALTIME, {1491424829, 790500042}) = 0; gettid() = 14648; clock_gettime(CLOCK_REALTIME, {1491424829, 791313810}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 29360128, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb600000; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbb200000; mmap(NULL, 117440512, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb4200000; [1m[2017-04-05 16:40:29.790] [jointLog] [info] parsing read library format; [00m[1m[2017-04-05 16:40:29.791] [jointLog] [info] There is 1 library.; [00mmmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffb3e00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:164700,Deployability,pipeline,pipeline,164700,") = 0; madvise(0x7fffbb600000, 29360128, MADV_DONTNEED) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz"", {st_mode=S_IFREG|0644, st_size=4862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz"", {st_mode=S_IFREG|0644, st_size=4862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz"", {st_mode=S_IFREG|0644, st_size=4862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:164886,Deployability,pipeline,pipeline,164886,"862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz"", {st_mode=S_IFREG|0644, st_size=4862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz"", {st_mode=S_IFREG|0644, st_size=4862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 139950818}",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:165136,Deployability,pipeline,pipeline,165136,"astq/R10002_C29P7ACXX.fastq.gz"", {st_mode=S_IFREG|0644, st_size=4862610444, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 139950818}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:165322,Deployability,pipeline,pipeline,165322,", st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 139950818}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0,",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:165631,Deployability,pipeline,pipeline,165631,"C29P7ACXX_read2.fastq.gz"", {st_mode=S_IFREG|0644, st_size=5004102866, ...}) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 139950818}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffebe5e89d0, tls=0x7ffebe5e8700, child_tidptr=0x7ffebe5e89d0) = 14677; open(""/dcl01/lieber/ajaffe/Emily/RNAs",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:165933,Deployability,pipeline,pipeline,165933,"NAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", {st_mode=S_IFREG|0775, st_size=96, ...}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 139950818}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffebe5e89d0, tls=0x7ffebe5e8700, child_tidptr=0x7ffebe5e89d0) = 14677; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/sa.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424830, 149197282}) = 0; read(4, ""l\n\221\21\0\0\0\0k\n\221\21\373\25\343\20\17\254\r\1\36\27\227\n\37\371\270\4\250\210\307\f""..., 8191) = 8191; mmap(NULL, 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:166583,Deployability,pipeline,pipeline,166583,"est/salmon_0.8.2_index_gencode.v25.transcripts/versionInfo.json"", O_RDONLY) = 4; read(4, ""{\n \""indexVersion\"": 2,\n \""ha""..., 8191) = 96; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 69887706}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; clock_gettime(CLOCK_REALTIME, {1491424830, 139950818}) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/header.json"", O_RDONLY) = 4; read(4, ""{\n \""value0\"": {\n \""Index""..., 8191) = 357; read(4, """", 8191) = 0; close(4) = 0; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffe7e5e8000; mprotect(0x7ffe7e5e8000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffebe5e89d0, tls=0x7ffebe5e8700, child_tidptr=0x7ffebe5e89d0) = 14677; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/sa.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424830, 149197282}) = 0; read(4, ""l\n\221\21\0\0\0\0k\n\221\21\373\25\343\20\17\254\r\1\36\27\227\n\37\371\270\4\250\210\307\f""..., 8191) = 8191; mmap(NULL, 1342177280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e5e8000; munmap(0x7ffe2e5e8000, 1342177280) = 0; mmap(NULL, 1344270336, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e3e9000; munmap(0x7ffe2e3e9000, 94208) = 0; munmap(0x7ffe7e400000, 1998848) = 0; [1m[2017-04-05 16:40:30.149] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-04-05 16:40:30.069] [jointLog] [info] Loading Quasi index; [00m[1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:167601,Deployability,pipeline,pipeline,167601,"pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/sa.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424830, 149197282}) = 0; read(4, ""l\n\221\21\0\0\0\0k\n\221\21\373\25\343\20\17\254\r\1\36\27\227\n\37\371\270\4\250\210\307\f""..., 8191) = 8191; mmap(NULL, 1342177280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e5e8000; munmap(0x7ffe2e5e8000, 1342177280) = 0; mmap(NULL, 1344270336, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e3e9000; munmap(0x7ffe2e3e9000, 94208) = 0; munmap(0x7ffe7e400000, 1998848) = 0; [1m[2017-04-05 16:40:30.149] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-04-05 16:40:30.069] [jointLog] [info] Loading Quasi index; [00m[1m[2017-04-05 16:40:30.139] [jointLog] [info] Loading 32-bit quasi index; [00mread(4, ""\16'w=\r\320m\306\0\35\26\306\0\224\23\270\10\205]D\0|\3!\4c_-\7\310O\2""..., 1178864057) = 1178864057; close(4) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/txpInfo.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424833, 297142816}) = 0; read(4, ""\315\5\3\0\0\0\0\0|\0\0\0\0\0\0\0ENST00000456328.""..., 8191) = 8191; read(4, ""RP4-669L17.8-001|RP4-669L17.8|12""..., 8191) = 8191; read(4, "".2|LINC01128-004|LINC01128|874|l""..., 8191) = 8191; read(4, ""THUMT00000097991.1|AGRN-002|AGRN""..., 8191) = 8191; read(4, ""HUMG00000001412.6|OTTHUMT0000000""..., 8191) = 8191; read(4, ""F3L-007|CPSF3L|1868|protein_codi""..., 8191) = 8191; read(4, ""01413.3|OTTHUMT00000004082.2|AUR""..., 8191) = 8191; read(4, ""UMT00000001363.3|ATAD3A-001|ATAD""..., 8191) = 8191; read(4, ""DK11B-202|CDK11B|2490|protein_co""..., 8191) = 8191; read(4, ""00002763.1|GNB1-002|GNB1|1512|re""..., 8191) = 8191; read(4, ""20-006|FAAP20|569|protein_coding""..., 8191) = 8191; read(4, ""212.1|ENSG00000157881.13|OTTHUMG""..., 8191) = 8191; read(4, ""0563.3|OTTHUMT00000099318.1|LINC""..., 8191) = 8191; rea",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:170255,Deployability,install,installed,170255,"NC00337-001|LINC00337|1302|l""..., 8191) = 8191; read(4, ""\0\0\0\0ENST00000377728.7|ENSG000001""..., 8191) = 8191; read(4, ""|z\0\0\0\0\0\0\0ENST00000470648.5|ENSG0""..., 8191) = 8191; read(4, [1m[2017-04-05 16:40:33.297] [stderrLog] [info] Loading Transcript Info ; [00mread(4, ""35271.1|ENSG00000234546.3|OTTHUM""..., 8191) = 8191; read(4, ""00005018.1|UBE4B-003|UBE4B|2299|""..., 8191) = 8191; read(4, ""ding|x\0\0\0\0\0\0\0ENST00000468348.1|E""..., 8191) = 8191; read(4, ""005558.1|MTOR-001|MTOR|8677|prot""..., 8191) = 8191; read(4, ""rotein_coding|x\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""|\177\0\0\0\0\0\0\0ENST00000439324.2|ENSG0""..., 8191) = 8191; read(4, ""36.1|OTTHUMG00000009500.2|OTTHUM""..., 8191) = 8191; read(4, ""G00000175147.11|OTTHUMG000000020""..., 8191) = 8191; read(4, ""rotein_coding|}\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""ed_transcript|z\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""1|549|processed_transcript|{\0\0\0\0""..., 8191) = 8191; read(4, ""0006250.3|CROCC-002|CROCC|3931|p""..., 8191) = 8191; read(4, ""nscript|y\0\0\0\0\0\0\0ENST00000466151.""..., 8191) = 8191; read(4, ""R4|536|processed_transcript|q\0\0\0""..., 8191) = 8191; read(4, "".13|OTTHUMG00000002712.2|OTTHUMT""..., 8191) = 8191; read(4, ""0375079.6|ENSG00000158816.15|OTT""..., 8191) = 8191; ```. (First 500 lines, job is running well). ## Next steps. We are hoping that this info will give you an idea on what could be the source of the problem. Maybe `Salmon` requires a newer version of its dependencies than those that we have installed at JHPCE. . Under a scenario where `Salmon` doesn't change (and it's not a dependency issue), we could try running `Salmon` with increasing amounts of memory until we find a point where it doesn't fail for any of our samples (fastq files go to to 13 GB per read in a read pair, so 26 GB total for this particular dataset). We know that 90 GB total memory works, but like I've said before it's a pretty inefficient use of our cluster resources. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:40285,Energy Efficiency,allocate,allocate,40285,"E_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffcfe5e19d0, tls=0x7ffcfe5e1700, child_tidptr=0x7ffcfe5e19d0) = 32693; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffc7e5e0000; mprotect(0x7ffc7e5e0000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffcbe5dfed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffcbe5e09d0, tls=0x7ffcbe5e0700, child_tidptr=0x7ffcbe5e09d0) = 32694; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffc3e5df000; mprotect(0x7ffc3e5df000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffc7e5deed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffc7e5df9d0, tls=0x7ffc7e5df700, child_tidptr=0x7ffc7e5df9d0) = 32695; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbfe5de000; mprotect(0x7ffbfe5de000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffc3e5dded0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffc3e5de9d0, tls=0x7ffc3e5de700, child_tidptr=0x7ffc3e5de9d0) = 32696; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbbe5dd000; mprotect(0x7ffbbe5dd000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffbfe5dced0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffbfe5dd9d0, tls=0x7ffbfe5dd700, child_tidptr=0x7ffbfe5dd9d0) = 32697; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:76954,Energy Efficiency,allocate,allocate,76954,"E_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffcfe5e19d0, tls=0x7ffcfe5e1700, child_tidptr=0x7ffcfe5e19d0) = 10750; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffc7e5e0000; mprotect(0x7ffc7e5e0000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffcbe5dfed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffcbe5e09d0, tls=0x7ffcbe5e0700, child_tidptr=0x7ffcbe5e09d0) = 10751; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffc3e5df000; mprotect(0x7ffc3e5df000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffc7e5deed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffc7e5df9d0, tls=0x7ffc7e5df700, child_tidptr=0x7ffc7e5df9d0) = 10752; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbfe5de000; mprotect(0x7ffbfe5de000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffc3e5dded0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffc3e5de9d0, tls=0x7ffc3e5de700, child_tidptr=0x7ffc3e5de9d0) = 10753; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbbe5dd000; mprotect(0x7ffbbe5dd000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffbfe5dced0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffbfe5dd9d0, tls=0x7ffbfe5dd700, child_tidptr=0x7ffbfe5dd9d0) = 10754; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:77455,Energy Efficiency,allocate,allocate,77455,"; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbbe5dd000; mprotect(0x7ffbbe5dd000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffbfe5dced0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffbfe5dd9d0, tls=0x7ffbfe5dd700, child_tidptr=0x7ffbfe5dd9d0) = 10754; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:121248,Energy Efficiency,allocate,allocate,121248,"E_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff97e5d39d0, tls=0x7ff97e5d3700, child_tidptr=0x7ff97e5d39d0) = 52022; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ff8fe5d2000; mprotect(0x7ff8fe5d2000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ff93e5d1ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff93e5d29d0, tls=0x7ff93e5d2700, child_tidptr=0x7ff93e5d29d0) = 52023; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ff8be5d1000; mprotect(0x7ff8be5d1000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ff8fe5d0ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff8fe5d19d0, tls=0x7ff8fe5d1700, child_tidptr=0x7ff8fe5d19d0) = 52024; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ff87e5d0000; mprotect(0x7ff87e5d0000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ff8be5cfed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff8be5d09d0, tls=0x7ff8be5d0700, child_tidptr=0x7ff8be5d09d0) = 52025; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ff83e5cf000; mprotect(0x7ff83e5cf000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ff87e5ceed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff87e5cf9d0, tls=0x7ff87e5cf700, child_tidptr=0x7ff87e5cf9d0) = 52026; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:303,Integrability,message,message,303,"Hi again,. Together with Mark Miller (JHPCE's admin) we ran more tests. We verified that `Salmon` does indeed use at least 2 threads so now I'm always requesting 2 from SGE. We also noticed that when the jobs fail due to memory (the actual issue in this thread) they fail after the `There is 1 library` message as shown below for one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:170218,Integrability,depend,dependencies,170218,"NC00337-001|LINC00337|1302|l""..., 8191) = 8191; read(4, ""\0\0\0\0ENST00000377728.7|ENSG000001""..., 8191) = 8191; read(4, ""|z\0\0\0\0\0\0\0ENST00000470648.5|ENSG0""..., 8191) = 8191; read(4, [1m[2017-04-05 16:40:33.297] [stderrLog] [info] Loading Transcript Info ; [00mread(4, ""35271.1|ENSG00000234546.3|OTTHUM""..., 8191) = 8191; read(4, ""00005018.1|UBE4B-003|UBE4B|2299|""..., 8191) = 8191; read(4, ""ding|x\0\0\0\0\0\0\0ENST00000468348.1|E""..., 8191) = 8191; read(4, ""005558.1|MTOR-001|MTOR|8677|prot""..., 8191) = 8191; read(4, ""rotein_coding|x\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""|\177\0\0\0\0\0\0\0ENST00000439324.2|ENSG0""..., 8191) = 8191; read(4, ""36.1|OTTHUMG00000009500.2|OTTHUM""..., 8191) = 8191; read(4, ""G00000175147.11|OTTHUMG000000020""..., 8191) = 8191; read(4, ""rotein_coding|}\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""ed_transcript|z\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""1|549|processed_transcript|{\0\0\0\0""..., 8191) = 8191; read(4, ""0006250.3|CROCC-002|CROCC|3931|p""..., 8191) = 8191; read(4, ""nscript|y\0\0\0\0\0\0\0ENST00000466151.""..., 8191) = 8191; read(4, ""R4|536|processed_transcript|q\0\0\0""..., 8191) = 8191; read(4, "".13|OTTHUMG00000002712.2|OTTHUMT""..., 8191) = 8191; read(4, ""0375079.6|ENSG00000158816.15|OTT""..., 8191) = 8191; ```. (First 500 lines, job is running well). ## Next steps. We are hoping that this info will give you an idea on what could be the source of the problem. Maybe `Salmon` requires a newer version of its dependencies than those that we have installed at JHPCE. . Under a scenario where `Salmon` doesn't change (and it's not a dependency issue), we could try running `Salmon` with increasing amounts of memory until we find a point where it doesn't fail for any of our samples (fastq files go to to 13 GB per read in a read pair, so 26 GB total for this particular dataset). We know that 90 GB total memory works, but like I've said before it's a pretty inefficient use of our cluster resources. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:170340,Integrability,depend,dependency,170340,"NC00337-001|LINC00337|1302|l""..., 8191) = 8191; read(4, ""\0\0\0\0ENST00000377728.7|ENSG000001""..., 8191) = 8191; read(4, ""|z\0\0\0\0\0\0\0ENST00000470648.5|ENSG0""..., 8191) = 8191; read(4, [1m[2017-04-05 16:40:33.297] [stderrLog] [info] Loading Transcript Info ; [00mread(4, ""35271.1|ENSG00000234546.3|OTTHUM""..., 8191) = 8191; read(4, ""00005018.1|UBE4B-003|UBE4B|2299|""..., 8191) = 8191; read(4, ""ding|x\0\0\0\0\0\0\0ENST00000468348.1|E""..., 8191) = 8191; read(4, ""005558.1|MTOR-001|MTOR|8677|prot""..., 8191) = 8191; read(4, ""rotein_coding|x\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""|\177\0\0\0\0\0\0\0ENST00000439324.2|ENSG0""..., 8191) = 8191; read(4, ""36.1|OTTHUMG00000009500.2|OTTHUM""..., 8191) = 8191; read(4, ""G00000175147.11|OTTHUMG000000020""..., 8191) = 8191; read(4, ""rotein_coding|}\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""ed_transcript|z\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""1|549|processed_transcript|{\0\0\0\0""..., 8191) = 8191; read(4, ""0006250.3|CROCC-002|CROCC|3931|p""..., 8191) = 8191; read(4, ""nscript|y\0\0\0\0\0\0\0ENST00000466151.""..., 8191) = 8191; read(4, ""R4|536|processed_transcript|q\0\0\0""..., 8191) = 8191; read(4, "".13|OTTHUMG00000002712.2|OTTHUMT""..., 8191) = 8191; read(4, ""0375079.6|ENSG00000158816.15|OTT""..., 8191) = 8191; ```. (First 500 lines, job is running well). ## Next steps. We are hoping that this info will give you an idea on what could be the source of the problem. Maybe `Salmon` requires a newer version of its dependencies than those that we have installed at JHPCE. . Under a scenario where `Salmon` doesn't change (and it's not a dependency issue), we could try running `Salmon` with increasing amounts of memory until we find a point where it doesn't fail for any of our samples (fastq files go to to 13 GB per read in a read pair, so 26 GB total for this particular dataset). We know that 90 GB total memory works, but like I've said before it's a pretty inefficient use of our cluster resources. Best,; Leo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:1180,Performance,Load,Loading,1180," noticed that when the jobs fail due to memory (the actual issue in this thread) they fail after the `There is 1 library` message as shown below for one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:15748,Performance,cache,cache,15748,"size=7, ...}) = 0; open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=100319, ...}) = 0; mmap(NULL, 100319, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]\300\r5\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x350dc00000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x350dc00000; mprotect(0x350dc17000, 2097152, PROT_NONE) = 0; mmap(0x350de17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x350de17000; mmap(0x350de19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x350de19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) =",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:52618,Performance,cache,cache,52618,"size=7, ...}) = 0; open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=101124, ...}) = 0; mmap(NULL, 101124, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]\200\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x3bce800000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce800000; mprotect(0x3bce817000, 2097152, PROT_NONE) = 0; mmap(0x3bcea17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3bcea17000; mmap(0x3bcea19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bcea19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:91081,Performance,cache,cache,91081,"size=7, ...}) = 0; open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=100319, ...}) = 0; mmap(NULL, 100319, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]@\3427\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x37e2400000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x37e2400000; mprotect(0x37e2417000, 2097152, PROT_NONE) = 0; mmap(0x37e2617000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x37e2617000; mmap(0x37e2619000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x37e2619000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832) = ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:133581,Performance,cache,cache,133581,"size=7, ...}) = 0; open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/cm/shared/apps/sge/current/lib/linux-x64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/cm/shared/apps/sge/current/lib/linux-x64"", {st_mode=S_IFDIR|0755, st_size=7, ...}) = 0; open(""/etc/ld.so.cache"", O_RDONLY) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=101124, ...}) = 0; mmap(NULL, 101124, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fffbffe4000; close(3) = 0; open(""/lib64/libpthread.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\340]\200\316;\0\0\0""..., 832) = 832; fstat(3, {st_mode=S_IFREG|0755, st_size=145896, ...}) = 0; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbffe3000; mmap(0x3bce800000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3bce800000; mprotect(0x3bce817000, 2097152, PROT_NONE) = 0; mmap(0x3bcea17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3bcea17000; mmap(0x3bcea19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3bcea19000; close(3) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/liblzma.so.0"", O_RDONLY) = 3; read(3, ""\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0 %\0\0\0\0\0\0""..., 832)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:167252,Performance,Load,Loading,167252," 4096, PROT_NONE) = 0; clone(child_stack=0x7ffebe5e7ed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffebe5e89d0, tls=0x7ffebe5e8700, child_tidptr=0x7ffebe5e89d0) = 14677; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/sa.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424830, 149197282}) = 0; read(4, ""l\n\221\21\0\0\0\0k\n\221\21\373\25\343\20\17\254\r\1\36\27\227\n\37\371\270\4\250\210\307\f""..., 8191) = 8191; mmap(NULL, 1342177280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e5e8000; munmap(0x7ffe2e5e8000, 1342177280) = 0; mmap(NULL, 1344270336, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e3e9000; munmap(0x7ffe2e3e9000, 94208) = 0; munmap(0x7ffe7e400000, 1998848) = 0; [1m[2017-04-05 16:40:30.149] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-04-05 16:40:30.069] [jointLog] [info] Loading Quasi index; [00m[1m[2017-04-05 16:40:30.139] [jointLog] [info] Loading 32-bit quasi index; [00mread(4, ""\16'w=\r\320m\306\0\35\26\306\0\224\23\270\10\205]D\0|\3!\4c_-\7\310O\2""..., 1178864057) = 1178864057; close(4) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/txpInfo.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424833, 297142816}) = 0; read(4, ""\315\5\3\0\0\0\0\0|\0\0\0\0\0\0\0ENST00000456328.""..., 8191) = 8191; read(4, ""RP4-669L17.8-001|RP4-669L17.8|12""..., 8191) = 8191; read(4, "".2|LINC01128-004|LINC01128|874|l""..., 8191) = 8191; read(4, ""THUMT00000097991.1|AGRN-002|AGRN""..., 8191) = 8191; read(4, ""HUMG00000001412.6|OTTHUMT0000000""..., 8191) = 8191; read(4, ""F3L-007|CPSF3L|1868|protein_codi""..., 8191) = 8191; read(4, ""01413.3|OTTHUMT00000004082.2|AUR""..., 8191) = 8191; read(4, ""UMT00000001363.3|ATAD3A-001|ATAD""..., 8191)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:167328,Performance,Load,Loading,167328,"E_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffebe5e89d0, tls=0x7ffebe5e8700, child_tidptr=0x7ffebe5e89d0) = 14677; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/sa.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424830, 149197282}) = 0; read(4, ""l\n\221\21\0\0\0\0k\n\221\21\373\25\343\20\17\254\r\1\36\27\227\n\37\371\270\4\250\210\307\f""..., 8191) = 8191; mmap(NULL, 1342177280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e5e8000; munmap(0x7ffe2e5e8000, 1342177280) = 0; mmap(NULL, 1344270336, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e3e9000; munmap(0x7ffe2e3e9000, 94208) = 0; munmap(0x7ffe7e400000, 1998848) = 0; [1m[2017-04-05 16:40:30.149] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-04-05 16:40:30.069] [jointLog] [info] Loading Quasi index; [00m[1m[2017-04-05 16:40:30.139] [jointLog] [info] Loading 32-bit quasi index; [00mread(4, ""\16'w=\r\320m\306\0\35\26\306\0\224\23\270\10\205]D\0|\3!\4c_-\7\310O\2""..., 1178864057) = 1178864057; close(4) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/txpInfo.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424833, 297142816}) = 0; read(4, ""\315\5\3\0\0\0\0\0|\0\0\0\0\0\0\0ENST00000456328.""..., 8191) = 8191; read(4, ""RP4-669L17.8-001|RP4-669L17.8|12""..., 8191) = 8191; read(4, "".2|LINC01128-004|LINC01128|874|l""..., 8191) = 8191; read(4, ""THUMT00000097991.1|AGRN-002|AGRN""..., 8191) = 8191; read(4, ""HUMG00000001412.6|OTTHUMT0000000""..., 8191) = 8191; read(4, ""F3L-007|CPSF3L|1868|protein_codi""..., 8191) = 8191; read(4, ""01413.3|OTTHUMT00000004082.2|AUR""..., 8191) = 8191; read(4, ""UMT00000001363.3|ATAD3A-001|ATAD""..., 8191) = 8191; read(4, ""DK11B-202|CDK11B|2490|protein_co""..., 8191) = 8191; read(",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:167402,Performance,Load,Loading,167402,"ARTID, parent_tidptr=0x7ffebe5e89d0, tls=0x7ffebe5e8700, child_tidptr=0x7ffebe5e89d0) = 14677; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/sa.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424830, 149197282}) = 0; read(4, ""l\n\221\21\0\0\0\0k\n\221\21\373\25\343\20\17\254\r\1\36\27\227\n\37\371\270\4\250\210\307\f""..., 8191) = 8191; mmap(NULL, 1342177280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e5e8000; munmap(0x7ffe2e5e8000, 1342177280) = 0; mmap(NULL, 1344270336, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7ffe2e3e9000; munmap(0x7ffe2e3e9000, 94208) = 0; munmap(0x7ffe7e400000, 1998848) = 0; [1m[2017-04-05 16:40:30.149] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-04-05 16:40:30.069] [jointLog] [info] Loading Quasi index; [00m[1m[2017-04-05 16:40:30.139] [jointLog] [info] Loading 32-bit quasi index; [00mread(4, ""\16'w=\r\320m\306\0\35\26\306\0\224\23\270\10\205]D\0|\3!\4c_-\7\310O\2""..., 1178864057) = 1178864057; close(4) = 0; open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts/txpInfo.bin"", O_RDONLY) = 4; clock_gettime(CLOCK_REALTIME, {1491424833, 297142816}) = 0; read(4, ""\315\5\3\0\0\0\0\0|\0\0\0\0\0\0\0ENST00000456328.""..., 8191) = 8191; read(4, ""RP4-669L17.8-001|RP4-669L17.8|12""..., 8191) = 8191; read(4, "".2|LINC01128-004|LINC01128|874|l""..., 8191) = 8191; read(4, ""THUMT00000097991.1|AGRN-002|AGRN""..., 8191) = 8191; read(4, ""HUMG00000001412.6|OTTHUMT0000000""..., 8191) = 8191; read(4, ""F3L-007|CPSF3L|1868|protein_codi""..., 8191) = 8191; read(4, ""01413.3|OTTHUMT00000004082.2|AUR""..., 8191) = 8191; read(4, ""UMT00000001363.3|ATAD3A-001|ATAD""..., 8191) = 8191; read(4, ""DK11B-202|CDK11B|2490|protein_co""..., 8191) = 8191; read(4, ""00002763.1|GNB1-002|GNB1|1512|re""..., 8191) = 8191; read(4, ""20-006|FAAP20|569|protein_coding""..., 819",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:168957,Performance,Load,Loading,168957,"1; read(4, ""THUMT00000097991.1|AGRN-002|AGRN""..., 8191) = 8191; read(4, ""HUMG00000001412.6|OTTHUMT0000000""..., 8191) = 8191; read(4, ""F3L-007|CPSF3L|1868|protein_codi""..., 8191) = 8191; read(4, ""01413.3|OTTHUMT00000004082.2|AUR""..., 8191) = 8191; read(4, ""UMT00000001363.3|ATAD3A-001|ATAD""..., 8191) = 8191; read(4, ""DK11B-202|CDK11B|2490|protein_co""..., 8191) = 8191; read(4, ""00002763.1|GNB1-002|GNB1|1512|re""..., 8191) = 8191; read(4, ""20-006|FAAP20|569|protein_coding""..., 8191) = 8191; read(4, ""212.1|ENSG00000157881.13|OTTHUMG""..., 8191) = 8191; read(4, ""0563.3|OTTHUMT00000099318.1|LINC""..., 8191) = 8191; read(4, ""-AS1|2875|processed_transcript|\177""..., 8191) = 8191; read(4, ""MG00000041729.1|OTTHUMT000000997""..., 8191) = 8191; read(4, ""1|LINC00337-001|LINC00337|1302|l""..., 8191) = 8191; read(4, ""\0\0\0\0ENST00000377728.7|ENSG000001""..., 8191) = 8191; read(4, ""|z\0\0\0\0\0\0\0ENST00000470648.5|ENSG0""..., 8191) = 8191; read(4, [1m[2017-04-05 16:40:33.297] [stderrLog] [info] Loading Transcript Info ; [00mread(4, ""35271.1|ENSG00000234546.3|OTTHUM""..., 8191) = 8191; read(4, ""00005018.1|UBE4B-003|UBE4B|2299|""..., 8191) = 8191; read(4, ""ding|x\0\0\0\0\0\0\0ENST00000468348.1|E""..., 8191) = 8191; read(4, ""005558.1|MTOR-001|MTOR|8677|prot""..., 8191) = 8191; read(4, ""rotein_coding|x\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""|\177\0\0\0\0\0\0\0ENST00000439324.2|ENSG0""..., 8191) = 8191; read(4, ""36.1|OTTHUMG00000009500.2|OTTHUM""..., 8191) = 8191; read(4, ""G00000175147.11|OTTHUMG000000020""..., 8191) = 8191; read(4, ""rotein_coding|}\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""ed_transcript|z\0\0\0\0\0\0\0ENST000004""..., 8191) = 8191; read(4, ""1|549|processed_transcript|{\0\0\0\0""..., 8191) = 8191; read(4, ""0006250.3|CROCC-002|CROCC|3931|p""..., 8191) = 8191; read(4, ""nscript|y\0\0\0\0\0\0\0ENST00000466151.""..., 8191) = 8191; read(4, ""R4|536|processed_transcript|q\0\0\0""..., 8191) = 8191; read(4, "".13|OTTHUMG00000002712.2|OTTHUMT""..., 8191) = 8191; read(4, ""0375",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:606,Safety,Abort,Aborted,606,"Hi again,. Together with Mark Miller (JHPCE's admin) we ran more tests. We verified that `Salmon` does indeed use at least 2 threads so now I'm always requesting 2 from SGE. We also noticed that when the jobs fail due to memory (the actual issue in this thread) they fail after the `There is 1 library` message as shown below for one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:40624,Safety,Abort,Aborted,40624,"LS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffc3e5de9d0, tls=0x7ffc3e5de700, child_tidptr=0x7ffc3e5de9d0) = 32696; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbbe5dd000; mprotect(0x7ffbbe5dd000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffbfe5dced0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffbfe5dd9d0, tls=0x7ffbfe5dd700, child_tidptr=0x7ffbfe5dd9d0) = 32697; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:37.940] [joint""..., 136) = 136; tgkill(32681, 32681, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```; and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Soft",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:77293,Safety,Abort,Aborted,77293,"LONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffc3e5de9d0, tls=0x7ffc3e5de700, child_tidptr=0x7ffc3e5de9d0) = 10753; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffbbe5dd000; mprotect(0x7ffbbe5dd000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ffbfe5dced0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ffbfe5dd9d0, tls=0x7ffbfe5dd700, child_tidptr=0x7ffbfe5dd9d0) = 10754; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/sa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:121587,Safety,Abort,Aborted,121587,"LONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff8be5d09d0, tls=0x7ff8be5d0700, child_tidptr=0x7ff8be5d09d0) = 52025; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ff83e5cf000; mprotect(0x7ff83e5cf000, 4096, PROT_NONE) = 0; clone(child_stack=0x7ff87e5ceed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7ff87e5cf9d0, tls=0x7ff87e5cf700, child_tidptr=0x7ff87e5cf9d0) = 52026; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:40:15.587] [joint""..., 136) = 136; tgkill(51996, 51996, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipel",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:4461,Security,access,access,4461,"notation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:41331,Security,access,access,41331,"3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:37.940] [joint""..., 136) = 136; tgkill(32681, 32681, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```; and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79794,Security,access,access,79794,"x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:122294,Security,access,access,122294,"3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:40:15.587] [joint""..., 136) = 136; tgkill(51996, 51996, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. and for task 2:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls"", 0x7fffffffb4f0) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linu",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:65,Testability,test,tests,65,"Hi again,. Together with Mark Miller (JHPCE's admin) we ran more tests. We verified that `Salmon` does indeed use at least 2 threads so now I'm always requesting 2 from SGE. We also noticed that when the jobs fail due to memory (the actual issue in this thread) they fail after the `There is 1 library` message as shown below for one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:334,Testability,test,test,334,"Hi again,. Together with Mark Miller (JHPCE's admin) we ran more tests. We verified that `Salmon` does indeed use at least 2 threads so now I'm always requesting 2 from SGE. We also noticed that when the jobs fail due to memory (the actual issue in this thread) they fail after the `There is 1 library` message as shown below for one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.g",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:1288,Testability,test,tests,1288,"r one test:. ```; [2017-04-05 14:28:09.021] [jointLog] [info] parsing read library format; [2017-04-05 14:28:09.035] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-064/job_scripts/420662: line 31: 28651 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipelin; e/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode; .v25.transcripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test7/${ID}; ```. Files that work well, keep on going:. ```; [2017-04-05 14:30:23.757] [jointLog] [info] parsing read library format; [2017-04-05 14:30:23.767] [jointLog] [info] There is 1 library.; [2017-04-05 14:30:24.378] [jointLog] [info] Loading Quasi index; ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2171,Testability,test,test,2171," ```. I don't know if that hint makes you suspect anything in `Salmon`. . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk """,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2296,Testability,test,test,2296," . Now, for some tests only task 2 runs and it turns out that task 2 has a smaller fastq file than the other 2:. ```bash; $ ls -lh merged_fastq/R1000[1-3]*; -rw-r--r-- 1 lcollado lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2439,Testability,log,logs,2439,"o lieber_jaffe 6.2G Feb 20 12:39 merged_fastq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/A",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:2480,Testability,log,logs,2480,"astq/R10001_D2B1WACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 6.3G Feb 20 12:40 merged_fastq/R10001_D2B1WACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.6G Feb 20 12:42 merged_fastq/R10002_C29P7ACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 4.7G Feb 20 12:44 merged_fastq/R10002_C29P7ACXX_read2.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:47 merged_fastq/R10003_D19KGACXX.fastq.gz; -rw-r--r-- 1 lcollado lieber_jaffe 7.1G Feb 20 12:50 merged_fastq/R10003_D19KGACXX_read2.fastq.gz; ```. where R10001* is task 1, R10002* is task 2, R10003* is task 3. So it looks like at some point Salmon is asking for some memory based on the input data. ## Strace test with low memory (but above reported usage when requesting 90GB). Mark taught me about `strace` and we ran the following test:. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=7G,h_vmem=8G,h_fsize=100G; #$ -N step6-salmon_test11.gsk_phaseII; #$ -o ./logs/salmon_test11.$TASK_ID.txt; #$ -e ./logs/salmon_test11.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:3629,Testability,log,logs,3629,"k_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipel",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:30299,Testability,log,logs,30299,"ndex_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:30446,Testability,log,logs,30446,"ndex_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:30734,Testability,log,logs,30734,"; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:30762,Testability,Log,Logs,30762,"; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:30950,Testability,log,logs,30950,"001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:32169,Testability,log,logs,32169,""", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 32683; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:32187,Testability,log,log,32187,""", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10001_D2B1WACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 32683; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:67069,Testability,log,logs,67069,"test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:67216,Testability,log,logs,67216,"test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:67506,Testability,log,logs,67506,"[ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:67534,Testability,Log,Logs,67534,"[ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:67722,Testability,log,logs,67722,"29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salm",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:68945,Testability,log,logs,68945,"x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 10740; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:68963,Testability,log,log,68963,"x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/R10002_C29P7ACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 10740; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:77845,Testability,log,logs,77845,", 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/A",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:77886,Testability,log,logs,77886,"RIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = -1 ENOMEM (Cannot allocate memory); futex(0x7fffbf4c3350, FUTEX_WAKE_PRIVATE, 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79035,Testability,log,logs,79035,"aseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:105651,Testability,log,logs,105651,"test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:105798,Testability,log,logs,105798,"test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10001_D2B1WACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:106088,Testability,log,logs,106088,"[ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:106116,Testability,Log,Logs,106116,"[ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:106304,Testability,log,logs,106304,"2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salm",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:107527,Testability,log,logs,107527,"x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 51998; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:107545,Testability,log,log,107545,"x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=33280, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10001_D2B1WACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 51998; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:147976,Testability,log,logs,147976,"ndex_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:148123,Testability,log,logs,148123,"ndex_test/salmon_0.8.2_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:148411,Testability,log,logs,148411,"; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:148439,Testability,Log,Logs,148439,"; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX }; ) = 594; stat(""/etc/localtime"", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:148627,Testability,log,logs,148627,"002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs"", 0777) = 0; write(2, ""Logs will be written to "", 24Logs will be written to ) = 24; write(2, ""/dcl01/lieber/ajaffe/lab/libd_al""..., 81/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs) = 81; write(2, ""\n"", 1; ) = 1; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:149846,Testability,log,logs,149846,""", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 14650; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda000",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:149864,Testability,log,log,149864,""", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/libParams"", 0777) = 0; stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e50) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0x7fffffff1e60) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX"", {st_mode=S_IFDIR|S_ISGID|0755, st_size=512, ...}) = 0; mkdir(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/aux_info"", 0777) = 0; open(""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/R10002_C29P7ACXX/logs/salmon_quant.log"", O_WRONLY|O_CREAT|O_APPEND, 0666) = 3; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; mmap(NULL, 4194304, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbea00000; fstat(3, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0; lseek(3, 0, SEEK_SET) = 0; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbe200000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fff3e5eb000; mprotect(0x7fff3e5eb000, 4096, PROT_NONE) = 0; clone(child_stack=0x7fff7e5eaed0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tidptr=0x7fff7e5eb9d0, tls=0x7fff7e5eb700, child_tidptr=0x7fff7e5eb9d0) = 14650; mmap(NULL, 8388608, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1, 0) = 0x7fffbda00000; mmap(NULL, 1073745920, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7ffefe5ea000; mprotect(0x7ffefe5ea000, 4096, PROT_NONE",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285686442:773,Deployability,update,updated,773,"Hi @ECuris,. Yes, the values you give are used to form a normal distribution, which is then truncated on the left at 0. So, the parameters you provide are the mean and standard deviation of the distribution *prior* to truncation. However, I'll note that the values are such that 0 is usually sufficiently far (in terms of standard deviations from the mean) that the mean and standard deviation of the fragment length distribution are very similar before and after the 0 truncation. Finally, I'll mention that, if you have paired-end reads, Salmon will *always* learn the empirical fragment length distribution (since the experiment, itself, is the best estimator of the true distribution), but the `--fldMean` and `--fldSD` parameters define the prior distribution that is updated with observed fragment lengths.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285686442
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285686442:561,Usability,learn,learn,561,"Hi @ECuris,. Yes, the values you give are used to form a normal distribution, which is then truncated on the left at 0. So, the parameters you provide are the mean and standard deviation of the distribution *prior* to truncation. However, I'll note that the values are such that 0 is usually sufficiently far (in terms of standard deviations from the mean) that the mean and standard deviation of the fragment length distribution are very similar before and after the 0 truncation. Finally, I'll mention that, if you have paired-end reads, Salmon will *always* learn the empirical fragment length distribution (since the experiment, itself, is the best estimator of the true distribution), but the `--fldMean` and `--fldSD` parameters define the prior distribution that is updated with observed fragment lengths.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285686442
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285693301:86,Availability,reliab,reliably,86,"@ECuris --- For single-end reads the prior *is* the posterior. It is only possible to reliably estimate fragment lengths when one has paired-end reads, since with single-end reads one only has a single mapping fragment end, and hence cannot estimate the implied fragment size. So, with paired-end reads, the prior values are largely unimportant (the data overwhelm them quickly), but with single-end reads, having a reasonable estimate of the fragment length mean and standard deviation is important, because the effective lengths of the transcripts will be derived from these values.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285693301
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-286760710:352,Deployability,update,update,352,"Hi @ECuris,. Indeed, this seems to be a case where the code evolved and the documentation has yet to catch up. The defaults are `fldMean` = 250 and `fldSD` = 25. The relevant code is here (https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L2260). This defines how default values are set for these parameters. I'll make a note to update the documentation to be consistent with these changes (which were made to be more in line with modern protocols, though there's still no good universal parameters for things that can vary so widely between experiments).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-286760710
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-286760710:461,Integrability,protocol,protocols,461,"Hi @ECuris,. Indeed, this seems to be a case where the code evolved and the documentation has yet to catch up. The defaults are `fldMean` = 250 and `fldSD` = 25. The relevant code is here (https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L2260). This defines how default values are set for these parameters. I'll make a note to update the documentation to be consistent with these changes (which were made to be more in line with modern protocols, though there's still no good universal parameters for things that can vary so widely between experiments).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-286760710
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-286760710:60,Modifiability,evolve,evolved,60,"Hi @ECuris,. Indeed, this seems to be a case where the code evolved and the documentation has yet to catch up. The defaults are `fldMean` = 250 and `fldSD` = 25. The relevant code is here (https://github.com/COMBINE-lab/salmon/blob/master/src/SalmonQuantify.cpp#L2260). This defines how default values are set for these parameters. I'll make a note to update the documentation to be consistent with these changes (which were made to be more in line with modern protocols, though there's still no good universal parameters for things that can vary so widely between experiments).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-286760710
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243:884,Availability,robust,robust,884,"Hi @Tima-Ze,. Yes, salmon can be used to quantify these reads, but the results will depend (somewhat) on the `--fldMean` and `--fldSD` flags that are used. It's important to note that this is not a unique characteristic of salmon, and any transcript-level quantification tool using a probabilistic model (e.g. RSEM, eXpress, BitSeq, etc.) have the same requirement. That is, the fragment length distribution should be known so that _effective_ transcript lengths can be estimated, which have an effect on fragment assignment probabilities. If the wrong fragment length distribution is specified, then the _effective_ transcript lengths will be off and this can affect the assignment of some fragments. This is only a requirement with single-end reads, since with paired-end reads the fragment length distribution is learned from the data. Further, the inference procedure is somewhat robust to these choices (small changes in fld mean and sd don't generally lead to drastically different results). If you have access to the BioAnalyzer results for the sequencing run, those can give information about the fragment length distribution (even in a single end experiment). If not, you can proceed with the default values. Even if they don't exactly match the true distribution in the single-end sample, at least the same values will be applied in all samples and so, ideally, most results of misspecification will wash out in subsequent differential analysis. . Finally, it's worth noting that the same restriction holds in both alignment-based and mapping-based modes. This is because in neither mode do single-end fragments provide sufficient information to estimate the fragment length distribution from the data. We only know where one end of a fragment mapped and cannot infer where the other end would be. This is not an alignment versus mapping (versus selective-alignment) issue, but rather is fundamental to having only observed one side of the entire fragment generated during fragmentation and ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243:84,Integrability,depend,depend,84,"Hi @Tima-Ze,. Yes, salmon can be used to quantify these reads, but the results will depend (somewhat) on the `--fldMean` and `--fldSD` flags that are used. It's important to note that this is not a unique characteristic of salmon, and any transcript-level quantification tool using a probabilistic model (e.g. RSEM, eXpress, BitSeq, etc.) have the same requirement. That is, the fragment length distribution should be known so that _effective_ transcript lengths can be estimated, which have an effect on fragment assignment probabilities. If the wrong fragment length distribution is specified, then the _effective_ transcript lengths will be off and this can affect the assignment of some fragments. This is only a requirement with single-end reads, since with paired-end reads the fragment length distribution is learned from the data. Further, the inference procedure is somewhat robust to these choices (small changes in fld mean and sd don't generally lead to drastically different results). If you have access to the BioAnalyzer results for the sequencing run, those can give information about the fragment length distribution (even in a single end experiment). If not, you can proceed with the default values. Even if they don't exactly match the true distribution in the single-end sample, at least the same values will be applied in all samples and so, ideally, most results of misspecification will wash out in subsequent differential analysis. . Finally, it's worth noting that the same restriction holds in both alignment-based and mapping-based modes. This is because in neither mode do single-end fragments provide sufficient information to estimate the fragment length distribution from the data. We only know where one end of a fragment mapped and cannot infer where the other end would be. This is not an alignment versus mapping (versus selective-alignment) issue, but rather is fundamental to having only observed one side of the entire fragment generated during fragmentation and ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243:1010,Security,access,access,1010,"l depend (somewhat) on the `--fldMean` and `--fldSD` flags that are used. It's important to note that this is not a unique characteristic of salmon, and any transcript-level quantification tool using a probabilistic model (e.g. RSEM, eXpress, BitSeq, etc.) have the same requirement. That is, the fragment length distribution should be known so that _effective_ transcript lengths can be estimated, which have an effect on fragment assignment probabilities. If the wrong fragment length distribution is specified, then the _effective_ transcript lengths will be off and this can affect the assignment of some fragments. This is only a requirement with single-end reads, since with paired-end reads the fragment length distribution is learned from the data. Further, the inference procedure is somewhat robust to these choices (small changes in fld mean and sd don't generally lead to drastically different results). If you have access to the BioAnalyzer results for the sequencing run, those can give information about the fragment length distribution (even in a single end experiment). If not, you can proceed with the default values. Even if they don't exactly match the true distribution in the single-end sample, at least the same values will be applied in all samples and so, ideally, most results of misspecification will wash out in subsequent differential analysis. . Finally, it's worth noting that the same restriction holds in both alignment-based and mapping-based modes. This is because in neither mode do single-end fragments provide sufficient information to estimate the fragment length distribution from the data. We only know where one end of a fragment mapped and cannot infer where the other end would be. This is not an alignment versus mapping (versus selective-alignment) issue, but rather is fundamental to having only observed one side of the entire fragment generated during fragmentation and prior to sequencing. You cannot know the length of a fragment given only a read fr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243:816,Usability,learn,learned,816,"Hi @Tima-Ze,. Yes, salmon can be used to quantify these reads, but the results will depend (somewhat) on the `--fldMean` and `--fldSD` flags that are used. It's important to note that this is not a unique characteristic of salmon, and any transcript-level quantification tool using a probabilistic model (e.g. RSEM, eXpress, BitSeq, etc.) have the same requirement. That is, the fragment length distribution should be known so that _effective_ transcript lengths can be estimated, which have an effect on fragment assignment probabilities. If the wrong fragment length distribution is specified, then the _effective_ transcript lengths will be off and this can affect the assignment of some fragments. This is only a requirement with single-end reads, since with paired-end reads the fragment length distribution is learned from the data. Further, the inference procedure is somewhat robust to these choices (small changes in fld mean and sd don't generally lead to drastically different results). If you have access to the BioAnalyzer results for the sequencing run, those can give information about the fragment length distribution (even in a single end experiment). If not, you can proceed with the default values. Even if they don't exactly match the true distribution in the single-end sample, at least the same values will be applied in all samples and so, ideally, most results of misspecification will wash out in subsequent differential analysis. . Finally, it's worth noting that the same restriction holds in both alignment-based and mapping-based modes. This is because in neither mode do single-end fragments provide sufficient information to estimate the fragment length distribution from the data. We only know where one end of a fragment mapped and cannot infer where the other end would be. This is not an alignment versus mapping (versus selective-alignment) issue, but rather is fundamental to having only observed one side of the entire fragment generated during fragmentation and ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750925173:78,Availability,down,downloaded,78,"Thanks @rob-p for a quick and complete reply. I got your point :) Actually, I downloaded fastq files from ENA so I do not have access to BioAnalyzer results. From literature review it could be concluded that Alignment-free tools like Salmon or kallisto yield more accurate quantifications, that's why I went to apply salmon on my data (my aim is differential gene expression at the end). Now, my main issue is: without an accurate estimation of fragment length for running salmon, would it end up with less accurate quantification result? If yes, then it is more rational to me to use traditional methods such as featureCounts. Do you have any idea that sheds more light on this ambiguity.; Best,; Tima",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750925173
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750925173:127,Security,access,access,127,"Thanks @rob-p for a quick and complete reply. I got your point :) Actually, I downloaded fastq files from ENA so I do not have access to BioAnalyzer results. From literature review it could be concluded that Alignment-free tools like Salmon or kallisto yield more accurate quantifications, that's why I went to apply salmon on my data (my aim is differential gene expression at the end). Now, my main issue is: without an accurate estimation of fragment length for running salmon, would it end up with less accurate quantification result? If yes, then it is more rational to me to use traditional methods such as featureCounts. Do you have any idea that sheds more light on this ambiguity.; Best,; Tima",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750925173
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750943952:1967,Availability,down,downstream,1967,"ng of these considerations. It’s good to think about how data processing choices may affect your results and you are being thoughtful here. I wouldn’t say that, generally, alignment-free tools are more accurate than alignment-based ones. For example, you might look at our recent paper on how [alignment and mapping methodology can influence abundance estimation even when holding the quantification approach fixed](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-020-02151-8), or [this paper on the corner cases of alignment-free methodology](https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-4869-5) (note the second paper pre-dates the first, and the new selective-alignment methodology in salmon should largely address the issues raised in that paper). However, the bigger and more meaningful distinction is between methods that attempt to properly quantify abundance (generally using a generative statistical model) — including methods like RSEM, BitSeq, salmon, etc., and those that try to simply count aligned reads — including methods like HTSeq and featureCounts. Generally, the former type of methods are more accurate than the latter at both the gene level and the former can also offer transcript-level estimates if desired (counting based methods generally cannot). Finally, to your question more directly, I don’t believe that model misspecification that may result due to not knowing the fragment length distribution will generally have enough of a deleterious effect on the probabilistic quantification methods to degrade their performance to the level of counting based methods. I would still argue to prefer probabilistic quantification (i.e. salmon) to read counting, even if you don’t know the fragment length distribution. As I mentioned above, it may change the maximum likelihood estimates a bit, but should do so across all samples, hopefully minimizing the downstream effects on differential analysis. Good luck with your analysis!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750943952
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750943952:1629,Performance,perform,performance,1629,"ng of these considerations. It’s good to think about how data processing choices may affect your results and you are being thoughtful here. I wouldn’t say that, generally, alignment-free tools are more accurate than alignment-based ones. For example, you might look at our recent paper on how [alignment and mapping methodology can influence abundance estimation even when holding the quantification approach fixed](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-020-02151-8), or [this paper on the corner cases of alignment-free methodology](https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-4869-5) (note the second paper pre-dates the first, and the new selective-alignment methodology in salmon should largely address the issues raised in that paper). However, the bigger and more meaningful distinction is between methods that attempt to properly quantify abundance (generally using a generative statistical model) — including methods like RSEM, BitSeq, salmon, etc., and those that try to simply count aligned reads — including methods like HTSeq and featureCounts. Generally, the former type of methods are more accurate than the latter at both the gene level and the former can also offer transcript-level estimates if desired (counting based methods generally cannot). Finally, to your question more directly, I don’t believe that model misspecification that may result due to not knowing the fragment length distribution will generally have enough of a deleterious effect on the probabilistic quantification methods to degrade their performance to the level of counting based methods. I would still argue to prefer probabilistic quantification (i.e. salmon) to read counting, even if you don’t know the fragment length distribution. As I mentioned above, it may change the maximum likelihood estimates a bit, but should do so across all samples, hopefully minimizing the downstream effects on differential analysis. Good luck with your analysis!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750943952
https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750943952:1081,Usability,simpl,simply,1081,"ng of these considerations. It’s good to think about how data processing choices may affect your results and you are being thoughtful here. I wouldn’t say that, generally, alignment-free tools are more accurate than alignment-based ones. For example, you might look at our recent paper on how [alignment and mapping methodology can influence abundance estimation even when holding the quantification approach fixed](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-020-02151-8), or [this paper on the corner cases of alignment-free methodology](https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-4869-5) (note the second paper pre-dates the first, and the new selective-alignment methodology in salmon should largely address the issues raised in that paper). However, the bigger and more meaningful distinction is between methods that attempt to properly quantify abundance (generally using a generative statistical model) — including methods like RSEM, BitSeq, salmon, etc., and those that try to simply count aligned reads — including methods like HTSeq and featureCounts. Generally, the former type of methods are more accurate than the latter at both the gene level and the former can also offer transcript-level estimates if desired (counting based methods generally cannot). Finally, to your question more directly, I don’t believe that model misspecification that may result due to not knowing the fragment length distribution will generally have enough of a deleterious effect on the probabilistic quantification methods to degrade their performance to the level of counting based methods. I would still argue to prefer probabilistic quantification (i.e. salmon) to read counting, even if you don’t know the fragment length distribution. As I mentioned above, it may change the maximum likelihood estimates a bit, but should do so across all samples, hopefully minimizing the downstream effects on differential analysis. Good luck with your analysis!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750943952
https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287486743:300,Availability,ping,ping,300,"Hi @sschmeier,. I just pushed a small improvement and bugfix that constitutes 0.8.2. I will make a PR to Bioconda for this. I had to add some stuff to the build file to comply with upstream requests for homebrew-science, so now 0.8.2 should make its way into both Bioconda and homebrew-science. I'll ping back here and close this issue when it's available. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287486743
https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287486743:346,Availability,avail,available,346,"Hi @sschmeier,. I just pushed a small improvement and bugfix that constitutes 0.8.2. I will make a PR to Bioconda for this. I had to add some stuff to the build file to comply with upstream requests for homebrew-science, so now 0.8.2 should make its way into both Bioconda and homebrew-science. I'll ping back here and close this issue when it's available. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287486743
https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287567714:78,Availability,fault,fault,78,Homebred-Science is still having some issues (but I don't think it's salmon's fault). However 0.8.2 is now available via bioconda :) https://github.com/bioconda/bioconda-recipes/pull/4208. Let me know if you have any problems. --Rob,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287567714
https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287567714:107,Availability,avail,available,107,Homebred-Science is still having some issues (but I don't think it's salmon's fault). However 0.8.2 is now available via bioconda :) https://github.com/bioconda/bioconda-recipes/pull/4208. Let me know if you have any problems. --Rob,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287567714
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172:265,Availability,down,down,265,"Hi @ppflrs,. Thanks for the detailed bug report. It seems that the index was constructed properly, but is not being appropriately read in during the quant phase. I've seen a big-index issue with 0.8.1 from another user as well --- but I haven't had a chance to dig down into this yet. Would it be possible for you to see if the issue also exists if you try the precompiled executable for v0.7.2? If that index builds and runs for you, we can at least narrow down the error to this particular release. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172:458,Availability,down,down,458,"Hi @ppflrs,. Thanks for the detailed bug report. It seems that the index was constructed properly, but is not being appropriately read in during the quant phase. I've seen a big-index issue with 0.8.1 from another user as well --- but I haven't had a chance to dig down into this yet. Would it be possible for you to see if the issue also exists if you try the precompiled executable for v0.7.2? If that index builds and runs for you, we can at least narrow down the error to this particular release. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172:467,Availability,error,error,467,"Hi @ppflrs,. Thanks for the detailed bug report. It seems that the index was constructed properly, but is not being appropriately read in during the quant phase. I've seen a big-index issue with 0.8.1 from another user as well --- but I haven't had a chance to dig down into this yet. Would it be possible for you to see if the issue also exists if you try the precompiled executable for v0.7.2? If that index builds and runs for you, we can at least narrow down the error to this particular release. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172:492,Deployability,release,release,492,"Hi @ppflrs,. Thanks for the detailed bug report. It seems that the index was constructed properly, but is not being appropriately read in during the quant phase. I've seen a big-index issue with 0.8.1 from another user as well --- but I haven't had a chance to dig down into this yet. Would it be possible for you to see if the issue also exists if you try the precompiled executable for v0.7.2? If that index builds and runs for you, we can at least narrow down the error to this particular release. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919:13,Availability,error,error,13,"The specific error message seems to be coming from [the serialization library we use](https://github.com/USCiLab/cereal/blob/master/include/cereal/archives/portable_binary.hpp#L245). This was upgraded recently, so I'm hoping that they didn't introduce a new bug upstream. As soon as I can reproduce this, I can test if rolling back the version of the serialization library fixes the issue (which I don't believe occurred in 0.7.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919:192,Deployability,upgrade,upgraded,192,"The specific error message seems to be coming from [the serialization library we use](https://github.com/USCiLab/cereal/blob/master/include/cereal/archives/portable_binary.hpp#L245). This was upgraded recently, so I'm hoping that they didn't introduce a new bug upstream. As soon as I can reproduce this, I can test if rolling back the version of the serialization library fixes the issue (which I don't believe occurred in 0.7.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919:319,Deployability,rolling,rolling,319,"The specific error message seems to be coming from [the serialization library we use](https://github.com/USCiLab/cereal/blob/master/include/cereal/archives/portable_binary.hpp#L245). This was upgraded recently, so I'm hoping that they didn't introduce a new bug upstream. As soon as I can reproduce this, I can test if rolling back the version of the serialization library fixes the issue (which I don't believe occurred in 0.7.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919:19,Integrability,message,message,19,"The specific error message seems to be coming from [the serialization library we use](https://github.com/USCiLab/cereal/blob/master/include/cereal/archives/portable_binary.hpp#L245). This was upgraded recently, so I'm hoping that they didn't introduce a new bug upstream. As soon as I can reproduce this, I can test if rolling back the version of the serialization library fixes the issue (which I don't believe occurred in 0.7.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919:311,Testability,test,test,311,"The specific error message seems to be coming from [the serialization library we use](https://github.com/USCiLab/cereal/blob/master/include/cereal/archives/portable_binary.hpp#L245). This was upgraded recently, so I'm hoping that they didn't introduce a new bug upstream. As soon as I can reproduce this, I can test if rolling back the version of the serialization library fixes the issue (which I don't believe occurred in 0.7.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287348908:133,Availability,down,down,133,"OK --- I have an example where I can reproduce, and it does indeed seem to only occur with 64-bit indices. I will try and track this down ASAP, I'm almost certain it has to do with cereal though. While I look into this, I've also filed https://github.com/USCiLab/cereal/issues/386.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287348908
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196:17,Availability,down,down,17,"Ok, I've tracked down and fixed the bug. I'll be tagging a new release with the fix soon. I'll ping back here and close this issue when the new release is out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196:95,Availability,ping,ping,95,"Ok, I've tracked down and fixed the bug. I'll be tagging a new release with the fix soon. I'll ping back here and close this issue when the new release is out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196:63,Deployability,release,release,63,"Ok, I've tracked down and fixed the bug. I'll be tagging a new release with the fix soon. I'll ping back here and close this issue when the new release is out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196:144,Deployability,release,release,144,"Ok, I've tracked down and fixed the bug. I'll be tagging a new release with the fix soon. I'll ping back here and close this issue when the new release is out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287460267:87,Deployability,release,releases,87,"@ppflrs . This issue is now resolved in [v0.8.2](https://github.com/COMBINE-lab/salmon/releases/tag/v0.8.2). Further, since the bug was only on the de-serialization end, this should work with the index you've already prepared with Salmon v0.8.1. Please let me know if that works for you. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287460267
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-288675236:718,Security,hash,hash,718,"Hi @rob-p . Sorry, but we couldn't test again the index I used to report the issue. Instead, we used a smaller one with the following characteristics:. ```; counted k-mers for 16040000 transcripts; Elapsed time: 726.738s. Replaced 5730782 non-ATCG nucleotides; Clipped poly-A tails from 530 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 13.1116s; Writing sequence data to file . . . done; Elapsed time: 118.505s; [info] Building 64-bit suffix array (length of generalized text is 12671064288 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 877.586s; done; Elapsed time: 3607.17s; processed 12671000000 positions; khash had 5905993560 keys; saving hash to disk . . . done; Elapsed time: 1249.59s; [2017-03-22 06:39:06.131] [jLog] [info] done building index; ```. Using this new index and salmon v0.8.2 precompiled binaries we didn't have any problems. Hope this helps. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-288675236
https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-288675236:35,Testability,test,test,35,"Hi @rob-p . Sorry, but we couldn't test again the index I used to report the issue. Instead, we used a smaller one with the following characteristics:. ```; counted k-mers for 16040000 transcripts; Elapsed time: 726.738s. Replaced 5730782 non-ATCG nucleotides; Clipped poly-A tails from 530 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 13.1116s; Writing sequence data to file . . . done; Elapsed time: 118.505s; [info] Building 64-bit suffix array (length of generalized text is 12671064288 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 877.586s; done; Elapsed time: 3607.17s; processed 12671000000 positions; khash had 5905993560 keys; saving hash to disk . . . done; Elapsed time: 1249.59s; [2017-03-22 06:39:06.131] [jLog] [info] done building index; ```. Using this new index and salmon v0.8.2 precompiled binaries we didn't have any problems. Hope this helps. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-288675236
https://github.com/COMBINE-lab/salmon/issues/130#issuecomment-291917751:233,Deployability,release,release,233,"Hi @schelhorn, I agree. Though having no mapping reads is ""catastrophic"" in the common intended use case for Salmon, I think we should have a more graceful handling. Especially, since it's easy to diagnose. I'll fix this in the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/130#issuecomment-291917751
https://github.com/COMBINE-lab/salmon/issues/130#issuecomment-303472255:236,Availability,error,error,236,"Hi @schelhorn,. I've implemented these changes in the latest commit. Now, the behavior if fewer than 10 reads are assigned sample-wide will be to output a `quant.sf` file with all 0s and to record in the `meta_info.json` file the quant error that led to this output. Does this seem reasonable? Also, do you suggest that, even in this case, the return code be 0? In some sense, something very unexpected happened (i.e. you had no --- or by default, fewer than 10 --- mapping reads), so signifying that at the process level might be useful. However, if you require that every ""valid"" run of salmon return with code 0, I can see an argument against returning a non-standard status in this case.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/130#issuecomment-303472255
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293273710:86,Performance,perform,perform,86,"I see. TopHat actually aligns the reads to the genome (using Bowtie and a strategy to perform split-read mapping). The results of TopHat, then, are meant to be used with tools like Cufflinks, which expects reads to be mapped directly to the genome rather than to the transcriptome. Salmon, on the other hand, works like tools such as RSEM / eXpress, which expect alignments to the transcriptome directly. This can be accomplished by either mapping the reads directly to the transcript sequences (using e.g. Bowtie2 / BWA-MEM) or by mapping the reads to the genome using a tool such as STAR, and telling it to project the alignments onto genomic coordinates. However, I should mention that the easiest thing to do is to simply have Salmon build and index on your transcript set and then pass it the raw (compressed) FASTQ files directly. Since Salmon provides an accurate and lightweight alignment proxy, it can accurately assess transcript abundance estimates directly from the raw (unaligned) sequenced reads. If you have questions about using either of these modes, please take a look at [the documentation](https://salmon.readthedocs.io/en/latest/). I'd also be happy to answer any other questions you might have.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293273710
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293273710:719,Usability,simpl,simply,719,"I see. TopHat actually aligns the reads to the genome (using Bowtie and a strategy to perform split-read mapping). The results of TopHat, then, are meant to be used with tools like Cufflinks, which expects reads to be mapped directly to the genome rather than to the transcriptome. Salmon, on the other hand, works like tools such as RSEM / eXpress, which expect alignments to the transcriptome directly. This can be accomplished by either mapping the reads directly to the transcript sequences (using e.g. Bowtie2 / BWA-MEM) or by mapping the reads to the genome using a tool such as STAR, and telling it to project the alignments onto genomic coordinates. However, I should mention that the easiest thing to do is to simply have Salmon build and index on your transcript set and then pass it the raw (compressed) FASTQ files directly. Since Salmon provides an accurate and lightweight alignment proxy, it can accurately assess transcript abundance estimates directly from the raw (unaligned) sequenced reads. If you have questions about using either of these modes, please take a look at [the documentation](https://salmon.readthedocs.io/en/latest/). I'd also be happy to answer any other questions you might have.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293273710
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682:329,Availability,recover,recover,329,"sam-xlate is actually the only tool that I'm aware of to perform this operation on an existing BAM file. I've heard of people using it with success. Of course, I'd also think of doing an analysis with the original reads to validate concordance. Note: if you don't have the original reads, you can do a BAM -> FASTQ conversion to recover the read sequences and then feed them to Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682:57,Performance,perform,perform,57,"sam-xlate is actually the only tool that I'm aware of to perform this operation on an existing BAM file. I've heard of people using it with success. Of course, I'd also think of doing an analysis with the original reads to validate concordance. Note: if you don't have the original reads, you can do a BAM -> FASTQ conversion to recover the read sequences and then feed them to Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682:329,Safety,recover,recover,329,"sam-xlate is actually the only tool that I'm aware of to perform this operation on an existing BAM file. I've heard of people using it with success. Of course, I'd also think of doing an analysis with the original reads to validate concordance. Note: if you don't have the original reads, you can do a BAM -> FASTQ conversion to recover the read sequences and then feed them to Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682:223,Security,validat,validate,223,"sam-xlate is actually the only tool that I'm aware of to perform this operation on an existing BAM file. I've heard of people using it with success. Of course, I'd also think of doing an analysis with the original reads to validate concordance. Note: if you don't have the original reads, you can do a BAM -> FASTQ conversion to recover the read sequences and then feed them to Salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293316682
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293391845:1316,Availability,error,error,1316,"I am using the following commands:. ```; ./bin/salmon index -t ../Homo_sapiens.GRCh37.75.cdna.all.fa.gz -i transcripts_index --type quasi -k 31. ./bin/salmon quant -l A -i transcripts_index -r ../../rnaseq_data/SRR764785.fastq ../../rnaseq_data/SRR764786.fastq ../../rnaseq_data/SRR764787.fastq ../../rnaseq_data/SRR764788.fastq ../../rnaseq_data/SRR764789.fastq ../../rnaseq_data/SRR764790.fastq ../../rnaseq_data/SRR764791.fastq ../../rnaseq_data/SRR764792.fastq ../../rnaseq_data/SRR764793.fastq ../../rnaseq_data/SRR764794.fastq ../../rnaseq_data/SRR764795.fastq ../../rnaseq_data/SRR764796.fastq ../../rnaseq_data/SRR764797.fastq ../../rnaseq_data/SRR764802.fastq ../../rnaseq_data/SRR764803.fastq ../../rnaseq_data/SRR764804.fastq ../../rnaseq_data/SRR764805.fastq ../../rnaseq_data/SRR764806.fastq ../../rnaseq_data/SRR764807.fastq ../../rnaseq_data/SRR764808.fastq ../../rnaseq_data/SRR764809.fastq ../../rnaseq_data/SRR764810.fastq ../../rnaseq_data/SRR764811.fastq ../../rnaseq_data/SRR764812.fastq ../../rnaseq_data/SRR764813.fastq -1 ../../rnaseq_data/SRR764782_1.fastq ../../rnaseq_data/SRR764783_1.fastq ../../rnaseq_data/SRR764784_1.fastq -2 ../../rnaseq_data/SRR764782_2.fastq ../../rnaseq_data/SRR764783_2.fastq ../../rnaseq_data/SRR764784_2.fastq -o transcripts_quant; ```; and I get the following error and no .sf file in output:; ```; processed 783000000 fragmentsrag: 3.56267[2017-04-11 20:17:10.337] [jointLog] [info] Automatically detected most likely library type as IU; hits: 184962311, hits per frag: 0.236263couldn't dequeue read chunk; couldn't dequeue read chunk; couldn't dequeue read chunk; couldn't dequeue read chunk; ```. Am I using the commands wrong?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293391845
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293391845:1454,Safety,detect,detected,1454,"I am using the following commands:. ```; ./bin/salmon index -t ../Homo_sapiens.GRCh37.75.cdna.all.fa.gz -i transcripts_index --type quasi -k 31. ./bin/salmon quant -l A -i transcripts_index -r ../../rnaseq_data/SRR764785.fastq ../../rnaseq_data/SRR764786.fastq ../../rnaseq_data/SRR764787.fastq ../../rnaseq_data/SRR764788.fastq ../../rnaseq_data/SRR764789.fastq ../../rnaseq_data/SRR764790.fastq ../../rnaseq_data/SRR764791.fastq ../../rnaseq_data/SRR764792.fastq ../../rnaseq_data/SRR764793.fastq ../../rnaseq_data/SRR764794.fastq ../../rnaseq_data/SRR764795.fastq ../../rnaseq_data/SRR764796.fastq ../../rnaseq_data/SRR764797.fastq ../../rnaseq_data/SRR764802.fastq ../../rnaseq_data/SRR764803.fastq ../../rnaseq_data/SRR764804.fastq ../../rnaseq_data/SRR764805.fastq ../../rnaseq_data/SRR764806.fastq ../../rnaseq_data/SRR764807.fastq ../../rnaseq_data/SRR764808.fastq ../../rnaseq_data/SRR764809.fastq ../../rnaseq_data/SRR764810.fastq ../../rnaseq_data/SRR764811.fastq ../../rnaseq_data/SRR764812.fastq ../../rnaseq_data/SRR764813.fastq -1 ../../rnaseq_data/SRR764782_1.fastq ../../rnaseq_data/SRR764783_1.fastq ../../rnaseq_data/SRR764784_1.fastq -2 ../../rnaseq_data/SRR764782_2.fastq ../../rnaseq_data/SRR764783_2.fastq ../../rnaseq_data/SRR764784_2.fastq -o transcripts_quant; ```; and I get the following error and no .sf file in output:; ```; processed 783000000 fragmentsrag: 3.56267[2017-04-11 20:17:10.337] [jointLog] [info] Automatically detected most likely library type as IU; hits: 184962311, hits per frag: 0.236263couldn't dequeue read chunk; couldn't dequeue read chunk; couldn't dequeue read chunk; couldn't dequeue read chunk; ```. Am I using the commands wrong?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293391845
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293512406:134,Safety,Detect,Detected,134,"Next, I am using alignment mode for paired-end reads aligned to reference transcript using bwa and I get this warning:. ```; WARNING: Detected suspicious pair ---; The names are different:; read1 : SRR764782.282; read2 : SRR764782.283. [2017-04-12 10:30:00.202] [jointLog] [warning]. WARNING: Detected suspicious pair ---; The names are different:; read1 : SRR764782.283; read2 : SRR764782.284. ```. Shall I just ignore or salmon assumes paired end reads as different reads?. Next question: why non-alignment mode is better than alignment mode?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293512406
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293512406:293,Safety,Detect,Detected,293,"Next, I am using alignment mode for paired-end reads aligned to reference transcript using bwa and I get this warning:. ```; WARNING: Detected suspicious pair ---; The names are different:; read1 : SRR764782.282; read2 : SRR764782.283. [2017-04-12 10:30:00.202] [jointLog] [warning]. WARNING: Detected suspicious pair ---; The names are different:; read1 : SRR764782.283; read2 : SRR764782.284. ```. Shall I just ignore or salmon assumes paired end reads as different reads?. Next question: why non-alignment mode is better than alignment mode?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293512406
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1219488397:74,Safety,Detect,Detected,74,"Hi @shilpagarg, did you find a solution for the warning below?. `WARNING: Detected suspicious pair ---; The names are different:; read1 : SRR764782.282; read2 : SRR764782.283`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1219488397
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1343751408:7,Safety,detect,detected,7,"Salmon detected suspicious pair, will it be quantified?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1343751408
https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1343760837:194,Availability,error,error,194,"Thanks for your quick reply. My bam file is filtered, and there will be some single-ended reads. I don’t know how to deal with these 'orphan'. The program give me the info:orphan status: paired error likelihood: inf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1343760837
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-296820845:91,Deployability,update,updates,91,"Hi @mdshw5,. I'm still interested in trying to figure out what might be going on here; any updates?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-296820845
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-296880535:3,Deployability,update,updates,3,"No updates right now. Consider this issue not reproduced yet, as I haven't had time to dig into the details. Hopefully it's an issue on my end, but expect an update in the next couple of days.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-296880535
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-296880535:158,Deployability,update,update,158,"No updates right now. Consider this issue not reproduced yet, as I haven't had time to dig into the details. Hopefully it's an issue on my end, but expect an update in the next couple of days.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-296880535
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:35,Availability,error,error,35,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:257,Availability,error,error,257,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:120,Deployability,pipeline,pipeline,120,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:174,Deployability,configurat,configuration,174,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:87,Integrability,wrap,wrapped,87,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:174,Modifiability,config,configuration,174,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:287,Testability,log,logging,287,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:901,Testability,log,logging,901,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:941,Testability,log,logging,941,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:991,Testability,log,logging,991,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303739707:234,Availability,down,down,234,"Hey Matt,. First, thanks for the detailed analysis! Second, phewww --- I looked for a while in the indexer and didn't see anything that could have caused lost transcripts, so I'm glad that's not the case. It sounds like you had to go down a bit of a rabbit hole to figure this out. Anyway, I'll take a look at where Salmon might be producing an EOF marker on stderr anyway (I'd like to avoid that behavior if I'm indeed doing that). Thanks again for reporting back on this! I'll close the issue for now since it seems resolved.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303739707
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303739707:386,Safety,avoid,avoid,386,"Hey Matt,. First, thanks for the detailed analysis! Second, phewww --- I looked for a while in the indexer and didn't see anything that could have caused lost transcripts, so I'm glad that's not the case. It sounds like you had to go down a bit of a rabbit hole to figure this out. Anyway, I'll take a look at where Salmon might be producing an EOF marker on stderr anyway (I'd like to avoid that behavior if I'm indeed doing that). Thanks again for reporting back on this! I'll close the issue for now since it seems resolved.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303739707
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303813062:290,Availability,down,down,290,"Yeah, this is definitely not your issue. In fact, I just figured out that my explanation above was incomplete. **You don't need to investigate anything on your end**. I simply didn't flush the entire contents of a FASTA file to disk before calling `salmon index`. In the course of tracking down the issue I fixed some of my code indentation, bringing some of my code into a more global scope, where the `with` context handler I was using to hold the FASTA file open went out of scope, flushing my final writes to disk. Sigh...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303813062
https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303813062:169,Usability,simpl,simply,169,"Yeah, this is definitely not your issue. In fact, I just figured out that my explanation above was incomplete. **You don't need to investigate anything on your end**. I simply didn't flush the entire contents of a FASTA file to disk before calling `salmon index`. In the course of tracking down the issue I fixed some of my code indentation, bringing some of my code into a more global scope, where the `with` context handler I was using to hold the FASTA file open went out of scope, flushing my final writes to disk. Sigh...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303813062
https://github.com/COMBINE-lab/salmon/issues/133#issuecomment-296703263:156,Testability,test,testing,156,"Hi Jenny,. Thanks for this detailed report. I'd be interested in taking a look at some of the data if it is public or possible to share for the purposes of testing. It is true that if a read is equally explicable by a short and long transcript (and if there is not a lot of other read evidence of the long transcript), the inference algorithm will prefer to assign the read to the shorter isoform, since this will increase the overall likelihood of the observed sequenced fragments. Of course, one could always run salmon's Gibbs sampler `--numGibbsSamples` or bootstrap sampler `--numBootstraps` to determine the variance in these point estimates. I'm on travel for the next couple of days, but will be happy to look into this more deeply when I return. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/133#issuecomment-296703263
https://github.com/COMBINE-lab/salmon/issues/133#issuecomment-2048928795:262,Integrability,wrap,wraps,262,I am also seeing this. The most highly estimated and shortest isoform of KIT has no supporting read but a TPM of 40. ![image](https://github.com/COMBINE-lab/salmon/assets/631218/f250e8cd-3f99-4fcb-8032-bc1897ca9322). Using DRAGEN RNA version 4.2.4 which I think wraps Salmon. In any of your BAM files?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/133#issuecomment-2048928795
https://github.com/COMBINE-lab/salmon/issues/134#issuecomment-296513984:76,Deployability,release,release,76,"Hi @halexand,. Please do let me know if this is fixed for you in the latest release. I believe it's the same as the issue reported [here](https://github.com/COMBINE-lab/salmon/issues/105), which has indeed been fixed since v0.8.0. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134#issuecomment-296513984
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299870076:320,Integrability,depend,depends,320,"Hi @sudeep71,. Can you upload the JSON files in your index directory? The problem seems to be that fields that are expected to exist in the index are missing. Since you built Salmon from source yourself, if you built it in the same directory as a previous version, did you run `cmake ..` first? Since the newest version depends on upstream changes in RapMap, those external dependences need to be re-fetched. In fact, I'd suggest that you remove (or move) the entire build directory, and then make a new one to start the build process from scratch. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299870076
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299870076:374,Integrability,depend,dependences,374,"Hi @sudeep71,. Can you upload the JSON files in your index directory? The problem seems to be that fields that are expected to exist in the index are missing. Since you built Salmon from source yourself, if you built it in the same directory as a previous version, did you run `cmake ..` first? Since the newest version depends on upstream changes in RapMap, those external dependences need to be re-fetched. In fact, I'd suggest that you remove (or move) the entire build directory, and then make a new one to start the build process from scratch. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299870076
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:69,Deployability,install,installed,69,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:92,Deployability,install,installing,92,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:175,Deployability,install,install,175,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:265,Deployability,install,install,265,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:387,Deployability,install,install,387,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:559,Deployability,install,install,559,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992:282,Testability,test,test,282,"Hi @rob-p,. i have pasted the three .json file data below. The way i installed was by first installing boost (./bootstrap.sh --prefix=/usr/local), and setting up boost. I did install clang 3.9 too. Then i did use ; cmake -DBOOST_ROOT=/usr/local, make and sudo make install and make test. Then i copied the executable made in bin to /usr/local/bin as sudo. May be it's me using sudo make install which is goofing stuff.. Let me try to reinstall without ""sudo"". I have used salmon 0.8.1, with no problems on another machine. So, on this machine this is a fresh install. I do think there is a script which does fetch Rapmap.. Thanks. Sudeep. #header.json. ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q5"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false,; ""SeqHash"": ""bc7ce7a64f79aeb355818ffc5050bf682f281160738498d11dbc3330b67c4889"",; ""NameHash"": ""3843f236fc87b02e5c477daa29053725d376d8725c10ec23ee2225e8fab6326e""; }; }. #refino.json; {; ""ReferenceFiles"": [; ""Equus_caballus.EquCab2.cds.all.fa""; ]; }. #versioninfo.json. {; ""indexVersion"": 2,; ""hasAuxIndex"": false,; ""auxKmerLength"": 31,; ""indexType"": 1; }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-299885992
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916:40,Availability,error,error,40,"@sudeep71 Hi there, I run into the same error when I use salmon. Would please tell me what you did to set a correct PATH ? Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754:160,Availability,error,error,160,"When you compile the program, the last few lines tell you to make links to; the salmon executable and the LIB file. I forgot the lib file and was; getting this error. You can run the executable from the area of install; (works fine) or create a path to /urs/local/bin or any other folder you; want to install. You need to do this for both the files. For making path in linux:; https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux. Hope this helps. On Mon, May 22, 2017 at 7:03 AM, Darlingfuer <notifications@github.com>; wrote:. > @sudeep71 <https://github.com/sudeep71> Hi there, I run into the same; > error when I use salmon. Would please tell me what you did to set a correct; > PATH ? Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGcbqM0Z1aeqPtMmppyF51gj9DvEJh5Vks5r8WtpgaJpZM4NT7ex>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754:633,Availability,error,error,633,"When you compile the program, the last few lines tell you to make links to; the salmon executable and the LIB file. I forgot the lib file and was; getting this error. You can run the executable from the area of install; (works fine) or create a path to /urs/local/bin or any other folder you; want to install. You need to do this for both the files. For making path in linux:; https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux. Hope this helps. On Mon, May 22, 2017 at 7:03 AM, Darlingfuer <notifications@github.com>; wrote:. > @sudeep71 <https://github.com/sudeep71> Hi there, I run into the same; > error when I use salmon. Would please tell me what you did to set a correct; > PATH ? Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGcbqM0Z1aeqPtMmppyF51gj9DvEJh5Vks5r8WtpgaJpZM4NT7ex>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754:211,Deployability,install,install,211,"When you compile the program, the last few lines tell you to make links to; the salmon executable and the LIB file. I forgot the lib file and was; getting this error. You can run the executable from the area of install; (works fine) or create a path to /urs/local/bin or any other folder you; want to install. You need to do this for both the files. For making path in linux:; https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux. Hope this helps. On Mon, May 22, 2017 at 7:03 AM, Darlingfuer <notifications@github.com>; wrote:. > @sudeep71 <https://github.com/sudeep71> Hi there, I run into the same; > error when I use salmon. Would please tell me what you did to set a correct; > PATH ? Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGcbqM0Z1aeqPtMmppyF51gj9DvEJh5Vks5r8WtpgaJpZM4NT7ex>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754
https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754:301,Deployability,install,install,301,"When you compile the program, the last few lines tell you to make links to; the salmon executable and the LIB file. I forgot the lib file and was; getting this error. You can run the executable from the area of install; (works fine) or create a path to /urs/local/bin or any other folder you; want to install. You need to do this for both the files. For making path in linux:; https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux. Hope this helps. On Mon, May 22, 2017 at 7:03 AM, Darlingfuer <notifications@github.com>; wrote:. > @sudeep71 <https://github.com/sudeep71> Hi there, I run into the same; > error when I use salmon. Would please tell me what you did to set a correct; > PATH ? Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGcbqM0Z1aeqPtMmppyF51gj9DvEJh5Vks5r8WtpgaJpZM4NT7ex>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281:977,Availability,error,error,977,"Hi Brian,. In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes). We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed. Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281:650,Modifiability,extend,extended,650,"Hi Brian,. In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes). We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed. Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281:1010,Security,validat,validation,1010,"Hi Brian,. In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes). We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed. Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281:331,Testability,test,tests,331,"Hi Brian,. In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes). We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed. Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281
https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305539421:877,Availability,error,error,877,"Thanks for the responses. Here's the records for the first read in my bam:; ```; NB501285:81:HVJFGBGX2:1:11101:7287:1044 105 uc008cdk.2|C4b 2845 1 36M = 2845 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 149 uc008cdk.2|C4b 2845 0 * = 2845 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 361 uc008cdl.2|C4b 2845 1 36M = 2845 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 405 uc008cdl.2|C4b 2845 0 * = 2845 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 361 uc008cdp.1|C4a 2814 1 36M = 2814 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 405 uc008cdp.1|C4a 2814 0 * = 2814 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; ```; Picard crashes on the fourth record with error: ; ```; ERROR: Record 4, Read name NB501285:81:HVJFGBGX2:1:11101:7287:1044, Not primary alignment flag should not be set for unmapped read.; ```; It looks like the issue is that Salmon is setting bit 4 (read unmapped) for the mates and is setting bit 256 (not primary alignment) for the secondary alignments. Both bits 4 and 256 are set for the mate of a secondary alignment which picard doesn't like.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305539421
