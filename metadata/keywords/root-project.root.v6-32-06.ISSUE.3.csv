id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/4892:267,Deployability,patch,patch,267,"Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4892
https://github.com/root-project/root/pull/4893:255,Availability,down,down,255,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:327,Availability,down,down,327,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:556,Availability,error,error,556,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:668,Availability,error,error,668,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:831,Availability,error,error,831,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:854,Availability,error,error,854,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:1211,Availability,Error,Error,1211,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:1222,Availability,Error,Error,1222,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4893:289,Deployability,patch,patch,289,"… with ROOT Mutex on. Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4893
https://github.com/root-project/root/pull/4895:417,Availability,failure,failures,417,"In order to solve ROOT-10109, and until #3640 is completed and merged, we temporarily add a pythonisation both in PyROOT and experimental PyROOT to get the overloads for GetBinErrorUp; and GetBinErrorLow of TH1 obtained via using declarations from TH2. On the other hand (and unrelated to the change above), we eliminate the use of `TInterpreter::EnableAutoLoading` from cppyy in experimental PyROOT, given the tests failures seen last night:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/393/; due to the deprecation introduced by https://github.com/root-project/root/pull/4868",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4895
https://github.com/root-project/root/pull/4895:411,Testability,test,tests,411,"In order to solve ROOT-10109, and until #3640 is completed and merged, we temporarily add a pythonisation both in PyROOT and experimental PyROOT to get the overloads for GetBinErrorUp; and GetBinErrorLow of TH1 obtained via using declarations from TH2. On the other hand (and unrelated to the change above), we eliminate the use of `TInterpreter::EnableAutoLoading` from cppyy in experimental PyROOT, given the tests failures seen last night:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/393/; due to the deprecation introduced by https://github.com/root-project/root/pull/4868",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4895
https://github.com/root-project/root/pull/4897:57,Availability,error,error,57,"Seems to be, buffer is not released correctly.; I guess, error should be fixed in cling repository first",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4897:27,Deployability,release,released,27,"Seems to be, buffer is not released correctly.; I guess, error should be fixed in cling repository first",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4897
https://github.com/root-project/root/pull/4899:44,Deployability,release,released,44,"If fFormula already allocated, it should be released",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4899
https://github.com/root-project/root/pull/4899:20,Energy Efficiency,allocate,allocated,20,"If fFormula already allocated, it should be released",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4899
https://github.com/root-project/root/pull/4901:8,Availability,error,error,8,In most error situations preallocated buffer was not released,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4901
https://github.com/root-project/root/pull/4901:53,Deployability,release,released,53,In most error situations preallocated buffer was not released,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4901
https://github.com/root-project/root/pull/4902:55,Deployability,release,released,55,"Appears when method returns nullptr, but buffer is not released.; Also improve TTreeRow methods concerning reallocation or cleaning of memory",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4902
https://github.com/root-project/root/pull/4908:50,Deployability,release,released,50,"When url has options before, it was not correctly released; Following code always produced memory leak:. TUrl url;; url.SetUrl(""http://server/file?arg=1&arg2=2"");; url.SetUrl(""http://server/file?arg=1&arg2=2"");. Simplify handling of options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4908
https://github.com/root-project/root/pull/4908:212,Usability,Simpl,Simplify,212,"When url has options before, it was not correctly released; Following code always produced memory leak:. TUrl url;; url.SetUrl(""http://server/file?arg=1&arg2=2"");; url.SetUrl(""http://server/file?arg=1&arg2=2"");. Simplify handling of options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4908
https://github.com/root-project/root/pull/4910:55,Performance,perform,performance,55,"Remove unnecessary checks, use R__likely macro to gain performance of; main loop",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4910
https://github.com/root-project/root/pull/4911:34,Deployability,Integrat,Integrates,34,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4911
https://github.com/root-project/root/pull/4911:34,Integrability,Integrat,Integrates,34,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4911
https://github.com/root-project/root/pull/4911:114,Modifiability,extend,extends,114,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4911
https://github.com/root-project/root/pull/4911:219,Usability,simpl,simple,219,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4911
https://github.com/root-project/root/pull/4913:211,Modifiability,coupling,coupling,211,Switch from heuristics discovery of a friend state change (i.e. a friend that is a TChain and move from one file to the other) to a push notification of the change (via the TFriendElement object). This increase coupling between the main and friend TTree/TChain and thus need to be thoroughly tested before being considered for backport.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4913:292,Testability,test,tested,292,Switch from heuristics discovery of a friend state change (i.e. a friend that is a TChain and move from one file to the other) to a push notification of the change (via the TFriendElement object). This increase coupling between the main and friend TTree/TChain and thus need to be thoroughly tested before being considered for backport.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4913
https://github.com/root-project/root/pull/4923:268,Deployability,release,release,268,"I just looked in the code while want to add support of TGeoTesselated to JSROOT.; Here is first attempt: https://jsroot.gsi.de/dev/examples.htm#tgeo_tess. Found and fixed issues:; * Fix potential memory access problem in new TGeoFacet; * In assign operator one should release memory before allocating new one; * `fIvert` member was not copied in assign operator; * Eliminate copy constructor and assign operator for TGeoTesselated (not used, default is ok). For several TGeo classes like TGeoPolygon, TGeoPcon, TGeoPgon one should declare assign operator and copy constructor as deleted or really implement them. Otherwise if anybody use them, this will produce memory leak / seg. violation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4923:203,Security,access,access,203,"I just looked in the code while want to add support of TGeoTesselated to JSROOT.; Here is first attempt: https://jsroot.gsi.de/dev/examples.htm#tgeo_tess. Found and fixed issues:; * Fix potential memory access problem in new TGeoFacet; * In assign operator one should release memory before allocating new one; * `fIvert` member was not copied in assign operator; * Eliminate copy constructor and assign operator for TGeoTesselated (not used, default is ok). For several TGeo classes like TGeoPolygon, TGeoPcon, TGeoPgon one should declare assign operator and copy constructor as deleted or really implement them. Otherwise if anybody use them, this will produce memory leak / seg. violation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4923
https://github.com/root-project/root/pull/4925:248,Deployability,update,updated,248,"This PR fixes ROOT-10081. ; When calling TRandom1::SetSeed(seed ) a different initialization was done respect to calling ; TRandom1::SetSeeds( { seed, 0}, 0); With this PR the same initialization is now performed . In addition the documentation is updated for TRandom2::SetSeed. In that case the store seed value is not the same passed and the user needs to store by himself the seed value in order to reproduce the generated sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4925
https://github.com/root-project/root/pull/4925:203,Performance,perform,performed,203,"This PR fixes ROOT-10081. ; When calling TRandom1::SetSeed(seed ) a different initialization was done respect to calling ; TRandom1::SetSeeds( { seed, 0}, 0); With this PR the same initialization is now performed . In addition the documentation is updated for TRandom2::SetSeed. In that case the store seed value is not the same passed and the user needs to store by himself the seed value in order to reproduce the generated sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4925
https://github.com/root-project/root/pull/4927:108,Deployability,release,released,108,"When calling TOracleStatement::GetBinary() function, memory was; allocated with `malloc(len)` operator, but released with `delete [] buf`; Definitely wrong. Nobody was using it before - or clib was doing; something wrong. Adjust Oracle/MySQL/SQLite/ODBC/PgSQL classes to c++11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4927
https://github.com/root-project/root/pull/4927:65,Energy Efficiency,allocate,allocated,65,"When calling TOracleStatement::GetBinary() function, memory was; allocated with `malloc(len)` operator, but released with `delete [] buf`; Definitely wrong. Nobody was using it before - or clib was doing; something wrong. Adjust Oracle/MySQL/SQLite/ODBC/PgSQL classes to c++11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4927
https://github.com/root-project/root/pull/4932:245,Testability,Test,Test,245,"A minor detail was missing the merged PR #4337, the training history plots automatically saved by TMVA-Gui were missing a filename. I recommend this fix to be merged into v6-20-00 soon since the 'Training History' feature is now in that branch. Test:. ```; . bin/thisroot.sh; cd tutorials/tmva/; make; ./TMVAClassification; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See the DNN_CPU_valError and trainingError plotted, not that data points are only added for every epoch printed in MethodDNN.cxx ; ```. Result excerpt:. > Info in <TCanvas::Print>: eps file dataset/plots/TrainingHistory.eps has been created; > Info in <TCanvas::Print>: file dataset/plots/TrainingHistory.png has been created. Previously read:; > Info in <TCanvas::Print>: eps file dataset/plots/.eps has been created; > Info in <TCanvas::Print>: file dataset/plots/.png has been created. Any questions please ask",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4932
https://github.com/root-project/root/pull/4933:557,Energy Efficiency,Reduce,Reduces,557,"The current variant-based design of ROOT 7 histogram axes has a number of problems, ranging from inflexibility (users can't add new axis types) to [exponential compilation times](https://sft.its.cern.ch/jira/browse/ROOT-10532). As a first step towards resolving these problems, this PR moves RAxis closer to an inheritance-based design. Along the way, this PR also... - Completely revamps the RAxis test suite with much greater test coverage (which uncovered [ROOT-10555](https://sft.its.cern.ch/jira/browse/ROOT-10555) as a topic of future discussion).; - Reduces the amount of work needed to implement a new RAxis type.; - Resolves [ROOT-10401](https://sft.its.cern.ch/jira/browse/ROOT-10401), [ROOT-10402](https://sft.its.cern.ch/jira/browse/ROOT-10402), [ROOT-10404](https://sft.its.cern.ch/jira/browse/ROOT-10404), [ROOT-10405](https://sft.its.cern.ch/jira/browse/ROOT-10405), [ROOT-10554](https://sft.its.cern.ch/jira/browse/ROOT-10554), and many more minor issues uncovered during testing for which I didn't bother creating a Jira ticket.; - Is a step towards resolving [ROOT-10532](https://sft.its.cern.ch/jira/browse/ROOT-10532). Due to the amount of changes, I would advise using a commit-wise review approach. While the PR's history is not 100% perfect, it is sufficiently well squashed to lend itself to such an approach.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4933
https://github.com/root-project/root/pull/4933:311,Modifiability,inherit,inheritance-based,311,"The current variant-based design of ROOT 7 histogram axes has a number of problems, ranging from inflexibility (users can't add new axis types) to [exponential compilation times](https://sft.its.cern.ch/jira/browse/ROOT-10532). As a first step towards resolving these problems, this PR moves RAxis closer to an inheritance-based design. Along the way, this PR also... - Completely revamps the RAxis test suite with much greater test coverage (which uncovered [ROOT-10555](https://sft.its.cern.ch/jira/browse/ROOT-10555) as a topic of future discussion).; - Reduces the amount of work needed to implement a new RAxis type.; - Resolves [ROOT-10401](https://sft.its.cern.ch/jira/browse/ROOT-10401), [ROOT-10402](https://sft.its.cern.ch/jira/browse/ROOT-10402), [ROOT-10404](https://sft.its.cern.ch/jira/browse/ROOT-10404), [ROOT-10405](https://sft.its.cern.ch/jira/browse/ROOT-10405), [ROOT-10554](https://sft.its.cern.ch/jira/browse/ROOT-10554), and many more minor issues uncovered during testing for which I didn't bother creating a Jira ticket.; - Is a step towards resolving [ROOT-10532](https://sft.its.cern.ch/jira/browse/ROOT-10532). Due to the amount of changes, I would advise using a commit-wise review approach. While the PR's history is not 100% perfect, it is sufficiently well squashed to lend itself to such an approach.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4933
https://github.com/root-project/root/pull/4933:399,Testability,test,test,399,"The current variant-based design of ROOT 7 histogram axes has a number of problems, ranging from inflexibility (users can't add new axis types) to [exponential compilation times](https://sft.its.cern.ch/jira/browse/ROOT-10532). As a first step towards resolving these problems, this PR moves RAxis closer to an inheritance-based design. Along the way, this PR also... - Completely revamps the RAxis test suite with much greater test coverage (which uncovered [ROOT-10555](https://sft.its.cern.ch/jira/browse/ROOT-10555) as a topic of future discussion).; - Reduces the amount of work needed to implement a new RAxis type.; - Resolves [ROOT-10401](https://sft.its.cern.ch/jira/browse/ROOT-10401), [ROOT-10402](https://sft.its.cern.ch/jira/browse/ROOT-10402), [ROOT-10404](https://sft.its.cern.ch/jira/browse/ROOT-10404), [ROOT-10405](https://sft.its.cern.ch/jira/browse/ROOT-10405), [ROOT-10554](https://sft.its.cern.ch/jira/browse/ROOT-10554), and many more minor issues uncovered during testing for which I didn't bother creating a Jira ticket.; - Is a step towards resolving [ROOT-10532](https://sft.its.cern.ch/jira/browse/ROOT-10532). Due to the amount of changes, I would advise using a commit-wise review approach. While the PR's history is not 100% perfect, it is sufficiently well squashed to lend itself to such an approach.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4933
https://github.com/root-project/root/pull/4933:428,Testability,test,test,428,"The current variant-based design of ROOT 7 histogram axes has a number of problems, ranging from inflexibility (users can't add new axis types) to [exponential compilation times](https://sft.its.cern.ch/jira/browse/ROOT-10532). As a first step towards resolving these problems, this PR moves RAxis closer to an inheritance-based design. Along the way, this PR also... - Completely revamps the RAxis test suite with much greater test coverage (which uncovered [ROOT-10555](https://sft.its.cern.ch/jira/browse/ROOT-10555) as a topic of future discussion).; - Reduces the amount of work needed to implement a new RAxis type.; - Resolves [ROOT-10401](https://sft.its.cern.ch/jira/browse/ROOT-10401), [ROOT-10402](https://sft.its.cern.ch/jira/browse/ROOT-10402), [ROOT-10404](https://sft.its.cern.ch/jira/browse/ROOT-10404), [ROOT-10405](https://sft.its.cern.ch/jira/browse/ROOT-10405), [ROOT-10554](https://sft.its.cern.ch/jira/browse/ROOT-10554), and many more minor issues uncovered during testing for which I didn't bother creating a Jira ticket.; - Is a step towards resolving [ROOT-10532](https://sft.its.cern.ch/jira/browse/ROOT-10532). Due to the amount of changes, I would advise using a commit-wise review approach. While the PR's history is not 100% perfect, it is sufficiently well squashed to lend itself to such an approach.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4933
https://github.com/root-project/root/pull/4933:988,Testability,test,testing,988,"The current variant-based design of ROOT 7 histogram axes has a number of problems, ranging from inflexibility (users can't add new axis types) to [exponential compilation times](https://sft.its.cern.ch/jira/browse/ROOT-10532). As a first step towards resolving these problems, this PR moves RAxis closer to an inheritance-based design. Along the way, this PR also... - Completely revamps the RAxis test suite with much greater test coverage (which uncovered [ROOT-10555](https://sft.its.cern.ch/jira/browse/ROOT-10555) as a topic of future discussion).; - Reduces the amount of work needed to implement a new RAxis type.; - Resolves [ROOT-10401](https://sft.its.cern.ch/jira/browse/ROOT-10401), [ROOT-10402](https://sft.its.cern.ch/jira/browse/ROOT-10402), [ROOT-10404](https://sft.its.cern.ch/jira/browse/ROOT-10404), [ROOT-10405](https://sft.its.cern.ch/jira/browse/ROOT-10405), [ROOT-10554](https://sft.its.cern.ch/jira/browse/ROOT-10554), and many more minor issues uncovered during testing for which I didn't bother creating a Jira ticket.; - Is a step towards resolving [ROOT-10532](https://sft.its.cern.ch/jira/browse/ROOT-10532). Due to the amount of changes, I would advise using a commit-wise review approach. While the PR's history is not 100% perfect, it is sufficiently well squashed to lend itself to such an approach.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4933
https://github.com/root-project/root/pull/4934:250,Testability,Test,Test,250,"A minor detail was missing from the merged PR #4337, the training history plots automatically saved by TMVA-Gui were missing a filename. I recommend this fix to be merged into v6-20-00 soon since the 'Training History' feature is now in that branch. Test:. ```; . bin/thisroot.sh; cd tutorials/tmva/; make; ./TMVAClassification; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See the DNN_CPU_valError and trainingError plotted, not that data points are only added for every epoch printed in MethodDNN.cxx ; ```; Result excerpt:. > Info in TCanvas::Print: eps file dataset/plots/TrainingHistory.eps has been created; > Info in TCanvas::Print: file dataset/plots/TrainingHistory.png has been created; . Previously read:. > Info in TCanvas::Print: eps file dataset/plots/.eps has been created; > Info in TCanvas::Print: file dataset/plots/.png has been created. Any questions please ask",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4934
https://github.com/root-project/root/pull/4935:22,Testability,test,tests,22,Plus fix two leaks in tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4935
https://github.com/root-project/root/pull/4939:391,Integrability,depend,depends,391,"…chInstalledSoftware. This change was already proposed in PR 4647, commit b8cd32, for the; following reason: apparently, SearchInstalledSoftware is called AFTER RootInstallDirs;; the consequence of this is that CMAKE_INSTALL_PYROOTDIR does not take; the proper value ONLY IF its value is NOT specified by the user.; The reason for this is that the value assigned to; CMAKE_INSTALL_PYROOTDIR depends on the Python version that is found.; For this reason, the search for Python is here moved to; RootBuildOptions, which is run BEFORE RootInstallDirs, and this; guarantees that the default value is the correct one. Example of current (wrong) behavior on an Ubuntu machine:; CMAKE_INSTALL_PYROOTDIR -> lib/site-packages. Example of correct behavior (this PR):; CMAKE_INSTALL_PYROOTDIR -> lib/python2.7/dist-packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4939
https://github.com/root-project/root/pull/4940:391,Integrability,depend,depends,391,"…chInstalledSoftware. This change was already proposed in PR 4647, commit b8cd32, for the; following reason: apparently, SearchInstalledSoftware is called AFTER RootInstallDirs;; the consequence of this is that CMAKE_INSTALL_PYROOTDIR does not take; the proper value ONLY IF its value is NOT specified by the user.; The reason for this is that the value assigned to; CMAKE_INSTALL_PYROOTDIR depends on the Python version that is found.; For this reason, the search for Python is here moved to; RootBuildOptions, which is run BEFORE RootInstallDirs, and this; guarantees that the default value is the correct one. Example of current (wrong) behavior on an Ubuntu machine:; CMAKE_INSTALL_PYROOTDIR -> lib/site-packages. Example of correct behavior (this PR):; CMAKE_INSTALL_PYROOTDIR -> lib/python2.7/dist-packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4940
https://github.com/root-project/root/pull/4943:282,Modifiability,variab,variable,282,"1. Memory leak - when ""pie"" draw option is used, created TPie object is not destroyed; 2. When tf3 draw option provided to histogram, it crashes `h3->Draw(""tf3"")` ; 3. ""TF3"" and ""ISO"" strings does not correctly suppressed from options when decoded; 4. TF3 pointer remains in global variable and not cleared when TF3 is deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4943:299,Usability,clear,cleared,299,"1. Memory leak - when ""pie"" draw option is used, created TPie object is not destroyed; 2. When tf3 draw option provided to histogram, it crashes `h3->Draw(""tf3"")` ; 3. ""TF3"" and ""ISO"" strings does not correctly suppressed from options when decoded; 4. TF3 pointer remains in global variable and not cleared when TF3 is deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4943
https://github.com/root-project/root/pull/4944:318,Availability,avail,available,318,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4944
https://github.com/root-project/root/pull/4944:12,Deployability,patch,patch,12,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4944
https://github.com/root-project/root/pull/4944:664,Deployability,Patch,Patch,664,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4944
https://github.com/root-project/root/pull/4944:87,Performance,load,loading,87,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4944
https://github.com/root-project/root/pull/4944:18,Safety,avoid,avoids,18,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4944
https://github.com/root-project/root/pull/4945:197,Deployability,install,installation,197,"In order to:; - make the build system less entangled and more maintainable ; - give a solution to the bug mentioned in https://github.com/root-project/root/pull/4939; we move the search for Python installation in a new script called SearchRootCoreDeps, where also the search for main Root dependencies will happen at some point. The misleading 'python' option, which was basically enabling pyroot, is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:289,Integrability,depend,dependencies,289,"In order to:; - make the build system less entangled and more maintainable ; - give a solution to the bug mentioned in https://github.com/root-project/root/pull/4939; we move the search for Python installation in a new script called SearchRootCoreDeps, where also the search for main Root dependencies will happen at some point. The misleading 'python' option, which was basically enabling pyroot, is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4945:62,Modifiability,maintainab,maintainable,62,"In order to:; - make the build system less entangled and more maintainable ; - give a solution to the bug mentioned in https://github.com/root-project/root/pull/4939; we move the search for Python installation in a new script called SearchRootCoreDeps, where also the search for main Root dependencies will happen at some point. The misleading 'python' option, which was basically enabling pyroot, is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4945
https://github.com/root-project/root/pull/4947:96,Testability,test,test-treeprocessormt,96,"This properly initialize the thread pool manager, and fixes the crash in `gtest-tree-treeplayer-test-treeprocessormt` on Windows, but the Jira issue ROOT-10561 has still to be fixed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4947
https://github.com/root-project/root/pull/4948:10,Deployability,update,update,10,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4948
https://github.com/root-project/root/pull/4948:158,Deployability,upgrade,upgrade,158,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4948
https://github.com/root-project/root/pull/4948:51,Performance,optimiz,optimization,51,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4948
https://github.com/root-project/root/pull/4948:111,Testability,test,tests,111,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4948
https://github.com/root-project/root/pull/4949:29,Testability,test,tests,29,"@gganis Do we have somewhere tests for the name parsing? I couldn't find them. Also, we probably want to add tests for the parsing with options or queries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4949
https://github.com/root-project/root/pull/4949:109,Testability,test,tests,109,"@gganis Do we have somewhere tests for the name parsing? I couldn't find them. Also, we probably want to add tests for the parsing with options or queries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4949
https://github.com/root-project/root/pull/4952:207,Modifiability,variab,variables,207,"TPainter3dAlgorithms used only in hist painter, therefore no need to export it to public. Add clip settings to TF3 class, but do not store them in file, therefore do not change class version. Exclude static variables, used for TF3 clipping before",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4952
https://github.com/root-project/root/pull/4953:292,Testability,test,test-treeprocessormt,292,"…plicitMT on. Move the creation of `TThreadExecutor pool` before the call of `Internal::MakeClusters()`, to make sure it is properly initialized when calling `ROOT::Internal::TPoolManager::GetPoolSize()` (via `ROOT::GetImplicitMTPoolSize()`); This fix a crash with the `gtest-tree-treeplayer-test-treeprocessormt` test on Windows, due to a division by zero at line 224 in `TTreeProcessorMT`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4953:314,Testability,test,test,314,"…plicitMT on. Move the creation of `TThreadExecutor pool` before the call of `Internal::MakeClusters()`, to make sure it is properly initialized when calling `ROOT::Internal::TPoolManager::GetPoolSize()` (via `ROOT::GetImplicitMTPoolSize()`); This fix a crash with the `gtest-tree-treeplayer-test-treeprocessormt` test on Windows, due to a division by zero at line 224 in `TTreeProcessorMT`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4953
https://github.com/root-project/root/pull/4954:94,Safety,avoid,avoid,94,"Also simplify LinkDef.h file for TGraph2DPainter.; One can use ClassDef(TGraph2DPainter,0) to avoid complication by dictionary generation.; Class is not intend to be stored in the ROOT file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4954:5,Usability,simpl,simplify,5,"Also simplify LinkDef.h file for TGraph2DPainter.; One can use ClassDef(TGraph2DPainter,0) to avoid complication by dictionary generation.; Class is not intend to be stored in the ROOT file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4954
https://github.com/root-project/root/pull/4956:33,Security,access,access,33,Some builds might not be able to access files at root://eospublic.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4956
https://github.com/root-project/root/pull/4957:83,Deployability,update,updates,83,"In preparation for the switch of experimental PyROOT to default in master, this PR updates the cppyy packages to their latest version:; - cppyy-1.6.1 (until [here](https://bitbucket.org/wlav/cppyy/commits/d7802d6e6e74c5359acfaf09443b9a1fc87baf6b)); - CPyCppyy-1.10.1 (until [here](https://bitbucket.org/wlav/cpycppyy/commits/c780f284d0cd0ff81f06007b620797cb18b0e269)) ; - clingwrapper-1.10.7 (until [here](https://bitbucket.org/wlav/cppyy-backend/commits/8200a3709d76b56cf06be89d26a4682a2c9c59cd)). Moreover, the PR also introduces a few fixes and disables one test until the following TCling issue is fixed:; https://sft.its.cern.ch/jira/browse/ROOT-10488",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4957
https://github.com/root-project/root/pull/4957:561,Testability,test,test,561,"In preparation for the switch of experimental PyROOT to default in master, this PR updates the cppyy packages to their latest version:; - cppyy-1.6.1 (until [here](https://bitbucket.org/wlav/cppyy/commits/d7802d6e6e74c5359acfaf09443b9a1fc87baf6b)); - CPyCppyy-1.10.1 (until [here](https://bitbucket.org/wlav/cpycppyy/commits/c780f284d0cd0ff81f06007b620797cb18b0e269)) ; - clingwrapper-1.10.7 (until [here](https://bitbucket.org/wlav/cppyy-backend/commits/8200a3709d76b56cf06be89d26a4682a2c9c59cd)). Moreover, the PR also introduces a few fixes and disables one test until the following TCling issue is fixed:; https://sft.its.cern.ch/jira/browse/ROOT-10488",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4957
https://github.com/root-project/root/pull/4961:252,Deployability,update,update,252,"* Optimize items height in SummaryView; * Use check boxes for fRnrSelf ; * Handle elements highlight in SummaryView in both directions; * Move GED functionality to separated controller and view file; * Provide ""Close"" button for GED; * Handle elements update also for SummaryView and GED",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4961:2,Performance,Optimiz,Optimize,2,"* Optimize items height in SummaryView; * Use check boxes for fRnrSelf ; * Handle elements highlight in SummaryView in both directions; * Move GED functionality to separated controller and view file; * Provide ""Close"" button for GED; * Handle elements update also for SummaryView and GED",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4961
https://github.com/root-project/root/pull/4964:82,Availability,Error,Error,82,"If one tries to update a directory inside an existing file, Snapshot complains:; `Error in <TFile::mkdir>: An object with name hi exists already`. This fixes the problem by using the `returnExistingDirectory` option in `mkdir`. First mentioned in the forum [here](https://root-forum.cern.ch/t/snapshot-complains-when-updating-existing-directory/37935). Similar to [PR4649](https://github.com/root-project/root/pull/4649).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4964:16,Deployability,update,update,16,"If one tries to update a directory inside an existing file, Snapshot complains:; `Error in <TFile::mkdir>: An object with name hi exists already`. This fixes the problem by using the `returnExistingDirectory` option in `mkdir`. First mentioned in the forum [here](https://root-forum.cern.ch/t/snapshot-complains-when-updating-existing-directory/37935). Similar to [PR4649](https://github.com/root-project/root/pull/4649).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4964
https://github.com/root-project/root/pull/4965:9,Deployability,update,updates,9,"When one updates a file using `Snapshot`, one ends up with multiple cycles:; ```python; In [10]: f.hi.ls(); TDirectoryFile*		hi	hi; KEY: TTree	there;2	there; KEY: TTree	there;1	there; ```; This adds the `fOverwrite` option to the `RSnapshotOptions` class to overwrite an existing `TTree`. First mentioned in the forum [here](https://root-forum.cern.ch/t/no-way-to-overwrite-using-snapshot/37936).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4965
https://github.com/root-project/root/pull/4966:569,Availability,repair,repair,569,"Now several parameters can be configured via rootrc file:. ```; WebEve.JsRootRender: 1 # use JSROOT Geometry Painter for GL drawings, default off; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```. Provide context menu, which activate browser at specified element; Improve/repair functionality with JSROOT GeoPainter. ; Provide single-click mouse handler, used for tracks/jets selection; Improve highlight handling in plain three.js mode; Make possibility to specify table row width via rootrc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:30,Modifiability,config,configured,30,"Now several parameters can be configured via rootrc file:. ```; WebEve.JsRootRender: 1 # use JSROOT Geometry Painter for GL drawings, default off; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```. Provide context menu, which activate browser at specified element; Improve/repair functionality with JSROOT GeoPainter. ; Provide single-click mouse handler, used for tracks/jets selection; Improve highlight handling in plain three.js mode; Make possibility to specify table row width via rootrc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4966:257,Safety,timeout,timeout,257,"Now several parameters can be configured via rootrc file:. ```; WebEve.JsRootRender: 1 # use JSROOT Geometry Painter for GL drawings, default off; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```. Provide context menu, which activate browser at specified element; Improve/repair functionality with JSROOT GeoPainter. ; Provide single-click mouse handler, used for tracks/jets selection; Improve highlight handling in plain three.js mode; Make possibility to specify table row width via rootrc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4966
https://github.com/root-project/root/pull/4967:35,Availability,error,errors,35,Collection of two commits:; - Make errors for RooDataSet more obvious to users when reading from ascii.; - Strip down unnecessary includes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4967
https://github.com/root-project/root/pull/4967:113,Availability,down,down,113,Collection of two commits:; - Make errors for RooDataSet more obvious to users when reading from ascii.; - Strip down unnecessary includes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4967
https://github.com/root-project/root/pull/4968:84,Integrability,interface,interfaces,84,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4968
https://github.com/root-project/root/pull/4968:306,Modifiability,refactor,refactor,306,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4968
https://github.com/root-project/root/pull/4968:456,Testability,test,test,456,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4968
https://github.com/root-project/root/pull/4968:377,Usability,clear,clear,377,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4968
https://github.com/root-project/root/pull/4969:0,Energy Efficiency,Reduce,Reduce,0,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:97,Safety,safe,safe,97,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:878,Safety,safe,safely,878,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:1196,Safety,safe,safe,1196,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:1255,Safety,unsafe,unsafe,1255,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:1308,Safety,unsafe,unsafe,1308,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:1404,Safety,unsafe,unsafe,1404,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4969:1567,Safety,safe,safety,1567,"Reduce amount of code, special treatments and the need for casting in RooFit by providing a type-safe proxy template that acts a bit like smart pointers. **For reviewers**:; The central part of this PR is the file `RooProxy.h`. Many other changes are just a fallout from unifying all proxy classes in this one. A `RooProxy<T>` is like a smart pointer to `T`, but it does additional important stuff in the base class.; Previously, RooFit proxies were storing only base class pointers forcing users of these proxies to cast whenever they wanted to do something. The weak point of the new thing is backward compatibility. Legacy root files and legacy RooFit classes act like a `RooProxy<RooAbsArg>`, a pointer to a very basic class. If the template argument was chosen properly, one wouldn't need any special functions because one can just use the newly provided `proxy->` to type-safely dereference the proxy, but that only works for new code. To support old code (e.g. outside of RooFit), there's four overloads of the function `lvptr`, which is supposed to cast the pointer to the payload into a type deriving from one of the ""LValue"" classes `RooAbsRealLValue` or `RooAbsCategoryLValue`. That's safe if the template argument derives from those, but it's unsafe for all other (=legacy) proxies. I tagged the unsafe conversion functions with `R__SUGGEST_ALTERNATIVE` to give users a way to move away from unsafe casts, but I'm unsure if one should just `static_cast` as RooFit was doing in the past (= no change of runtime behaviour) or `dynamic_cast` for better type safety. Opinions?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4969
https://github.com/root-project/root/pull/4970:210,Integrability,interface,interface,210,"Renderer specific code has been moved to GlViewer classes:; * GlViewer is the ""base class""; * GlViewerJSRoot for JSRoot GeoPainter; * GlViewerThree for THREE.js; * GlViewerRCore for the experimental RenderCore interface (just starting)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4970
https://github.com/root-project/root/pull/4972:769,Integrability,depend,dependent,769,"Rebased/improved version of #4966. Several parameters can be configured via rootrc file:; ```; WebEve.GLViewer: Three #kind of GLViewer, either Three, JSRoot or RCore; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```; Implement Browse functionality - shows selected item in SummaryView. In `JSRoot` viewer: ; * Provide single-click mouse handler, used for tracks/jets selection; In `Three` viewer: ; * Improve highlight handling in plain three.js mode; * provide position-dependent context menu; In `RCore` viewer:; * load required script during `init` call. Support more dashed styles for lines. By default, double-click ignored in GL view, can be configured",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4972
https://github.com/root-project/root/pull/4972:61,Modifiability,config,configured,61,"Rebased/improved version of #4966. Several parameters can be configured via rootrc file:; ```; WebEve.GLViewer: Three #kind of GLViewer, either Three, JSRoot or RCore; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```; Implement Browse functionality - shows selected item in SummaryView. In `JSRoot` viewer: ; * Provide single-click mouse handler, used for tracks/jets selection; In `Three` viewer: ; * Improve highlight handling in plain three.js mode; * provide position-dependent context menu; In `RCore` viewer:; * load required script during `init` call. Support more dashed styles for lines. By default, double-click ignored in GL view, can be configured",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4972
https://github.com/root-project/root/pull/4972:946,Modifiability,config,configured,946,"Rebased/improved version of #4966. Several parameters can be configured via rootrc file:; ```; WebEve.GLViewer: Three #kind of GLViewer, either Three, JSRoot or RCore; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```; Implement Browse functionality - shows selected item in SummaryView. In `JSRoot` viewer: ; * Provide single-click mouse handler, used for tracks/jets selection; In `Three` viewer: ; * Improve highlight handling in plain three.js mode; * provide position-dependent context menu; In `RCore` viewer:; * load required script during `init` call. Support more dashed styles for lines. By default, double-click ignored in GL view, can be configured",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4972
https://github.com/root-project/root/pull/4972:815,Performance,load,load,815,"Rebased/improved version of #4966. Several parameters can be configured via rootrc file:; ```; WebEve.GLViewer: Three #kind of GLViewer, either Three, JSRoot or RCore; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```; Implement Browse functionality - shows selected item in SummaryView. In `JSRoot` viewer: ; * Provide single-click mouse handler, used for tracks/jets selection; In `Three` viewer: ; * Improve highlight handling in plain three.js mode; * provide position-dependent context menu; In `RCore` viewer:; * load required script during `init` call. Support more dashed styles for lines. By default, double-click ignored in GL view, can be configured",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4972
https://github.com/root-project/root/pull/4972:278,Safety,timeout,timeout,278,"Rebased/improved version of #4966. Several parameters can be configured via rootrc file:; ```; WebEve.GLViewer: Three #kind of GLViewer, either Three, JSRoot or RCore; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```; Implement Browse functionality - shows selected item in SummaryView. In `JSRoot` viewer: ; * Provide single-click mouse handler, used for tracks/jets selection; In `Three` viewer: ; * Improve highlight handling in plain three.js mode; * provide position-dependent context menu; In `RCore` viewer:; * load required script during `init` call. Support more dashed styles for lines. By default, double-click ignored in GL view, can be configured",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4972
https://github.com/root-project/root/pull/4974:360,Deployability,configurat,configuration,360,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:360,Modifiability,config,configuration,360,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4974:447,Usability,simpl,simpler,447,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4974
https://github.com/root-project/root/pull/4975:195,Integrability,interface,interfaces,195,"RooResolutionModels can accept RooAbsRealLValue as convolution variable,; but the function convVar() just returned a c-style cast to RooRealVar&.; Removing this required generalising a few other interfaces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4975
https://github.com/root-project/root/pull/4975:63,Modifiability,variab,variable,63,"RooResolutionModels can accept RooAbsRealLValue as convolution variable,; but the function convVar() just returned a c-style cast to RooRealVar&.; Removing this required generalising a few other interfaces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4975
https://github.com/root-project/root/pull/4976:111,Usability,Simpl,Simplify,111,"One can add more elements in the future; No need special workarounds to ""hide"" HTML elements of StandardItem.; Simplify data organization in model of SummaryView.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4976
https://github.com/root-project/root/pull/4984:108,Performance,perform,performed,108,"Appears when TGrpah2D drawn with ""cont5"" option; Many TGraph objects are leaked, especially when zooming is performed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4984
https://github.com/root-project/root/pull/4985:484,Availability,error,error,484,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:190,Deployability,patch,patch,190,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:625,Integrability,interface,interface,625,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:729,Integrability,interface,interface,729,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4985:8,Modifiability,Extend,Extend,8,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4985
https://github.com/root-project/root/pull/4995:687,Availability,avail,available,687,"…led. Commit 04576cbe952993832153b4455f934f267a7c259e (silently) extended the semantic of 'disabling class autoloading',; in addition to preventing calls to AutoLoad it also made AutoLoad itself to return immediately when the autoloading; (i.e. ""AutoLoad"" becomes ""MaybeAutoLoad""). However, it left untouched the code in CheckClassInfo that handled its ""autoload"" parameter and which still explicitly; enabled AutoLoading when requested. This inconsistency lead to the 2nd part of ROOT-10528 where a class to TClass::GetClass for enums when the AutoLoading; was disabled lead to a broken State where an ""interpreted"" TClass (for the namespace holding the enum) even though a; library is available for it. This happened because TClass::GetClass explicit auto-loading attempt failed but; CheckClassInfo's autoloading and search for the namespace succeeded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4995
https://github.com/root-project/root/pull/4995:65,Modifiability,extend,extended,65,"…led. Commit 04576cbe952993832153b4455f934f267a7c259e (silently) extended the semantic of 'disabling class autoloading',; in addition to preventing calls to AutoLoad it also made AutoLoad itself to return immediately when the autoloading; (i.e. ""AutoLoad"" becomes ""MaybeAutoLoad""). However, it left untouched the code in CheckClassInfo that handled its ""autoload"" parameter and which still explicitly; enabled AutoLoading when requested. This inconsistency lead to the 2nd part of ROOT-10528 where a class to TClass::GetClass for enums when the AutoLoading; was disabled lead to a broken State where an ""interpreted"" TClass (for the namespace holding the enum) even though a; library is available for it. This happened because TClass::GetClass explicit auto-loading attempt failed but; CheckClassInfo's autoloading and search for the namespace succeeded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4995
https://github.com/root-project/root/pull/4995:758,Performance,load,loading,758,"…led. Commit 04576cbe952993832153b4455f934f267a7c259e (silently) extended the semantic of 'disabling class autoloading',; in addition to preventing calls to AutoLoad it also made AutoLoad itself to return immediately when the autoloading; (i.e. ""AutoLoad"" becomes ""MaybeAutoLoad""). However, it left untouched the code in CheckClassInfo that handled its ""autoload"" parameter and which still explicitly; enabled AutoLoading when requested. This inconsistency lead to the 2nd part of ROOT-10528 where a class to TClass::GetClass for enums when the AutoLoading; was disabled lead to a broken State where an ""interpreted"" TClass (for the namespace holding the enum) even though a; library is available for it. This happened because TClass::GetClass explicit auto-loading attempt failed but; CheckClassInfo's autoloading and search for the namespace succeeded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4995
https://github.com/root-project/root/pull/4999:41,Testability,test,test,41,It is not good style to keep mem leak in test macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4999
https://github.com/root-project/root/pull/5001:534,Availability,Error,Error,534,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:970,Availability,error,errors,970,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:264,Integrability,depend,depend,264,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:632,Integrability,message,message,632,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:946,Modifiability,Config,Configuring,946,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:1133,Modifiability,Config,Configure,1133,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:1383,Safety,avoid,avoid,1383,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:1051,Testability,log,log,1051,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5001:1120,Testability,log,log,1120,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5001
https://github.com/root-project/root/pull/5002:525,Availability,Error,Error,525,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:961,Availability,error,errors,961,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:255,Integrability,depend,depend,255,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:623,Integrability,message,message,623,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:937,Modifiability,Config,Configuring,937,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:1124,Modifiability,Config,Configure,1124,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:1374,Safety,avoid,avoid,1374,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:1042,Testability,log,log,1042,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5002:1111,Testability,log,log,1111,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5002
https://github.com/root-project/root/pull/5003:261,Integrability,wrap,wraps,261,"RooStringVar is a class to store string values. It limits the number of; characters that can be stored, leading to a crash when trying to plot; ranges with long names. This limitation was removed by implementing; equivalent functionality with a class that just wraps a std::string. It further had an unnecessary base class, which was removed, and where; possible, #includes of RooStringVar itself were removed. It should not; be used whenever possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5003
https://github.com/root-project/root/pull/5010:205,Performance,perform,performing,205,"Hello there. I fail to see the difference between:; ```; h->Fill(3.1415); ``` ; and ; ```; h->Fill(3.1415,1.); ``` ; Why are we using defining different functions for both of them? I came across this when performing `h->Fill(""StringBarLabelHere"")` which fails as I always have to set the weight to `1.` in every call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5010
https://github.com/root-project/root/pull/5011:101,Availability,error,errors,101,72fe06a437ff45b98fd4f96cd1ded502b3914f5e inadvertently changed the default from v2 (warnings) to v1 (errors). The former was the; effective default while the later was the default described only in comments/docs (i.e. the doc was wrong).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5011
https://github.com/root-project/root/pull/5012:14,Deployability,update,update,14,"Prior to this update if a StreamerInfo on file was the exact same; as one in memory, it would get recorded in an arbitrary slot in; the 'record those StreamerInfo array'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5012
https://github.com/root-project/root/pull/5013:14,Deployability,update,update,14,"Prior to this update if a StreamerInfo on file was the exact same; as one in memory, it would get recorded in an arbitrary slot in; the 'record those StreamerInfo array'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5013
https://github.com/root-project/root/pull/5014:130,Availability,error,error,130,"In root/tutorials/tmva/keras/GenerateModel.py line 60:; from keras.utils.visualize_util import plot ; is outdated and hence shows error:; File ""./GenerateModel.py"", line 17, in <module>; from keras.utils.visualize_util import plot; ModuleNotFoundError: No module named 'keras.utils.visualize_util'; Instead, use:; from keras.utils import plot_model; plot_model(model, to_file='model.png', show_shapes=True)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5014
https://github.com/root-project/root/pull/5015:361,Security,access,access,361,"Implements the following two improvements to views and iteration of view values. - Make the type of iteration explicit: over the events, over the values of a collection within an event, or over all the values of a field, which for a nested field can be more or less than the number of entries. - `RNTupleView` now uses automatically a field's `Map()` zero-copy access method, if such a method exists for the the field; replaces the template specializations of `RNTupleView`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5015
https://github.com/root-project/root/pull/5016:139,Modifiability,config,configure,139,"All CMake files should have a call to the `project()` command. In particular,; not having the `project()` call here makes it impossible to configure standalone; Minuit2 with Clang for macOS, see; https://gitlab.kitware.com/cmake/cmake/issues/17712#note_371862",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5016
https://github.com/root-project/root/pull/5019:338,Integrability,depend,dependencies,338,"As far as I can tell, it is currently not possible to use the REFLEX_GENERATE_DICTIONARY without variables that define include directories (or compile definitions). I would like to be able to let those be extract from target properties. I would also like to be not forced to set directory properties to have a more fine grained handle on dependencies. Even with directory properties extracting, e.g., include directories doesn't work when the generator expression comes out to be a list of directories.; E.g.; ```cmake; include_directories( $<TARGET_PROPERTY:podio::podio,INCLUDE_DIRECTORIES> ); ```; would lead to `... -I dir1;dir2`. Joining by hand (`$<JOIN....>`) also doesn't work because either the whitespace is not treated correctly, or COMMAND_EXPAND_LISTS is not part of ADD_CUSTOM_COMMAND, but that wouldn't solve my problem with using directory properties in the first place. So I propose the contained changes, which then lets one do; E.g.; ```cmake; add_library(edm4hep SHARED ${sources} ${headers}); target_link_libraries(edm4hep; PUBLIC; podio::podio; ); target_include_directories(edm4hep; PUBLIC; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep>; $<INSTALL_INTERFACE:edm4hep>; ); REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml; USES edm4hep; ); ```; And all the required include directories are derived automatically from the edm4hep target given to `USES`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5019:97,Modifiability,variab,variables,97,"As far as I can tell, it is currently not possible to use the REFLEX_GENERATE_DICTIONARY without variables that define include directories (or compile definitions). I would like to be able to let those be extract from target properties. I would also like to be not forced to set directory properties to have a more fine grained handle on dependencies. Even with directory properties extracting, e.g., include directories doesn't work when the generator expression comes out to be a list of directories.; E.g.; ```cmake; include_directories( $<TARGET_PROPERTY:podio::podio,INCLUDE_DIRECTORIES> ); ```; would lead to `... -I dir1;dir2`. Joining by hand (`$<JOIN....>`) also doesn't work because either the whitespace is not treated correctly, or COMMAND_EXPAND_LISTS is not part of ADD_CUSTOM_COMMAND, but that wouldn't solve my problem with using directory properties in the first place. So I propose the contained changes, which then lets one do; E.g.; ```cmake; add_library(edm4hep SHARED ${sources} ${headers}); target_link_libraries(edm4hep; PUBLIC; podio::podio; ); target_include_directories(edm4hep; PUBLIC; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep>; $<INSTALL_INTERFACE:edm4hep>; ); REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml; USES edm4hep; ); ```; And all the required include directories are derived automatically from the edm4hep target given to `USES`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5019
https://github.com/root-project/root/pull/5020:208,Performance,perform,performed,208,"As agreed in the last ROOT planning meeting:. https://indico.cern.ch/event/884189/. This PR switches experimental PyROOT by default to `ON` in master. Note that, before 6.22, a more elaborated switch will be performed: the concept of experimental PyROOT will disappear and there will be a legacy PyROOT, which is the current one. Edit: the switch is not done on Windows for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5020
https://github.com/root-project/root/pull/5023:44,Integrability,interface,interface,44,...and make it part of the common RAxisBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5023
https://github.com/root-project/root/pull/5028:14,Deployability,update,update,14,"Prior to this update if a StreamerInfo on file was the exact same; as one in memory, it would get recorded in an arbitrary slot in; the 'record those StreamerInfo array'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5028
https://github.com/root-project/root/pull/5035:95,Testability,test,tests,95,"Very basic CSS parser to have something which produces RStyle from CSS.; Provide correspondent tests; Also improve i/o tests for RHistDrawable, where shared_ptr is involved",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5035
https://github.com/root-project/root/pull/5035:119,Testability,test,tests,119,"Very basic CSS parser to have something which produces RStyle from CSS.; Provide correspondent tests; Also improve i/o tests for RHistDrawable, where shared_ptr is involved",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5035
https://github.com/root-project/root/pull/5036:149,Integrability,inject,inject,149,"CXXRecordDecls will synthesize special functions through lookup, but; do not expose them as part of the DeclContext iteration. Synthesize them,; and inject them into the iteration of TClingMethodInfo. This is especially; needed for modules which aggressively prune these special functions, relying; on DefinitionData instead. This also fixes roottest/root/meta/runMemberComments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:77,Security,expose,expose,77,"CXXRecordDecls will synthesize special functions through lookup, but; do not expose them as part of the DeclContext iteration. Synthesize them,; and inject them into the iteration of TClingMethodInfo. This is especially; needed for modules which aggressively prune these special functions, relying; on DefinitionData instead. This also fixes roottest/root/meta/runMemberComments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5036:149,Security,inject,inject,149,"CXXRecordDecls will synthesize special functions through lookup, but; do not expose them as part of the DeclContext iteration. Synthesize them,; and inject them into the iteration of TClingMethodInfo. This is especially; needed for modules which aggressively prune these special functions, relying; on DefinitionData instead. This also fixes roottest/root/meta/runMemberComments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5036
https://github.com/root-project/root/pull/5037:2209,Availability,error,error,2209,runtime_cxxmodules_builtin_debug$ (cd /Users/vvassilev/workspace/builds/root_runtime_cxxmodules_builtin_debug/bindings/tpython && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -I/Users/vvassilev/workspace/sources/root/bindings/tpython/inc -I/Users/vvassilev/workspace/builds/root_runtime_cxxmodules_builtin_debug/include -I/Users/vvassilev/workspace/sources/root/bindings/tpython -I/usr/include/python2.7 -I/Users/vvassilev/workspace/sources/root/bindings/pyroot_experimental/cppyy/CPyCppyy/inc -I/Users/vvassilev/workspace/sources/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src -std=c++1z -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -g -fPIC -Wno-register -Wno-deprecated-register -std=c++1z -o CMakeFiles/ROOTTPython.dir/src/TPyClassGenerator.cxx.o -c /Users/vvassilev/workspace/sources/root/bindings/tpython/src/TPyClassGenerator.cxx); In file included from /Users/vvassilev/workspace/sources/root/bindings/tpython/src/TPyClassGenerator.cxx:26:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/sstream:174:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:138:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:514:15: error: C++ requires a type specifier for all; declarations; char_type toupper(char_type __c) const; ^; /usr/include/python2.7/pyport.h:731:29: note: expanded from macro 'toupper'; #define toupper(c) towupper(btowc(c)); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5037
https://github.com/root-project/root/pull/5039:48,Security,access,accessing,48,"There seems to be a problem in TNetXNGFile when accessing archive members directly, the file size corresponds to the whole archive instead of the archive member. Because of that, there is mismatch of how much data ROOT requests from XRootD, and how much XRootD client returns, so the transfer fails. With TXNetFile, the GetSize() method is implemented in TFile, while TNetXNGFile overrides it. The code in this PR is adding the same functionality from TFile::GetSize() to TNetXNGFile::GetSize().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5039
https://github.com/root-project/root/pull/5042:4,Deployability,update,update,4,The update of the time step for the optimizer must be each batch update and not for each epoch. ; This affects the correction for the bias applied to the computed first and second momentum when using ADam. (see https://root.cern.ch/doc/master/Adam_8h_source.html#l00147 ). . After this correction the obtained convergence results look better and compatible with what obtained when using when using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5042
https://github.com/root-project/root/pull/5042:65,Deployability,update,update,65,The update of the time step for the optimizer must be each batch update and not for each epoch. ; This affects the correction for the bias applied to the computed first and second momentum when using ADam. (see https://root.cern.ch/doc/master/Adam_8h_source.html#l00147 ). . After this correction the obtained convergence results look better and compatible with what obtained when using when using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5042
https://github.com/root-project/root/pull/5042:36,Performance,optimiz,optimizer,36,The update of the time step for the optimizer must be each batch update and not for each epoch. ; This affects the correction for the bias applied to the computed first and second momentum when using ADam. (see https://root.cern.ch/doc/master/Adam_8h_source.html#l00147 ). . After this correction the obtained convergence results look better and compatible with what obtained when using when using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5042
https://github.com/root-project/root/pull/5044:1361,Modifiability,config,configured,1361,"Before I code too far away . This is first showcase, how new attributes will be introduced to `RFrame`. First important change. `RFrame` is normal drawable and will be inserted into list of primitives. ; In the future we could enforce `RFrame` have to be always on the first place (to be discuss). `RFrame` is not required to draw histogram. All defaults can be obtained via `RStyle`, therefore object can be created on the client side and all necessary attributes can be obtained. As first members of `RFrame` I introduce `RAttrMargin` and `RAttrAxis` attributes.; `RAttrMargin` contains margins from pad borders and can be defined as `RPadLength` without user components. In the CSS one could use syntax like: `frame { margin_left: 0.1 + 10px; }` ; As Idea: one also can allow something like: `frame { margin: 0; }` to set all sides at same time. `RAttrAxis` are graphical axis attributes plus min/max range, lin/log scale, invert flag, ...; For now only line attributes are really used. . Idea for next steps with `RAttrAxis`.; When min/max values not specified, axis ranges defined by first drawable like histogram or graph.; One should be able to set only min or only max value. Also visible range should be able to specify same way. . You can see how code will look like in new macro: `draw_frame.cxx`. It drawing in two sub-pads. On first sub-pad RFrame configured programatically, on second sub-pad - via CSS file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5044
https://github.com/root-project/root/pull/5044:915,Testability,log,log,915,"Before I code too far away . This is first showcase, how new attributes will be introduced to `RFrame`. First important change. `RFrame` is normal drawable and will be inserted into list of primitives. ; In the future we could enforce `RFrame` have to be always on the first place (to be discuss). `RFrame` is not required to draw histogram. All defaults can be obtained via `RStyle`, therefore object can be created on the client side and all necessary attributes can be obtained. As first members of `RFrame` I introduce `RAttrMargin` and `RAttrAxis` attributes.; `RAttrMargin` contains margins from pad borders and can be defined as `RPadLength` without user components. In the CSS one could use syntax like: `frame { margin_left: 0.1 + 10px; }` ; As Idea: one also can allow something like: `frame { margin: 0; }` to set all sides at same time. `RAttrAxis` are graphical axis attributes plus min/max range, lin/log scale, invert flag, ...; For now only line attributes are really used. . Idea for next steps with `RAttrAxis`.; When min/max values not specified, axis ranges defined by first drawable like histogram or graph.; One should be able to set only min or only max value. Also visible range should be able to specify same way. . You can see how code will look like in new macro: `draw_frame.cxx`. It drawing in two sub-pads. On first sub-pad RFrame configured programatically, on second sub-pad - via CSS file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5044
https://github.com/root-project/root/pull/5046:29,Integrability,interface,interface,29,Use REveElement render state interface so user can control visibility of collection through checkbox in the tree node.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5046
https://github.com/root-project/root/pull/5048:189,Availability,failure,failure,189,"A few fixes concerning the AsNumpy functionality, related to the iteration of a `vector<string>` and the use of stl strings as keys of Python dictionaries. This should fix the AsNumpy test failure here:; https://github.com/root-project/root/pull/5036#issuecomment-588256573",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5048
https://github.com/root-project/root/pull/5048:184,Testability,test,test,184,"A few fixes concerning the AsNumpy functionality, related to the iteration of a `vector<string>` and the use of stl strings as keys of Python dictionaries. This should fix the AsNumpy test failure here:; https://github.com/root-project/root/pull/5036#issuecomment-588256573",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5048
https://github.com/root-project/root/pull/5049:16,Availability,failure,failure,16,Visible in test failure gtest_tree_treeplayer_test_treeprocessormt on ARM with 256 cores,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5049:11,Testability,test,test,11,Visible in test failure gtest_tree_treeplayer_test_treeprocessormt on ARM with 256 cores,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5049
https://github.com/root-project/root/pull/5050:122,Safety,avoid,avoid,122,"Should solve ROOT-10583; When pgon used in CSG transformation, it is important to have shape without inner surface.; Also avoid use of implicit Bool_t -> Int_t conversion, it is not guaranteed that kTRUE value always 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5050
https://github.com/root-project/root/pull/5054:83,Availability,error,errors,83,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:224,Availability,error,error,224,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:560,Availability,error,error,560,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:930,Availability,error,error,930,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1301,Availability,error,error,1301,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1637,Availability,error,error,1637,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2007,Availability,error,error,2007, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2378,Availability,error,error,2378,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2714,Availability,error,error,2714,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3084,Availability,error,error,3084, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3455,Availability,error,error,3455,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3791,Availability,error,error,3791,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4161,Availability,error,error,4161, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4532,Availability,error,error,4532,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4868,Availability,error,error,4868,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5238,Availability,error,error,5238, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5609,Availability,error,error,5609,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5945,Availability,error,error,5945,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6315,Availability,error,error,6315, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6686,Availability,error,error,6686,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7023,Availability,error,error,7023,s: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7394,Availability,error,error,7394,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7766,Availability,error,error,7766,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8103,Availability,error,error,8103, 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8474,Availability,error,error,8474, 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8846,Availability,error,error,8846,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9183,Availability,error,error,9183, 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9554,Availability,error,error,9554, 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9926,Availability,error,error,9926,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10263,Availability,error,error,10263, 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10634,Availability,error,error,10634, 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11006,Availability,error,error,11006,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11343,Availability,error,error,11343, 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11714,Availability,error,error,11714, 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12086,Availability,error,error,12086,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12423,Availability,error,error,12423,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12794,Availability,error,error,12794,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5,Deployability,patch,patch,5,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:40,Testability,test,test,40,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:204,Testability,test,test,204,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:393,Testability,Test,Test,393,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:451,Testability,test,test,451,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:540,Testability,test,test,540,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:763,Testability,Test,Test,763,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:821,Testability,test,test,821,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:910,Testability,test,test,910,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1134,Testability,Test,Test,1134,owing errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1192,Testability,test,test,1192,owing errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1281,Testability,test,test,1281,.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1470,Testability,Test,Test,1470,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1528,Testability,test,test,1528,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1617,Testability,test,test,1617,.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1840,Testability,Test,Test,1840,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1898,Testability,test,test,1898,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:1987,Testability,test,test,1987,.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2211,Testability,Test,Test,2211,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2269,Testability,test,test,2269,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2358,Testability,test,test,2358,.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2547,Testability,Test,Test,2547,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2605,Testability,test,test,2605,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2694,Testability,test,test,2694,.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2917,Testability,Test,Test,2917,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:2975,Testability,test,test,2975,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3064,Testability,test,test,3064,.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3288,Testability,Test,Test,3288,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3346,Testability,test,test,3346,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3435,Testability,test,test,3435,.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3624,Testability,Test,Test,3624,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3682,Testability,test,test,3682,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3771,Testability,test,test,3771,.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:3994,Testability,Test,Test,3994,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4052,Testability,test,test,4052,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4141,Testability,test,test,4141,.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4365,Testability,Test,Test,4365,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4423,Testability,test,test,4423,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4512,Testability,test,test,4512,.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4701,Testability,Test,Test,4701,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4759,Testability,test,test,4759,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:4848,Testability,test,test,4848,.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5071,Testability,Test,Test,5071,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5129,Testability,test,test,5129,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5218,Testability,test,test,5218,.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5442,Testability,Test,Test,5442,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5500,Testability,test,test,5500,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5589,Testability,test,test,5589,.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5778,Testability,Test,Test,5778,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5836,Testability,test,test,5836,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:5925,Testability,test,test,5925,.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\g,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6148,Testability,Test,Test,6148,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6206,Testability,test,test,6206,sers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6295,Testability,test,test,6295,.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6519,Testability,Test,Test,6519,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels));,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6577,Testability,test,test,6577,Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels));,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6666,Testability,test,test,6666,.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6855,Testability,Test,Test,6855,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:6913,Testability,test,test,6913,\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7003,Testability,test,test,7003,CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7226,Testability,Test,Test,7226,ers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7284,Testability,test,test,7284,ers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7374,Testability,test,test,7374,ompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7598,Testability,Test,Test,7598,ers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7656,Testability,test,test,7656,ers\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7746,Testability,test,test,7746,mpareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7935,Testability,Test,Test,7935,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:7993,Testability,test,test,7993,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8083,Testability,test,test,8083,mpareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8306,Testability,Test,Test,8306,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8364,Testability,test,test,8364,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8454,Testability,test,test,8454,mpareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8678,Testability,Test,Test,8678,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8736,Testability,test,test,8736,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:8826,Testability,test,test,8826,mpareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9015,Testability,Test,Test,9015,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9073,Testability,test,test,9073,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9163,Testability,test,test,9163,mpareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9386,Testability,Test,Test,9386,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9444,Testability,test,test,9444,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9534,Testability,test,test,9534,mpareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9758,Testability,Test,Test,9758,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9816,Testability,test,test,9816,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:9906,Testability,test,test,9906,mpareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10095,Testability,Test,Test,10095,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10153,Testability,test,test,10153,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10243,Testability,test,test,10243,mpareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10466,Testability,Test,Test,10466,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10524,Testability,test,test,10524,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10614,Testability,test,test,10614,mpareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10838,Testability,Test,Test,10838,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10896,Testability,test,test,10896,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:10986,Testability,test,test,10986,mpareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11175,Testability,Test,Test,11175,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11233,Testability,test,test,11233,ster\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11323,Testability,test,test,11323,mpareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11546,Testability,Test,Test,11546,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11604,Testability,test,test,11604,s\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_lab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11694,Testability,test,test,11694,mpareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11918,Testability,Test,Test,11918,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:11976,Testability,test,test,11976,rs\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12066,Testability,test,test,12066,mpareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\belleno,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12255,Testability,Test,Test,12255,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12313,Testability,test,test,12313,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12403,Testability,test,test,12403,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12626,Testability,Test,Test,12626,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12684,Testability,test,test,12684,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12774,Testability,test,test,12774,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:12998,Testability,Test,Test,12998,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5054:13056,Testability,test,test,13056,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5054
https://github.com/root-project/root/pull/5056:574,Availability,failure,failures,574,In number of cases over the last years we have seen a need to call clang APIs with valid source locations. The interpreter generates code and valid locations can be problematic. This patch allows cling to return a valid source location even when no code was processed. This way we can provide our modules infrastructure proper source locations to activate the module visibility rules on locations which have common predecessor. The common predecessor is essential when we compare entities for diagnostics or reasoning about module visibility. This PR should fix the nightly failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5056:183,Deployability,patch,patch,183,In number of cases over the last years we have seen a need to call clang APIs with valid source locations. The interpreter generates code and valid locations can be problematic. This patch allows cling to return a valid source location even when no code was processed. This way we can provide our modules infrastructure proper source locations to activate the module visibility rules on locations which have common predecessor. The common predecessor is essential when we compare entities for diagnostics or reasoning about module visibility. This PR should fix the nightly failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5056
https://github.com/root-project/root/pull/5058:389,Availability,error,errors,389,"Use `=delete` specifier for copy/assign methods which were marked as ""not implemented"". Remove copy/assign operator for following classes:; * TVirtualGeoTrack; * TGeoTrack; * TGeoUniformMagField; * TGeoPolygon; * TGeoBuilder; * TGeoPhysicalNode; * TGeoStateInfo; * TGeoManager. In most these classes copy constructor was copying pointer on internal allocated memory.; Means it was clearly errors and cannot be used this way. Also implement TGeoBoolNode::AssignPoints() method.; Used in all `GetNpoints` methods to set points arrays.; Plus modernize TGeoBoolNode classes - uses `override` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5058
https://github.com/root-project/root/pull/5058:349,Energy Efficiency,allocate,allocated,349,"Use `=delete` specifier for copy/assign methods which were marked as ""not implemented"". Remove copy/assign operator for following classes:; * TVirtualGeoTrack; * TGeoTrack; * TGeoUniformMagField; * TGeoPolygon; * TGeoBuilder; * TGeoPhysicalNode; * TGeoStateInfo; * TGeoManager. In most these classes copy constructor was copying pointer on internal allocated memory.; Means it was clearly errors and cannot be used this way. Also implement TGeoBoolNode::AssignPoints() method.; Used in all `GetNpoints` methods to set points arrays.; Plus modernize TGeoBoolNode classes - uses `override` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5058
https://github.com/root-project/root/pull/5058:381,Usability,clear,clearly,381,"Use `=delete` specifier for copy/assign methods which were marked as ""not implemented"". Remove copy/assign operator for following classes:; * TVirtualGeoTrack; * TGeoTrack; * TGeoUniformMagField; * TGeoPolygon; * TGeoBuilder; * TGeoPhysicalNode; * TGeoStateInfo; * TGeoManager. In most these classes copy constructor was copying pointer on internal allocated memory.; Means it was clearly errors and cannot be used this way. Also implement TGeoBoolNode::AssignPoints() method.; Used in all `GetNpoints` methods to set points arrays.; Plus modernize TGeoBoolNode classes - uses `override` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5058
https://github.com/root-project/root/pull/5059:552,Availability,error,error,552,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5059
https://github.com/root-project/root/pull/5059:263,Deployability,patch,patch,263,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5059
https://github.com/root-project/root/pull/5059:16,Integrability,message,message,16,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5059
https://github.com/root-project/root/pull/5059:693,Integrability,interface,interface,693,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5059
https://github.com/root-project/root/pull/5059:797,Integrability,interface,interface,797,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5059
https://github.com/root-project/root/pull/5059:103,Modifiability,Extend,Extend,103,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5059
https://github.com/root-project/root/pull/5060:2,Testability,Test,Tests,2,"* Tests are broken after commit 9b78784, which implements squashing double; slashes in the path.; * Add additional tests with all slashes doubled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5060
https://github.com/root-project/root/pull/5060:115,Testability,test,tests,115,"* Tests are broken after commit 9b78784, which implements squashing double; slashes in the path.; * Add additional tests with all slashes doubled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5060
https://github.com/root-project/root/pull/5062:628,Availability,error,error,628,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:634,Integrability,message,message,634,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:320,Testability,test,testing,320,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:339,Testability,test,test,339,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5062:650,Usability,clear,clearer,650,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5062
https://github.com/root-project/root/pull/5063:454,Modifiability,config,configured,454,"It is fully bound to RFrame and only margin and height can be specified.; In the code one does:. auto title = subpads[1][0]->Draw<RTitle>(""Frame2 title"");; title->SetMargin(0.01_normal).SetHeight(0.05_normal);. Provide preliminary JSROOT code. Also first try to provide context menu - for `RAttrAxis` ; Now only lin/log scale switch there - only prove of principle. Also introduce `kNone` attribute kind in RAttrMap. ; Allows to suppress values which is configured in RStyle or in the parent classes. Introduce `zoommin`/`zoommax` values for `RAttrAxis`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5063
https://github.com/root-project/root/pull/5063:316,Testability,log,log,316,"It is fully bound to RFrame and only margin and height can be specified.; In the code one does:. auto title = subpads[1][0]->Draw<RTitle>(""Frame2 title"");; title->SetMargin(0.01_normal).SetHeight(0.05_normal);. Provide preliminary JSROOT code. Also first try to provide context menu - for `RAttrAxis` ; Now only lin/log scale switch there - only prove of principle. Also introduce `kNone` attribute kind in RAttrMap. ; Allows to suppress values which is configured in RStyle or in the parent classes. Introduce `zoommin`/`zoommax` values for `RAttrAxis`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5063
https://github.com/root-project/root/pull/5065:310,Modifiability,extend,extend,310,"When root started with `--web` option, web-based geometry viewer will be used instead of standard `TGeoPainter` class. For now only basic volume drawing is working. Tutorials like `geomAlice.C` or `geomBrams.C` works this way. Technically very tiny implementation of `TVirtualGeoPainter` is provided. ; Can be extend in the future. Also use `override` specifiers for all `TVirtualGeoPainter` classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5065
https://github.com/root-project/root/pull/5066:295,Modifiability,variab,variables,295,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add `lsan` build option to enable leak checking.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Add ASAN_OPTIONS and LSAN_OPTIONS environment variables for; executables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:48,Security,sanitiz,sanitizer,48,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add `lsan` build option to enable leak checking.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Add ASAN_OPTIONS and LSAN_OPTIONS environment variables for; executables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5066:175,Security,sanitiz,sanitizer,175,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add `lsan` build option to enable leak checking.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Add ASAN_OPTIONS and LSAN_OPTIONS environment variables for; executables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5066
https://github.com/root-project/root/pull/5067:31,Availability,error,error,31,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:524,Availability,error,error,524,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:599,Availability,error,error,599,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:695,Availability,failure,failure,695,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5067:5,Deployability,patch,patch,5,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5067
https://github.com/root-project/root/pull/5068:0,Safety,Avoid,Avoid,0,Avoid exposing of such big class when not necessary - especially for TF1.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5068
https://github.com/root-project/root/pull/5069:227,Integrability,depend,dependencies,227,"Simple search for following includes were done:. * `TSystem.h`, ; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:255,Testability,test,tests,255,"Simple search for following includes were done:. * `TSystem.h`, ; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5069:0,Usability,Simpl,Simple,0,"Simple search for following includes were done:. * `TSystem.h`, ; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5069
https://github.com/root-project/root/pull/5071:295,Integrability,depend,dependencies,295,"Reproduce #5069 again - something went wrong when I want to merge it. Simple search for following includes were done:. * `TSystem.h`; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5071:323,Testability,test,tests,323,"Reproduce #5069 again - something went wrong when I want to merge it. Simple search for following includes were done:. * `TSystem.h`; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5071:70,Usability,Simpl,Simple,70,"Reproduce #5069 again - something went wrong when I want to merge it. Simple search for following includes were done:. * `TSystem.h`; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5071
https://github.com/root-project/root/pull/5072:326,Integrability,interface,interface,326,"Via `TVirtualPad.h` it was spread over many sources.; But only `enum ECursor` was required in `TVirtualPad.h`; I just moved `ECursor` to `GuiTypes.h`, where many similar enum are defined.; Now one can fully remove `TVirtualX.h` from `TVirtualPad.h`, `TCanvas.h` and co. Also GUI classes do not require to populate `TVirtualX` interface via headers - ; one can put `#include ""TVirtualX.h""` in sources where it really used.; If necessary, we could place back TVirtualX.h into TGWindow.h - I can remove last commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5072
https://github.com/root-project/root/pull/5076:49,Availability,error,error,49,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5076:155,Availability,error,error,155,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5076:318,Availability,error,error-messages-from-,318,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5076:55,Integrability,message,message,55,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5076:161,Integrability,message,message,161,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5076:206,Integrability,message,message,206,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5076:324,Integrability,message,messages-from-,324,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5076
https://github.com/root-project/root/pull/5079:39,Availability,avail,available,39,"Added 'nproc' for the processing units available, needed during the build process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5079
https://github.com/root-project/root/pull/5081:13,Testability,test,test,13,I added unit test `TTree.cxx` which checks default compression settings used for TFile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5081
https://github.com/root-project/root/pull/5084:15,Deployability,install,installed,15,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:705,Deployability,deploy,deployed,705,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1071,Deployability,install,install,1071,"TALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1351,Deployability,install,install,1351,"er cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REAL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1622,Deployability,install,install,1622,"ncy and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(91): get_filename_component(ROOT_BINARY_DIR /usr/bin REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_INC; /usr/lib64/cmake/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:789,Modifiability,config,config,789,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:889,Modifiability,Config,Configure,889,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1031,Modifiability,variab,variable,1031,"urrently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1052,Modifiability,config,configured,1052,"TALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1332,Modifiability,config,configured,1332,"er cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REAL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:1603,Modifiability,config,configured,1603,"ncy and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(91): get_filename_component(ROOT_BINARY_DIR /usr/bin REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_INC; /usr/lib64/cmake/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:449,Safety,safe,safer,449,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:694,Testability,test,tested,694,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:2112,Testability,log,log-level,2112,"d for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(91): get_filename_component(ROOT_BINARY_DIR /usr/bin REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_INC; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(67): get_filename_component(_ROOT_INCLUDE_DIRS /usr/lib64/cmake/ROOT/../../../include REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(71): get_filename_component(ROOT_INCLUDE_DIRS /usr/include REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_LIB; /usr/lib64/cmake/ROOT/ROOTConfig.cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:2582,Testability,log,log-level,2582,"nent(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(91): get_filename_component(ROOT_BINARY_DIR /usr/bin REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_INC; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(67): get_filename_component(_ROOT_INCLUDE_DIRS /usr/lib64/cmake/ROOT/../../../include REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(71): get_filename_component(ROOT_INCLUDE_DIRS /usr/include REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_LIB; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(75): get_filename_component(_ROOT_LIBRARY_DIR /usr/lib64/cmake/ROOT/../../root REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(79): get_filename_component(ROOT_LIBRARY_DIR /usr/lib/root REALPATH ); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5084:2968,Testability,log,log-level,2968,"nent(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMake runtime check:; ```bash; $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_BIN; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(83): get_filename_component(_ROOT_BINDIR /usr/lib64/cmake/ROOT/../../../bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(87): get_filename_component(ROOT_BINDIR /usr/bin REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(91): get_filename_component(ROOT_BINARY_DIR /usr/bin REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_INC; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(67): get_filename_component(_ROOT_INCLUDE_DIRS /usr/lib64/cmake/ROOT/../../../include REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(71): get_filename_component(ROOT_INCLUDE_DIRS /usr/include REALPATH ). $ cmake --find-package -DNAME=ROOT -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST --log-level=DEBUG -N --trace-expand 2>&1 | grep ROOT_LIB; /usr/lib64/cmake/ROOT/ROOTConfig.cmake(75): get_filename_component(_ROOT_LIBRARY_DIR /usr/lib64/cmake/ROOT/../../root REALPATH ); /usr/lib64/cmake/ROOT/ROOTConfig.cmake(79): get_filename_component(ROOT_LIBRARY_DIR /usr/lib/root REALPATH ); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5084
https://github.com/root-project/root/pull/5086:31,Availability,error,errors,31,This fixes the missing include errors occurred while building ROOT on Windows with the flag Druntime_cxxmodules=On.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5086
https://github.com/root-project/root/pull/5089:17,Testability,test,tests,17,This solves (and tests) ROOT-9935.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5089
https://github.com/root-project/root/pull/5090:50,Modifiability,config,configure,50,This PR fixes the bug ROOT-10597. We define a new configure preprocessor flag R__HAS_CUDNN that is set when Cudnn is found; If not set exclude all cudnn code in CudaTensor.cu and make sure that dense layers works in GPU without cudnn; Fix also the CNN for native Cuda. A bug was present creating the input tensor with TCuda architecture. Now ROOT/TMVA should compile when Cuda is on (tmva-gpu) and cudnn is not found. Add also a new cmake build option: cudnn. The option is by default enabled when cudsa is enabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5090
https://github.com/root-project/root/pull/5090:200,Modifiability,layers,layers,200,This PR fixes the bug ROOT-10597. We define a new configure preprocessor flag R__HAS_CUDNN that is set when Cudnn is found; If not set exclude all cudnn code in CudaTensor.cu and make sure that dense layers works in GPU without cudnn; Fix also the CNN for native Cuda. A bug was present creating the input tensor with TCuda architecture. Now ROOT/TMVA should compile when Cuda is on (tmva-gpu) and cudnn is not found. Add also a new cmake build option: cudnn. The option is by default enabled when cudsa is enabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5090
https://github.com/root-project/root/pull/5093:211,Testability,test,tests,211,"template <bool X=true, class T> void f(T);; is a fine declaration, but confused the all-template-args-have-defaults algorithm.; Skip these as ""no, not all arguments have defaults"".; This fixes some C++17 python tests on Fedora, for instance bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_cppcallable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5093
https://github.com/root-project/root/pull/5093:285,Testability,test,test,285,"template <bool X=true, class T> void f(T);; is a fine declaration, but confused the all-template-args-have-defaults algorithm.; Skip these as ""no, not all arguments have defaults"".; This fixes some C++17 python tests on Fedora, for instance bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_cppcallable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5093
https://github.com/root-project/root/pull/5095:92,Availability,down,down,92,"Before, ""make version"" needed to have ROOT built to run root.exe, to then rebuild ROOT. Cut down on rebuilds during releases by relying on a python script instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5095
https://github.com/root-project/root/pull/5095:116,Deployability,release,releases,116,"Before, ""make version"" needed to have ROOT built to run root.exe, to then rebuild ROOT. Cut down on rebuilds during releases by relying on a python script instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5095
https://github.com/root-project/root/pull/5096:121,Availability,error,error,121,"Prevent numpy from being imported every time the pythonizor function is registered, and instead do it lazily and with an error check if the pythonized method is actually invoked.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5096
https://github.com/root-project/root/pull/5097:105,Safety,avoid,avoid,105,"When calling `TObject::kOverwrite`, the data itself is not actually replaced--the metadata is changed to avoid multiple cycles, but the data persists invisibly. Similar for `Purge`. This documents that behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5097
https://github.com/root-project/root/pull/5098:551,Usability,simpl,simpler,551,"1.Special handling of `RFrame` - when drawable required such object, it autoamitically created and inserted in list of primitives before such drawable . 2. Introduce `RPaletteDrawable`. It contains own instance of `RPalette`. `RHistDrawable` use such palette when it appears in list of priitives. `RHistDrawable` also controls drawing of `RPalette`. `RPalette` can be invisible. Position of `RPaletteDrawable` defined relatively to `RFrame` . 3. Provide drawing of `RPalette` in JSROOT. Fully redesign code how palette used in JSROOT - now it is much simpler compare to v6. 4. Provide `draw_rh2_colz.cxx` example which demonstrates palette drawing. One can see produced output on the image.; ![Canvas](https://user-images.githubusercontent.com/4936580/76108743-6d08ef00-5fdb-11ea-89de-299f2d64f1dc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5098
https://github.com/root-project/root/pull/5099:339,Deployability,patch,patch,339,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:313,Modifiability,variab,variable-length,313,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:455,Modifiability,variab,variable-length,455,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:769,Modifiability,variab,variable-length,769,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:1105,Modifiability,variab,variable-length,1105,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:502,Performance,Load,LoadHDU,502,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:1153,Security,access,access,1153,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5099:1408,Testability,test,test,1408,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5099
https://github.com/root-project/root/pull/5100:138,Deployability,patch,patch,138,"This is useful for external users to specify a writable modules cache path where the global module index can be generated on demand. This patch should resolve an issue in cmssw where the default module cache path (ROOTSYS/lib) is in a non-writable area in cvmfs. cc: @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5100:64,Performance,cache,cache,64,"This is useful for external users to specify a writable modules cache path where the global module index can be generated on demand. This patch should resolve an issue in cmssw where the default module cache path (ROOTSYS/lib) is in a non-writable area in cvmfs. cc: @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5100:202,Performance,cache,cache,202,"This is useful for external users to specify a writable modules cache path where the global module index can be generated on demand. This patch should resolve an issue in cmssw where the default module cache path (ROOTSYS/lib) is in a non-writable area in cvmfs. cc: @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5100
https://github.com/root-project/root/pull/5103:23,Deployability,patch,patches,23,Backport #5090 in 6.20 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5103
https://github.com/root-project/root/pull/5107:128,Usability,simpl,simplify,128,"RColor is pure color storage - RGBA or name.; RAttrColor is attribute class to extract colors from RDrawable attributes; Should simplify code. Provide several more ""well-known"" colors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5107
https://github.com/root-project/root/pull/5113:211,Testability,test,tests,211,"template <bool X=true, class T> void f(T);; is a fine declaration, but confused the all-template-args-have-defaults algorithm.; Skip these as ""no, not all arguments have defaults"".; This fixes some C++17 python tests on Fedora, for instance bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_cppcallable. (cherry picked from commit 3f5f850918fc23212d162cbbe2de578bbf3dee95)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5113
https://github.com/root-project/root/pull/5113:285,Testability,test,test,285,"template <bool X=true, class T> void f(T);; is a fine declaration, but confused the all-template-args-have-defaults algorithm.; Skip these as ""no, not all arguments have defaults"".; This fixes some C++17 python tests on Fedora, for instance bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_cppcallable. (cherry picked from commit 3f5f850918fc23212d162cbbe2de578bbf3dee95)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5113
https://github.com/root-project/root/pull/5114:23,Availability,error,errors,23,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5114
https://github.com/root-project/root/pull/5114:59,Availability,error,error,59,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5114
https://github.com/root-project/root/pull/5114:130,Availability,error,errors,130,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5114
https://github.com/root-project/root/pull/5114:182,Availability,error,error,182,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5114
https://github.com/root-project/root/pull/5114:190,Availability,error,error,190,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5114
https://github.com/root-project/root/pull/5117:37,Availability,error,errors,37,"This fixes the following compilation errors on Windows:; TGeoTessellated.cxx(385,67): error C2027: use of undefined type 'std::array<CellVec_t,1000000>'. And on MacOS:; TGeoTessellated.cxx:385:23: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<int, std::__1::allocator<int> >, 1000000>'; auto grid = new std::array<CellVec_t, ngrid * ngrid * ngrid>;; ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5117
https://github.com/root-project/root/pull/5117:86,Availability,error,error,86,"This fixes the following compilation errors on Windows:; TGeoTessellated.cxx(385,67): error C2027: use of undefined type 'std::array<CellVec_t,1000000>'. And on MacOS:; TGeoTessellated.cxx:385:23: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<int, std::__1::allocator<int> >, 1000000>'; auto grid = new std::array<CellVec_t, ngrid * ngrid * ngrid>;; ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5117
https://github.com/root-project/root/pull/5117:197,Availability,error,error,197,"This fixes the following compilation errors on Windows:; TGeoTessellated.cxx(385,67): error C2027: use of undefined type 'std::array<CellVec_t,1000000>'. And on MacOS:; TGeoTessellated.cxx:385:23: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<int, std::__1::allocator<int> >, 1000000>'; auto grid = new std::array<CellVec_t, ngrid * ngrid * ngrid>;; ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5117
https://github.com/root-project/root/pull/5120:0,Deployability,Update,Update,0,Update the documentation of the TImer class showing that one needs to call ; TMVA::gConfig().SetDrawProgressBar(true);. to have the progress bar visible. . This fixes ROOT-9974,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5120
https://github.com/root-project/root/pull/5120:132,Usability,progress bar,progress bar,132,Update the documentation of the TImer class showing that one needs to call ; TMVA::gConfig().SetDrawProgressBar(true);. to have the progress bar visible. . This fixes ROOT-9974,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5120
https://github.com/root-project/root/pull/5123:111,Energy Efficiency,reduce,reduce,111,"When cmake flag `-Ddev=ON` specified, R__LESS_INCLUDES macro is defined. It can be used in different places to reduce/remove includes and replace them by forward declarations - if necessary. Old includes can remain for a while - otherwise lot of user codes can be broken suddenly. Code example:; ```; #ifdef R__LESS_INCLUDES; class TBranch;; class TBuffer;; class TList;; #else; #include ""TBranch.h""; #include ""TBuffer.h""; #include ""TList.h""; #endif; ```. Main changes:; * Classes `TBuffer` and `TDatime` not used in TDirectory.h, can be removed; * Also TList.h can be replaced by forward declarations in TDirectory.h; * Several includes in TClass.h are not used, but lot of code depends on it; * In TTree.h includes TBranch.h, TList.h, TBuffer.h replaced by forward declarations. Main advantage - one really see which includes are really required and not relies on the fact, that some basic includes like TSystem.h or TDirectory.h provides includes for different containers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5123
https://github.com/root-project/root/pull/5123:680,Integrability,depend,depends,680,"When cmake flag `-Ddev=ON` specified, R__LESS_INCLUDES macro is defined. It can be used in different places to reduce/remove includes and replace them by forward declarations - if necessary. Old includes can remain for a while - otherwise lot of user codes can be broken suddenly. Code example:; ```; #ifdef R__LESS_INCLUDES; class TBranch;; class TBuffer;; class TList;; #else; #include ""TBranch.h""; #include ""TBuffer.h""; #include ""TList.h""; #endif; ```. Main changes:; * Classes `TBuffer` and `TDatime` not used in TDirectory.h, can be removed; * Also TList.h can be replaced by forward declarations in TDirectory.h; * Several includes in TClass.h are not used, but lot of code depends on it; * In TTree.h includes TBranch.h, TList.h, TBuffer.h replaced by forward declarations. Main advantage - one really see which includes are really required and not relies on the fact, that some basic includes like TSystem.h or TDirectory.h provides includes for different containers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5123
https://github.com/root-project/root/pull/5127:5,Deployability,update,update,5,Also update JSROOT for RColor handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5127
https://github.com/root-project/root/pull/5128:48,Integrability,synchroniz,synchronized,48,When calling Minimize the global prnit level is synchronized to the local one and; then re-set to its original value. This PR replaces #2305,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5128
https://github.com/root-project/root/pull/5134:173,Testability,test,tested,173,"[ROOT-10605] When selecting a slice of a RooSimultaneous for plotting,; the last-active slice was plotted, ignoring the selection. This PR is already in master, and will be tested there on Thursday. This will allow merging the backport in time for Friday.; (Automated testing is tricky, since it's about plotting.). Duplicates: [ROOT-2936]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5134
https://github.com/root-project/root/pull/5134:268,Testability,test,testing,268,"[ROOT-10605] When selecting a slice of a RooSimultaneous for plotting,; the last-active slice was plotted, ignoring the selection. This PR is already in master, and will be tested there on Thursday. This will allow merging the backport in time for Friday.; (Automated testing is tricky, since it's about plotting.). Duplicates: [ROOT-2936]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5134
https://github.com/root-project/root/pull/5139:49,Deployability,UPDATE,UPDATE,49,"When the output TFile of a Snapshot is opened in UPDATE mode, and; the output TTree has the same name as a TTree already in the TFile,; the expected behavior is that Snapshot writes adds a new namecycle; to the file. However, Snapshot+IMT is based on TBufferMerger, and TBufferMerger's; behavior in this scenario is to try to merge the new data with the; data already in the TFile (in the same namecycle). In order to make Snapshot+IMT behave the same as a non-IMT Snapshot,; we now always write an empty TTree (with the correct branches) to; the TFile before we start an IMT fill. This first write creates the; new namecycle (initially with no data) with which TBufferMerger will; merge its buffers. This fixes ROOT-10573.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5139
https://github.com/root-project/root/pull/5140:49,Deployability,UPDATE,UPDATE,49,"When the output TFile of a Snapshot is opened in UPDATE mode, and; the output TTree has the same name as a TTree already in the TFile,; the expected behavior is that Snapshot writes adds a new namecycle; to the file.; However, Snapshot+IMT is based on TBufferMerger, and TBufferMerger's; behavior in this scenario is to try to merge the new data with the; data already in the TFile (in the same namecycle). In order to make Snapshot+IMT behave the same as a non-IMT Snapshot,; we now always write an empty TTree (with the correct branches) to; the TFile before we start an IMT fill. This first write creates the; new namecycle (initially with no data) with which TBufferMerger will; merge its buffers. This fixes ROOT-10573. This is a backport of #5139 to v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5140
https://github.com/root-project/root/pull/5142:31,Availability,error,error,31,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5142
https://github.com/root-project/root/pull/5142:524,Availability,error,error,524,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5142
https://github.com/root-project/root/pull/5142:5,Deployability,patch,patch,5,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5142
https://github.com/root-project/root/pull/5147:441,Modifiability,variab,variable,441,"The ROOT C++ kernel uses a helper thread to run the content of; the cells. In addition, from the main thread, the canvases that; have been modified as a result of executing a cell are displayed; in the output of that cell. This commit transfers the responsibility of displaying the canvases; to the helper thread because, as explained in ROOT-9659, if a; cell executes TThread::Initialize (or EnableImplicitMT), gPad; becomes a thread local variable and the changes to gPad done; in the helper thread are not visible to the main thread. This; causes a crash when running TPad::SaveAs in the main thread; since gPad is null in that thread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5147
https://github.com/root-project/root/pull/5149:115,Availability,Error,Error,115,"When user invoke `InsertPointBefore(0, x, y)` with an empty TGraph (fNpoints==0), they will receive a message: . > Error in <TGraph::TGraph>: Inserted point index should be <= -1. This is confusing. The point index can not be -1. It also prevents insertion to an empty graph. People who familiar with `std::vector` may expect the behavior likes `vec.insert(vec.end(), value)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5149
https://github.com/root-project/root/pull/5149:102,Integrability,message,message,102,"When user invoke `InsertPointBefore(0, x, y)` with an empty TGraph (fNpoints==0), they will receive a message: . > Error in <TGraph::TGraph>: Inserted point index should be <= -1. This is confusing. The point index can not be -1. It also prevents insertion to an empty graph. People who familiar with `std::vector` may expect the behavior likes `vec.insert(vec.end(), value)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5149
https://github.com/root-project/root/pull/5151:1016,Availability,avail,available,1016,"dy. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:617,Integrability,interface,interface,617,"The work of this MR has been presented in RooFit developer meetings a few times already. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:648,Integrability,Depend,Dependencies,648,"The work of this MR has been presented in RooFit developer meetings a few times already. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:795,Integrability,interface,interface,795,"The work of this MR has been presented in RooFit developer meetings a few times already. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:999,Integrability,depend,dependency,999,"The work of this MR has been presented in RooFit developer meetings a few times already. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:1052,Integrability,interface,interface,1052,"dy. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:1535,Integrability,depend,dependency,1535," need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:2052,Integrability,Interface,Interface,2052," need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5151:1816,Usability,guid,guide,1816," need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5151
https://github.com/root-project/root/pull/5159:25,Availability,failure,failures,25,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:357,Availability,Error,Errors,357,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:20,Testability,test,test,20,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:49,Testability,test,tests,49,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:190,Testability,test,test-stresshistogram,190,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:228,Testability,test,test-stresshistogram-interpreted,228,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:278,Testability,test,test-stresshistofit,278,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5159:315,Testability,test,test-stresshistofit-interpreted,315,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5159
https://github.com/root-project/root/pull/5170:121,Energy Efficiency,reduce,reduce,121,"Fully exclude source directory from include paths - for dictionary generation and for objects compilation. Significantly reduce list of dirs in CXX flags.; Makes dependency files very clear - `${CMAKE_BINARY_DIR}/include` used in 99%, rest are special includes from `res/` subfolders.; Tested with and without cxx modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5170
https://github.com/root-project/root/pull/5170:162,Integrability,depend,dependency,162,"Fully exclude source directory from include paths - for dictionary generation and for objects compilation. Significantly reduce list of dirs in CXX flags.; Makes dependency files very clear - `${CMAKE_BINARY_DIR}/include` used in 99%, rest are special includes from `res/` subfolders.; Tested with and without cxx modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5170
https://github.com/root-project/root/pull/5170:286,Testability,Test,Tested,286,"Fully exclude source directory from include paths - for dictionary generation and for objects compilation. Significantly reduce list of dirs in CXX flags.; Makes dependency files very clear - `${CMAKE_BINARY_DIR}/include` used in 99%, rest are special includes from `res/` subfolders.; Tested with and without cxx modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5170
https://github.com/root-project/root/pull/5170:184,Usability,clear,clear,184,"Fully exclude source directory from include paths - for dictionary generation and for objects compilation. Significantly reduce list of dirs in CXX flags.; Makes dependency files very clear - `${CMAKE_BINARY_DIR}/include` used in 99%, rest are special includes from `res/` subfolders.; Tested with and without cxx modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5170
https://github.com/root-project/root/pull/5176:43,Availability,error,errors,43,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5176
https://github.com/root-project/root/pull/5176:63,Availability,error,errors,63,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5176
https://github.com/root-project/root/pull/5176:129,Deployability,patch,patch,129,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5176
https://github.com/root-project/root/pull/5176:144,Testability,assert,assertion,144,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5176
https://github.com/root-project/root/pull/5177:348,Availability,error,error,348,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5177
https://github.com/root-project/root/pull/5177:553,Availability,error,error,553,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5177
https://github.com/root-project/root/pull/5177:571,Deployability,patch,patch,571,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5177
https://github.com/root-project/root/pull/5177:12,Testability,log,logic,12,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5177
https://github.com/root-project/root/pull/5178:381,Availability,error,error,381,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5178
https://github.com/root-project/root/pull/5178:589,Availability,error,error,589,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5178
https://github.com/root-project/root/pull/5178:607,Deployability,patch,patch,607,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5178
https://github.com/root-project/root/pull/5178:16,Integrability,message,message,16,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5178
https://github.com/root-project/root/pull/5178:41,Testability,log,logic,41,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5178
https://github.com/root-project/root/pull/5179:10,Testability,Test,Test,10,Added the Test for the compression algorithm for RNTuple as a GSoC evaluation task.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5179
https://github.com/root-project/root/pull/5182:173,Safety,safe,safety,173,"The TTree::kEntriesReshuffled bit signals that a TTree is the output; of the processing of another TTree, and its entries are reshuffled; w.r.t. to the original TTree. As a safety measure, a TTree with this; bit set cannot add friends nor can be added as a friend. MT Snapshot, in RDataFrame, sets kEntriesReshuffled for the output tree to true. This fixes ROOT-9556.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5182
https://github.com/root-project/root/pull/5184:122,Modifiability,variab,variables,122,After investigating the bug reported here. https://sft.its.cern.ch/jira/browse/ROOT-10626. we noticed that the deprecated variables; PYTHON_EXECUTABLE; PYTHON_INCLUDE_DIRS; PYTHON_LIBRARIES; PYTHON_VERSION_MAJOR; PYTHON_VERSION_MINOR; PYTHON_VERSION_STRING; NUMPY_FOUND; NUMPY_INCLUDE_DIRS; are not set correctly in the CMakeCache. This should fix the problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5184
https://github.com/root-project/root/pull/5185:122,Modifiability,variab,variables,122,After investigating the bug reported here. https://sft.its.cern.ch/jira/browse/ROOT-10626. we noticed that the deprecated variables; PYTHON_EXECUTABLE; PYTHON_INCLUDE_DIRS; PYTHON_LIBRARIES; PYTHON_VERSION_MAJOR; PYTHON_VERSION_MINOR; PYTHON_VERSION_STRING; NUMPY_FOUND; NUMPY_INCLUDE_DIRS; are not set correctly in the CMakeCache. This should fix the problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5185
https://github.com/root-project/root/pull/5187:178,Availability,error,error,178,"I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr; raise AttributeError(""Failed to import {} from ROOT"".format(name)); AttributeError: Failed to import foo from ROOT; ```. The behaviour before:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr; return getattr(gbl_namespace, name); AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:; type object '' has no attribute 'foo'; 'foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr; return getattr(gbl_namespace.ROOT, name); AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:; type object 'ROOT' has no attribute 'foo'; 'ROOT::foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:184,Integrability,message,messages,184,"I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr; raise AttributeError(""Failed to import {} from ROOT"".format(name)); AttributeError: Failed to import foo from ROOT; ```. The behaviour before:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr; return getattr(gbl_namespace, name); AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:; type object '' has no attribute 'foo'; 'foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr; return getattr(gbl_namespace.ROOT, name); AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:; type object 'ROOT' has no attribute 'foo'; 'ROOT::foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5187:135,Testability,log,logic,135,"I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr; raise AttributeError(""Failed to import {} from ROOT"".format(name)); AttributeError: Failed to import foo from ROOT; ```. The behaviour before:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr; return getattr(gbl_namespace, name); AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:; type object '' has no attribute 'foo'; 'foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr; return getattr(gbl_namespace.ROOT, name); AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:; type object 'ROOT' has no attribute 'foo'; 'ROOT::foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5187
https://github.com/root-project/root/pull/5189:101,Modifiability,variab,variables,101,* Remove ROOT.ROOT calls in the Python tutorials; * Use rdfentry_ instead of tdfentry_; * Use df for variables instead of tdf. @etejedor Fine by you? The tutorials will now break with the old PyROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5189
https://github.com/root-project/root/pull/5192:169,Availability,error,error,169,- [ROOT-5311] Make it much less verbose; - [ROOT-4060] Make it abort when invalid sample names are given; - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper.; - [ROOT-9365] Make documentation a bit easier to find.; - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5192:63,Safety,abort,abort,63,- [ROOT-5311] Make it much less verbose; - [ROOT-4060] Make it abort when invalid sample names are given; - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper.; - [ROOT-9365] Make documentation a bit easier to find.; - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5192
https://github.com/root-project/root/pull/5193:118,Deployability,UPDATE,UPDATE,118,"...and add RSnapshotOptions::fOverwriteIfExists to give users the chance; to still write a TTree to a TFile opened in UPDATE mode, even if a TTree; with the same name is already present in the file, at the cost of deleting; the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5193:305,Testability,test,test,305,"...and add RSnapshotOptions::fOverwriteIfExists to give users the chance; to still write a TTree to a TFile opened in UPDATE mode, even if a TTree; with the same name is already present in the file, at the cost of deleting; the previous TTree from the file. This fixes ROOT-10573. ~~EDIT: still missing a test for `fOverwriteIfExists`, coming soon~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5193
https://github.com/root-project/root/pull/5200:0,Deployability,update,update,0,update -a and -l options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5200
https://github.com/root-project/root/pull/5204:6,Availability,failure,failure,6,…e of failure. This is a follow up of f52497607d370f688e93df316da41af9ed1ff297 and a fix for ROOT-10632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5204
https://github.com/root-project/root/pull/5211:17,Integrability,depend,dependency,17,rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5211:70,Performance,load,loading,70,rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5211
https://github.com/root-project/root/pull/5213:55,Deployability,update,update,55,"This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:; - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups; - Cleanups, such as removing unnecessary overrides, dead files; - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5213:245,Integrability,interface,interfaces,245,"This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:; - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups; - Cleanups, such as removing unnecessary overrides, dead files; - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5213
https://github.com/root-project/root/pull/5214:227,Performance,concurren,concurrently,227,"Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5214:146,Safety,avoid,avoid,146,"Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5214
https://github.com/root-project/root/pull/5216:122,Testability,test,testing,122,This PR replace #2215 from @HDembinski as suggested by him. . There is no need to compute the precision in Minuit2. ; For testing and comparison the previous code to compute the numerical precision is now put in a new function MnMachinePrecision::ComputePrecision(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5216
https://github.com/root-project/root/pull/5217:188,Modifiability,variab,variables,188,"…R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake; - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT; - Remove from Cache not needed OTHER... variables; - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:; http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5217:162,Performance,Cache,Cache,162,"…R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake; - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT; - Remove from Cache not needed OTHER... variables; - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:; http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5217
https://github.com/root-project/root/pull/5219:1507,Energy Efficiency,reduce,reduce,1507,"he category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:667,Integrability,interface,interfaces,667,"RooFit categories were using the class `RooCatType (: public TObject)`; instead of an integer to represent category states. It contains an integer; and a char[256], which can store a part of the category name.; This prevents fast batch access, and increases the overhead for data storage; and data loading. From now on, categories are represented as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:843,Integrability,interface,interface,843,"RooFit categories were using the class `RooCatType (: public TObject)`; instead of an integer to represent category states. It contains an integer; and a char[256], which can store a part of the category name.; This prevents fast batch access, and increases the overhead for data storage; and data loading. From now on, categories are represented as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1585,Integrability,interface,interfaces,1585,"t's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Dep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1913,Integrability,interface,interfaces,1913,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2044,Integrability,interface,interface,2044,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2166,Integrability,interface,interface,2166,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:298,Performance,load,loading,298,"RooFit categories were using the class `RooCatType (: public TObject)`; instead of an integer to represent category states. It contains an integer; and a char[256], which can store a part of the category name.; This prevents fast batch access, and increases the overhead for data storage; and data loading. From now on, categories are represented as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1358,Performance,load,loading,1358,"ed as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:236,Security,access,access,236,"RooFit categories were using the class `RooCatType (: public TObject)`; instead of an integer to represent category states. It contains an integer; and a char[256], which can store a part of the category name.; This prevents fast batch access, and increases the overhead for data storage; and data loading. From now on, categories are represented as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:2482,Testability,assert,assert,2482,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5219:1650,Usability,clear,clearing,1650,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5219
https://github.com/root-project/root/pull/5220:39,Modifiability,variab,variables,39,"On linux, the compiler flags are cache variables, i.e. they can be; overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5220:33,Performance,cache,cache,33,"On linux, the compiler flags are cache variables, i.e. they can be; overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5220
https://github.com/root-project/root/pull/5221:748,Availability,alive,alive,748,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . ; In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5221:30,Usability,guid,guide,30,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . ; In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5221
https://github.com/root-project/root/pull/5222:18,Availability,error,error,18,"Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'; ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; ^; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:57,Availability,error,error,57,"Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'; ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; ^; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5222:225,Availability,Error,Error,225,"Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'; ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; ^; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5222
https://github.com/root-project/root/pull/5228:48,Deployability,release,releases,48,More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5228:61,Deployability,release,release-,61,More info: https://github.com/google/googletest/releases/tag/release-1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5228
https://github.com/root-project/root/pull/5230:733,Availability,alive,alive,733,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() .; In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5230:30,Usability,guid,guide,30,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() .; In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5230
https://github.com/root-project/root/pull/5231:56,Integrability,depend,dependency,56,Extraction from #5181 . First of all - add libraries in dependency list when class from such library used; Second - try to remove includes which are not used and coming from libraries which are not in dep list; In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:244,Integrability,interface,interfaces,244,Extraction from #5181 . First of all - add libraries in dependency list when class from such library used; Second - try to remove includes which are not used and coming from libraries which are not in dep list; In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5231:302,Safety,avoid,avoid,302,Extraction from #5181 . First of all - add libraries in dependency list when class from such library used; Second - try to remove includes which are not used and coming from libraries which are not in dep list; In two places try to use virtual interfaces (TVirtualTreePlayer and TVirtualPacketizer) to avoid linking to implementation library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5231
https://github.com/root-project/root/pull/5234:20,Availability,failure,failures,20,Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5234:45,Testability,test,test,45,Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5234
https://github.com/root-project/root/pull/5235:305,Deployability,patch,patch,305,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:138,Integrability,depend,dependencies,138,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:170,Performance,load,loading,170,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5235:110,Safety,detect,detect,110,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5235
https://github.com/root-project/root/pull/5237:567,Availability,avail,available,567,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:311,Modifiability,config,configuring,311,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:48,Security,sanitiz,sanitizer,48,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:123,Security,sanitiz,sanitizer,123,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:250,Security,sanitiz,sanitizer,250,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:398,Security,sanitiz,sanitizer,398,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:610,Security,sanitiz,sanitizer,610,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5237:738,Testability,test,tests,738,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5237
https://github.com/root-project/root/pull/5238:146,Availability,Error,Error,146,Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662; and; https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):; Please enable builtin Glew due bug in latest CMake (use cmake option; -Dbuiltin_glew=ON).; Call Stack (most recent call first):; CMakeLists.txt:168 (include),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5238:204,Integrability,message,message,204,Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662; and; https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):; Please enable builtin Glew due bug in latest CMake (use cmake option; -Dbuiltin_glew=ON).; Call Stack (most recent call first):; CMakeLists.txt:168 (include),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5238
https://github.com/root-project/root/pull/5240:25,Integrability,depend,dependency,25,Otherwise one has to set dependency from ProofPlayer lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5240
https://github.com/root-project/root/pull/5244:5,Deployability,patch,patch,5,"This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5244
https://github.com/root-project/root/pull/5245:139,Integrability,message,message,139,"…he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):; The package name passed to `find_package_handle_standard_args` (MYSQL) does; not match the name of the calling package (MySQL). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:601 (find_package); CMakeLists.txt:168 (include); This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5245:356,Modifiability,variab,variables,356,"…he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):; The package name passed to `find_package_handle_standard_args` (MYSQL) does; not match the name of the calling package (MySQL). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:601 (find_package); CMakeLists.txt:168 (include); This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5245
https://github.com/root-project/root/pull/5246:167,Integrability,depend,dependency,167,"One need virtual method in `TVirtualIndex` to extract Ndim from the; `TTreeFormula`. Otherwise one has link `Tree` lib again `TreePlayer` and; `Hist`, making circular dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5246
https://github.com/root-project/root/pull/5247:34,Modifiability,config,configure,34,The feature allows to fail during configure time if required Python; packages are not found. The flag require-python-deps is by default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5247
https://github.com/root-project/root/pull/5252:82,Performance,load,load,82,The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5252:69,Testability,test,test,69,The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5252
https://github.com/root-project/root/pull/5255:48,Safety,avoid,avoid,48,Long time ago this protection was introduced to avoid parsing of complex SQL includes.; With a cling this protection no longer work properly.; Remove it completely,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5255
https://github.com/root-project/root/pull/5262:31,Deployability,patch,patches,31,This fixed ROOT-10630 for 6.20 patches and is a backport of #4909,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5262
https://github.com/root-project/root/pull/5265:68,Availability,avail,available,68,These includes may be used in dictionaries and therefore should; be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5265
https://github.com/root-project/root/pull/5270:24,Energy Efficiency,adapt,adapted,24,"Internal logic has been adapted to support the case in which TTreeProcessorMT; is acting on a TChain and the trees in the TChain do not all have the same name.; Importantly, the fTreeName data-member changed name to fTreeNames and is now a; vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:24,Modifiability,adapt,adapted,24,"Internal logic has been adapted to support the case in which TTreeProcessorMT; is acting on a TChain and the trees in the TChain do not all have the same name.; Importantly, the fTreeName data-member changed name to fTreeNames and is now a; vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5270:9,Testability,log,logic,9,"Internal logic has been adapted to support the case in which TTreeProcessorMT; is acting on a TChain and the trees in the TChain do not all have the same name.; Importantly, the fTreeName data-member changed name to fTreeNames and is now a; vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5270
https://github.com/root-project/root/pull/5272:109,Testability,test,tested,109,Fix for https://sft.its.cern.ch/jira/browse/ROOT-10654 and https://sft.its.cern.ch/jira/browse/ROOT-10599. I tested locally for a failing rootmv command i had and it works.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5272
https://github.com/root-project/root/pull/5273:14,Usability,clear,clear,14,...to make it clear that we only use these functions in this same source file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5273
https://github.com/root-project/root/pull/5274:14,Testability,test,tests,14,"Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5274
https://github.com/root-project/root/pull/5275:14,Testability,test,tests,14,"Corresponding tests have not been backported, let me know if you want them too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5275
https://github.com/root-project/root/pull/5276:4,Availability,down,downside,4,"The downside is that builtin_xrootd requires an internet connection. So by making users that expect ROOT + remote files to ""just work"" happy, we might upset users that need want a way to build ROOT offline. There is a precedent: TBB is in the exact same situation and builtin_tbb is on by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5276
https://github.com/root-project/root/pull/5278:103,Integrability,interface,interfaces,103,"...and add a test. The new argument is to make TTreeProcessorMT consistent with other; multi-threading interfaces, namely TThreadExecutor. This is the last; ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:87,Performance,multi-thread,multi-threading,87,"...and add a test. The new argument is to make TTreeProcessorMT consistent with other; multi-threading interfaces, namely TThreadExecutor. This is the last; ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5278:13,Testability,test,test,13,"...and add a test. The new argument is to make TTreeProcessorMT consistent with other; multi-threading interfaces, namely TThreadExecutor. This is the last; ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5278
https://github.com/root-project/root/pull/5280:10,Modifiability,variab,variable,10,Implement variable rebinning 2-D histogram classes ([ROOT-5224](https://sft.its.cern.ch/jira/browse/ROOT-5224)); Implemented for TProfile2D as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5280
https://github.com/root-project/root/pull/5281:5,Testability,test,test,5,"This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above. Won't fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5281
https://github.com/root-project/root/pull/5282:8,Deployability,release,release,8,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:473,Deployability,Release,ReleaseNotes,473,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:495,Deployability,patch,patch,495,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:515,Deployability,upgrade,upgrade,515,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:63,Energy Efficiency,Reduce,Reduce,63,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:161,Integrability,depend,depending,161,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5282:125,Modifiability,variab,variable,125,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5282
https://github.com/root-project/root/pull/5287:38,Availability,error,errors,38,"When creating the Asimov dataset, the errors in each bin were N, that; is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5287
https://github.com/root-project/root/pull/5288:240,Deployability,patch,patch,240,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:74,Performance,concurren,concurrent,74,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:247,Performance,concurren,concurrent,247,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:85,Security,access,access,85,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5288:258,Security,access,access,258,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5288
https://github.com/root-project/root/pull/5289:3,Usability,simpl,simplifies,3,"It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5289
https://github.com/root-project/root/pull/5290:43,Performance,multi-thread,multi-threading,43,"TThreadExecutor does not activate implicit multi-threading; (ROOT::IsImplicitMTEnabled() is false after constructing a; TThreadExecutor) but it does change the size of the thread-pool, which; is not only used by implicit multi-threading features, but also by; TThreadExecutor and TTreeProcessorMT. So the thread pool is not the; ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,; so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5290:221,Performance,multi-thread,multi-threading,221,"TThreadExecutor does not activate implicit multi-threading; (ROOT::IsImplicitMTEnabled() is false after constructing a; TThreadExecutor) but it does change the size of the thread-pool, which; is not only used by implicit multi-threading features, but also by; TThreadExecutor and TTreeProcessorMT. So the thread pool is not the; ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,; so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5290
https://github.com/root-project/root/pull/5292:13,Testability,test,test,13,...and add a test. This fixes ROOT-10346.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5292
https://github.com/root-project/root/pull/5293:281,Deployability,patch,patch,281,"At construction time, RDataFrame sets its number of processing slots; equal to ROOT::GetImplicitMTPoolSize(). We always want to; construct TTreeProcessorMT's thread pool with a size equal to; RDF::GetNSlots(). Besides being more robus (less reliance on shared global state),; this patch guarantees that if the number of threads in the thread pool; is different than what RDF requests, we get a warning from TThreadExecutor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5293
https://github.com/root-project/root/pull/5296:12,Safety,avoid,avoid,12,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file declare the {namespace std} only after; GenerateNecessaryIncludes method is called",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5296
https://github.com/root-project/root/pull/5301:140,Performance,concurren,concurrently,140,"These locks were only activated when inside TTreeProcessorMT::Process,; and they seem to protect the usecase in which the method is called; concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5301
https://github.com/root-project/root/pull/5302:57,Deployability,Patch,Patch,57,This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5302
https://github.com/root-project/root/pull/5304:12,Deployability,patch,patch,12,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:242,Deployability,patch,patch,242,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:65,Performance,multi-thread,multi-threading,65,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:267,Performance,multi-thread,multi-thread,267,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5304:325,Performance,multi-thread,multi-threading,325,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5304
https://github.com/root-project/root/pull/5306:5,Testability,test,test,5,"This test fails with runtime C++ modules on in v6.18, runs fine in v6.20 and above.; Won't fix it in older versions, so it's also disabled if runtime C++ modules are on; in v6.16, just to be sure/consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5306
https://github.com/root-project/root/pull/5308:178,Deployability,update,updated,178,"[Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a; pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back.; Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5308:234,Testability,test,test,234,"[Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a; pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back.; Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5308
https://github.com/root-project/root/pull/5310:85,Energy Efficiency,adapt,adapt,85,* Rename DeclareCppCallable to Numba.Declare; * Remove generic backend; * Rename and adapt test accordingly; * Add support for RVecs in callables jitted with numba; * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:85,Modifiability,adapt,adapt,85,* Rename DeclareCppCallable to Numba.Declare; * Remove generic backend; * Rename and adapt test accordingly; * Add support for RVecs in callables jitted with numba; * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5310:91,Testability,test,test,91,* Rename DeclareCppCallable to Numba.Declare; * Remove generic backend; * Rename and adapt test accordingly; * Add support for RVecs in callables jitted with numba; * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5310
https://github.com/root-project/root/pull/5311:109,Modifiability,variab,variables,109,"python-dev is required to build PyROOT with multiple Python versions.; The reason is that the python related variables are set only if; python-dev was found. On the other hand, python-dev is not a requirement; for ROOT per se, since it just requires interpreter. With this change we relax the condition on python-dev found and force; pyroot and pyroot_exp to off it python-dev was not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5311
https://github.com/root-project/root/pull/5315:14,Deployability,update,updates,14,Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:79,Integrability,message,messages,79,Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5315:112,Testability,assert,assert,112,Documentation updates and sometimes also code changes that e.g. format warning messages or replace ineffective `assert`s by `throw`s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5315
https://github.com/root-project/root/pull/5316:28,Availability,error,errors,28,"When asymptotically correct errors are used, the current implementation; breaks if variables don't have identical name and title. This is solved; by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5316:83,Modifiability,variab,variables,83,"When asymptotically correct errors are used, the current implementation; breaks if variables don't have identical name and title. This is solved; by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5316
https://github.com/root-project/root/pull/5317:119,Performance,cache,cachefile,119,Use the non static TString::Form to actually modify the cmd string.; Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5317
https://github.com/root-project/root/pull/5317:178,Performance,cache,cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads,178,Use the non static TString::Form to actually modify the cmd string.; Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5317
https://github.com/root-project/root/pull/5319:64,Performance,multi-thread,multi-thread,64,"This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985; and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5319
https://github.com/root-project/root/pull/5320:122,Testability,assert,assert,122,This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5320
https://github.com/root-project/root/pull/5321:115,Performance,load,load-libs,115,This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5321
https://github.com/root-project/root/pull/5321:58,Testability,test,testSummary,58,This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5321
https://github.com/root-project/root/pull/5323:122,Testability,assert,assert,122,This fixes a nightly build issue on OSX with -Druntime_cxxmodules=On by default. There rootcling still needs to parse the assert statement even if NDEBUG is defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5323
https://github.com/root-project/root/pull/5324:10,Modifiability,rewrite,rewrite,10,This is a rewrite of [this MR](https://github.com/root-project/root/pull/5151).; Please review the revised implementation structure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5324
https://github.com/root-project/root/pull/5327:84,Availability,failure,failure,84,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:28,Testability,test,tests,28,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5327:38,Usability,simpl,simple,38,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5327
https://github.com/root-project/root/pull/5329:241,Availability,avail,available,241,"This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:5,Energy Efficiency,reduce,reduces,5,"This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5329:216,Performance,Perform,Performance,216,"This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5329
https://github.com/root-project/root/pull/5330:142,Availability,error,error,142,If provided pointer type does not match with type read; from JSON check inheritance. It can be that pointer type; is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5330:72,Modifiability,inherit,inheritance,72,If provided pointer type does not match with type read; from JSON check inheritance. It can be that pointer type; is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5330
https://github.com/root-project/root/pull/5333:28,Availability,error,errors,28,"When asymptotically correct errors are used, the current implementation; breaks if variables don't have identical name and title. This is solved; by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5333:83,Modifiability,variab,variables,83,"When asymptotically correct errors are used, the current implementation; breaks if variables don't have identical name and title. This is solved; by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5333
https://github.com/root-project/root/pull/5334:202,Availability,error,error,202,"As discussed in ROOT-8011, TPython can't work with the ROOT C++; kernel for Jupyter because the current implementation relies; on a plain shared library to run the cell code and capture; its output and error. In particular, a crash happens when; the library, libJupyROOT, tries to get the __main__ module; in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's; initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5334:524,Modifiability,variab,variable,524,"As discussed in ROOT-8011, TPython can't work with the ROOT C++; kernel for Jupyter because the current implementation relies; on a plain shared library to run the cell code and capture; its output and error. In particular, a crash happens when; the library, libJupyROOT, tries to get the __main__ module; in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's; initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5334
https://github.com/root-project/root/pull/5336:37,Safety,avoid,avoiding,37,The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5336:191,Testability,assert,assert,191,The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5336
https://github.com/root-project/root/pull/5337:48,Integrability,interface,interface,48,"ROOT-7921; When using the RooCustomizer factory interface, deep trees couldn't be; reused in subsequent expressions. ROOT-10670; Due to changes somewhere in math, the RooMinimizer in ROOT 6.20 falls; back to Minuit after using minimize() with a different minimiser.; minim.minimize(""Minuit2"");; minim.hesse(); // Users expected minuit2 here, but now minuit. The usual behaviour was restored by remembering the choice of minimiser; in `minimize`, which apparently happened behind the scenes in math in; the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5337
https://github.com/root-project/root/pull/5339:119,Availability,avail,available,119,On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require; to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5339:68,Usability,simpl,simpler,68,On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require; to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5339
https://github.com/root-project/root/pull/5340:133,Performance,cache,cache,133,"When GetReadCache is called from a TChain, the check against the `this`; pointer should actually become a check against `fTree`: the cache is; not for the TChain object but for the TTree it loaded. This should fix ROOT-10672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5340:190,Performance,load,loaded,190,"When GetReadCache is called from a TChain, the check against the `this`; pointer should actually become a check against `fTree`: the cache is; not for the TChain object but for the TTree it loaded. This should fix ROOT-10672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5340
https://github.com/root-project/root/pull/5342:50,Availability,error,error,50,"In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and; a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave; leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5342
https://github.com/root-project/root/pull/5343:181,Availability,error,error,181,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:234,Availability,error,error,234,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:49,Performance,optimiz,optimization,49,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:101,Testability,test,tests,101,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5343:130,Testability,test,test,130,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5343
https://github.com/root-project/root/pull/5346:4,Testability,log,logic,4,"The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5346
https://github.com/root-project/root/pull/5347:4,Testability,log,logic,4,"The logic here was plain wrong, calling Count() should not modify; the state of RInterface. It only happened to work because RActionBase's; constructor forgot to actually move-construct its data member (also; fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5347
https://github.com/root-project/root/pull/5348:227,Deployability,patch,patch,227,"OSX has modularized sdk (libc++ included) and there we prefer the modulemaps that libraries ship with. However, libc++ can be also used on other Unix platforms and we should not try to mount the std.modulemap file for it. This patch fixes ROOT-10677.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5348
https://github.com/root-project/root/pull/5354:12,Deployability,patch,patch,12,"Before this patch, aliases of defined columns were jitted in namespace; __rdfX with X monotonously increasing. That is strictly unnecessary,; as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager.; The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:192,Deployability,patch,patch,192,"Before this patch, aliases of defined columns were jitted in namespace; __rdfX with X monotonously increasing. That is strictly unnecessary,; as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager.; The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5354:298,Usability,simpl,simplify,298,"Before this patch, aliases of defined columns were jitted in namespace; __rdfX with X monotonously increasing. That is strictly unnecessary,; as every alias already contains a unique ID. This patch makes RDF more consistent (everything is jitted in the same namespace), and as a consequence we can simplify the signature of several helper functions and can remove a data member and relative getter from RLoopManager.; The change also helps with re-usage of jitted lambdas ([ROOT-10657](https://sft.its.cern.ch/jira/browse/ROOT-10657) as the type signatures of jitted lambdas of different RDF computation graphs will not contain different namespaces anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5354
https://github.com/root-project/root/pull/5356:109,Deployability,patch,patch,109,"In the future, we want separate computation graphs to share and re-use already; jitted lambdas. Without this patch, however, we would have an ordering; problem or a redefinition problem, because RDF2 might want to re-use/redefine; a lambda that RDF1 is _going to_ declare, but (since we delay all; jitting to right before an RDF's event loop) that might happen too late; for RDF2. With this change, all RDFs can jit all code that has been booked by all; other RDFs, resolving that problem. In addition, making less, ""fatter""; call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:555,Performance,perform,performance,555,"In the future, we want separate computation graphs to share and re-use already; jitted lambdas. Without this patch, however, we would have an ordering; problem or a redefinition problem, because RDF2 might want to re-use/redefine; a lambda that RDF1 is _going to_ declare, but (since we delay all; jitting to right before an RDF's event loop) that might happen too late; for RDF2. With this change, all RDFs can jit all code that has been booked by all; other RDFs, resolving that problem. In addition, making less, ""fatter""; call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5356:567,Performance,optimiz,optimization,567,"In the future, we want separate computation graphs to share and re-use already; jitted lambdas. Without this patch, however, we would have an ordering; problem or a redefinition problem, because RDF2 might want to re-use/redefine; a lambda that RDF1 is _going to_ declare, but (since we delay all; jitting to right before an RDF's event loop) that might happen too late; for RDF2. With this change, all RDFs can jit all code that has been booked by all; other RDFs, resolving that problem. In addition, making less, ""fatter""; call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5356
https://github.com/root-project/root/pull/5359:71,Deployability,patch,patch,71,"This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5359:143,Integrability,depend,dependencies,143,"This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5359
https://github.com/root-project/root/pull/5360:116,Modifiability,variab,variables,116,"When importing a dataset from a TTree, selection strings can be passed.; When selection strings are not using *all* variables that are copied; into the dataset, the selection formula was warning that not all; variables are used in the selection. Given that this is likely intended,; the warning was removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5360
https://github.com/root-project/root/pull/5360:209,Modifiability,variab,variables,209,"When importing a dataset from a TTree, selection strings can be passed.; When selection strings are not using *all* variables that are copied; into the dataset, the selection formula was warning that not all; variables are used in the selection. Given that this is likely intended,; the warning was removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5360
https://github.com/root-project/root/pull/5361:18,Availability,failure,failures,18,"I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5361:62,Testability,test,test,62,"I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5361
https://github.com/root-project/root/pull/5363:19,Deployability,install,installation,19,"This fixes:; - The installation of `libJupyROOTX_Y`; - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5363:75,Deployability,install,installation,75,"This fixes:; - The installation of `libJupyROOTX_Y`; - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5363
https://github.com/root-project/root/pull/5364:380,Deployability,integrat,integration,380,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:984,Deployability,install,installed,984,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:210,Integrability,interface,interface,210,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:380,Integrability,integrat,integration,380,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:790,Modifiability,config,config,790,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:819,Modifiability,config,config,819,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:915,Performance,Perform,Performance,915,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:567,Testability,test,tests,567,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5364:928,Testability,benchmark,benchmarking,928,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5364
https://github.com/root-project/root/pull/5365:704,Availability,error,error,704,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:715,Availability,Error,Error,715,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:512,Performance,cache,cache,512,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:636,Performance,cache,cache,636,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:700,Testability,log,log,700,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5365:533,Usability,simpl,simple,533,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5365
https://github.com/root-project/root/pull/5366:113,Integrability,INTERFACE,INTERFACE,113,"When linking against gtest/gmock, the include directories are not added; to the newly created targets. This adds INTERFACE includes to these; targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5366:332,Testability,test,test,332,"When linking against gtest/gmock, the include directories are not added; to the newly created targets. This adds INTERFACE includes to these; targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5366
https://github.com/root-project/root/pull/5367:87,Modifiability,layers,layers,87,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:642,Modifiability,layers,layers,642,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:619,Performance,optimiz,optimizer,619,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:21,Testability,test,test,21,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5367:58,Testability,test,tests,58,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5367
https://github.com/root-project/root/pull/5369:47,Modifiability,variab,variable,47,Small hack to silence the (potentially) unused variable `url1` without touching cmake.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5369
https://github.com/root-project/root/pull/5371:17,Testability,assert,assert,17,"This prevents an assert (isClingShadowNamespace(D->getDeclContext()) && ""D not in a __cling_N5xxx namespace?""), function hideDecl, file /build/jenkins/night/LABEL/mac1014/SPEC/soversion/V/master/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp, line 61",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5371
https://github.com/root-project/root/pull/5372:40,Availability,avail,available,40,Add the fact TMathText rendering is not available for PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5372
https://github.com/root-project/root/pull/5376:310,Performance,load,loading,310,"@gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5376:432,Performance,load,load,432,"@gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5376
https://github.com/root-project/root/pull/5377:29,Energy Efficiency,schedul,scheduler,29,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:552,Performance,cache,cache,552,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:741,Performance,concurren,concurrent,741,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:764,Performance,Load,LoadCluster,764,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:1001,Performance,load,loaded,1001,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5377:286,Testability,log,logic,286,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5377
https://github.com/root-project/root/pull/5379:930,Security,access,access,930,"This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:; ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:1175,Security,access,access,1175,"This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:; ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5379:572,Usability,simpl,simple,572,"This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:; ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5379
https://github.com/root-project/root/pull/5380:9,Availability,toler,tolerance,9,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:33,Availability,failure,failures,33,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:142,Availability,avail,available,142,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:22,Safety,avoid,avoid,22,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:4,Testability,test,test,4,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:104,Testability,test,test,104,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5380:113,Usability,simpl,simple,113,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5380
https://github.com/root-project/root/pull/5390:7,Availability,error,error,7,"In the error code pass of TKey::Read*, the buffer cleanup was not done (it; was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5390
https://github.com/root-project/root/pull/5391:7,Availability,error,error,7,"In the error code path of TKey::Read*, the buffer cleanup was not done (it; was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5391
https://github.com/root-project/root/pull/5394:80,Deployability,patch,patched,80,This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5394
https://github.com/root-project/root/pull/5397:89,Integrability,message,message,89,* Increases the test coverage of interacting with third-party python packages; * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5397:16,Testability,test,test,16,* Increases the test coverage of interacting with third-party python packages; * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5397
https://github.com/root-project/root/pull/5398:69,Security,hash,hash,69,In setups where we have debug symbols in a separate library the .gnu.hash section appears invalid. Clients can strip the debug symbols into a separate library by:. objcopy --only-keep-debug libA.so libA.so.dbg; objcopy --strip-debug libA.so; objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20. cc: @krasznaa (I do not seem to find Scott's and Reiner's github handles).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5398
https://github.com/root-project/root/pull/5403:133,Safety,detect,detected,133,"On some systems (CentOS 8) latest chrome not allows to run HTML files,; which are situated in /tmp directory. Only if such situation detected,; try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5403:370,Testability,test,testReport,370,"On some systems (CentOS 8) latest chrome not allows to run HTML files,; which are situated in /tmp directory. Only if such situation detected,; try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5403
https://github.com/root-project/root/pull/5407:28,Deployability,patch,patches,28,This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5407
https://github.com/root-project/root/pull/5408:145,Availability,error,error,145,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:431,Availability,Ping,Ping,431,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:80,Integrability,depend,dependencies,80,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:160,Integrability,depend,dependency,160,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:62,Testability,test,test,62,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5408:130,Testability,test,test,130,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5408
https://github.com/root-project/root/pull/5412:518,Testability,test,tested,518,"[ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually; crashed, since it was using a TRefArray, which does some global UID; magic that overflows. Replacing the TRefArray by a simple vector of; indices fixes that.; This is possible, since the TRefArray only points to active elements in; another collection, so simply storing the index in that collection is; sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading; this file, and generating the 10 next random numbers is tested now. @pcanal ; Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this?; ```; TFoamCell **fCells;; fCells = onfile.fCells;; ```; It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:194,Usability,simpl,simple,194,"[ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually; crashed, since it was using a TRefArray, which does some global UID; magic that overflows. Replacing the TRefArray by a simple vector of; indices fixes that.; This is possible, since the TRefArray only points to active elements in; another collection, so simply storing the index in that collection is; sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading; this file, and generating the 10 next random numbers is tested now. @pcanal ; Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this?; ```; TFoamCell **fCells;; fCells = onfile.fCells;; ```; It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5412:329,Usability,simpl,simply,329,"[ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually; crashed, since it was using a TRefArray, which does some global UID; magic that overflows. Replacing the TRefArray by a simple vector of; indices fixes that.; This is possible, since the TRefArray only points to active elements in; another collection, so simply storing the index in that collection is; sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading; this file, and generating the 10 next random numbers is tested now. @pcanal ; Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this?; ```; TFoamCell **fCells;; fCells = onfile.fCells;; ```; It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5412
https://github.com/root-project/root/pull/5413:217,Safety,safe,safety,217,"Since TFormula accepts seriously broken formulae, ""x+t"" is, for example,; interpreted as a four-dimensional formula that can be evaluated; using Eval(x=2), using undefined values for {y,z,t}, RooFit needs to do; some safety checks. This formula would otherwise be valid in RooFit:; RooFormula form(""form"", ""x<y"", x);. That's an aftermath to #5360, where Enrico correctly raised that point that only writing a warning in the documentation will not help most users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5413
https://github.com/root-project/root/pull/5414:30,Availability,error,error,30,This should fix the following error on Windows:; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):; PyROOT: Python development package not found and pyroot component required; (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:55,Availability,Error,Error,55,This should fix the following error on Windows:; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):; PyROOT: Python development package not found and pyroot component required; (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5414:114,Integrability,message,message,114,This should fix the following error on Windows:; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):; PyROOT: Python development package not found and pyroot component required; (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5414
https://github.com/root-project/root/pull/5416:62,Availability,error,error-when-compiling-macro-,62,Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5416
https://github.com/root-project/root/pull/5417:169,Availability,mask,mask,169,Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. ; These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5417:380,Deployability,Update,Update,380,Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. ; These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5417
https://github.com/root-project/root/pull/5418:18,Integrability,depend,dependency,18,"This PR removes a dependency which was wrongly added in Mathcore from Mathmore. ; Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5418
https://github.com/root-project/root/pull/5419:81,Availability,error,errors,81,"ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```; /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]; ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5419:157,Availability,error,error,157,"ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```; /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]; ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5419
https://github.com/root-project/root/pull/5420:327,Availability,down,down,327,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:673,Availability,Error,Error,673,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:186,Deployability,patch,patch,186,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:629,Deployability,patch,patch,629,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:572,Integrability,depend,dependent,572,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:19,Performance,Load,Load,19,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:38,Performance,load,loaded,38,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:172,Performance,Load,LoadPCM,172,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:691,Performance,Load,LoadPCM,691,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:771,Performance,Load,LoadPCM,771,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:857,Performance,Load,LoadPCM,857,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:425,Testability,stub,stub,425,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:661,Testability,test,tests,661,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:145,Usability,undo,undo,145,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5420:460,Usability,undo,undo,460,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5420
https://github.com/root-project/root/pull/5422:250,Availability,failure,failures,250,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:269,Availability,Error,Error,269,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:158,Deployability,patch,patch,158,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:21,Performance,load,loaded,21,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:286,Performance,Load,LoadPCM,286,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:364,Performance,Load,LoadPCM,364,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:448,Performance,Load,LoadPCM,448,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:528,Performance,Load,LoadPCM,528,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:606,Performance,Load,LoadPCM,606,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5422:690,Performance,Load,LoadPCM,690,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5422
https://github.com/root-project/root/pull/5423:5,Deployability,patch,patch,5,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:160,Deployability,patch,patch,160,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5423:139,Energy Efficiency,Green,Green,139,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5423
https://github.com/root-project/root/pull/5424:5,Deployability,patch,patch,5,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:150,Deployability,patch,patch,150,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:139,Energy Efficiency,Green,Green,139,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5424:183,Integrability,Depend,Depends,183,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5424
https://github.com/root-project/root/pull/5425:116,Modifiability,variab,variables,116,"When importing a dataset from a TTree, selection strings can be passed.; When selection strings are not using *all* variables that are copied; into the dataset, the selection formula was warning that not all; variables are used in the selection. Given that this is likely intended,; the warning was removed. (cherry picked from commit bdac678f06231981d4fde2362bed3c485a714936)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5425
https://github.com/root-project/root/pull/5425:209,Modifiability,variab,variables,209,"When importing a dataset from a TTree, selection strings can be passed.; When selection strings are not using *all* variables that are copied; into the dataset, the selection formula was warning that not all; variables are used in the selection. Given that this is likely intended,; the warning was removed. (cherry picked from commit bdac678f06231981d4fde2362bed3c485a714936)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5425
https://github.com/root-project/root/pull/5430:14,Deployability,patch,patch,14,"Ported from a patch by Wim Lavrijsen:; https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; class A {; public:; int val;; A(int a): val(a) {}; virtual ~A() {}; };; """"""; ). class B(ROOT.A):; pass. b = B(2); print(b.val); ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5430:131,Deployability,patch,patches,131,"Ported from a patch by Wim Lavrijsen:; https://bitbucket.org/wlav/cppyy-backend/src/00d65c73d303fde7069aacc32cf95bb0144bbe43/cling/patches/using_decls.diff. This PR supersedes #3640 and ports the changes to master. The changes are a fix for the Jira ticket: https://sft.its.cern.ch/jira/browse/ROOT-10582. The reproducer (fails without the fix, prints `2` with the fix):. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; class A {; public:; int val;; A(int a): val(a) {}; virtual ~A() {}; };; """"""; ). class B(ROOT.A):; pass. b = B(2); print(b.val); ```. The PR also allows to remove workarounds to make RooFit work, see the pythonizations here:. https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_rooabspdf.py#L24-L25; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodataset.py#L24; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/pythonizations/python/ROOT/pythonization/_roodatahist.py#L24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5430
https://github.com/root-project/root/pull/5432:5,Deployability,patch,patch,5,"This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:288,Deployability,install,installed,288,"This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5432:362,Deployability,patch,patch,362,"This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5432
https://github.com/root-project/root/pull/5433:0,Usability,Undo,Undo,0,Undo commit bed0e943466f5cc5c86bfaf434858ba1ab8202ca.; It has some side effects for images inline via Macro_Begin/Macro End,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5433
https://github.com/root-project/root/pull/5434:4,Testability,test,tests,4,"The tests for TFoam ended up in the wrong location, since; add_subdirectory is not setting the required property.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5434
https://github.com/root-project/root/pull/5436:262,Testability,test,test,262,"Before, the leaf count was assumed to exist at the same level as the leaf to be read,; e.g. a.b.x[n] would look for a.b.n. That fails if n is coming from a ""higher level"".; Now, TUIntOrIntReader also looks for a.n and n, if a.b.n is not found. And add the repro test for this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5436
https://github.com/root-project/root/pull/5439:87,Integrability,depend,depend,87,"When MathMore compiled, rootfit uses includes from MathMore; To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5439
https://github.com/root-project/root/pull/5441:726,Integrability,depend,dependednt,726,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:179,Modifiability,layers,layers,179,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5441:993,Usability,simpl,simple,993,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5441
https://github.com/root-project/root/pull/5444:69,Security,hash,hash,69,In setups where we have debug symbols in a separate library the .gnu.hash; section appears invalid. Clients can strip the debug symbols into a separate; library by:. objcopy --only-keep-debug libA.so libA.so.dbg; objcopy --strip-debug libA.so; objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5444
https://github.com/root-project/root/pull/5445:294,Deployability,install,install,294,"To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5445:54,Safety,avoid,avoid,54,"To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5445
https://github.com/root-project/root/pull/5446:224,Availability,error,error,224,"Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found.; This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899; for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5446:230,Integrability,message,message,230,"Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found.; This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899; for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5446
https://github.com/root-project/root/pull/5447:5,Deployability,patch,patch,5,This patch tells cmake not to call rootcling ... -m cppyy3_7.pcm as if cppyy has a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5447
https://github.com/root-project/root/pull/5449:41,Integrability,DEPEND,DEPENDENCIES,41,ROOT_STANDARD_LIBRARY_PACKAGE passes all DEPENDENCIES to roocling via ROOT_GENERATE_DICTIONARY. This is part of PR #5443,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5449
https://github.com/root-project/root/pull/5450:252,Availability,Error,Error,252,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:6,Deployability,Install,Installing,6,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:29,Deployability,install,install,29,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:85,Deployability,Install,Installing,85,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:108,Deployability,install,install,108,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:168,Deployability,Install,Installing,168,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:191,Deployability,install,install,191,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5450:299,Deployability,INSTALL,INSTALL,299,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5450
https://github.com/root-project/root/pull/5452:206,Integrability,depend,dependency,206,- use for the registration of MathCore functions the Mathcore header files (e.g. DistFuncMathCore); - move file definining registration of Mathmore functions in roofitmore. This fixes ROOT-10709 and remove dependency introduced in #5439,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5452
https://github.com/root-project/root/pull/5455:46,Availability,error,errors,46,"Zmin and Zmax did not take into account the Z errors for TGrap2DErrors (X and Y axis were fine).; reproducer:; ```; {; const Int_t n = 10;; Double_t x[n], y[n], z[10];; Double_t ex[n], ey[n], ez[10];. for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2)-5;; z[i] = i;; ex[i] = i+1;; ey[i] = i+1;; ez[i] = i+1;; }. auto *gr2d = new TGraph2DErrors(n,x,y,z,ex,ey,ez);; gr2d->Draw(""P0 ERR"");; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5455
https://github.com/root-project/root/pull/5456:108,Availability,error,error,108,By default the TMultiGraph was handling differently than a TGraphErrors or TGraphAsymmErrors the point data error options when fitting.; Now same behavior as fitting a single TGraph is applied . This fixes ROOT-10706,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5456
https://github.com/root-project/root/pull/5459:178,Testability,test,tests,178,"As all libraries, executabls have to use source directories for build. ; In this case only includes from linked libraries are allowed to be used. Affects all executables and all tests. Should improve building with `-Dcxxmodules=ON`. Several generated includes moved to ""ginclude/"" path while used only in ROOT:; * `hist2workspaceCommandLineOptionsHelp.h`; * `haddCommandLineOptionsHelp.h`; * `rootCommandLineOptionsHelp.h`. Several adjustments in tests are required. . Also in several places replace `include_directories` by `target_include_directories`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5459
https://github.com/root-project/root/pull/5459:447,Testability,test,tests,447,"As all libraries, executabls have to use source directories for build. ; In this case only includes from linked libraries are allowed to be used. Affects all executables and all tests. Should improve building with `-Dcxxmodules=ON`. Several generated includes moved to ""ginclude/"" path while used only in ROOT:; * `hist2workspaceCommandLineOptionsHelp.h`; * `haddCommandLineOptionsHelp.h`; * `rootCommandLineOptionsHelp.h`. Several adjustments in tests are required. . Also in several places replace `include_directories` by `target_include_directories`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5459
https://github.com/root-project/root/pull/5461:31,Availability,error,errors,31,RemovePoint did not remove the errors in TGraph2DErrors.; This was reported here: https://sft.its.cern.ch/jira/browse/ROOT-10695,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5461
https://github.com/root-project/root/pull/5462:231,Availability,down,down,231,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1010,Energy Efficiency,green,greenc,1010,"ote, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1881,Energy Efficiency,green,greenc,1881,"UE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2203,Energy Efficiency,green,greenc,2203,"PartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2548,Energy Efficiency,green,greenc,2548," /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2812,Energy Efficiency,green,greenc,2812,"ec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::Visi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3045,Energy Efficiency,green,greenc,3045,"cialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3276,Energy Efficiency,green,greenc,3276,"ang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3650,Energy Efficiency,green,greenc,3650,"Instantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3889,Energy Efficiency,green,greenc,3889,"a/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4206,Energy Efficiency,green,greenc,4206,"x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4579,Energy Efficiency,green,greenc,4579,"clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteTyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4925,Energy Efficiency,green,greenc,4925,"/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5190,Energy Efficiency,green,greenc,5190,"eenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5424,Energy Efficiency,green,greenc,5424,"tion=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5677,Energy Efficiency,green,greenc,5677,"iate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5997,Energy Efficiency,green,greenc,5997,"c/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/sou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6319,Energy Efficiency,green,greenc,6319,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6595,Energy Efficiency,green,greenc,6595,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6795,Energy Efficiency,green,greenc,6795,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6961,Energy Efficiency,green,greenc,6961,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:7120,Energy Efficiency,green,greenc,7120,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:87,Integrability,Wrap,Wrapper,87,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:280,Integrability,Wrap,Wrapper,280,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6543,Integrability,Wrap,Wrapper,6543,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1463,Safety,Abort,Aborted,1463,"assInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1553,Safety,abort,abort,1553,"nfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/green",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1017,Testability,test,test-products,1017,"ote, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1286,Testability,Assert,Assertion,1286,"ly tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:1888,Testability,test,test-products,1888,"UE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2210,Testability,test,test-products,2210,"PartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2555,Testability,test,test-products,2555," /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:2819,Testability,test,test-products,2819,"ec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::Visi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3052,Testability,test,test-products,3052,"cialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3283,Testability,test,test-products,3283,"ang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3657,Testability,test,test-products,3657,"Instantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:3896,Testability,test,test-products,3896,"a/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4213,Testability,test,test-products,4213,"x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4586,Testability,test,test-products,4586,"clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteTyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:4932,Testability,test,test-products,4932,"/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5197,Testability,test,test-products,5197,"eenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5431,Testability,test,test-products,5431,"tion=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:5684,Testability,test,test-products,5684,"iate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6004,Testability,test,test-products,6004,"c/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/sou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6326,Testability,test,test-products,6326,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6602,Testability,test,test-products,6602,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6802,Testability,test,test-products,6802,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5462:6968,Testability,test,test-products,6968,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5462
https://github.com/root-project/root/pull/5463:231,Availability,down,down,231,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5463
https://github.com/root-project/root/pull/5463:87,Integrability,Wrap,Wrapper,87,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5463
https://github.com/root-project/root/pull/5463:280,Integrability,Wrap,Wrapper,280,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5463
https://github.com/root-project/root/pull/5464:48,Availability,avail,available,48,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5464
https://github.com/root-project/root/pull/5464:415,Deployability,patch,patch,415,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5464
https://github.com/root-project/root/pull/5464:185,Safety,safe,safely,185,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5464
https://github.com/root-project/root/pull/5464:379,Security,access,accesses,379,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5464
https://github.com/root-project/root/pull/5465:268,Deployability,patch,patch,268,"We do not need TCling_UnloadMarker infrastructure anymore. It was originally fixing a problem of Belle II, however, now it breaks their code. The reason it was necessary was that `--as-needed` linker option was used which affected the new teardown order of ROOT. This patch removes the TCling_UnloadMarker and resolves ROOT-10659.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5465
https://github.com/root-project/root/pull/5466:505,Availability,down,down,505,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:363,Deployability,update,updated,363,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:418,Safety,detect,detected,418,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:319,Security,sanitiz,sanitizer,319,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:438,Security,sanitiz,sanitizer,438,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:159,Testability,test,tested,159,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:210,Testability,test,test,210,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5466:287,Testability,test,tests,287,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5466
https://github.com/root-project/root/pull/5468:125,Availability,failure,failure,125,"The assert is not needed and it could also fail, if for some random number generated value==2*sigma. This could explain some failure observed in TMVA CNN tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5468
https://github.com/root-project/root/pull/5468:4,Testability,assert,assert,4,"The assert is not needed and it could also fail, if for some random number generated value==2*sigma. This could explain some failure observed in TMVA CNN tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5468
https://github.com/root-project/root/pull/5469:134,Usability,clear,cleared,134,"When first doing a chi2 fit and later nll or vice-versa, RooFit didn't; remember the range of the last fit correctly, since it wasn't cleared; before a new fit starts. Now, it's cleared before all fits. Looking for the bug, I found two places where cleanups/improvements were in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5469
https://github.com/root-project/root/pull/5469:178,Usability,clear,cleared,178,"When first doing a chi2 fit and later nll or vice-versa, RooFit didn't; remember the range of the last fit correctly, since it wasn't cleared; before a new fit starts. Now, it's cleared before all fits. Looking for the bug, I found two places where cleanups/improvements were in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5469
https://github.com/root-project/root/pull/5471:93,Deployability,install,installed,93,"The variable contains the path to installation_directory/lib, where the; python packages are installed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5471:4,Modifiability,variab,variable,4,"The variable contains the path to installation_directory/lib, where the; python packages are installed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5471
https://github.com/root-project/root/pull/5476:115,Availability,failure,failures,115,The env variable ROOTTEST_IGNORE_NUMBA is set in; rootspi/jenkins/root-build.cmake and select nodes; with expected failures of the tests. This goes along with https://github.com/root-project/rootspi/pull/75.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5476
https://github.com/root-project/root/pull/5476:8,Modifiability,variab,variable,8,The env variable ROOTTEST_IGNORE_NUMBA is set in; rootspi/jenkins/root-build.cmake and select nodes; with expected failures of the tests. This goes along with https://github.com/root-project/rootspi/pull/75.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5476
https://github.com/root-project/root/pull/5476:131,Testability,test,tests,131,The env variable ROOTTEST_IGNORE_NUMBA is set in; rootspi/jenkins/root-build.cmake and select nodes; with expected failures of the tests. This goes along with https://github.com/root-project/rootspi/pull/75.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5476
https://github.com/root-project/root/pull/5478:168,Safety,avoid,avoiding,168,"…akeLists.txt. This commit reverts some of the changes introduced in c9cedcc.; ROOT_LINKER_LIBRARY insures that the shared library is generated with; the suffix '.so', avoiding troubles in MacOS where it would be generated; with '.dylib' otherwise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5478
https://github.com/root-project/root/pull/5485:270,Integrability,depend,dependencies,270,"TCling::Load reloads the library the `system` optional parameter is false. If the library is not marked as `system` TCling reloads it if was alread loaded. That is, it dlcloses and dlopens the library instead of doing nothing. There is no point in reloading our library dependencies. The regression was introduced in 9b6df8c originated from https://github.com/root-project/root/commit/e649f59e3160f829bc1a4813f8aa73bdd16b6cff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:8,Performance,Load,Load,8,"TCling::Load reloads the library the `system` optional parameter is false. If the library is not marked as `system` TCling reloads it if was alread loaded. That is, it dlcloses and dlopens the library instead of doing nothing. There is no point in reloading our library dependencies. The regression was introduced in 9b6df8c originated from https://github.com/root-project/root/commit/e649f59e3160f829bc1a4813f8aa73bdd16b6cff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5485:148,Performance,load,loaded,148,"TCling::Load reloads the library the `system` optional parameter is false. If the library is not marked as `system` TCling reloads it if was alread loaded. That is, it dlcloses and dlopens the library instead of doing nothing. There is no point in reloading our library dependencies. The regression was introduced in 9b6df8c originated from https://github.com/root-project/root/commit/e649f59e3160f829bc1a4813f8aa73bdd16b6cff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5485
https://github.com/root-project/root/pull/5486:108,Integrability,depend,dependent,108,"Since the proper creation of the TClass will require the dictionary for all its component let; load all the dependent library too. Note that even with explicit linking, the dictionary may; not be loaded as part of the 'main' library when the dictionary is a library separate from the; classes' code (see ATLAS setup for example). This solves ROOT-10663.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:95,Performance,load,load,95,"Since the proper creation of the TClass will require the dictionary for all its component let; load all the dependent library too. Note that even with explicit linking, the dictionary may; not be loaded as part of the 'main' library when the dictionary is a library separate from the; classes' code (see ATLAS setup for example). This solves ROOT-10663.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5486:196,Performance,load,loaded,196,"Since the proper creation of the TClass will require the dictionary for all its component let; load all the dependent library too. Note that even with explicit linking, the dictionary may; not be loaded as part of the 'main' library when the dictionary is a library separate from the; classes' code (see ATLAS setup for example). This solves ROOT-10663.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5486
https://github.com/root-project/root/pull/5487:554,Availability,redundant,redundant,554,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5487
https://github.com/root-project/root/pull/5487:12,Deployability,patch,patch,12,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5487
https://github.com/root-project/root/pull/5487:349,Deployability,patch,patch,349,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5487
https://github.com/root-project/root/pull/5487:191,Modifiability,variab,variable,191,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5487
https://github.com/root-project/root/pull/5487:554,Safety,redund,redundant,554,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5487
https://github.com/root-project/root/pull/5487:564,Testability,log,logic,564,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5487
https://github.com/root-project/root/pull/5488:946,Availability,alive,alive,946,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:12,Deployability,patch,patch,12,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:858,Deployability,pipeline,pipeline,858,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:613,Energy Efficiency,allocate,allocated,613,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:973,Energy Efficiency,allocate,allocated,973,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:1176,Energy Efficiency,allocate,allocated,1176,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:1206,Energy Efficiency,allocate,allocated,1206,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:583,Performance,perform,performs,583,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:1131,Performance,perform,perform,1131,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5488:1025,Safety,detect,detect,1025,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5488
https://github.com/root-project/root/pull/5489:235,Performance,Load,LoadTree,235,"The following sequence of calls results in c1 having a null fTree; but a non-null fFile. ```cpp; TChain* c1 = new TChain(""T"");; c1->Add(""Event.root"");. TChain* c2 = new TChain(""T2"");; c2->Add(""Event2.root/T"");; c1->AddFriend(c2);. c1->LoadTree(0);; c1->RemoveFriend(c2);. delete c1;; ```. In this situation, ~TChain ended up calling TTree::GetReadCache on; a null fTree. We now check that both fFile and fTree are valid before; trying to retrieve fTree's cache.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5489
https://github.com/root-project/root/pull/5489:455,Performance,cache,cache,455,"The following sequence of calls results in c1 having a null fTree; but a non-null fFile. ```cpp; TChain* c1 = new TChain(""T"");; c1->Add(""Event.root"");. TChain* c2 = new TChain(""T2"");; c2->Add(""Event2.root/T"");; c1->AddFriend(c2);. c1->LoadTree(0);; c1->RemoveFriend(c2);. delete c1;; ```. In this situation, ~TChain ended up calling TTree::GetReadCache on; a null fTree. We now check that both fFile and fTree are valid before; trying to retrieve fTree's cache.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5489
https://github.com/root-project/root/pull/5499:39,Availability,error,error-using-tcolor,39,following https://root-forum.cern.ch/t/error-using-tcolor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5499
https://github.com/root-project/root/pull/5500:43,Deployability,configurat,configuration,43,Allows -Dfail-on-missing -Dpyroot3 to fail configuration if only pyroot2 can be built.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5500:43,Modifiability,config,configuration,43,Allows -Dfail-on-missing -Dpyroot3 to fail configuration if only pyroot2 can be built.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5500
https://github.com/root-project/root/pull/5501:147,Integrability,interface,interface,147,"Old proxy classes constantly require casting when the pointee of the; proxy is used. Now, the correct type is stored, and constness of the; public interface has been improved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5501
https://github.com/root-project/root/pull/5502:1808,Deployability,Update,Updates,1808,"ce all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:1675,Energy Efficiency,reduce,reduce,1675,"oth packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recomput",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:1047,Integrability,interface,interface,1047,"es; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatTyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:1829,Integrability,interface,interfaces,1829,"ce all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:1856,Integrability,interface,interfaces,1856,"ce all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2055,Integrability,interface,interfaces,2055,"es was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2186,Integrability,interface,interfaces,2186," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2305,Integrability,interface,interface,2305," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:562,Performance,load,loading,562,"**For reviewers**:; The most important commit is the first, and specifically the files; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:1421,Performance,load,loading,1421," to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:500,Security,access,access,500,"**For reviewers**:; The most important commit is the first, and specifically the files; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2439,Security,access,access,2439," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2558,Security,access,access,2558," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2542,Usability,clear,clear,2542," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5502:2589,Usability,clear,clearing,2589," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5502
https://github.com/root-project/root/pull/5505:206,Availability,failure,failures,206,"The RArrowDS in v6.16 did not support recent arrow versions.; This commits syncs it with v6.18, v6.20 and master. This should fix [these](http://cdash.cern.ch/viewBuildError.php?buildid=865186) compilation failures in 6.16.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5505
https://github.com/root-project/root/pull/5510:519,Deployability,patch,patch,519,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file add the {using namespace std;} only after; GenerateNecessaryIncludes method is called. Since many legacy root header files do require this global {using namespace std;}; to complete the tests, old behaviour is kept by default and the global; {using namespace std} can be avoided by adding -noGlobalUsingStd to rootcling invocation. Allow passing ACLiC RootCling flags via .rootrc (Vassil). This is a special patch tailored for v6-20-02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5510
https://github.com/root-project/root/pull/5510:12,Safety,avoid,avoid,12,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file add the {using namespace std;} only after; GenerateNecessaryIncludes method is called. Since many legacy root header files do require this global {using namespace std;}; to complete the tests, old behaviour is kept by default and the global; {using namespace std} can be avoided by adding -noGlobalUsingStd to rootcling invocation. Allow passing ACLiC RootCling flags via .rootrc (Vassil). This is a special patch tailored for v6-20-02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5510
https://github.com/root-project/root/pull/5510:382,Safety,avoid,avoided,382,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file add the {using namespace std;} only after; GenerateNecessaryIncludes method is called. Since many legacy root header files do require this global {using namespace std;}; to complete the tests, old behaviour is kept by default and the global; {using namespace std} can be avoided by adding -noGlobalUsingStd to rootcling invocation. Allow passing ACLiC RootCling flags via .rootrc (Vassil). This is a special patch tailored for v6-20-02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5510
https://github.com/root-project/root/pull/5510:297,Testability,test,tests,297,"In order to avoid {namespace std} interfering with following include files,; when generating a dictionary file add the {using namespace std;} only after; GenerateNecessaryIncludes method is called. Since many legacy root header files do require this global {using namespace std;}; to complete the tests, old behaviour is kept by default and the global; {using namespace std} can be avoided by adding -noGlobalUsingStd to rootcling invocation. Allow passing ACLiC RootCling flags via .rootrc (Vassil). This is a special patch tailored for v6-20-02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5510
https://github.com/root-project/root/pull/5512:58,Deployability,release,release,58,"I would like to mention the new analysis tutorials in the release notes (they have a great PR value). You could argue that this is not the correct place to do so, I'm not sure about this. What do you think?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5512
https://github.com/root-project/root/pull/5514:39,Integrability,interface,interface,39,"After giving RooFit's categories a new interface, a lot of legacy code was left in place - the new categories support both the old and new interface.; The PR was split in two parts partly for testing that old code would still work, partly to make #5502 smaller.; Here, the big cleanup happens:; - Most uses of the legacy interface are replaced with the new interface; - Now-unused classes are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:139,Integrability,interface,interface,139,"After giving RooFit's categories a new interface, a lot of legacy code was left in place - the new categories support both the old and new interface.; The PR was split in two parts partly for testing that old code would still work, partly to make #5502 smaller.; Here, the big cleanup happens:; - Most uses of the legacy interface are replaced with the new interface; - Now-unused classes are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:321,Integrability,interface,interface,321,"After giving RooFit's categories a new interface, a lot of legacy code was left in place - the new categories support both the old and new interface.; The PR was split in two parts partly for testing that old code would still work, partly to make #5502 smaller.; Here, the big cleanup happens:; - Most uses of the legacy interface are replaced with the new interface; - Now-unused classes are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:357,Integrability,interface,interface,357,"After giving RooFit's categories a new interface, a lot of legacy code was left in place - the new categories support both the old and new interface.; The PR was split in two parts partly for testing that old code would still work, partly to make #5502 smaller.; Here, the big cleanup happens:; - Most uses of the legacy interface are replaced with the new interface; - Now-unused classes are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5514:192,Testability,test,testing,192,"After giving RooFit's categories a new interface, a lot of legacy code was left in place - the new categories support both the old and new interface.; The PR was split in two parts partly for testing that old code would still work, partly to make #5502 smaller.; Here, the big cleanup happens:; - Most uses of the legacy interface are replaced with the new interface; - Now-unused classes are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5514
https://github.com/root-project/root/pull/5515:6,Availability,error,error,6,Fixes error about missing dictionary for function type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5515
https://github.com/root-project/root/pull/5516:212,Deployability,integrat,integrated,212,"The ROOT file datasource, `RRootDS`, was a proof of concept to show that RDF's generic data-source API could cover cases as complex as ROOT files. However, it never reached feature parity with the no-datasource, integrated TTree reading case (nor it was meant to). In this PR:. 1. Make ROOT::MakeRootDataFrame equal to standard constructors: ; RRootDS does not support the same set of features as ""standard"" RDF,; and this can be very surprising, see e.g.; https://root-forum.cern.ch/t/chaining-rdataframe-define-does-not-work-in-some-cases/38213; With this change, ROOT::MakeRootDataFrame returns a ""normal"" RDF, with; all expected features. This resolves ROOT-10596.; 2. Remove MakeROOTDatFrame tutorials:; `MakeRootDataFrame` is not a feature we want to advertise. RDataFrame's class constructors provide same or better functionality.; 3. Deprecate RRootDS's constructor:; users should not be constructing RRootDS directly anyway. They should; do so via `MakeRootDataFrame`, which from the next version will instead; construct a standard dataframe with no datasource.; We deprecate RRootDS's constructor as an extra cautionary measure,; so we can move RRootDS out of the public namespace and into the; internal namespace soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5516
https://github.com/root-project/root/pull/5516:212,Integrability,integrat,integrated,212,"The ROOT file datasource, `RRootDS`, was a proof of concept to show that RDF's generic data-source API could cover cases as complex as ROOT files. However, it never reached feature parity with the no-datasource, integrated TTree reading case (nor it was meant to). In this PR:. 1. Make ROOT::MakeRootDataFrame equal to standard constructors: ; RRootDS does not support the same set of features as ""standard"" RDF,; and this can be very surprising, see e.g.; https://root-forum.cern.ch/t/chaining-rdataframe-define-does-not-work-in-some-cases/38213; With this change, ROOT::MakeRootDataFrame returns a ""normal"" RDF, with; all expected features. This resolves ROOT-10596.; 2. Remove MakeROOTDatFrame tutorials:; `MakeRootDataFrame` is not a feature we want to advertise. RDataFrame's class constructors provide same or better functionality.; 3. Deprecate RRootDS's constructor:; users should not be constructing RRootDS directly anyway. They should; do so via `MakeRootDataFrame`, which from the next version will instead; construct a standard dataframe with no datasource.; We deprecate RRootDS's constructor as an extra cautionary measure,; so we can move RRootDS out of the public namespace and into the; internal namespace soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5516
https://github.com/root-project/root/pull/5517:13,Usability,simpl,simply,13,raw_input is simply input in Python 3. suggested in https://sft.its.cern.ch/jira/browse/ROOT-10721,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5517
https://github.com/root-project/root/pull/5519:52,Availability,avail,available,52,- Fix the computation in case of imt or blas is not available. . Use still TCpuMatrix class (TCpu architecture) but use TMatrix for matrix multiplication instead of BLAS\; Only dense layers architectures are supported in this case. - Fix tutorials for the no-imt case. - Use Higgs data file from root.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5519:183,Modifiability,layers,layers,183,- Fix the computation in case of imt or blas is not available. . Use still TCpuMatrix class (TCpu architecture) but use TMatrix for matrix multiplication instead of BLAS\; Only dense layers architectures are supported in this case. - Fix tutorials for the no-imt case. - Use Higgs data file from root.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5519
https://github.com/root-project/root/pull/5521:370,Integrability,depend,dependencies,370,"This would allow CMSSW to build its third party modules by calling:. ```; rootcling bare-cling -xc++ -I${ROOTSYS}/etc -I ${headers_location}; -fmodules -Xclang -emit-module -fmodule-name=tinyxml2; -fmodules-cache-path=${CMSSW_LIBDIR} -o ${module_file_location}; ${headers_location}/module.modulemap; ```. This commit has several issues one is that it does not order the dependencies so if libc.pcm goes out of date the build system does not regenerate std.pcm. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5521
https://github.com/root-project/root/pull/5521:207,Performance,cache,cache-path,207,"This would allow CMSSW to build its third party modules by calling:. ```; rootcling bare-cling -xc++ -I${ROOTSYS}/etc -I ${headers_location}; -fmodules -Xclang -emit-module -fmodule-name=tinyxml2; -fmodules-cache-path=${CMSSW_LIBDIR} -o ${module_file_location}; ${headers_location}/module.modulemap; ```. This commit has several issues one is that it does not order the dependencies so if libc.pcm goes out of date the build system does not regenerate std.pcm. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5521
https://github.com/root-project/root/pull/5523:28,Availability,Error,Error,28,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5523:34,Integrability,message,message,34,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5523:233,Testability,test,testing,233,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5523
https://github.com/root-project/root/pull/5524:142,Integrability,depend,depends,142,"It fixes next Jira issue https://sft.its.cern.ch/jira/browse/ROOT-10640 (where looks like OpenGL works only with X11 for ROOT) and since Glew depends on OpenGL, then it is transitively depends on X11: http://cdash.cern.ch/buildSummary.php?buildid=866822 (build was built with `-Dbuiltin_glew=ON -Dx11=OFF`). Fixes: https://github.com/root-project/root/pull/5524",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5524
https://github.com/root-project/root/pull/5524:185,Integrability,depend,depends,185,"It fixes next Jira issue https://sft.its.cern.ch/jira/browse/ROOT-10640 (where looks like OpenGL works only with X11 for ROOT) and since Glew depends on OpenGL, then it is transitively depends on X11: http://cdash.cern.ch/buildSummary.php?buildid=866822 (build was built with `-Dbuiltin_glew=ON -Dx11=OFF`). Fixes: https://github.com/root-project/root/pull/5524",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5524
https://github.com/root-project/root/pull/5525:38,Availability,error,error,38,This commit fixes a duplicate include error which occurs on configuring Cmake options.; This happens because the directory is included again in a few lines later.; @vgvassilev . ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:538 (add_subdirectory):; The binary directory. E:/root-build/builtins/glew. is already used to build a source directory. It cannot be used to build; source directory. E:/root/builtins/glew. Specify a unique binary directory name.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:189,Availability,Error,Error,189,This commit fixes a duplicate include error which occurs on configuring Cmake options.; This happens because the directory is included again in a few lines later.; @vgvassilev . ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:538 (add_subdirectory):; The binary directory. E:/root-build/builtins/glew. is already used to build a source directory. It cannot be used to build; source directory. E:/root/builtins/glew. Specify a unique binary directory name.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5525:60,Modifiability,config,configuring,60,This commit fixes a duplicate include error which occurs on configuring Cmake options.; This happens because the directory is included again in a few lines later.; @vgvassilev . ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:538 (add_subdirectory):; The binary directory. E:/root-build/builtins/glew. is already used to build a source directory. It cannot be used to build; source directory. E:/root/builtins/glew. Specify a unique binary directory name.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5525
https://github.com/root-project/root/pull/5527:5,Deployability,patch,patch,5,Same patch applied in master within bigger PR #5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5527
https://github.com/root-project/root/pull/5528:5,Deployability,patch,patch,5,Same patch applied in master within bigger PR #5181,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5528
https://github.com/root-project/root/pull/5529:92,Availability,avail,available,92,The following tutorials need to be disabled in old PyROOT because they; use a pythonization available only in experimental:. ~~tutorials/roofit/rf501_simultaneouspdf.py~~; tutorials/roofit/rf502_wspacewrite.py; tutorials/roofit/rf504_simwstool.py; tutorials/roofit/rf509_wsinteractive.py; tutorials/roofit/rf511_wsfactory_basic.py. Reported here: https://sft.its.cern.ch/jira/browse/ROOT-10736,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5529
https://github.com/root-project/root/pull/5530:489,Modifiability,extend,extending,489,"[ROOT-6882] RooFit wasn't able to attach to tree branches of various; types, but this was requested.; The buffers for various types were removed from the member list of; RooAbsReal, and were instead moved into a union. Further, a; std::function has been added for running the conversion between various; members. This makes the member list cleaner, and converting things that; have been read from the tree doesn't require comparing strings anymore.; Instead, a lambda is called.; Further, extending to other types is now trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5530
https://github.com/root-project/root/pull/5534:127,Deployability,update,update,127,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5534
https://github.com/root-project/root/pull/5534:260,Performance,load,loaded,260,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5534
https://github.com/root-project/root/pull/5534:218,Testability,assert,assert,218,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5534
https://github.com/root-project/root/pull/5534:304,Testability,assert,assertSparseSelection,304,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5534
https://github.com/root-project/root/pull/5536:42,Safety,safe,safe,42,"When RooFit's proxies were made more type safe, a typedef was introduced; to make the most type-general proxy equivalent to RooFit's previous; ""RooRealProxy"". This ensures backward compatibility.; However, the typedef and not the actual template instantiation has to be; mentioned in LinkDef.h. Otherwise, users will get a warning when reading; files. This fixes the warning that e.g. appears in #5530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5536
https://github.com/root-project/root/pull/5541:28,Deployability,patch,patch,28,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5541
https://github.com/root-project/root/pull/5541:81,Deployability,patch,patch,81,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5541
https://github.com/root-project/root/pull/5541:146,Deployability,patch,patches,146,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5541
https://github.com/root-project/root/pull/5541:482,Deployability,update,updated,482,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5541
https://github.com/root-project/root/pull/5541:580,Deployability,patch,patches,580,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5541
https://github.com/root-project/root/pull/5541:48,Security,access,accessing,48,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5541
https://github.com/root-project/root/pull/5544:219,Availability,alive,alive,219,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:12,Deployability,patch,patch,12,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:56,Security,access,access,56,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:632,Security,access,access,632,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:1137,Security,access,access,1137,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5544:486,Testability,log,logic,486,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5544
https://github.com/root-project/root/pull/5547:436,Safety,safe,safe,436,"Commit df0b689 simplified the search for the C++ include directories and; tried to use a locale independent regex. However this regex doesn't work for all locales, for example in German; the string in the output is not. ```; #include <...> search starts here:; ```. but the word order is switched and we have. ```; Suche für »#include <...>« beginnt hier:; ```. As such I propose to go back to C-locale for this query to be completely; safe against weird locale settings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5547
https://github.com/root-project/root/pull/5547:15,Usability,simpl,simplified,15,"Commit df0b689 simplified the search for the C++ include directories and; tried to use a locale independent regex. However this regex doesn't work for all locales, for example in German; the string in the output is not. ```; #include <...> search starts here:; ```. but the word order is switched and we have. ```; Suche für »#include <...>« beginnt hier:; ```. As such I propose to go back to C-locale for this query to be completely; safe against weird locale settings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5547
https://github.com/root-project/root/pull/5548:142,Integrability,depend,depends,142,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:185,Integrability,depend,depending,185,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:119,Performance,load,loading,119,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:159,Performance,load,load,159,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:172,Performance,load,load,172,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5548:506,Testability,test,tests,506,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5548
https://github.com/root-project/root/pull/5549:222,Security,checksum,checksum,222,"Rationale; ---------. We create a number of small root files to serve as conditions data. The; algorithm tells the framework to save the data to be valid for a given interval of; time. To de-duplicate files we use the md5 checksum: same checksum, same; content, so no new file needed. Technically we create the file as a; temporary file, calculate the checksum and use a directory structure; similar to git objects: if no file with the checksum as name exists,; rename, otherwise just use the existing name. For this to work we need the md5 checksum independent of the name of the; TFile. And since we rename the file anyway it really doesn't matter what; TFile thinks its name is. Implementation; --------------. This tries to be the minimal change to the current feature of; reproducible files (thanks again): We piggyback on the same flag but if; the flag also has a value instead of jut being present we use it as the; name to put in the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5549
https://github.com/root-project/root/pull/5549:237,Security,checksum,checksum,237,"Rationale; ---------. We create a number of small root files to serve as conditions data. The; algorithm tells the framework to save the data to be valid for a given interval of; time. To de-duplicate files we use the md5 checksum: same checksum, same; content, so no new file needed. Technically we create the file as a; temporary file, calculate the checksum and use a directory structure; similar to git objects: if no file with the checksum as name exists,; rename, otherwise just use the existing name. For this to work we need the md5 checksum independent of the name of the; TFile. And since we rename the file anyway it really doesn't matter what; TFile thinks its name is. Implementation; --------------. This tries to be the minimal change to the current feature of; reproducible files (thanks again): We piggyback on the same flag but if; the flag also has a value instead of jut being present we use it as the; name to put in the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5549
https://github.com/root-project/root/pull/5549:352,Security,checksum,checksum,352,"Rationale; ---------. We create a number of small root files to serve as conditions data. The; algorithm tells the framework to save the data to be valid for a given interval of; time. To de-duplicate files we use the md5 checksum: same checksum, same; content, so no new file needed. Technically we create the file as a; temporary file, calculate the checksum and use a directory structure; similar to git objects: if no file with the checksum as name exists,; rename, otherwise just use the existing name. For this to work we need the md5 checksum independent of the name of the; TFile. And since we rename the file anyway it really doesn't matter what; TFile thinks its name is. Implementation; --------------. This tries to be the minimal change to the current feature of; reproducible files (thanks again): We piggyback on the same flag but if; the flag also has a value instead of jut being present we use it as the; name to put in the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5549
https://github.com/root-project/root/pull/5549:436,Security,checksum,checksum,436,"Rationale; ---------. We create a number of small root files to serve as conditions data. The; algorithm tells the framework to save the data to be valid for a given interval of; time. To de-duplicate files we use the md5 checksum: same checksum, same; content, so no new file needed. Technically we create the file as a; temporary file, calculate the checksum and use a directory structure; similar to git objects: if no file with the checksum as name exists,; rename, otherwise just use the existing name. For this to work we need the md5 checksum independent of the name of the; TFile. And since we rename the file anyway it really doesn't matter what; TFile thinks its name is. Implementation; --------------. This tries to be the minimal change to the current feature of; reproducible files (thanks again): We piggyback on the same flag but if; the flag also has a value instead of jut being present we use it as the; name to put in the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5549
https://github.com/root-project/root/pull/5549:541,Security,checksum,checksum,541,"Rationale; ---------. We create a number of small root files to serve as conditions data. The; algorithm tells the framework to save the data to be valid for a given interval of; time. To de-duplicate files we use the md5 checksum: same checksum, same; content, so no new file needed. Technically we create the file as a; temporary file, calculate the checksum and use a directory structure; similar to git objects: if no file with the checksum as name exists,; rename, otherwise just use the existing name. For this to work we need the md5 checksum independent of the name of the; TFile. And since we rename the file anyway it really doesn't matter what; TFile thinks its name is. Implementation; --------------. This tries to be the minimal change to the current feature of; reproducible files (thanks again): We piggyback on the same flag but if; the flag also has a value instead of jut being present we use it as the; name to put in the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5549
https://github.com/root-project/root/pull/5550:132,Deployability,patch,patching,132,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5550:254,Modifiability,config,config,254,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5550:247,Usability,simpl,simple,247,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5550
https://github.com/root-project/root/pull/5551:400,Integrability,depend,dependent,400,"replace all uses of the deprecated tbb_task_scheduler_init and its; implicit task_arena by explicit manipulation of our own central; instance of task_arena, as suggested by intel:; https://software.intel.com/sites/default/files/managed/b2/d2/TBBRevamp.pdf. work out some gymnastics to keep tbb out of the headers. We can't; forward-declare tbb::task_arena as it is an alias of a versioned; namespace dependent class (right now tbb::interface7::tbb_task_arena). Interface details to discuss: Should we add an ExecuteIsolated and an Execute call to TPoolManager?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5551
https://github.com/root-project/root/pull/5551:461,Integrability,Interface,Interface,461,"replace all uses of the deprecated tbb_task_scheduler_init and its; implicit task_arena by explicit manipulation of our own central; instance of task_arena, as suggested by intel:; https://software.intel.com/sites/default/files/managed/b2/d2/TBBRevamp.pdf. work out some gymnastics to keep tbb out of the headers. We can't; forward-declare tbb::task_arena as it is an alias of a versioned; namespace dependent class (right now tbb::interface7::tbb_task_arena). Interface details to discuss: Should we add an ExecuteIsolated and an Execute call to TPoolManager?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5551
https://github.com/root-project/root/pull/5552:2587,Availability,avail,available,2587," the same type and the result of the merge operation should still know how to merge again. To this end, a new function called `GetMergeableValue` takes as input an RResultPtr<T> , e.g. the last action node of the graph, and returns an `RMergeableValue<T>*`, a new class that satisfies the previous requirements. The choice of creating a new class instead of, for example, returning the standard return value plus a function to merge two values of that type, has to do with the second requirement above.; In fact, while this could be feasible with the return value of a `Count` operation (the merge function would just be the sum of the two count values), it would not be enough for all operations.; Notably, to merge results of two `Mean` operations we would need also the counts of each mean to merge them as a weighted mean, so the function would take 4 parameters of which at most 2 are known beforehand (the mean and the counts of the action that is currently being examined by the GetMergeableValue function), while the other 2 parameters wouldn't be known until the user tries to perform the Merge on the two values. RMergeableValue is created after the execution of the computation graph from the information contained in the various action helpers in ""tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx"".; RMergeableValue itself is a base class, with RMergeableGenericAction as the derived class that is mostly used to get the right information from the helpers, e.g. the value of the action and a function to merge two of those values. For specific actions that require more information, e.g. `Mean`, more derived classes can be created, e.g. `RMergeableMean`. The class instances are passed as void* up the call chain: ActionHelper-->RAction-->RActionBase-->ROOT::Detail::RDF::GetMergeableValue(); In the function they are `static_cast`ed back to their correct RMergeableValue<T>* type. Currently, two tests are available to show the usage of this feature with the `Count` and `Mean` operations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:567,Modifiability,portab,portable,567,"RDataFrame currently has internal mechanisms to merge the partial results coming from different thread executions when running with IMT.; There is no possibility though to merge such results in a distributed environment, where the various chunks of the dataset are processed separately on different machines.; In this PR I propose a possible implementation of such feature, given the following requirements:; * The standard RDataFrame API should not be altered, i.e. first and foremost there should be no changes in the types pointed to by RResultPtr.; * To be truly portable, the result of the RDataFrame execution should know how to merge itself with another result of the same type and the result of the merge operation should still know how to merge again. To this end, a new function called `GetMergeableValue` takes as input an RResultPtr<T> , e.g. the last action node of the graph, and returns an `RMergeableValue<T>*`, a new class that satisfies the previous requirements. The choice of creating a new class instead of, for example, returning the standard return value plus a function to merge two values of that type, has to do with the second requirement above.; In fact, while this could be feasible with the return value of a `Count` operation (the merge function would just be the sum of the two count values), it would not be enough for all operations.; Notably, to merge results of two `Mean` operations we would need also the counts of each mean to merge them as a weighted mean, so the function would take 4 parameters of which at most 2 are known beforehand (the mean and the counts of the action that is currently being examined by the GetMergeableValue function), while the other 2 parameters wouldn't be known until the user tries to perform the Merge on the two values. RMergeableValue is created after the execution of the computation graph from the information contained in the various action helpers in ""tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx"".; RMergeableValue itself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:1756,Performance,perform,perform,1756,"e result of the RDataFrame execution should know how to merge itself with another result of the same type and the result of the merge operation should still know how to merge again. To this end, a new function called `GetMergeableValue` takes as input an RResultPtr<T> , e.g. the last action node of the graph, and returns an `RMergeableValue<T>*`, a new class that satisfies the previous requirements. The choice of creating a new class instead of, for example, returning the standard return value plus a function to merge two values of that type, has to do with the second requirement above.; In fact, while this could be feasible with the return value of a `Count` operation (the merge function would just be the sum of the two count values), it would not be enough for all operations.; Notably, to merge results of two `Mean` operations we would need also the counts of each mean to merge them as a weighted mean, so the function would take 4 parameters of which at most 2 are known beforehand (the mean and the counts of the action that is currently being examined by the GetMergeableValue function), while the other 2 parameters wouldn't be known until the user tries to perform the Merge on the two values. RMergeableValue is created after the execution of the computation graph from the information contained in the various action helpers in ""tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx"".; RMergeableValue itself is a base class, with RMergeableGenericAction as the derived class that is mostly used to get the right information from the helpers, e.g. the value of the action and a function to merge two of those values. For specific actions that require more information, e.g. `Mean`, more derived classes can be created, e.g. `RMergeableMean`. The class instances are passed as void* up the call chain: ActionHelper-->RAction-->RActionBase-->ROOT::Detail::RDF::GetMergeableValue(); In the function they are `static_cast`ed back to their correct RMergeableValue<T>* type. Currently, two tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5552:2577,Testability,test,tests,2577," the same type and the result of the merge operation should still know how to merge again. To this end, a new function called `GetMergeableValue` takes as input an RResultPtr<T> , e.g. the last action node of the graph, and returns an `RMergeableValue<T>*`, a new class that satisfies the previous requirements. The choice of creating a new class instead of, for example, returning the standard return value plus a function to merge two values of that type, has to do with the second requirement above.; In fact, while this could be feasible with the return value of a `Count` operation (the merge function would just be the sum of the two count values), it would not be enough for all operations.; Notably, to merge results of two `Mean` operations we would need also the counts of each mean to merge them as a weighted mean, so the function would take 4 parameters of which at most 2 are known beforehand (the mean and the counts of the action that is currently being examined by the GetMergeableValue function), while the other 2 parameters wouldn't be known until the user tries to perform the Merge on the two values. RMergeableValue is created after the execution of the computation graph from the information contained in the various action helpers in ""tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx"".; RMergeableValue itself is a base class, with RMergeableGenericAction as the derived class that is mostly used to get the right information from the helpers, e.g. the value of the action and a function to merge two of those values. For specific actions that require more information, e.g. `Mean`, more derived classes can be created, e.g. `RMergeableMean`. The class instances are passed as void* up the call chain: ActionHelper-->RAction-->RActionBase-->ROOT::Detail::RDF::GetMergeableValue(); In the function they are `static_cast`ed back to their correct RMergeableValue<T>* type. Currently, two tests are available to show the usage of this feature with the `Count` and `Mean` operations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5552
https://github.com/root-project/root/pull/5553:160,Deployability,Update,Update,160,Before the fix it was alsways used an output width by default equal to 1. Now the default output width of the last dense layer is set to the number of classes. Update multiclass tutorial to use MethodDL,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5553
https://github.com/root-project/root/pull/5554:11,Availability,error,errors,11,"Should fix errors such as those at https://bit.ly/2W6cZoc :. ```; /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/default/V/master/build/include/ROOT/RDF/RInterface.hxx:2363:25:; error: no viable conversion from; 'shared_ptr<ROOT::Detail::RDF::RCustomColumn<ROOT::VecOps::RVec<ROOT::VecOps::RVec<unsigned; long> > (*)(const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<int> &),; ROOT::Detail::RDF::CustomColExtraArgs::None>>' to 'const; shared_ptr<RDFDetail::RCustomColumnBase>'; newCols.AddColumn(newColumn, name);; ^~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5554
https://github.com/root-project/root/pull/5554:182,Availability,error,error,182,"Should fix errors such as those at https://bit.ly/2W6cZoc :. ```; /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/default/V/master/build/include/ROOT/RDF/RInterface.hxx:2363:25:; error: no viable conversion from; 'shared_ptr<ROOT::Detail::RDF::RCustomColumn<ROOT::VecOps::RVec<ROOT::VecOps::RVec<unsigned; long> > (*)(const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<int> &),; ROOT::Detail::RDF::CustomColExtraArgs::None>>' to 'const; shared_ptr<RDFDetail::RCustomColumnBase>'; newCols.AddColumn(newColumn, name);; ^~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5554
https://github.com/root-project/root/pull/5555:131,Deployability,release,release,131,- Add R__SUGGEST_ALTERNATIVE to macros ignored by doxygen.; - Improve doxygen of RooFit.; - Add section about categories to RooFit release notes. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5555
https://github.com/root-project/root/pull/5558:7,Usability,simpl,simplify,7,...and simplify function signatures accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5558
https://github.com/root-project/root/pull/5563:14,Testability,assert,assert,14,This fixes an assert in isBloomFilterEmpty which assumes the bloom filter is already built. This is a fix for PR #4717.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5563
https://github.com/root-project/root/pull/5564:77,Testability,test,test,77,"Backport the fix of four memory leaks when reading from files, #5466. A read test with a v6.20 file is backported as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5564
https://github.com/root-project/root/pull/5570:80,Modifiability,variab,variable,80,"The command. get_filename_component(python ${PYTHON_EXECUTABLE} NAME). sets the variable ""python"" to e.g. ""python3.6"" if the value of; PYTHON_EXECUTABLE is ""/usr/bin/python3.6"". The value of the variable ""python"" ends up in all the shebangs of the; python scripts (rootls, rootmkdir, ecc.).; With this approach, if the content of the variable ""python"" is a; symlink to a python interpreter different from the one used to build; ROOT, we see a crash everytime a python script with a shebang is called. Reported here: https://sft.its.cern.ch/jira/browse/ROOT-10720",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:195,Modifiability,variab,variable,195,"The command. get_filename_component(python ${PYTHON_EXECUTABLE} NAME). sets the variable ""python"" to e.g. ""python3.6"" if the value of; PYTHON_EXECUTABLE is ""/usr/bin/python3.6"". The value of the variable ""python"" ends up in all the shebangs of the; python scripts (rootls, rootmkdir, ecc.).; With this approach, if the content of the variable ""python"" is a; symlink to a python interpreter different from the one used to build; ROOT, we see a crash everytime a python script with a shebang is called. Reported here: https://sft.its.cern.ch/jira/browse/ROOT-10720",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5570:334,Modifiability,variab,variable,334,"The command. get_filename_component(python ${PYTHON_EXECUTABLE} NAME). sets the variable ""python"" to e.g. ""python3.6"" if the value of; PYTHON_EXECUTABLE is ""/usr/bin/python3.6"". The value of the variable ""python"" ends up in all the shebangs of the; python scripts (rootls, rootmkdir, ecc.).; With this approach, if the content of the variable ""python"" is a; symlink to a python interpreter different from the one used to build; ROOT, we see a crash everytime a python script with a shebang is called. Reported here: https://sft.its.cern.ch/jira/browse/ROOT-10720",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5570
https://github.com/root-project/root/pull/5577:102,Deployability,install,installed,102,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:170,Energy Efficiency,Reduce,Reduce,170,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:77,Integrability,depend,dependencies,77,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:243,Modifiability,variab,variables,243,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:464,Modifiability,variab,variables,464,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5577:399,Testability,test,test,399,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5577
https://github.com/root-project/root/pull/5579:357,Modifiability,variab,variables,357,"find_package(Python) seems to have the following unsexpected behavior:; if Python_EXECUTABLE is specified to e.g. /usr/bin/python3 and; DEVELOPMENT is required but not found, then CMake looks for the; development package of python2. If it succeeds, Python_INCLUDE_DIRS and; Python_LIBRARIES are set as a consequently. This brings to a mismatch; between the variables set, since they refer to different python; versions.; ; To avoid this, we use find_package(PythonX) also for the build with one; version of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5579
https://github.com/root-project/root/pull/5579:426,Safety,avoid,avoid,426,"find_package(Python) seems to have the following unsexpected behavior:; if Python_EXECUTABLE is specified to e.g. /usr/bin/python3 and; DEVELOPMENT is required but not found, then CMake looks for the; development package of python2. If it succeeds, Python_INCLUDE_DIRS and; Python_LIBRARIES are set as a consequently. This brings to a mismatch; between the variables set, since they refer to different python; versions.; ; To avoid this, we use find_package(PythonX) also for the build with one; version of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5579
https://github.com/root-project/root/pull/5582:128,Integrability,message,message,128,"Replacing tbb::task_scheduler_init for tbb::task_arena. It does not change current ROOT MT behaviour. Description in the commit message:. > replace TPoolManager by RTaskArenaWrapper; > ; > Replace all uses of TPoolManager, based on the deprecated; > tbb_task_scheduler_init and its implicit task_arena, by explicit; > manipulation of our own central instance of task_arena, as; > suggested by intel:; > https://software.intel.com/sites/default/files/managed/b2/d2/TBBRevamp.pdf; > ; > Work out some gymnastics to keep tbb out of the headers,; > encapsulating it within the new RTaskArenaWrapper class. Couldn't; > find a solution for the forward-declaration tbb::task_arena, which; > is an alias of a versioned namespace dependent class that we are; > forced to forward declare instead (tbb::interface7::tbb_task_arena).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5582:721,Integrability,depend,dependent,721,"Replacing tbb::task_scheduler_init for tbb::task_arena. It does not change current ROOT MT behaviour. Description in the commit message:. > replace TPoolManager by RTaskArenaWrapper; > ; > Replace all uses of TPoolManager, based on the deprecated; > tbb_task_scheduler_init and its implicit task_arena, by explicit; > manipulation of our own central instance of task_arena, as; > suggested by intel:; > https://software.intel.com/sites/default/files/managed/b2/d2/TBBRevamp.pdf; > ; > Work out some gymnastics to keep tbb out of the headers,; > encapsulating it within the new RTaskArenaWrapper class. Couldn't; > find a solution for the forward-declaration tbb::task_arena, which; > is an alias of a versioned namespace dependent class that we are; > forced to forward declare instead (tbb::interface7::tbb_task_arena).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5582
https://github.com/root-project/root/pull/5583:56,Integrability,interface,interfaces,56,"Since glew.h is directly used/included in ROOT's public interfaces, the correct way will be to ship it as well with ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5583
https://github.com/root-project/root/pull/5585:125,Availability,failure,failure,125,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:666,Availability,error,error,666,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:815,Availability,error,error,815,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:959,Availability,Error,Error,959,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:1031,Availability,Error,Error,1031,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:12,Modifiability,variab,variable,12,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:61,Modifiability,variab,variable,61,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:217,Modifiability,variab,variable,217,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:197,Safety,avoid,avoid,197,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5585:358,Testability,test,testReport,358,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5585
https://github.com/root-project/root/pull/5586:154,Availability,error,errors,154,This PR continues the work in #5376. It creates a vcruntime.modulemap file which is loaded before libc and std modulemaps in order to fix several include errors. @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5586
https://github.com/root-project/root/pull/5586:84,Performance,load,loaded,84,This PR continues the work in #5376. It creates a vcruntime.modulemap file which is loaded before libc and std modulemaps in order to fix several include errors. @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5586
https://github.com/root-project/root/pull/5587:9,Modifiability,inherit,inheritance,9,"* Fixing inheritance of C++ classes in Python and callbacks to C++ with; object created in Python; * See upstream issue https://bitbucket.org/wlav/cppyy/issues/229/issue-with-python-class-that-derives-from; * Ports following commits of cppyy-backend: 4670bcf0d82d2f1650f739115576a884f51340f6; * Ports following commits of CPyCppyy:; 9d0eca19281a0f38c9cd80628279f1c76f5fe71c,; 398347bd01b693d0f4e7d2c6cef5c9d30adba2b5, 96de8a868b214eeb4be0f4be4914224ba7de6805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5587
https://github.com/root-project/root/pull/5588:141,Modifiability,variab,variable,141,"RooAbsAnaConvPdf was carrying around a RooArgSet, which was; not used anywhere. This RooArgSet, however, was carrying around a; pointer to a variable, which becomes a dangling pointer when one creates; copies of the RooAbsAnaConvPdf and deletes the original.; Removing this member fixes crashes when invoking copy constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5588
https://github.com/root-project/root/pull/5590:54,Availability,error,error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names,54,"[This recent forum post](https://root-forum.cern.ch/t/error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/39322) brought to my attention that ROOT-10178 can result in _silent_ reads of wrong data, so I think it might be good to backport the fix to v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5590
https://github.com/root-project/root/pull/5590:87,Performance,load,loaded-with-ttrees-with-different-names,87,"[This recent forum post](https://root-forum.cern.ch/t/error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/39322) brought to my attention that ROOT-10178 can result in _silent_ reads of wrong data, so I think it might be good to backport the fix to v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5590
https://github.com/root-project/root/pull/5591:17,Availability,error,errors,17,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:235,Availability,Error,Error,235,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:637,Availability,error,errors,637,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:37,Integrability,message,message,37,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:356,Safety,unsafe,unsafe,356,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:453,Safety,Safe,Safe,453,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:335,Testability,test,tests,335,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5591:528,Testability,test,test,528,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5591
https://github.com/root-project/root/pull/5592:70,Deployability,update,update,70,"Add the possibility to use ratios as yield parameters in SPlot.; Also update the documentation of SPlot, and add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5592
https://github.com/root-project/root/pull/5592:115,Testability,test,test,115,"Add the possibility to use ratios as yield parameters in SPlot.; Also update the documentation of SPlot, and add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5592
https://github.com/root-project/root/pull/5595:445,Availability,error,error,445,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5595:481,Availability,error,error,481,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5595:211,Deployability,patch,patch,211,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5595:451,Integrability,message,message,451,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5595:10,Performance,Cache,Cache,10,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5595:242,Performance,perform,performs,242,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5595:431,Usability,user-friendly,user-friendly,431,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5595
https://github.com/root-project/root/pull/5596:2476,Performance,optimiz,optimized,2476,"ambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:175,Safety,timeout,timeout,175,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:76,Testability,test,test,76,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:114,Testability,test,test,114,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:206,Testability,test,testDetails,206,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:222,Testability,test,test,222,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:289,Testability,test,test,289,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:944,Testability,Test,TestBody,944,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:1351,Testability,test,test,1351,"=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:1356,Testability,test,testTThreadedObject,1356,"=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:1459,Testability,Test,TestBody,1459,"ted=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:1667,Testability,Test,TestBody,1667,"d_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall ();",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:1873,Testability,Test,TestBody,1873,"t /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:2072,Testability,Test,TestBody,2072,"t /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:2278,Testability,Test,TestBody,2278,"t /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3038,Testability,Test,TestBody,3038,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3155,Testability,test,test,3155,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3160,Testability,test,testTThreadedObject,3160,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3211,Testability,test,testing,3211,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3266,Testability,test,testing,3266,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3275,Testability,Test,Test,3275,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3287,Testability,test,testing,3287,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3296,Testability,Test,Test,3296,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3309,Testability,test,testing,3309,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3318,Testability,Test,Test,3318,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3364,Testability,test,testing,3364,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3373,Testability,Test,Test,3373,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3424,Testability,test,testing,3424,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3433,Testability,Test,TestInfo,3433,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3488,Testability,test,testing,3488,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3497,Testability,Test,TestSuite,3497,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3553,Testability,test,testing,3553,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5596:3622,Testability,test,testing,3622,"ambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8 0x004af2ce in testing::TestSuite::Run() [clone .part.610] (); #9 0x004b03cf in testing::internal::UnitTestImpl::RunAllTests() (); #10 0x004b0696 in testing::UnitTest::Run() (); #11 0x0047beb1 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5596
https://github.com/root-project/root/pull/5597:1128,Security,access,accessed,1128,"This solves ROOT-9535. During the cloning process the TPaveStats (as part of fFunctions) is cloned and its member fParent point to the TH1 being; cloned. Since that TH1 was not part of the I/O transaction this leads the cloned TPaveStats parent to point to yet another; copy of the TH1. In the case of ROOT-9535, that copy held stale pointer to object that were removed and deleted in a subsequent; call to Reset. The exact order. Create a TH1 h1 containing a TPaveStats s1 and a TPaletteAxis p1.; Then Clone h1 into h2 which now contains TPaveStats s2 and a TPalettesAxis p2. Since s1.fParent was also cloned s2.fParent points to another histogram h3.; h3.fFunctions contains a pointer to s2 and to p2 since they were streamed during; the same I/O operation (the Clone via TBuffer of fFunctions). When h2 is Reset, it deletes p2 and remove it from h2.fFunctions,; however (since it is not even supposed to exist) h3 is not informed and; keep a (stale) pointer to p2. The Reset, however, keeps the TPaveStats; as is. Then during the cloning of h2, p2 is traversed and thus h3 is traversed; and thus the (stale) pointer to p2 is accessed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5597
https://github.com/root-project/root/pull/5598:351,Integrability,depend,dependency,351,Fix the compilation of Cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Support compilation when configuting with: ; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CUDA_STANDARD=14. The fix is done by modifying the pre-processor macros defined in RConfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used only when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda.; Something to be done in a future code re-factoring,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5598
https://github.com/root-project/root/pull/5598:131,Modifiability,config,configuting,131,Fix the compilation of Cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Support compilation when configuting with: ; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CUDA_STANDARD=14. The fix is done by modifying the pre-processor macros defined in RConfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used only when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda.; Something to be done in a future code re-factoring,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5598
https://github.com/root-project/root/pull/5598:440,Modifiability,layers,layers,440,Fix the compilation of Cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Support compilation when configuting with: ; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CUDA_STANDARD=14. The fix is done by modifying the pre-processor macros defined in RConfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used only when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda.; Something to be done in a future code re-factoring,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5598
https://github.com/root-project/root/pull/5599:29,Testability,test,tests,29,"In checking old bug reports, tests for two bugs were written. Although; the bugs had been fixed as side effects of modernisations or other bug; fixes, having those tests in place won't do harm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5599
https://github.com/root-project/root/pull/5599:164,Testability,test,tests,164,"In checking old bug reports, tests for two bugs were written. Although; the bugs had been fixed as side effects of modernisations or other bug; fixes, having those tests in place won't do harm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5599
https://github.com/root-project/root/pull/5600:411,Integrability,message,messages,411,"The reason for this split is that Development is not required, hence we; can't rely on it being found to set variables which are usually set even; if only Interpreter (and NOT Development) is found. The if(PythonX_Development_FOUND) condition is kept for what concern the; variables set and used only for the secondary Python version used to; biuld PyROOT, since Development is required for PyROOT. In the info messages related to PyROOT, the condition to be printed now; requires both PythonX_Interpreter_FOUND and PythonX_Development_FOUND,; in order to avoid them to be printed in case Development is found but not Interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5600
https://github.com/root-project/root/pull/5600:109,Modifiability,variab,variables,109,"The reason for this split is that Development is not required, hence we; can't rely on it being found to set variables which are usually set even; if only Interpreter (and NOT Development) is found. The if(PythonX_Development_FOUND) condition is kept for what concern the; variables set and used only for the secondary Python version used to; biuld PyROOT, since Development is required for PyROOT. In the info messages related to PyROOT, the condition to be printed now; requires both PythonX_Interpreter_FOUND and PythonX_Development_FOUND,; in order to avoid them to be printed in case Development is found but not Interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5600
https://github.com/root-project/root/pull/5600:273,Modifiability,variab,variables,273,"The reason for this split is that Development is not required, hence we; can't rely on it being found to set variables which are usually set even; if only Interpreter (and NOT Development) is found. The if(PythonX_Development_FOUND) condition is kept for what concern the; variables set and used only for the secondary Python version used to; biuld PyROOT, since Development is required for PyROOT. In the info messages related to PyROOT, the condition to be printed now; requires both PythonX_Interpreter_FOUND and PythonX_Development_FOUND,; in order to avoid them to be printed in case Development is found but not Interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5600
https://github.com/root-project/root/pull/5600:556,Safety,avoid,avoid,556,"The reason for this split is that Development is not required, hence we; can't rely on it being found to set variables which are usually set even; if only Interpreter (and NOT Development) is found. The if(PythonX_Development_FOUND) condition is kept for what concern the; variables set and used only for the secondary Python version used to; biuld PyROOT, since Development is required for PyROOT. In the info messages related to PyROOT, the condition to be printed now; requires both PythonX_Interpreter_FOUND and PythonX_Development_FOUND,; in order to avoid them to be printed in case Development is found but not Interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5600
https://github.com/root-project/root/pull/5603:413,Availability,failure,failures,413,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:431,Availability,failure,failures,431,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:594,Availability,failure,failures,594,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:986,Availability,failure,failures,986,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:743,Energy Efficiency,power,powerful,743,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:143,Integrability,rout,routines,143,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:200,Performance,perform,performance,200,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:290,Testability,test,tests,290,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:408,Testability,test,test,408,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5603:466,Testability,test,testTTreeRegressions,466,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5603
https://github.com/root-project/root/pull/5604:265,Integrability,depend,dependency,265,Backport in 6.20 of #5598 ; Fix compilation of cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Fix it by modifying the pre-processor macros defined in RCOnfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5604
https://github.com/root-project/root/pull/5604:349,Modifiability,layers,layers,349,Backport in 6.20 of #5598 ; Fix compilation of cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Fix it by modifying the pre-processor macros defined in RCOnfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5604
https://github.com/root-project/root/pull/5607:98,Deployability,update,updated,98,"Discussed with @etejedor, still needs to be discussed with @oshadura.; Commit message needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5607
https://github.com/root-project/root/pull/5607:78,Integrability,message,message,78,"Discussed with @etejedor, still needs to be discussed with @oshadura.; Commit message needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5607
https://github.com/root-project/root/pull/5608:116,Integrability,interface,interface-problems-with-,116,Fixed Issue reported on ; https://sft.its.cern.ch/jira/browse/ROOT-10755; https://root-forum.cern.ch/t/rootr-root-r-interface-problems-with-x11-graphics/39299,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5608
https://github.com/root-project/root/pull/5609:170,Availability,error,errors,170,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves. This fixes ROOT-10754.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5609
https://github.com/root-project/root/pull/5609:582,Availability,error,error,582,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves. This fixes ROOT-10754.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5609
https://github.com/root-project/root/pull/5609:691,Availability,error,errors,691,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves. This fixes ROOT-10754.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5609
https://github.com/root-project/root/pull/5613:264,Deployability,patch,patch,264,"When building the foundation of frameworks often the dictionary modules require third party modules such as clhep, boost and tinyxml. Those modules do not require I/O information and it is permissible to be built as a part of another dictionary module build. This patch relaxes the eager check for implicit module builds by adding a flag -mByproduct which turns of the diagnostic disallowing implicit module builds. cc @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5613
https://github.com/root-project/root/pull/5615:170,Availability,error,errors,170,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5615
https://github.com/root-project/root/pull/5615:582,Availability,error,error,582,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5615
https://github.com/root-project/root/pull/5615:691,Availability,error,errors,691,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5615
https://github.com/root-project/root/pull/5616:170,Availability,error,errors,170,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5616
https://github.com/root-project/root/pull/5616:582,Availability,error,error,582,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5616
https://github.com/root-project/root/pull/5616:691,Availability,error,errors,691,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5616
https://github.com/root-project/root/pull/5619:130,Testability,test,tests,130,"@jblomer, I thought I'd see if you had any comments about the approach before going ahead and splitting the rest. The idea is for tests to include the new convenience header `ntuple_test.hxx` and then we add a new line in the CMake file. I am not super experienced with CMake, so if there's an issue with including possibly extraneous libraries for each test file I can change it. . The tests are nicely structured, so I think I'll be able to script something for the grunt work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5619
https://github.com/root-project/root/pull/5619:354,Testability,test,test,354,"@jblomer, I thought I'd see if you had any comments about the approach before going ahead and splitting the rest. The idea is for tests to include the new convenience header `ntuple_test.hxx` and then we add a new line in the CMake file. I am not super experienced with CMake, so if there's an issue with including possibly extraneous libraries for each test file I can change it. . The tests are nicely structured, so I think I'll be able to script something for the grunt work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5619
https://github.com/root-project/root/pull/5619:387,Testability,test,tests,387,"@jblomer, I thought I'd see if you had any comments about the approach before going ahead and splitting the rest. The idea is for tests to include the new convenience header `ntuple_test.hxx` and then we add a new line in the CMake file. I am not super experienced with CMake, so if there's an issue with including possibly extraneous libraries for each test file I can change it. . The tests are nicely structured, so I think I'll be able to script something for the grunt work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5619
https://github.com/root-project/root/pull/5620:144,Availability,error,error,144,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5620
https://github.com/root-project/root/pull/5620:357,Deployability,patch,patch,357,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5620
https://github.com/root-project/root/pull/5620:152,Testability,Assert,Assertion,152,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5620
https://github.com/root-project/root/pull/5621:144,Availability,error,error,144,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5621
https://github.com/root-project/root/pull/5621:357,Deployability,patch,patch,357,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5621
https://github.com/root-project/root/pull/5621:152,Testability,Assert,Assertion,152,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5621
https://github.com/root-project/root/pull/5626:172,Availability,failure,failures,172,"Fits using bin integrals or fits of ThnSparse where not working in multi-thread mode due to a usage of the non thread-safe function BinData::BinUpEdge; This was showing by failures of bin integral fits and thnsparse fits in the stressHIstoFit.cxx when running with ROOT MT. . This PR fixes this issues. Improvements have been done also for stressHIstoFit such as adding an option ""-t"" to run the tes in MT mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5626
https://github.com/root-project/root/pull/5626:67,Performance,multi-thread,multi-thread,67,"Fits using bin integrals or fits of ThnSparse where not working in multi-thread mode due to a usage of the non thread-safe function BinData::BinUpEdge; This was showing by failures of bin integral fits and thnsparse fits in the stressHIstoFit.cxx when running with ROOT MT. . This PR fixes this issues. Improvements have been done also for stressHIstoFit such as adding an option ""-t"" to run the tes in MT mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5626
https://github.com/root-project/root/pull/5626:118,Safety,safe,safe,118,"Fits using bin integrals or fits of ThnSparse where not working in multi-thread mode due to a usage of the non thread-safe function BinData::BinUpEdge; This was showing by failures of bin integral fits and thnsparse fits in the stressHIstoFit.cxx when running with ROOT MT. . This PR fixes this issues. Improvements have been done also for stressHIstoFit such as adding an option ""-t"" to run the tes in MT mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5626
https://github.com/root-project/root/pull/5627:18,Availability,error,error,18,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:512,Availability,error,error,512,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:1127,Availability,error,error,1127,"uded from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:2055,Availability,error,error,2055,"redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:2977,Availability,error,error,2977,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:126,Deployability,install,installed,126,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:24,Integrability,message,messages,24,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:415,Testability,assert,assert,415,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:1030,Testability,assert,assert,1030,"es displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:1542,Testability,assert,assert,1542,"ableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.183",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:1958,Testability,assert,assert,1958,"d from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:2464,Testability,assert,assert,2464,"ite here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:2880,Testability,assert,assert,2880,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5627:3362,Testability,assert,assert,3362,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5627
https://github.com/root-project/root/pull/5628:18,Availability,error,error,18,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:512,Availability,error,error,512,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:1127,Availability,error,error,1127,"uded from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:2055,Availability,error,error,2055,"redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:2977,Availability,error,error,2977,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:126,Deployability,install,installed,126,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:24,Integrability,message,messages,24,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:415,Testability,assert,assert,415,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:1030,Testability,assert,assert,1030,"es displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:1542,Testability,assert,assert,1542,"ableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.183",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:1958,Testability,assert,assert,1958,"d from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:2464,Testability,assert,assert,2464,"ite here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:2880,Testability,assert,assert,2880,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5628:3362,Testability,assert,assert,3362,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5628
https://github.com/root-project/root/pull/5629:389,Deployability,update,updated,389,"- Fix ROOT-9561.; TTree::Draw segfaults when passing ""A*"" as drawing option; The following macro reproduces the problem:. ```; {; TTree tree(""tree"", ""tree"");; int a, b;; tree.Branch(""a"", &a);; tree.Branch(""b"", &b);; a = 1;; b = 2;; tree.Fill();; tree.Draw(""a:b"", """", ""* A"");; }; ```. - The paragraph ""Retrieving the result of Draw"" in the TTree::Draw reference guide has been improved and updated.; - Some typos have been fixed in TTree.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5629
https://github.com/root-project/root/pull/5629:361,Usability,guid,guide,361,"- Fix ROOT-9561.; TTree::Draw segfaults when passing ""A*"" as drawing option; The following macro reproduces the problem:. ```; {; TTree tree(""tree"", ""tree"");; int a, b;; tree.Branch(""a"", &a);; tree.Branch(""b"", &b);; a = 1;; b = 2;; tree.Fill();; tree.Draw(""a:b"", """", ""* A"");; }; ```. - The paragraph ""Retrieving the result of Draw"" in the TTree::Draw reference guide has been improved and updated.; - Some typos have been fixed in TTree.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5629
https://github.com/root-project/root/pull/5632:1443,Modifiability,variab,variable,1443,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5632
https://github.com/root-project/root/pull/5632:57,Performance,load,loading,57,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5632
https://github.com/root-project/root/pull/5632:223,Performance,load,loading,223,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5632
https://github.com/root-project/root/pull/5632:968,Performance,optimiz,optimizer,968,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5632
https://github.com/root-project/root/pull/5632:1044,Performance,load,loading,1044,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5632
https://github.com/root-project/root/pull/5635:1128,Security,access,accessed,1128,"This solves ROOT-9535. During the cloning process the TPaveStats (as part of fFunctions) is cloned and its member fParent point to the TH1 being; cloned. Since that TH1 was not part of the I/O transaction this leads the cloned TPaveStats parent to point to yet another; copy of the TH1. In the case of ROOT-9535, that copy held stale pointer to object that were removed and deleted in a subsequent; call to Reset. The exact order. Create a TH1 h1 containing a TPaveStats s1 and a TPaletteAxis p1.; Then Clone h1 into h2 which now contains TPaveStats s2 and a TPalettesAxis p2. Since s1.fParent was also cloned s2.fParent points to another histogram h3.; h3.fFunctions contains a pointer to s2 and to p2 since they were streamed during; the same I/O operation (the Clone via TBuffer of fFunctions). When h2 is Reset, it deletes p2 and remove it from h2.fFunctions,; however (since it is not even supposed to exist) h3 is not informed and; keep a (stale) pointer to p2. The Reset, however, keeps the TPaveStats; as is. Then during the cloning of h2, p2 is traversed and thus h3 is traversed; and thus the (stale) pointer to p2 is accessed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5635
https://github.com/root-project/root/pull/5636:117,Availability,error,error,117,"This PR fixes building of Core module on Windows. . ```; /.../build/include\ROOT/RWrap_libcpp_string_view.h(428,34): error G1A4676F8: no member named '__find_end' in namespace 'std'; did you mean 'find_end'?; const _CharT* __r = _VSTD::__find_end(; ~~~~~~~^~~~~~~~~~; find_end; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5636
https://github.com/root-project/root/pull/5637:67,Deployability,Patch,Patch,67,This addresses the rest of the comments of root-project/root#4717. Patch by Alexander Penev (@alexander-penev) and me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5637
https://github.com/root-project/root/pull/5642:6,Testability,assert,assert,6,"Fixes assert in roottest/root/meta/MakeProject/runcms310.C; ```; /builddir/build/BUILD/gcc-8.3.1-20190223/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/basic_string.h:1067: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference = char&; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]: Assertion '__pos <= size()' failed.; #3 0x00007ffff78c7c11 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[](unsigned long) () from /lib64/libstdc++.so.6; #4 0x00007ffff67fb9c3 in R__WriteDestructorBody (file=0x1e01c10, next=...); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TStreamerInfo.cxx:3531; #5 0x00007ffff67fcfcf in TStreamerInfo::GenerateDeclaration (this=0x2b1e950, fp=0x1d7ddc0, sfp=0x1e01c10,; subClasses=0x7fffffff8db0, top=true); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TStreamerInfo.cxx:3772; #6 0x00007ffff67fe2bf in TStreamerInfo::GenerateHeaderFile (this=0x2b1e950, dirname=0x7fffffff92d9 ""cms310"",; subClasses=0x7fffffff8db0, extrainfos=0x7fffffff9210); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TStreamerInfo.cxx:3976; #7 0x00007ffff67a99bf in TFile::MakeProject (this=0x158e280, dirname=0x7ffff793204c ""cms310"", option=0x7ffff7932055 ""RECREATE+""); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TFile.cxx:2843; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5642
https://github.com/root-project/root/pull/5642:631,Testability,Assert,Assertion,631,"Fixes assert in roottest/root/meta/MakeProject/runcms310.C; ```; /builddir/build/BUILD/gcc-8.3.1-20190223/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/basic_string.h:1067: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference = char&; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]: Assertion '__pos <= size()' failed.; #3 0x00007ffff78c7c11 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[](unsigned long) () from /lib64/libstdc++.so.6; #4 0x00007ffff67fb9c3 in R__WriteDestructorBody (file=0x1e01c10, next=...); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TStreamerInfo.cxx:3531; #5 0x00007ffff67fcfcf in TStreamerInfo::GenerateDeclaration (this=0x2b1e950, fp=0x1d7ddc0, sfp=0x1e01c10,; subClasses=0x7fffffff8db0, top=true); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TStreamerInfo.cxx:3772; #6 0x00007ffff67fe2bf in TStreamerInfo::GenerateHeaderFile (this=0x2b1e950, dirname=0x7fffffff92d9 ""cms310"",; subClasses=0x7fffffff8db0, extrainfos=0x7fffffff9210); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TStreamerInfo.cxx:3976; #7 0x00007ffff67a99bf in TFile::MakeProject (this=0x158e280, dirname=0x7ffff793204c ""cms310"", option=0x7ffff7932055 ""RECREATE+""); at /mnt/build/wsincrmaster/LABEL/ROOT-fedora29/SPEC/python3/root/io/io/src/TFile.cxx:2843; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5642
https://github.com/root-project/root/pull/5643:96,Performance,load,loaded,96,"…efined symbols. As a general rule, libraries containing C/C++ extensions that are meant; to be loaded from Python, should not be linked against libPython; the; reason for this is that when these libraries are imported, Python has; already loaded the libPython symbols, and if these are different from; the ones used to link against the extension module a crash can happen. libcppyy and libROOTPythonizations, being only imported from Python, do; not need to link against libPython. On the other hand, this is needed for libROOTTPython, which is used only; form C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5643
https://github.com/root-project/root/pull/5643:240,Performance,load,loaded,240,"…efined symbols. As a general rule, libraries containing C/C++ extensions that are meant; to be loaded from Python, should not be linked against libPython; the; reason for this is that when these libraries are imported, Python has; already loaded the libPython symbols, and if these are different from; the ones used to link against the extension module a crash can happen. libcppyy and libROOTPythonizations, being only imported from Python, do; not need to link against libPython. On the other hand, this is needed for libROOTTPython, which is used only; form C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5643
https://github.com/root-project/root/pull/5648:12,Availability,error,error,12,"…g file. An error is raised when ROOT.TFile(file_name) and; ROOT.TFile.Open(file_name) try to open a non-existing file, as suggested; in https://sft.its.cern.ch/jira/browse/ROOT-9915. It is open to discussion whether we should return the object anyways (i.e. keep the C++ behavior) or just raise an error (like it is done here).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5648
https://github.com/root-project/root/pull/5648:299,Availability,error,error,299,"…g file. An error is raised when ROOT.TFile(file_name) and; ROOT.TFile.Open(file_name) try to open a non-existing file, as suggested; in https://sft.its.cern.ch/jira/browse/ROOT-9915. It is open to discussion whether we should return the object anyways (i.e. keep the C++ behavior) or just raise an error (like it is done here).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5648
https://github.com/root-project/root/pull/5649:22,Deployability,update,updates,22,"Several documentation updates. For TProfile, a ^2 was missing in the formulae, and weights weren't mentioned anywhere.; The TProfile one now typesets as follows:; ![image](https://user-images.githubusercontent.com/16205615/82306058-da170880-99be-11ea-9f37-4e90259e7f12.png). And TProfile2D:; ![image](https://user-images.githubusercontent.com/16205615/82306124-edc26f00-99be-11ea-9ecc-4745c374abf8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5649
https://github.com/root-project/root/pull/5654:80,Deployability,update,update,80,The PR spawns a separate thread to process ROOT events if we cannot; attach the update mechanism to an exisiting hook such as existing in the; interactive Python mode or for ipython/notebooks. Related to ROOT-10774,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5654
https://github.com/root-project/root/pull/5658:210,Safety,detect,detected,210,"Fix the reference file for the v6.22 read test of RooCategory now that; v6.22 has been tagged. The previous file was using an outdated class; structure, and was therefore triggering warnings. (Warnings are not detected yet by CI, but can be seen here: #5591.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5658
https://github.com/root-project/root/pull/5658:42,Testability,test,test,42,"Fix the reference file for the v6.22 read test of RooCategory now that; v6.22 has been tagged. The previous file was using an outdated class; structure, and was therefore triggering warnings. (Warnings are not detected yet by CI, but can be seen here: #5591.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5658
https://github.com/root-project/root/pull/5660:6,Availability,down,down,6,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:43,Availability,failure,failures,43,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:644,Modifiability,config,config,644,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:708,Modifiability,config,configs,708,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:818,Performance,load,loaded,818,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:33,Security,sanitiz,sanitizer,33,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:234,Security,sanitiz,sanitizer,234,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:624,Security,sanitiz,sanitizer,624,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5660:744,Security,sanitiz,sanitizer,744,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5660
https://github.com/root-project/root/pull/5663:237,Deployability,install,installed,237,"When running ""make package"", it was observed that copying the; Python source files to runtimedir was incorrect, and the generation; of the bytecodes was failing later too as a consequence. This change ensures that the Python sources are installed; correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5663
https://github.com/root-project/root/pull/5665:14,Integrability,message,message,14,Add a warning message to indicate that MethodDNN is deprecated and now MethodDL should be used. Improve handling of inputShapeLayout. InputBatchLayout is not really needed anymore and it is now removed from the tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5665
https://github.com/root-project/root/pull/5666:58,Deployability,install,installation,58,"The commits in this PR propose a unified solution for the installation of the PyROOT libraries, sources and bytecodes that works both with ""make install"" and ""make package"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5666
https://github.com/root-project/root/pull/5666:145,Deployability,install,install,145,"The commits in this PR propose a unified solution for the installation of the PyROOT libraries, sources and bytecodes that works both with ""make install"" and ""make package"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5666
https://github.com/root-project/root/pull/5667:422,Availability,failure,failures,422,...and add tests and documentation for TTreeReader+TEntryList usage. The behavior of `TTreeReader` and `TTreeProcessorMT` is changed from always assuming that entry numbers stored in `TEntryList` are global entry numbers to treating them as `TTree`-local entry numbers if they come from sub-entrylists. This fixes ROOT-10753. - [x] do entry range -> entry-list entry range transformation once for all taks; - [x] fix test failures; - [ ] check what happens with sub-entrylists in shuffled order w.r.t. TTrees in a TChain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5667
https://github.com/root-project/root/pull/5667:11,Testability,test,tests,11,...and add tests and documentation for TTreeReader+TEntryList usage. The behavior of `TTreeReader` and `TTreeProcessorMT` is changed from always assuming that entry numbers stored in `TEntryList` are global entry numbers to treating them as `TTree`-local entry numbers if they come from sub-entrylists. This fixes ROOT-10753. - [x] do entry range -> entry-list entry range transformation once for all taks; - [x] fix test failures; - [ ] check what happens with sub-entrylists in shuffled order w.r.t. TTrees in a TChain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5667
https://github.com/root-project/root/pull/5667:417,Testability,test,test,417,...and add tests and documentation for TTreeReader+TEntryList usage. The behavior of `TTreeReader` and `TTreeProcessorMT` is changed from always assuming that entry numbers stored in `TEntryList` are global entry numbers to treating them as `TTree`-local entry numbers if they come from sub-entrylists. This fixes ROOT-10753. - [x] do entry range -> entry-list entry range transformation once for all taks; - [x] fix test failures; - [ ] check what happens with sub-entrylists in shuffled order w.r.t. TTrees in a TChain,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5667
https://github.com/root-project/root/pull/5671:93,Availability,error,errors,93,mp101_singleCore.root was (of course) also use by mp101_fillNtuples.C. This will prevent the errors:; ```; Processing /data/sftnight/workspace/manual/root/tutorials/multicore/mp101_fillNtuples.C...; Error in <TFile::TFile>: file mp101_singleCore.root already exists; Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (singleCore) has not been written.; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5671
https://github.com/root-project/root/pull/5671:199,Availability,Error,Error,199,mp101_singleCore.root was (of course) also use by mp101_fillNtuples.C. This will prevent the errors:; ```; Processing /data/sftnight/workspace/manual/root/tutorials/multicore/mp101_fillNtuples.C...; Error in <TFile::TFile>: file mp101_singleCore.root already exists; Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (singleCore) has not been written.; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5671
https://github.com/root-project/root/pull/5671:267,Availability,Error,Error,267,mp101_singleCore.root was (of course) also use by mp101_fillNtuples.C. This will prevent the errors:; ```; Processing /data/sftnight/workspace/manual/root/tutorials/multicore/mp101_fillNtuples.C...; Error in <TFile::TFile>: file mp101_singleCore.root already exists; Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (singleCore) has not been written.; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5671
https://github.com/root-project/root/pull/5672:11,Availability,error,error,11,"This is an error title!; py vs px, not pz vs px",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5672
https://github.com/root-project/root/pull/5673:67,Availability,avail,available,67,These includes may be used in dictionaries and therefore should be available already in core libs. Fixes ROOT-10701.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5673
https://github.com/root-project/root/pull/5674:72,Integrability,depend,depending,72,This PR changes sort behaviour and coloring of table cells (gray/black) depending on REveDataItem filter status.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5674
https://github.com/root-project/root/pull/5677:320,Deployability,Update,Update,320,"Although 35105feb3d7cb fixes a problem in HistFactory, it has the; disadvantage that the assignment operator of Channel gets deactivated.; By passing the list of open TFiles as argument instead of making it a; member, the class can stay as it was. (cherry picked from commit 31f55ff0c1fbae1a0573a1c8bf136be4d77fc06b). **Update**:; Added also a cherry pick of the fix for ROOT-3579",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5677
https://github.com/root-project/root/pull/5678:172,Deployability,update,updated,172,"Reviewers, please make sure that renaming this file still makes it ""findable"" by users! I don't know how references to this file are generated, and whether they need to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5678
https://github.com/root-project/root/pull/5681:18,Availability,error,errors,18,"This PR fixes the errors occurring while building the Thread module on Windows by adding a new services_msvc.modulemap which holds Microsoft System Services headers.; ```; /.../build/include\TWin32Condition.h(35,4): error G4823F0AC: declaration of 'CRITICAL_SECTION' must be imported from module 'Core.TWinNTSystem.h' before it is required [C:\build\night\LABEL\windows10\SPEC\rtcxxmod\build\core\thread\G__Thread.vcxproj]; CRITICAL_SECTION waiters_count_lock_;; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\minwinbase.h:217:30: note: previous declaration is here; typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;; ^; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5681
https://github.com/root-project/root/pull/5681:216,Availability,error,error,216,"This PR fixes the errors occurring while building the Thread module on Windows by adding a new services_msvc.modulemap which holds Microsoft System Services headers.; ```; /.../build/include\TWin32Condition.h(35,4): error G4823F0AC: declaration of 'CRITICAL_SECTION' must be imported from module 'Core.TWinNTSystem.h' before it is required [C:\build\night\LABEL\windows10\SPEC\rtcxxmod\build\core\thread\G__Thread.vcxproj]; CRITICAL_SECTION waiters_count_lock_;; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\minwinbase.h:217:30: note: previous declaration is here; typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;; ^; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5681
https://github.com/root-project/root/pull/5683:667,Availability,avail,available,667,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5683
https://github.com/root-project/root/pull/5683:945,Availability,failure,failure,945,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5683
https://github.com/root-project/root/pull/5683:88,Integrability,rout,routine,88,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5683
https://github.com/root-project/root/pull/5683:18,Testability,assert,assert,18,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5683
https://github.com/root-project/root/pull/5683:826,Testability,assert,asserting,826,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5683
https://github.com/root-project/root/pull/5693:31,Testability,test,test,31,i.e. fix ROOT-10792 (and add a test).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5693
https://github.com/root-project/root/pull/5695:107,Testability,test,test,107,splitcoll-arrayview needs a dictionary to run. This creates a depedency; between dictionary generation and test target to fix a build-system race; condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5695
https://github.com/root-project/root/pull/5697:28,Deployability,release,release-notes,28,Add Johannes in CREDITS and release-notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5697
https://github.com/root-project/root/pull/5702:204,Availability,error,error,204,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5702
https://github.com/root-project/root/pull/5702:197,Deployability,Update,Update,197,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5702
https://github.com/root-project/root/pull/5702:269,Deployability,Update,Update,269,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5702
https://github.com/root-project/root/pull/5702:210,Integrability,message,message,210,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5702
https://github.com/root-project/root/pull/5703:77,Testability,test,tests,77,Remove extra `class` and `struct` prefixes in demangled name and fix related tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5703
https://github.com/root-project/root/pull/5704:53,Testability,test,tests,53,These fixes replace using MethodDNN with MethodDL in tests and tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5704
https://github.com/root-project/root/pull/5705:509,Deployability,integrat,integrated,509,"* Add infrastructure to call distcc as prefix; * Use distcc as CCACHE_PREFIX if ccache is enabled. Works extremely well! I get a speedup of almost 2x using a second laptop with a comparable CPU. My third laptop is so slow that it does not help at all ;) However, a screenshot of the monitoring:. ![screenshot_25-05-20_23-19-08](https://user-images.githubusercontent.com/6951222/82887084-c6801a80-9f47-11ea-969a-10fc9b2c7a4f.png). Also works nicely with ccache. Though I'm not too sure whether it's nice how I integrated it (see the `CCACHE_PREFIX` envvar set in the command for `RULE_LAUNCH_COMPILE`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5705
https://github.com/root-project/root/pull/5705:283,Energy Efficiency,monitor,monitoring,283,"* Add infrastructure to call distcc as prefix; * Use distcc as CCACHE_PREFIX if ccache is enabled. Works extremely well! I get a speedup of almost 2x using a second laptop with a comparable CPU. My third laptop is so slow that it does not help at all ;) However, a screenshot of the monitoring:. ![screenshot_25-05-20_23-19-08](https://user-images.githubusercontent.com/6951222/82887084-c6801a80-9f47-11ea-969a-10fc9b2c7a4f.png). Also works nicely with ccache. Though I'm not too sure whether it's nice how I integrated it (see the `CCACHE_PREFIX` envvar set in the command for `RULE_LAUNCH_COMPILE`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5705
https://github.com/root-project/root/pull/5705:509,Integrability,integrat,integrated,509,"* Add infrastructure to call distcc as prefix; * Use distcc as CCACHE_PREFIX if ccache is enabled. Works extremely well! I get a speedup of almost 2x using a second laptop with a comparable CPU. My third laptop is so slow that it does not help at all ;) However, a screenshot of the monitoring:. ![screenshot_25-05-20_23-19-08](https://user-images.githubusercontent.com/6951222/82887084-c6801a80-9f47-11ea-969a-10fc9b2c7a4f.png). Also works nicely with ccache. Though I'm not too sure whether it's nice how I integrated it (see the `CCACHE_PREFIX` envvar set in the command for `RULE_LAUNCH_COMPILE`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5705
https://github.com/root-project/root/pull/5710:0,Deployability,Update,Updates,0,Updates of latex files of TMVA users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5710
https://github.com/root-project/root/pull/5710:37,Usability,guid,guide,37,Updates of latex files of TMVA users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5710
https://github.com/root-project/root/pull/5714:85,Testability,test,tests,85,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5714:181,Testability,test,tests,181,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5714:203,Testability,assert,assertion,203,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5714:472,Testability,test,test,472,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5714:595,Testability,test,test,595,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5714:718,Testability,test,test,718,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5714:28,Usability,simpl,simplifying,28,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5714
https://github.com/root-project/root/pull/5715:62,Integrability,depend,dependency,62,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5715
https://github.com/root-project/root/pull/5715:148,Performance,race condition,race condition,148,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5715
https://github.com/root-project/root/pull/5715:113,Testability,test,test,113,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5715
https://github.com/root-project/root/pull/5717:90,Testability,Test,Tested,90,I removed last traces of possible usage of system libpng when build with external libpng. Tested with flags: ` -DCMAKE_PREFIX_PATH=/home/oksana/CERN/libpng/`. Output of making grep of `png` in build directory and ldd output for libAsimage*.so:; https://gist.github.com/oshadura/02284042676515002dbd7383ef5f75c7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5717
https://github.com/root-project/root/pull/5721:1013,Performance,load,loaded,1013,"Also fix TClusterIterator for the case of TTree with 1 entry (and no basket flush). Also Remove unnecessary thread local in TKey.cxx. And more changes to address issues seen in variation of the failing code in ROOT-10702. In particular, after this PR, the following will always work; ```; chain->SetBranchAdress(fullnameofbranch, &address_of_numerical_type);; ```. Prior to this PR, if the requested branch is a sub-branch of a split object, the user needs to **also** turn on MakeClass mode (also called Decomposed Object mode) explicit, now it is done implicitly. Prior to this PR doing:; ```; // Not setting the top level branch address.; chain->SetBranchAdress(sub_branch_name, &address);; chain->GetEntry(0);; ```; Resulted in the address set to be forgotten. Note that a work-around was:; ```; // Not setting the top level branch address.; chain->GetEntry(0);; chain->SetBranchAdress(sub_branch_name, &address);; ```; But also the address needed to (in most cases) also be set again after each new tree was loaded. Note that, the following:; ```; chain->SetBranchAdress(sub_branch_name, &address);; chain->SetBranchAdress(top_level_branch_name, &other_address);; chain->GetEntry(0);; ```; will result (as one would expect) with the first SetBranchAddress being ignored/over-ridden. With this PR, in addition to checking the address type in the case:; ```; chain->LoadTree(0);; chain->SetBranchAdress(branch_name, &address);; ```; will also check them in the case:; ```; chain->SetBranchAdress(branch_name, &address);; chain->LoadTree(0);; ```; (yep, it would silently fail before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5721
https://github.com/root-project/root/pull/5721:1369,Performance,Load,LoadTree,1369,"Also fix TClusterIterator for the case of TTree with 1 entry (and no basket flush). Also Remove unnecessary thread local in TKey.cxx. And more changes to address issues seen in variation of the failing code in ROOT-10702. In particular, after this PR, the following will always work; ```; chain->SetBranchAdress(fullnameofbranch, &address_of_numerical_type);; ```. Prior to this PR, if the requested branch is a sub-branch of a split object, the user needs to **also** turn on MakeClass mode (also called Decomposed Object mode) explicit, now it is done implicitly. Prior to this PR doing:; ```; // Not setting the top level branch address.; chain->SetBranchAdress(sub_branch_name, &address);; chain->GetEntry(0);; ```; Resulted in the address set to be forgotten. Note that a work-around was:; ```; // Not setting the top level branch address.; chain->GetEntry(0);; chain->SetBranchAdress(sub_branch_name, &address);; ```; But also the address needed to (in most cases) also be set again after each new tree was loaded. Note that, the following:; ```; chain->SetBranchAdress(sub_branch_name, &address);; chain->SetBranchAdress(top_level_branch_name, &other_address);; chain->GetEntry(0);; ```; will result (as one would expect) with the first SetBranchAddress being ignored/over-ridden. With this PR, in addition to checking the address type in the case:; ```; chain->LoadTree(0);; chain->SetBranchAdress(branch_name, &address);; ```; will also check them in the case:; ```; chain->SetBranchAdress(branch_name, &address);; chain->LoadTree(0);; ```; (yep, it would silently fail before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5721
https://github.com/root-project/root/pull/5721:1531,Performance,Load,LoadTree,1531,"Also fix TClusterIterator for the case of TTree with 1 entry (and no basket flush). Also Remove unnecessary thread local in TKey.cxx. And more changes to address issues seen in variation of the failing code in ROOT-10702. In particular, after this PR, the following will always work; ```; chain->SetBranchAdress(fullnameofbranch, &address_of_numerical_type);; ```. Prior to this PR, if the requested branch is a sub-branch of a split object, the user needs to **also** turn on MakeClass mode (also called Decomposed Object mode) explicit, now it is done implicitly. Prior to this PR doing:; ```; // Not setting the top level branch address.; chain->SetBranchAdress(sub_branch_name, &address);; chain->GetEntry(0);; ```; Resulted in the address set to be forgotten. Note that a work-around was:; ```; // Not setting the top level branch address.; chain->GetEntry(0);; chain->SetBranchAdress(sub_branch_name, &address);; ```; But also the address needed to (in most cases) also be set again after each new tree was loaded. Note that, the following:; ```; chain->SetBranchAdress(sub_branch_name, &address);; chain->SetBranchAdress(top_level_branch_name, &other_address);; chain->GetEntry(0);; ```; will result (as one would expect) with the first SetBranchAddress being ignored/over-ridden. With this PR, in addition to checking the address type in the case:; ```; chain->LoadTree(0);; chain->SetBranchAdress(branch_name, &address);; ```; will also check them in the case:; ```; chain->SetBranchAdress(branch_name, &address);; chain->LoadTree(0);; ```; (yep, it would silently fail before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5721
https://github.com/root-project/root/pull/5725:110,Deployability,configurat,configuration,110,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:154,Deployability,configurat,configuration,154,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:928,Energy Efficiency,reduce,reduce,928,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:110,Modifiability,config,configuration,110,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:154,Modifiability,config,configuration,154,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:899,Performance,Perform,Performance,899,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:911,Performance,optimiz,optimizations,911,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:261,Testability,log,logics,261,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:795,Testability,Test,Tests,795,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5725:871,Usability,clear,clearer,871,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5725
https://github.com/root-project/root/pull/5732:13,Availability,Error,ErrorOut,13,"Even for the ErrorOut case the Transaction should be flagged as beyond; kCompleted, to prevent it from being asserted on as ""we have transaction; without errors that was not committed"" in ~IncrementalParser().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5732
https://github.com/root-project/root/pull/5732:154,Availability,error,errors,154,"Even for the ErrorOut case the Transaction should be flagged as beyond; kCompleted, to prevent it from being asserted on as ""we have transaction; without errors that was not committed"" in ~IncrementalParser().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5732
https://github.com/root-project/root/pull/5732:109,Testability,assert,asserted,109,"Even for the ErrorOut case the Transaction should be flagged as beyond; kCompleted, to prevent it from being asserted on as ""we have transaction; without errors that was not committed"" in ~IncrementalParser().",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5732
https://github.com/root-project/root/pull/5735:0,Deployability,Update,Update,0,Update warning message as suggested by Stephan in https://github.com/root-project/root/pull/5724,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5735
https://github.com/root-project/root/pull/5735:15,Integrability,message,message,15,Update warning message as suggested by Stephan in https://github.com/root-project/root/pull/5724,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5735
https://github.com/root-project/root/pull/5738:89,Modifiability,config,config-from-,89,It generated expected output:; https://root-forum.cern.ch/t/no-python-cmake-flag-in-root-config-from-6-20/39638/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5738
https://github.com/root-project/root/pull/5739:5,Energy Efficiency,reduce,reduces,5,This reduces run times of workspace transformations by factor ~7 for ATLAS workflows with heavy searching.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5739
https://github.com/root-project/root/pull/5740:10,Security,hash,hash-assisted,10,Switch on hash-assisted finding workspaces with 50 or more datasets. Note on the arbitrary 200 elements:; The list will double its size of the initial 200 elements are not enough.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5740
https://github.com/root-project/root/pull/5741:674,Availability,avail,available,674,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5741
https://github.com/root-project/root/pull/5741:944,Availability,failure,failure,944,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5741
https://github.com/root-project/root/pull/5741:89,Integrability,rout,routine,89,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5741
https://github.com/root-project/root/pull/5741:18,Testability,assert,assert,18,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5741
https://github.com/root-project/root/pull/5741:835,Testability,assert,asserting,835,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5741
https://github.com/root-project/root/pull/5744:336,Testability,test,tested,336,"Following objects can be interactively moved now:; `RFrame`, `RHistStatBox`, `RFrameTitle`, RPaletteDrawable`; All position/size changes applied automatically to server side; Introduce moving constrains for `RFrameTitle` and `RPaletteDrawable` - ; they only can be moved/resize in one direction; Main part is in JavaScript code; Can be tested with `tutorials/v7/draw_rh2_colz.cxx` macro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5744
https://github.com/root-project/root/pull/5756:106,Integrability,interface,interface,106,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5756
https://github.com/root-project/root/pull/5756:306,Performance,perform,performance,306,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5756
https://github.com/root-project/root/pull/5756:318,Performance,optimiz,optimization,318,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5756
https://github.com/root-project/root/pull/5756:402,Performance,load,loading,402,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5756
https://github.com/root-project/root/pull/5756:378,Safety,avoid,avoid,378,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5756
https://github.com/root-project/root/pull/5756:463,Safety,avoid,avoid,463,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5756
https://github.com/root-project/root/pull/5757:860,Energy Efficiency,schedul,scheduler,860,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:54,Integrability,Interface,Interface,54,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:688,Performance,load,load,688,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:808,Performance,optimiz,optimizer,808,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:935,Performance,load,loading,935,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1124,Performance,Load,Load,1124,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1331,Performance,Load,Load,1331,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1538,Performance,Load,Load,1538,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:915,Safety,predict,prediction,915,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1214,Safety,predict,prediction,1214,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1421,Safety,predict,prediction,1421,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1628,Safety,predict,prediction,1628,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:887,Security,Validat,Validation,887,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1023,Testability,Test,Tests,1023,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1040,Testability,test,testPyTorchClassification,1040,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1146,Testability,test,test,1146,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1255,Testability,test,testPyTorchMulticlass,1255,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1353,Testability,test,test,1353,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1462,Testability,test,testPyTorchRegression,1462,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1560,Testability,test,test,1560,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:1709,Testability,test,testing,1709,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:132,Usability,feedback,feedback,132,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5757:630,Usability,simpl,simple,630,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5757
https://github.com/root-project/root/pull/5762:26,Integrability,depend,dependencies,26,"In the course of reducing dependencies in `TError.[hxx|cxx]`, replace the `TVirtualMutex` type of `gErrorMutex` by `std::mutex`. Note the other changes. - `gErrorMutex` is not exported anymore (@Axel-Naumann this breaks backwards-compatibility _if_ anyone is actually using the symbol... what do you think?); - `gErrorMutex` is not a pointer anymore but it is a global, though anonymous-namespaced, `std::mutex`; this means init-time construction of a non-PoD type, which might be a problem. We get around taking the big ROOT lock for initializing the pointer though.; - Slight adjustments to the includes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5762
https://github.com/root-project/root/pull/5764:54,Availability,failure,failure,54,"…ent and NumPy. As found out after investigating this failure:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84131/console. PythonX_EXECUTABLE, if set when find_package(PythonX) is called one; first time, is unset if find_package(PythonX) fails when called the; second time (i.e. whether Developmnet or NumPy are not found). To avoid that, as a consequence, PYTHON_EXECUTABLE is not set at all, we; set it (along with other variables) right after the first call to; find_package(PythonX).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5764
https://github.com/root-project/root/pull/5764:452,Modifiability,variab,variables,452,"…ent and NumPy. As found out after investigating this failure:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84131/console. PythonX_EXECUTABLE, if set when find_package(PythonX) is called one; first time, is unset if find_package(PythonX) fails when called the; second time (i.e. whether Developmnet or NumPy are not found). To avoid that, as a consequence, PYTHON_EXECUTABLE is not set at all, we; set it (along with other variables) right after the first call to; find_package(PythonX).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5764
https://github.com/root-project/root/pull/5764:356,Safety,avoid,avoid,356,"…ent and NumPy. As found out after investigating this failure:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84131/console. PythonX_EXECUTABLE, if set when find_package(PythonX) is called one; first time, is unset if find_package(PythonX) fails when called the; second time (i.e. whether Developmnet or NumPy are not found). To avoid that, as a consequence, PYTHON_EXECUTABLE is not set at all, we; set it (along with other variables) right after the first call to; find_package(PythonX).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5764
https://github.com/root-project/root/pull/5769:275,Testability,Test,Test,275,"[ROOT-10810] When RooTreeDataStore is streamed without a TFile (happens; when pickling), a memory-resident tree in RooTreeDataStore fails to; pickle.; It had to be taken out of ROOT's streamer facilities, since it often; exceeds the 1 Gb size limit for streaming operations. Test in [roottest/#530](https://github.com/root-project/roottest/pull/530)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5769
https://github.com/root-project/root/pull/5775:70,Availability,avail,available,70,"When building without root7 but with C++14, RLogger is used.; Make it available to the include directories.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5775
https://github.com/root-project/root/pull/5785:54,Deployability,update,update,54,Use __CLING__ flag to test if interpreter is used and update the help.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5785
https://github.com/root-project/root/pull/5785:22,Testability,test,test,22,Use __CLING__ flag to test if interpreter is used and update the help.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5785
https://github.com/root-project/root/pull/5787:126,Availability,failure,failure,126,"`&obj2 - &obj1` is truncated to integer -- previous logic was assuming floating point values were possible. This fixes a rare failure in `dataframe_snaphot --gtest_filter=""*ClonesArray""` as well as possible crashes in user applications. This fixes ROOT-10822.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5787
https://github.com/root-project/root/pull/5787:52,Testability,log,logic,52,"`&obj2 - &obj1` is truncated to integer -- previous logic was assuming floating point values were possible. This fixes a rare failure in `dataframe_snaphot --gtest_filter=""*ClonesArray""` as well as possible crashes in user applications. This fixes ROOT-10822.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5787
https://github.com/root-project/root/pull/5790:187,Availability,error,error,187,"As pointed out by @bellenot , we need to cover the case in which the specified flags are (wrongly) `-Dpyroot=OFF` and `-Dpyroot_legacy=ON`. The proposed solution in this PR shows a fatal error message saying ""please reconfigure with pyroot=ON too"". Alternatively, we could automatically enable `pyroot` if `pyroot_legacy` has been set to ON. To be discussed with the reviewers. This assumes:; 1. `-Dpyroot=ON` means ""build me PyROOT"".; 2. `-Dpyroot_legacy=ON` means ""from the PyROOTs you have, build me the old one!"". So (1) activates PyROOT and (2) selects which PyROOT to build. Please shout if you have a different point of view.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5790
https://github.com/root-project/root/pull/5790:193,Integrability,message,message,193,"As pointed out by @bellenot , we need to cover the case in which the specified flags are (wrongly) `-Dpyroot=OFF` and `-Dpyroot_legacy=ON`. The proposed solution in this PR shows a fatal error message saying ""please reconfigure with pyroot=ON too"". Alternatively, we could automatically enable `pyroot` if `pyroot_legacy` has been set to ON. To be discussed with the reviewers. This assumes:; 1. `-Dpyroot=ON` means ""build me PyROOT"".; 2. `-Dpyroot_legacy=ON` means ""from the PyROOTs you have, build me the old one!"". So (1) activates PyROOT and (2) selects which PyROOT to build. Please shout if you have a different point of view.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5790
https://github.com/root-project/root/pull/5793:210,Deployability,patch,patch,210,For some common libraries we provide modulemaps such as tinyxml2 and boost. Independently whether implicit or fno-implicit-module-maps is selected we insert an overlay and register the modulemap directly. This patch disables this when fno-implicit-module-maps is chosen. This should resolve ROOT-10803 introduced by root-project/root#5709,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5793
https://github.com/root-project/root/pull/5798:7,Integrability,depend,dependent,7,"When a dependent module has NO_CXXMODULE specified, we do not generate it's .pcm file. . This commit ensures CMake checks for NO_CXXMODULE property for a dependancy. Also specify NO_CXXMODULE for Tree on Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5798
https://github.com/root-project/root/pull/5798:154,Integrability,depend,dependancy,154,"When a dependent module has NO_CXXMODULE specified, we do not generate it's .pcm file. . This commit ensures CMake checks for NO_CXXMODULE property for a dependancy. Also specify NO_CXXMODULE for Tree on Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5798
https://github.com/root-project/root/pull/5800:22,Availability,error,error,22,"This commit fixes the error received on building MathCore.pcm on Windows. ```; In file included from input_line_16:9:; In file included from C:/root-build/include\Fit/FitConfig.h:23:; C:/root-build/include\TMath.h(782,13): error G30564CF7: use of undeclared identifier '_finite' [C:\root-build\math\math; core\G__MathCore.vcxproj]; { return finite(x); }; ^; C:/root-build/include\TMath.h:571:22: note: expanded from macro 'finite'; # define finite _finite; ^; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5800
https://github.com/root-project/root/pull/5800:223,Availability,error,error,223,"This commit fixes the error received on building MathCore.pcm on Windows. ```; In file included from input_line_16:9:; In file included from C:/root-build/include\Fit/FitConfig.h:23:; C:/root-build/include\TMath.h(782,13): error G30564CF7: use of undeclared identifier '_finite' [C:\root-build\math\math; core\G__MathCore.vcxproj]; { return finite(x); }; ^; C:/root-build/include\TMath.h:571:22: note: expanded from macro 'finite'; # define finite _finite; ^; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5800
https://github.com/root-project/root/pull/5807:75,Testability,test,test,75,"Small quality of life improvement, non-functional change. ; This helps the test suite fail fast.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5807
https://github.com/root-project/root/pull/5812:93,Availability,error,error,93,"Provide assign operator for the point_t class which have copy constructor; Fixes compilation error when trying to compile with cxxmodules=ON,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5812
https://github.com/root-project/root/pull/5819:614,Performance,load,load,614,"clang might need to find a definition, that ""we"" might have.; But we need to find it based on a type name from clang, from a fwd decl;; or (as in ROOT-10804) based on a typename-from-typeid operation.; So register that as an alias!. The normalized-name-as-known-to-ROOT and typeid-name can be different,; for instance for inline namespaces: stripped by ROOT, kept by typeid. ROOT-10804 has a complex case where a lookup of a template argument failed; because it involves an inline namespace, and LHCb uses typeid demangling.; LHCb's case needed a nested name from a type (`LHCb::Event::v1::Track`); that failed to load because `v1` is an inline namespace, thus failing; instantiation of `KeyedContainer<LHCb::Event::v1::Track,Containers::KeyedObjectManager<Containers::hashmap> >` and making it invalid.; The transaction unloading then fails to completely remove this instantiation; (an unrelated bug), such that the remainders of the invalid decl are picked; up by a subsequent template instantiation which then asserts because of the; incomplete (invalid) declaration. We use the mangle/demangle trick from rootcling.; Now that multiple locations need it, just store it with the AnnotatedRecordDecl.; It will be needed for most classes; the overhead should be bearable. (cherry picked from commit d9e819b82632cf02b3aaa251f5922b457b41624e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5819
https://github.com/root-project/root/pull/5819:769,Security,hash,hashmap,769,"clang might need to find a definition, that ""we"" might have.; But we need to find it based on a type name from clang, from a fwd decl;; or (as in ROOT-10804) based on a typename-from-typeid operation.; So register that as an alias!. The normalized-name-as-known-to-ROOT and typeid-name can be different,; for instance for inline namespaces: stripped by ROOT, kept by typeid. ROOT-10804 has a complex case where a lookup of a template argument failed; because it involves an inline namespace, and LHCb uses typeid demangling.; LHCb's case needed a nested name from a type (`LHCb::Event::v1::Track`); that failed to load because `v1` is an inline namespace, thus failing; instantiation of `KeyedContainer<LHCb::Event::v1::Track,Containers::KeyedObjectManager<Containers::hashmap> >` and making it invalid.; The transaction unloading then fails to completely remove this instantiation; (an unrelated bug), such that the remainders of the invalid decl are picked; up by a subsequent template instantiation which then asserts because of the; incomplete (invalid) declaration. We use the mangle/demangle trick from rootcling.; Now that multiple locations need it, just store it with the AnnotatedRecordDecl.; It will be needed for most classes; the overhead should be bearable. (cherry picked from commit d9e819b82632cf02b3aaa251f5922b457b41624e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5819
https://github.com/root-project/root/pull/5819:1013,Testability,assert,asserts,1013,"clang might need to find a definition, that ""we"" might have.; But we need to find it based on a type name from clang, from a fwd decl;; or (as in ROOT-10804) based on a typename-from-typeid operation.; So register that as an alias!. The normalized-name-as-known-to-ROOT and typeid-name can be different,; for instance for inline namespaces: stripped by ROOT, kept by typeid. ROOT-10804 has a complex case where a lookup of a template argument failed; because it involves an inline namespace, and LHCb uses typeid demangling.; LHCb's case needed a nested name from a type (`LHCb::Event::v1::Track`); that failed to load because `v1` is an inline namespace, thus failing; instantiation of `KeyedContainer<LHCb::Event::v1::Track,Containers::KeyedObjectManager<Containers::hashmap> >` and making it invalid.; The transaction unloading then fails to completely remove this instantiation; (an unrelated bug), such that the remainders of the invalid decl are picked; up by a subsequent template instantiation which then asserts because of the; incomplete (invalid) declaration. We use the mangle/demangle trick from rootcling.; Now that multiple locations need it, just store it with the AnnotatedRecordDecl.; It will be needed for most classes; the overhead should be bearable. (cherry picked from commit d9e819b82632cf02b3aaa251f5922b457b41624e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5819
https://github.com/root-project/root/pull/5829:18,Performance,load,loading,18,"Fixes unnecessary loading of (wrong) cppyy library because a symbol named ""_PyExc_SyntaxError"" cannot be found by dlsym.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5829
https://github.com/root-project/root/pull/5830:94,Energy Efficiency,green,green,94,"This PR introduces: ; * Add SetRGBA function with a float alpha argument.; * Change Color1 to green. So that Box1 border could be observed.; * Change Color2 opacity to 0.7, and Box2 border width to 10. So that the change in Box2 border style could be observed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5830
https://github.com/root-project/root/pull/5833:79,Availability,error,errors,79,Some of VC methods are marked as deprecated and causing compiler; warnings (or errors) even when methods are not used; Should solve already reported by @lmoneta here https://github.com/VcDevel/Vc/issues/253,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5833
https://github.com/root-project/root/pull/5834:10,Modifiability,variab,variable,10,llvm_vers variable required earlier for linux platform initialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5834
https://github.com/root-project/root/pull/5840:63,Performance,load,load,63,Solves problem with gcc10 warnings. Temporary skip CI to avoid load on Jenkins nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5840
https://github.com/root-project/root/pull/5840:57,Safety,avoid,avoid,57,Solves problem with gcc10 warnings. Temporary skip CI to avoid load on Jenkins nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5840
https://github.com/root-project/root/pull/5841:28,Deployability,update,updates,28,Collection of documentation updates that accumulated over a few weeks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5841
https://github.com/root-project/root/pull/5844:493,Availability,error,error,493,"Fix ROOT-10837 (and technically it is a completion of the fix for ROOT-9393).; See allow commit f8897bb49c2fc81e875a7fd70dec9f1f714e6398 and 6ad1a98455bec01ccfce6ea9ddde62154bedf1a4. Seen with CMS NanoAOD files: https://root-forum.cern.ch/t/merge-nanoaod-root-files/39707/13; When the files have several array branches using the same ""leaf count"" branch and the maximum array size increase from file to file, only the memory allocated for the ""first"" array is extended. This results in memory error for the other arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5844
https://github.com/root-project/root/pull/5844:425,Energy Efficiency,allocate,allocated,425,"Fix ROOT-10837 (and technically it is a completion of the fix for ROOT-9393).; See allow commit f8897bb49c2fc81e875a7fd70dec9f1f714e6398 and 6ad1a98455bec01ccfce6ea9ddde62154bedf1a4. Seen with CMS NanoAOD files: https://root-forum.cern.ch/t/merge-nanoaod-root-files/39707/13; When the files have several array branches using the same ""leaf count"" branch and the maximum array size increase from file to file, only the memory allocated for the ""first"" array is extended. This results in memory error for the other arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5844
https://github.com/root-project/root/pull/5844:460,Modifiability,extend,extended,460,"Fix ROOT-10837 (and technically it is a completion of the fix for ROOT-9393).; See allow commit f8897bb49c2fc81e875a7fd70dec9f1f714e6398 and 6ad1a98455bec01ccfce6ea9ddde62154bedf1a4. Seen with CMS NanoAOD files: https://root-forum.cern.ch/t/merge-nanoaod-root-files/39707/13; When the files have several array branches using the same ""leaf count"" branch and the maximum array size increase from file to file, only the memory allocated for the ""first"" array is extended. This results in memory error for the other arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5844
https://github.com/root-project/root/pull/5845:239,Availability,Error,Error,239,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5845
https://github.com/root-project/root/pull/5845:298,Availability,Error,Error,298,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5845
https://github.com/root-project/root/pull/5845:490,Availability,Error,Error,490,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5845
https://github.com/root-project/root/pull/5845:37,Testability,test,tested,37,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5845
https://github.com/root-project/root/pull/5848:222,Availability,down,down,222,"This PR implements an iterator over an `NTuple's` field descriptors (i.e. field metadata). It is a building block for the upcoming NTuple merger algorithm by allowing comparison between two `NTuples`. This PR is a slimmed down version of PR #5768. . **Edit**: Users can optionally sort the NTuple iterator range, (e.g. field names by alphabetical order) with arbitrary comparison functions (see e05a85b). . <details>; <summary>Notes on previous sort approach</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5848
https://github.com/root-project/root/pull/5848:725,Energy Efficiency,adapt,adapter,725,"This PR implements an iterator over an `NTuple's` field descriptors (i.e. field metadata). It is a building block for the upcoming NTuple merger algorithm by allowing comparison between two `NTuples`. This PR is a slimmed down version of PR #5768. . **Edit**: Users can optionally sort the NTuple iterator range, (e.g. field names by alphabetical order) with arbitrary comparison functions (see e05a85b). . <details>; <summary>Notes on previous sort approach</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5848
https://github.com/root-project/root/pull/5848:725,Integrability,adapter,adapter,725,"This PR implements an iterator over an `NTuple's` field descriptors (i.e. field metadata). It is a building block for the upcoming NTuple merger algorithm by allowing comparison between two `NTuples`. This PR is a slimmed down version of PR #5768. . **Edit**: Users can optionally sort the NTuple iterator range, (e.g. field names by alphabetical order) with arbitrary comparison functions (see e05a85b). . <details>; <summary>Notes on previous sort approach</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5848
https://github.com/root-project/root/pull/5848:725,Modifiability,adapt,adapter,725,"This PR implements an iterator over an `NTuple's` field descriptors (i.e. field metadata). It is a building block for the upcoming NTuple merger algorithm by allowing comparison between two `NTuples`. This PR is a slimmed down version of PR #5768. . **Edit**: Users can optionally sort the NTuple iterator range, (e.g. field names by alphabetical order) with arbitrary comparison functions (see e05a85b). . <details>; <summary>Notes on previous sort approach</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5848
https://github.com/root-project/root/pull/5855:367,Availability,Error,ErrorIgnoreLevel,367,"In preparation of moving TError to foundation, this PR removes the direct use of gEnv and gSystem from TError. The functionality is implemented by helper functions instead, which are registered and de-registered upon creation and destruction gEnv and gSystem. The three tasks implemented by helpers are. - Read the ROOT environment in order to get the value of `Root.ErrorIgnoreLevel`; - Get the last system error message; - Abort the process",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5855
https://github.com/root-project/root/pull/5855:408,Availability,error,error,408,"In preparation of moving TError to foundation, this PR removes the direct use of gEnv and gSystem from TError. The functionality is implemented by helper functions instead, which are registered and de-registered upon creation and destruction gEnv and gSystem. The three tasks implemented by helpers are. - Read the ROOT environment in order to get the value of `Root.ErrorIgnoreLevel`; - Get the last system error message; - Abort the process",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5855
https://github.com/root-project/root/pull/5855:414,Integrability,message,message,414,"In preparation of moving TError to foundation, this PR removes the direct use of gEnv and gSystem from TError. The functionality is implemented by helper functions instead, which are registered and de-registered upon creation and destruction gEnv and gSystem. The three tasks implemented by helpers are. - Read the ROOT environment in order to get the value of `Root.ErrorIgnoreLevel`; - Get the last system error message; - Abort the process",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5855
https://github.com/root-project/root/pull/5855:425,Safety,Abort,Abort,425,"In preparation of moving TError to foundation, this PR removes the direct use of gEnv and gSystem from TError. The functionality is implemented by helper functions instead, which are registered and de-registered upon creation and destruction gEnv and gSystem. The three tasks implemented by helpers are. - Read the ROOT environment in order to get the value of `Root.ErrorIgnoreLevel`; - Get the last system error message; - Abort the process",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5855
https://github.com/root-project/root/pull/5860:164,Integrability,depend,dependency,164,"Fix stressRooFit test #4, a fit of a beta pdf, avoiding the x=0 point where the pdf diverges for some parameter values. This fixes ROOT-10834. This PR fixes also a dependency issue in building test with make in both stressRooFit and StressRooStats",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5860
https://github.com/root-project/root/pull/5860:47,Safety,avoid,avoiding,47,"Fix stressRooFit test #4, a fit of a beta pdf, avoiding the x=0 point where the pdf diverges for some parameter values. This fixes ROOT-10834. This PR fixes also a dependency issue in building test with make in both stressRooFit and StressRooStats",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5860
https://github.com/root-project/root/pull/5860:17,Testability,test,test,17,"Fix stressRooFit test #4, a fit of a beta pdf, avoiding the x=0 point where the pdf diverges for some parameter values. This fixes ROOT-10834. This PR fixes also a dependency issue in building test with make in both stressRooFit and StressRooStats",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5860
https://github.com/root-project/root/pull/5860:193,Testability,test,test,193,"Fix stressRooFit test #4, a fit of a beta pdf, avoiding the x=0 point where the pdf diverges for some parameter values. This fixes ROOT-10834. This PR fixes also a dependency issue in building test with make in both stressRooFit and StressRooStats",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5860
https://github.com/root-project/root/pull/5863:55,Testability,test,test,55,Reference guide version changer. first try. Needs more test and tuning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5863
https://github.com/root-project/root/pull/5863:10,Usability,guid,guide,10,Reference guide version changer. first try. Needs more test and tuning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5863
https://github.com/root-project/root/pull/5864:53,Availability,failure,failure,53,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5864
https://github.com/root-project/root/pull/5864:278,Performance,Load,Load,278,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5864
https://github.com/root-project/root/pull/5864:338,Performance,load,loaded,338,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5864
https://github.com/root-project/root/pull/5864:762,Performance,load,loadling,762,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5864
https://github.com/root-project/root/pull/5865:105,Energy Efficiency,allocate,allocated,105,"Since RooDataSet and RooArgSet use their own operator new, IsOnHeap was; returning false. Now, memory is allocated using TStorage, which; correctly sets the kIsOnHeap bit if necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5865
https://github.com/root-project/root/pull/5866:105,Energy Efficiency,allocate,allocated,105,"Since RooDataSet and RooArgSet use their own operator new, IsOnHeap was; returning false. Now, memory is allocated using TStorage, which; correctly sets the kIsOnHeap bit if necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5866
https://github.com/root-project/root/pull/5867:104,Availability,error,error,104,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5867
https://github.com/root-project/root/pull/5867:247,Availability,Failure,Failure,247,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5867
https://github.com/root-project/root/pull/5867:78,Testability,test,test,78,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5867
https://github.com/root-project/root/pull/5867:212,Testability,test,test,212,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5867
https://github.com/root-project/root/pull/5867:217,Testability,test,testHypoTestInvResult,217,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5867
https://github.com/root-project/root/pull/5872:123,Availability,error,error,123,"For example when a user defines a function with the name ""f1gaus"" and then reuses that name it could cause in same case an error parsing the expression.; Example :; ```; TF1 f1(""f1gaus"",""gaus"");; TF1 f2(""f2gaus"",""f1gaus+gaus(3)"");; ```; If the function name is for example ""fgaus"" it was working before, but not if a character number is used before the pre-defined function name such as ""f1gaus"". Add also a test for parsing these cases in TFormulaParsingTest. This commit fixes ROOT-10815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5872
https://github.com/root-project/root/pull/5872:408,Testability,test,test,408,"For example when a user defines a function with the name ""f1gaus"" and then reuses that name it could cause in same case an error parsing the expression.; Example :; ```; TF1 f1(""f1gaus"",""gaus"");; TF1 f2(""f2gaus"",""f1gaus+gaus(3)"");; ```; If the function name is for example ""fgaus"" it was working before, but not if a character number is used before the pre-defined function name such as ""f1gaus"". Add also a test for parsing these cases in TFormulaParsingTest. This commit fixes ROOT-10815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5872
https://github.com/root-project/root/pull/5874:7,Security,authenticat,authentication,7,"We see authentication issues with the builtin client, see https://cern.service-now.com/service-portal?id=ticket&table=incident&sys_id=8cfde578db0d50d0006fd9f9f49619e7&view=sp; The hope is that recent xrootd changes might solve those.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5874
https://github.com/root-project/root/pull/5875:15,Deployability,release,release,15,Two tweaks for release notes. [Skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5875
https://github.com/root-project/root/pull/5879:237,Testability,test,test,237,"Fixes ROOT-10856 by keeping track of field names and throwing an exception if there's a name conflict. . Edit: expanded PR scope to ensure field names are valid as well as unique (e.g. no empty string). . ~~**todo**~~ **done:** add unit test per method to ensure technique works:; - [x] `std::shared_ptr<T> MakeField(std::string_view fieldName, ArgsT&&... args)`; - [x] `void AddField(std::string_view fieldName, T* fromWhere)`; - [x] `void AddField(std::unique_ptr<Detail::RFieldBase> field)`; - [x] `std::shared_ptr<RCollectionNTuple> MakeCollection(std::string_view fieldName, std::unique_ptr<RNTupleModel> collectionModel)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5879
https://github.com/root-project/root/pull/5884:36,Performance,optimiz,optimization,36,"The global module index (GMI) is an optimization which hides the introduced by clang overhead when pre-loading the C++ modules at startup.; ; The GMI represents a mapping between an identifier and a set of modules which contain this indentifier. This mean that if we TH1 is undeclared the GMI will load all modules which contain this identifier which is usually suboptimal, too.; ; The semantic GMI maps identifiers only to modules which contain a definition of the entity behind the identifier. For cases such as typedefs where the entity introduces a synonym (rather than declaration) we map the first module we encounter. For namespaces we add all modules which has a namespace partition. The namespace case is still suboptimal and further improved by inspecting what exactly is being looked up in the namespace by the qualified lookup facilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5884
https://github.com/root-project/root/pull/5884:103,Performance,load,loading,103,"The global module index (GMI) is an optimization which hides the introduced by clang overhead when pre-loading the C++ modules at startup.; ; The GMI represents a mapping between an identifier and a set of modules which contain this indentifier. This mean that if we TH1 is undeclared the GMI will load all modules which contain this identifier which is usually suboptimal, too.; ; The semantic GMI maps identifiers only to modules which contain a definition of the entity behind the identifier. For cases such as typedefs where the entity introduces a synonym (rather than declaration) we map the first module we encounter. For namespaces we add all modules which has a namespace partition. The namespace case is still suboptimal and further improved by inspecting what exactly is being looked up in the namespace by the qualified lookup facilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5884
https://github.com/root-project/root/pull/5884:298,Performance,load,load,298,"The global module index (GMI) is an optimization which hides the introduced by clang overhead when pre-loading the C++ modules at startup.; ; The GMI represents a mapping between an identifier and a set of modules which contain this indentifier. This mean that if we TH1 is undeclared the GMI will load all modules which contain this identifier which is usually suboptimal, too.; ; The semantic GMI maps identifiers only to modules which contain a definition of the entity behind the identifier. For cases such as typedefs where the entity introduces a synonym (rather than declaration) we map the first module we encounter. For namespaces we add all modules which has a namespace partition. The namespace case is still suboptimal and further improved by inspecting what exactly is being looked up in the namespace by the qualified lookup facilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5884
https://github.com/root-project/root/pull/5886:273,Modifiability,variab,variables,273,"This fixes this issue:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/6686/console. by setting `Python${PYTHON_VERSION_MAJOR}_Interpreter_Development_FOUND` for CMake < 3.14. Moreover, we add a missing protection when setting the development variables (only if the Python libs were found, they have to be set).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5886
https://github.com/root-project/root/pull/5889:121,Modifiability,variab,variable,121,"Made the TMVA build work correctly when `builtin_gsl` is set to `True`. Had to make sure that the `${GSL_CBLAS_LIBRARY}` variable is set in the same way in which [FindGSL.cmake](https://cmake.org/cmake/help/latest/module/FindGSL.html) would set it, and that TMVA would explicitly wait for the completion of the GSL build. This is to fix the issue described in: https://sft.its.cern.ch/jira/browse/ROOT-10862",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5889
https://github.com/root-project/root/pull/5890:101,Modifiability,inherit,inheriting,101,"This is sadly more verbose, but I thought I'd bring all the other iterators in line with C++17 where inheriting from std::iterator is deprecated (https://en.cppreference.com/w/cpp/iterator/iterator). ; I mostly followed the guidelines here https://www.fluentcpp.com/2018/05/08/std-iterator-deprecated/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5890
https://github.com/root-project/root/pull/5890:224,Usability,guid,guidelines,224,"This is sadly more verbose, but I thought I'd bring all the other iterators in line with C++17 where inheriting from std::iterator is deprecated (https://en.cppreference.com/w/cpp/iterator/iterator). ; I mostly followed the guidelines here https://www.fluentcpp.com/2018/05/08/std-iterator-deprecated/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5890
https://github.com/root-project/root/pull/5892:198,Availability,down,downstream,198,"- RootMacros.cmake: set the correct PYTHONPATH (${ROOTSYS}/bin on Windows); - CPyCppyy/CMakeLists.txt: export all symbols and set correct prefix (lib) and suffix (.pyd); - MemoryRegulator[.cxx/.h]: downstream cppyy changes [`move hook setting to .cxx`](https://bitbucket.org/wlav/cpycppyy/commits/24ac364); - cppyy-backend/CMakeLists.txt: export all symbols; - pythonizations/CMakeLists.txt: export all symbols, set correct suffix (.pyd) and link against Python library (cannot have unresolved symbols on Windows); - PyzPythonHelpers.cxx, RDataFramePyz.cxx, RVecPyz.cxx, TPyClassGenerator.cxx, and TPython.cxx: Use proper forward declarations and fix pointer formatting; - pythonizations/test/CMakeLists.txt: disable failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5892
https://github.com/root-project/root/pull/5892:688,Testability,test,test,688,"- RootMacros.cmake: set the correct PYTHONPATH (${ROOTSYS}/bin on Windows); - CPyCppyy/CMakeLists.txt: export all symbols and set correct prefix (lib) and suffix (.pyd); - MemoryRegulator[.cxx/.h]: downstream cppyy changes [`move hook setting to .cxx`](https://bitbucket.org/wlav/cpycppyy/commits/24ac364); - cppyy-backend/CMakeLists.txt: export all symbols; - pythonizations/CMakeLists.txt: export all symbols, set correct suffix (.pyd) and link against Python library (cannot have unresolved symbols on Windows); - PyzPythonHelpers.cxx, RDataFramePyz.cxx, RVecPyz.cxx, TPyClassGenerator.cxx, and TPython.cxx: Use proper forward declarations and fix pointer formatting; - pythonizations/test/CMakeLists.txt: disable failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5892
https://github.com/root-project/root/pull/5892:725,Testability,test,tests,725,"- RootMacros.cmake: set the correct PYTHONPATH (${ROOTSYS}/bin on Windows); - CPyCppyy/CMakeLists.txt: export all symbols and set correct prefix (lib) and suffix (.pyd); - MemoryRegulator[.cxx/.h]: downstream cppyy changes [`move hook setting to .cxx`](https://bitbucket.org/wlav/cpycppyy/commits/24ac364); - cppyy-backend/CMakeLists.txt: export all symbols; - pythonizations/CMakeLists.txt: export all symbols, set correct suffix (.pyd) and link against Python library (cannot have unresolved symbols on Windows); - PyzPythonHelpers.cxx, RDataFramePyz.cxx, RVecPyz.cxx, TPyClassGenerator.cxx, and TPython.cxx: Use proper forward declarations and fix pointer formatting; - pythonizations/test/CMakeLists.txt: disable failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5892
https://github.com/root-project/root/pull/5893:87,Modifiability,config,config,87,```; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python-version; 3.8.3; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python2-version; 2.7.18; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python3-version; 3.8.3; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5893
https://github.com/root-project/root/pull/5893:201,Modifiability,config,config,201,```; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python-version; 3.8.3; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python2-version; 2.7.18; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python3-version; 3.8.3; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5893
https://github.com/root-project/root/pull/5893:317,Modifiability,config,config,317,```; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python-version; 3.8.3; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python2-version; 2.7.18; oksana@oksana-dellxps  ~/CERN_sources/root/builds   fix-python-output ●  root-config --python3-version; 3.8.3; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5893
https://github.com/root-project/root/pull/5897:544,Availability,mask,masked,544,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5897
https://github.com/root-project/root/pull/5897:603,Deployability,Update,Update,603,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5897
https://github.com/root-project/root/pull/5897:377,Modifiability,config,configure,377,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5897
https://github.com/root-project/root/pull/5897:474,Safety,avoid,avoid,474,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5897
https://github.com/root-project/root/pull/5899:95,Safety,avoid,avoids,95,Fix bug ROOT-10854. WHen a parameter is bound don;t go in the regions outside the bounds. This avoids that a new minimum is found. ; Add also a protection to avoid an infinite loop in the new minimum iterative search. Add fix also for the related issue ROOT-10835. In that case avoid 0/0 division in TMInuit when parameter is bounded and minimum is at 0 and bound is 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5899
https://github.com/root-project/root/pull/5899:158,Safety,avoid,avoid,158,Fix bug ROOT-10854. WHen a parameter is bound don;t go in the regions outside the bounds. This avoids that a new minimum is found. ; Add also a protection to avoid an infinite loop in the new minimum iterative search. Add fix also for the related issue ROOT-10835. In that case avoid 0/0 division in TMInuit when parameter is bounded and minimum is at 0 and bound is 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5899
https://github.com/root-project/root/pull/5899:278,Safety,avoid,avoid,278,Fix bug ROOT-10854. WHen a parameter is bound don;t go in the regions outside the bounds. This avoids that a new minimum is found. ; Add also a protection to avoid an infinite loop in the new minimum iterative search. Add fix also for the related issue ROOT-10835. In that case avoid 0/0 division in TMInuit when parameter is bounded and minimum is at 0 and bound is 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5899
https://github.com/root-project/root/pull/5902:186,Availability,failure,failures,186,"The replacements removes the -Werror option for externals, which is intended.; However, it also replaces e.g. -Werror=format-security with =format-security, which results in compilation failures due to the unknown option =format-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5902
https://github.com/root-project/root/pull/5902:125,Security,secur,security,125,"The replacements removes the -Werror option for externals, which is intended.; However, it also replaces e.g. -Werror=format-security with =format-security, which results in compilation failures due to the unknown option =format-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5902
https://github.com/root-project/root/pull/5902:147,Security,secur,security,147,"The replacements removes the -Werror option for externals, which is intended.; However, it also replaces e.g. -Werror=format-security with =format-security, which results in compilation failures due to the unknown option =format-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5902
https://github.com/root-project/root/pull/5902:229,Security,secur,security,229,"The replacements removes the -Werror option for externals, which is intended.; However, it also replaces e.g. -Werror=format-security with =format-security, which results in compilation failures due to the unknown option =format-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5902
https://github.com/root-project/root/pull/5903:11,Deployability,update,update,11,This is an update to #5798 which had to be reverted due to its incompatibility with CMake 3.12 and below. . @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5903
https://github.com/root-project/root/pull/5906:523,Deployability,install,installation,523,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:62,Modifiability,variab,variables,62,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:219,Modifiability,config,config,219,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:228,Modifiability,config,config,228,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:476,Modifiability,variab,variable,476,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:714,Modifiability,config,config,714,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:723,Modifiability,config,config,723,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:915,Modifiability,variab,variables,915,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:12,Performance,cache,cache,12,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:402,Performance,cache,cached,402,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:564,Performance,cache,cache,564,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5906:896,Performance,cache,cache,896,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5906
https://github.com/root-project/root/pull/5907:138,Deployability,install,installed,138,From Guilherme. Applies to legacy PyROOT. To do:; - [ ] check whether standalone `import cppyy` still works when ROOT's python things are installed in site-packages rather than in ROOTLIBDIR; - [ ] check that TPython still finds libcppyy.so,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5907
https://github.com/root-project/root/pull/5910:170,Testability,test,test,170,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5910
https://github.com/root-project/root/pull/5910:245,Testability,test,tests,245,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5910
https://github.com/root-project/root/pull/5910:326,Testability,test,test,326,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5910
https://github.com/root-project/root/pull/5910:72,Usability,simpl,simplify,72,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5910
https://github.com/root-project/root/pull/5911:99,Availability,error,error,99,This PR starts replacing `R__ASSERT` checks in fallible functions (e.g. IO) with the new `RResult` error sum type introduced in https://github.com/root-project/root/pull/4683. . I started with `RMiniFileReader::GetNTuple` because it's an expected error case that an `NTuple` of a certain name doesn't exist in the given file (I've certainly done it a few times).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5911
https://github.com/root-project/root/pull/5911:247,Availability,error,error,247,This PR starts replacing `R__ASSERT` checks in fallible functions (e.g. IO) with the new `RResult` error sum type introduced in https://github.com/root-project/root/pull/4683. . I started with `RMiniFileReader::GetNTuple` because it's an expected error case that an `NTuple` of a certain name doesn't exist in the given file (I've certainly done it a few times).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5911
https://github.com/root-project/root/pull/5912:44,Modifiability,variab,variable,44,"Had to make sure that the GSL_CBLAS_LIBRARY variable is set in the; same way in which FindGSL.cmake would set it, and that TMVA would; explicitly wait for the completion of the GSL build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5912
https://github.com/root-project/root/pull/5913:421,Deployability,update,updated,421,"- Code in the df103 tutorial notebooks [here](https://nbviewer.jupyter.org/url/root.cern/doc/master/notebooks/df103_NanoAODHiggsAnalysis.C.nbconvert.ipynb) doesn't compile, since `converttonotebook.py` only recognises functions with a few hard-coded return types. Here, this limitation is lifted (or at least a broader range of functions is recognised ...).; - Using the new functionality, some RooFit tutorials could be updated.; - And a new tutorial was added to clarify [ROOT-8440]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5913
https://github.com/root-project/root/pull/5915:37,Modifiability,config,configure,37,"Via `RHist2Drawable` methods one can configure options:; * `Color()` (2d, default); * `Scatter()` (2d); * `Text()` (2d); * `Contour()` (2d and 3d); * `Surface()` (3d); * `Lego()` (3d). With `RHist3Drawable` following draw options supported; * `Box(0)`, `Box(1)`, `Box(2)`; * `Sphere(0)`, `Sphere(1)`; * `Color()`; * `Scatter()`. Fix problem with I/O for `RH3` class - add missing entries in LinkDef.h. ![Canvas](https://user-images.githubusercontent.com/4936580/85428560-aad75680-b57d-11ea-9a4f-b0544c5159c0.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5915
https://github.com/root-project/root/pull/5919:396,Availability,down,download,396,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5919
https://github.com/root-project/root/pull/5919:409,Deployability,install,install,409,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5919
https://github.com/root-project/root/pull/5919:474,Deployability,install,install,474,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5919
https://github.com/root-project/root/pull/5919:98,Integrability,interface,interface,98,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5919
https://github.com/root-project/root/pull/5919:181,Integrability,interface,interface,181,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5919
https://github.com/root-project/root/pull/5919:640,Performance,perform,performance,640,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5919
https://github.com/root-project/root/pull/5921:0,Modifiability,Config,Configure,0,"Configure with `cmake -DBUILD_SHARED_LIBS=OFF -Dminimal=ON -Dshared=OFF ...`. Note that the changes here are not meant to be merged, this is only for testing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5921
https://github.com/root-project/root/pull/5921:150,Testability,test,testing,150,"Configure with `cmake -DBUILD_SHARED_LIBS=OFF -Dminimal=ON -Dshared=OFF ...`. Note that the changes here are not meant to be merged, this is only for testing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5921
https://github.com/root-project/root/pull/5922:73,Modifiability,layers,layers,73,Replaces a few infrastructure bits that have ROOT internal compatibility layers with C++ standard facilities. Namely:. - `[v]snprintf`; - thread local storage; - varargs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5922
https://github.com/root-project/root/pull/5924:389,Safety,Abort,Aborted,389,"When deleting a TTree, we delete the list of friends and aliases. Their deletion is broadcasted; through RecursiveRemove which eventually reached back to the original TTree.; And if TTree::RecursiveRemove then tries to call RecursiveRemove on those deleted list ... then; disaster follows ... in the form of:. ```; pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5924
https://github.com/root-project/root/pull/5925:255,Availability,avail,available,255,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5925
https://github.com/root-project/root/pull/5925:32,Deployability,patch,patch,32,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5925
https://github.com/root-project/root/pull/5925:146,Deployability,patch,patches,146,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5925
https://github.com/root-project/root/pull/5925:226,Integrability,wrap,wrapper,226,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5925
https://github.com/root-project/root/pull/5926:334,Availability,Error,Error,334,"Improve class design around `RAttrBase` classes. ; Introduce `RAttrValue<typename T>` template class to access single value from attributes.; Use it in all attributes classes and existing drawable classes. ; Let specify in single place type, string name and default value for each attribute. Add following draw options for `RH1`:; * `Error()`; * `Text()`; * `Marker()`; * `Bar()`; * `Line()`; * `Lego()`. Add `Arrow()` draw option for `RH2`. Fix problem with 3D drawings - objects which position related to frame (which is not visible in 3D) now positioned and moved correctly after pad resize. Provide draw options overview macros: `draw_rh1.cxx` (see attached image), `draw_rh2.cxx`, `draw_rh3.cxx`. ![draw_rh1](https://user-images.githubusercontent.com/4936580/85689202-b7b98e80-b6d2-11ea-82fe-2a3b33fa0b37.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5926
https://github.com/root-project/root/pull/5926:104,Security,access,access,104,"Improve class design around `RAttrBase` classes. ; Introduce `RAttrValue<typename T>` template class to access single value from attributes.; Use it in all attributes classes and existing drawable classes. ; Let specify in single place type, string name and default value for each attribute. Add following draw options for `RH1`:; * `Error()`; * `Text()`; * `Marker()`; * `Bar()`; * `Line()`; * `Lego()`. Add `Arrow()` draw option for `RH2`. Fix problem with 3D drawings - objects which position related to frame (which is not visible in 3D) now positioned and moved correctly after pad resize. Provide draw options overview macros: `draw_rh1.cxx` (see attached image), `draw_rh2.cxx`, `draw_rh3.cxx`. ![draw_rh1](https://user-images.githubusercontent.com/4936580/85689202-b7b98e80-b6d2-11ea-82fe-2a3b33fa0b37.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5926
https://github.com/root-project/root/pull/5927:33,Deployability,Update,Update,33,Short cut to call Modified() and Update() in a single call and on Mac perform an additional ProcessEvents().; This will solve https://sft.its.cern.ch/jira/browse/ROOT-9200,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5927
https://github.com/root-project/root/pull/5927:70,Performance,perform,perform,70,Short cut to call Modified() and Update() in a single call and on Mac perform an additional ProcessEvents().; This will solve https://sft.its.cern.ch/jira/browse/ROOT-9200,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5927
https://github.com/root-project/root/pull/5930:10,Deployability,configurat,configuration-time,10,Rely on a configuration-time setting to decide whether experimental PyROOT is ON and set the environment accordingly. More info about the issue here:. https://sft.its.cern.ch/jira/browse/ROOT-10873,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5930
https://github.com/root-project/root/pull/5930:10,Modifiability,config,configuration-time,10,Rely on a configuration-time setting to decide whether experimental PyROOT is ON and set the environment accordingly. More info about the issue here:. https://sft.its.cern.ch/jira/browse/ROOT-10873,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5930
https://github.com/root-project/root/pull/5931:357,Testability,test,test,357,"panda 2.2 used to be the more recent version and a special check was needed in case a version older that 2.2 was used.; Some options were backward incompatible between version older that 2.2 and version 2.2. Now on the jenkins machine used to build the guides, the pandoc version is 2.5 so we do not need to check on pandoc version anymore. And the way the test was done produced a wrong set of options for versions above 2.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5931
https://github.com/root-project/root/pull/5931:253,Usability,guid,guides,253,"panda 2.2 used to be the more recent version and a special check was needed in case a version older that 2.2 was used.; Some options were backward incompatible between version older that 2.2 and version 2.2. Now on the jenkins machine used to build the guides, the pandoc version is 2.5 so we do not need to check on pandoc version anymore. And the way the test was done produced a wrong set of options for versions above 2.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5931
https://github.com/root-project/root/pull/5934:581,Energy Efficiency,adapt,adapter,581,"This PR makes it easier to construct valid `RFieldDescriptors`. **Edit:** The initial version of this PR removed the move-only semantics on field descriptors. Instead, I added a `Clone` method for field descriptors. . <details>; <summary>Discarded rationale for reintroducing copy constructor for field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:581,Integrability,adapter,adapter,581,"This PR makes it easier to construct valid `RFieldDescriptors`. **Edit:** The initial version of this PR removed the move-only semantics on field descriptors. Instead, I added a `Clone` method for field descriptors. . <details>; <summary>Discarded rationale for reintroducing copy constructor for field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:581,Modifiability,adapt,adapter,581,"This PR makes it easier to construct valid `RFieldDescriptors`. **Edit:** The initial version of this PR removed the move-only semantics on field descriptors. Instead, I added a `Clone` method for field descriptors. . <details>; <summary>Discarded rationale for reintroducing copy constructor for field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:1633,Performance,perform,performance,1633," `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or children). They are meant to be used for building new `RNTuples` through `RNTupleDescriptorBuilder` or during a merge operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:1740,Performance,Optimiz,Optimization,1740," `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or children). They are meant to be used for building new `RNTuples` through `RNTupleDescriptorBuilder` or during a merge operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:1558,Safety,risk,risk,1558,"cided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:1289,Usability,simpl,simple,1289,"or field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .Fiel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5934:1771,Usability,simpl,simplified,1771," `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .FieldId(1); .FieldName(""some_field""); .Structure(ENTupleStructure::kCollection); .UnwrapDescriptor(); ; ```. Dangling descriptors let us modify all field descriptor information except for relationship information (i.e. they have no idea about field parents or children). They are meant to be used for building new `RNTuples` through `RNTupleDescriptorBuilder` or during a merge operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5934
https://github.com/root-project/root/pull/5936:13,Availability,redundant,redundant,13,Remove extra redundant tensorboard Option,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5936
https://github.com/root-project/root/pull/5936:13,Safety,redund,redundant,13,Remove extra redundant tensorboard Option,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5936
https://github.com/root-project/root/pull/5938:1087,Availability,failure,failure,1087,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:5,Integrability,depend,depends,5,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:777,Integrability,depend,dependent,777,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:1185,Integrability,depend,dependencies,1185,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:123,Testability,log,logic,123,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:548,Testability,test,test,548,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:687,Testability,test,test,687,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:797,Testability,test,tests,797,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:1022,Testability,test,test,1022,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:1160,Testability,test,tests,1160,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:730,Usability,simpl,simple,730,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5938:1070,Usability,clear,clearly,1070,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5938
https://github.com/root-project/root/pull/5943:17,Availability,error,errors,17,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5943
https://github.com/root-project/root/pull/5943:124,Integrability,protocol,protocol,124,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5943
https://github.com/root-project/root/pull/5943:191,Integrability,Protocol,Protocol,191,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5943
https://github.com/root-project/root/pull/5943:65,Modifiability,Plugin,Plugin,65,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5943
https://github.com/root-project/root/pull/5943:178,Performance,load,load,178,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5943
https://github.com/root-project/root/pull/5944:52,Performance,CACHE,CACHEREAD,52,"Without it the following TFile::Open call using the CACHEREAD option; will not work as intended:; inputFile = TFile::Open(inputFileLink, ""CACHEREAD"");",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5944
https://github.com/root-project/root/pull/5944:138,Performance,CACHE,CACHEREAD,138,"Without it the following TFile::Open call using the CACHEREAD option; will not work as intended:; inputFile = TFile::Open(inputFileLink, ""CACHEREAD"");",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5944
https://github.com/root-project/root/pull/5946:17,Availability,error,errors,17,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:124,Integrability,protocol,protocol,124,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:191,Integrability,Protocol,Protocol,191,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:65,Modifiability,Plugin,Plugin,65,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5946:178,Performance,load,load,178,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5946
https://github.com/root-project/root/pull/5948:17,Availability,error,errors,17,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:124,Integrability,protocol,protocol,124,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:191,Integrability,Protocol,Protocol,191,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:65,Modifiability,Plugin,Plugin,65,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5948:178,Performance,load,load,178,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5948
https://github.com/root-project/root/pull/5950:50,Energy Efficiency,reduce,reduced,50,"I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:180,Testability,benchmark,benchmarks,180,"I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5950:210,Usability,simpl,simply,210,"I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5950
https://github.com/root-project/root/pull/5957:29,Availability,error,errors,29,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:207,Availability,Error,Error,207,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:652,Availability,Error,Error,652,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:38,Testability,Test,Test,38,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5957:482,Testability,Test,Test,482,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5957
https://github.com/root-project/root/pull/5958:187,Testability,assert,assertion,187,"The histogram bin iterator should start at 1 and end at N + 1, not; start at 0 and end at N. (As for all iterators, the end element is the; invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins; [ RUN ] BinIterNBins.NumBins; /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:223,Testability,test,test,223,"The histogram bin iterator should start at 1 and end at N + 1, not; start at 0 and end at N. (As for all iterators, the end element is the; invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins; [ RUN ] BinIterNBins.NumBins; /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:244,Testability,test,tests,244,"The histogram bin iterator should start at 1 and end at N + 1, not; start at 0 and end at N. (As for all iterators, the end element is the; invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins; [ RUN ] BinIterNBins.NumBins; /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5958:608,Testability,Assert,Assertion,608,"The histogram bin iterator should start at 1 and end at N + 1, not; start at 0 and end at N. (As for all iterators, the end element is the; invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins; [ RUN ] BinIterNBins.NumBins; /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5958
https://github.com/root-project/root/pull/5960:272,Availability,error,error,272,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:712,Availability,error,error,712,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1153,Availability,error,error,1153," Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4115,Availability,error,error,4115,"y ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4280,Availability,error,error,4280,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4660,Availability,error,error,4660,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4706,Availability,error,error,4706,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:766,Deployability,install,install,766,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:862,Testability,test,test,862,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1007,Testability,test,test,1007,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1454,Testability,test,test,1454,"on2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1601,Testability,test,test,1601,"on2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1788,Testability,test,test,1788,"test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a']",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:1824,Testability,test,test,1824,"isting code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2729,Testability,test,test,2729,"File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:2956,Testability,test,test,2956,"n glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version did not:; ```; $ python2 test2.py ; 123; 456; ```; That the first version fails with Python 2 is a Python 2 bug, the two versions are supposed to be equivalent in Python 2. See https://bugs.python.org/issue21591. This issue has been fixed in later Python 2 versions, but is still present in Python 2.7.5, which is the Python2 version in RHEL/CentOS 7. ### test3.py. OK, we have identified one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3587,Testability,test,test,3587,"ied one version that works for Python 3 and one version that works for Python 2. Can we combine them with an if statement to get something that works for both versions:. ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:3820,Testability,test,test,3820,"ict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()); else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This works for Python 3:; ```; $ python3 test3.py ; 123; 456; ```; Sadly it fails for Python 2:; ```; $ python2 test3.py ; File ""test3.py"", line 7; exec('print(a); b = 456', glob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4379,Testability,test,test,4379,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4530,Testability,test,test,4530,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4736,Testability,test,test,4736,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4836,Testability,test,test,4836,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4872,Testability,test,test,4872,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5960:4354,Usability,simpl,simpler,4354,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5960
https://github.com/root-project/root/pull/5966:157,Usability,intuit,intuitive,157,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; ```; RooTemplateProxy<const RooAbsPdf>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5966
https://github.com/root-project/root/pull/5969:157,Usability,intuit,intuitive,157,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5969
https://github.com/root-project/root/pull/5970:157,Usability,intuit,intuitive,157,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5970
https://github.com/root-project/root/pull/5971:52,Deployability,patch,patch,52,"Second attempt at #5922, this time somewhat smaller patch without changing the TLS definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5971
https://github.com/root-project/root/pull/5975:166,Availability,error,error,166,"Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. ; Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:; ```cpp; RResult<void> validRes = FallibleVoidFn();; if (!validRes) { ; validRes.Throw(); ; }; ```. After:; ```cpp; FallibleVoidFn().ThrowOnError(); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:529,Availability,error,error,529,"Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. ; Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:; ```cpp; RResult<void> validRes = FallibleVoidFn();; if (!validRes) { ; validRes.Throw(); ; }; ```. After:; ```cpp; FallibleVoidFn().ThrowOnError(); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5975:588,Availability,error,error,588,"Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. ; Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:; ```cpp; RResult<void> validRes = FallibleVoidFn();; if (!validRes) { ; validRes.Throw(); ; }; ```. After:; ```cpp; FallibleVoidFn().ThrowOnError(); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5975
https://github.com/root-project/root/pull/5977:517,Safety,abort,aborting,517,"Before this change:. [ RUN ] RNTuple.LargeFile; Warning in <ROOT [NTuple] Warning /builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RPageStorageFile.cxx:43 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: retval == nbytes violated at line 1007 of `/builddir/build/BUILD/root-6.22.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5977
https://github.com/root-project/root/pull/5978:206,Performance,cache,cache-,206,This is import of calorimeters from original EVE to server-client model of event display.; Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization.; ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5978
https://github.com/root-project/root/pull/5980:270,Energy Efficiency,efficient,efficiently,270,"When histogram object too large (more than 10^6 bins), its JSON representation can be huge.; At the same time graphics cannot display so much individual bins.; Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client; Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and; efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now.; For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`; Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:181,Performance,Optimiz,Optimize,181,"When histogram object too large (more than 10^6 bins), its JSON representation can be huge.; At the same time graphics cannot display so much individual bins.; Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client; Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and; efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now.; For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`; Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5980:473,Performance,optimiz,optimized,473,"When histogram object too large (more than 10^6 bins), its JSON representation can be huge.; At the same time graphics cannot display so much individual bins.; Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client; Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and; efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now.; For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`; Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5980
https://github.com/root-project/root/pull/5984:22,Usability,feedback,feedback,22,Addresses some of the feedback in https://sft.its.cern.ch/jira/browse/ROOT-10889 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5984
https://github.com/root-project/root/pull/5985:161,Integrability,wrap,wrap,161,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:486,Integrability,message,messages,486,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:404,Safety,safe,safeguards,404,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:695,Security,access,access,695,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1236,Security,access,access,1236,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:981,Testability,Test,TestMoveOnly,981,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:1086,Testability,Test,TestMoveOnly,1086,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5985:589,Usability,clear,clear,589,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5985
https://github.com/root-project/root/pull/5987:0,Deployability,patch,patch,0,patch from Fons,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5987
https://github.com/root-project/root/pull/5989:9,Availability,error,error-checking,9,"Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934); Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` ; and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5989:206,Security,expose,expose,206,"Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934); Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` ; and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5989
https://github.com/root-project/root/pull/5993:257,Availability,error,errors,257,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:418,Availability,error,error,418,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:610,Availability,error,error,610,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:811,Availability,error,error,811,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1549,Deployability,update,updated,1549,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1610,Deployability,update,updated,1610,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5993:1663,Deployability,update,update,1663,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5993
https://github.com/root-project/root/pull/5995:1098,Availability,avail,available,1098,"Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description ; Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose ; Allows to merge only certain objects from the list of input files. ### Use case; Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings; - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`.; - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5995:1053,Testability,test,tested,1053,"Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description ; Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose ; Allows to merge only certain objects from the list of input files. ### Use case; Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings; - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`.; - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5995
https://github.com/root-project/root/pull/5997:20,Deployability,update,update,20,"Fix a missing state update in RooAbsCategory, and prevent an invalid state in uninitialised categories. On the way to finding this bug, I managed to get some indentation fixes and loop modernisations done, which are included here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5997
https://github.com/root-project/root/pull/5999:53,Deployability,Update,Update,53,"Fix ROOT-10890 , TMathLLGcgs() was wrong by 10^6 ! . Update also new values of gravitational constant according to latest values from NIST; (https://physics.nist.gov/cuu/Constants/index.html); with better uncertainty (22ppm). Use also the new SI definition , see https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units; Now the Planck , Boltzmann constants and Avogado number are exact in the new definition.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/5999
https://github.com/root-project/root/pull/6006:266,Deployability,patch,patch,266,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6006:149,Security,access,access,149,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6006
https://github.com/root-project/root/pull/6008:71,Integrability,interface,interface,71,"Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: ; https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. ; ~~**Edit:** segfault fixed by #6016~~; **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6008:670,Safety,avoid,avoid,670,"Declares a new method `RNTuple::Merge` to conform to the `hadd` merger interface, namely: ; https://github.com/root-project/root/blob/331efa4c00fefc38980eaaf7b41b8e95fcd1a23b/io/doc/v530/index.html#L43-L53. I originally thought about to adding this method `RNTupleReader`, but think this is the right choice since it's the `RNTuple` blob that's stored on disk, and we have to parse it into a `RNTupleReader` to do any useful work. . Actually running it segfaults, and I'm not sure whether I've made a mistake in linking or elsewhere. ; ~~**Edit:** segfault fixed by #6016~~; **Edit**: I believe the segfault is fixed by 12fef499c109da4c2454d9cca2e60e88a883aa1c, where I avoid assuming that mergeable objects are derived from `TObject`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6008
https://github.com/root-project/root/pull/6009:18,Availability,error,error,18,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:168,Availability,error,error,168,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:637,Availability,Error,Error,637,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:715,Availability,error,error,715,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:340,Deployability,release,release,340,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:499,Deployability,release,release,499,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:670,Deployability,release,release,670,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6009:704,Integrability,message,message,704,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6009
https://github.com/root-project/root/pull/6010:117,Testability,log,logs,117,Creating symlinks of headers in build directory instead of copies. This allows better navigation from compile output logs in IDEs and better editing of headers. So far I do not know if there are any side effects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6010
https://github.com/root-project/root/pull/6011:19,Testability,test,test,19,This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:31,Testability,test,tested,31,This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:97,Testability,test,test,97,This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6011:156,Testability,test,test,156,This PR intends to test what's tested in the cppcompleter.py. It fails for PR #5884 however this test should show that the issue is somewhere in the way we test it on the python side... cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6011
https://github.com/root-project/root/pull/6014:559,Deployability,integrat,integration,559,"Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:; > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:559,Integrability,integrat,integration,559,"Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:; > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6014:422,Modifiability,refactor,refactoring,422,"Partially solves: [ROOT-10915](https://its.cern.ch/jira/browse/ROOT-10915). Reasoning from the ticket:; > It seems most header files are not added to the library targets that compose ROOT. This is most imminent to me when I create a Visual Studio project by CMake. Almost all header files are missing in the solution explorer. > While this still allows to build ROOT, the IDE experience is severly limited. Automatic code refactoring and static analysis fails to a large degree, because the headers are not considered part of the project. E.g. the clang-tidy integration in Visual Studio cannot fix any header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6014
https://github.com/root-project/root/pull/6016:1033,Availability,Error,Error,1033,"Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. ; We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: ; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/. *** Break *** segmentation violation; ```. After:; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/; Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead; Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:101,Modifiability,inherit,inherit,101,"Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. ; We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: ; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/. *** Break *** segmentation violation; ```. After:; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/; Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead; Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6016:290,Modifiability,inherit,inherit,290,"Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. ; We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: ; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/. *** Break *** segmentation violation; ```. After:; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/; Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead; Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6016
https://github.com/root-project/root/pull/6022:25,Availability,error,error,25,Most probable reason for error described in ROOT-10916 issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6022
https://github.com/root-project/root/pull/6027:16,Deployability,install,installed,16,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:47,Deployability,release,release,47,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:497,Deployability,patch,patch,497,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:808,Deployability,patch,patches,808,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6027:91,Performance,perform,performance,91,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6027
https://github.com/root-project/root/pull/6029:75,Integrability,message,messages,75,Fix some warnings during doxygen documentation generation.; See the commit messages for details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6029
https://github.com/root-project/root/pull/6031:168,Availability,error,error,168,"The old client library libXrdClient is removed.; Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already; disabled by default - give error if someone enables it while building; with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6031
https://github.com/root-project/root/pull/6034:555,Performance,tune,tuned,555,"In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating; the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping; the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:; - files were kept open; - TTree were kept in memory; - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading.; (This leads to spurrious large reallocation in case of a consecutive series of; large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6034
https://github.com/root-project/root/pull/6035:57,Availability,avail,available,57,It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6035:75,Performance,load,loaded,75,It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6035
https://github.com/root-project/root/pull/6036:305,Integrability,depend,depend,305,"Rename TBasket::Reset to TBasket::WriteReset; Add TBasket::ReadResetBuffer which will shrink the buffer is it is currently significantly larger; than it is needed to any of the next 10 baskets. [Improvement for ROOT-10927, in this exact reported case this gain an additional 25 MB per TTree but really is depend on the size of the last baskets]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6036
https://github.com/root-project/root/pull/6037:257,Availability,error,errors,257,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:418,Availability,error,error,418,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:610,Availability,error,error,610,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:811,Availability,error,error,811,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1549,Deployability,update,updated,1549,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1610,Deployability,update,updated,1610,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6037:1663,Deployability,update,update,1663,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6037
https://github.com/root-project/root/pull/6038:285,Deployability,patch,patches,285,Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR.; Please see the following discussion:; https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:22,Performance,optimiz,optimization,22,Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR.; Please see the following discussion:; https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6038:185,Performance,perform,performance-issue,185,Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR.; Please see the following discussion:; https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6038
https://github.com/root-project/root/pull/6039:204,Availability,error,error,204,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:239,Availability,error,error,239,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:177,Testability,test,test,177,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6039:328,Usability,simpl,simplification,328,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6039
https://github.com/root-project/root/pull/6046:53,Availability,error,errors,53,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:297,Availability,Error,Error,297,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:381,Availability,Error,Error,381,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:496,Deployability,Update,Update,496,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:542,Deployability,update,update,542,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:355,Integrability,interface,interface,355,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6046:449,Integrability,wrap,wrapper,449,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6046
https://github.com/root-project/root/pull/6047:0,Safety,Avoid,Avoid,0,Avoid cloning the pdf when creating a NuisancePdf in RooStats::MakeNuisancePdf.; Without the cloning then the call in the AsymptoticCalculator to setNoRounding(true) is effective.; This fixes ROOT-10920. Also apply a small fix when setting an external nuisance pdf in the RooStats HybridCalculator,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6047
https://github.com/root-project/root/pull/6048:0,Safety,Avoid,Avoid,0,Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6048:140,Safety,avoid,avoid,140,Avoid cloning the nuisance pdf single component. Make always a RooProdPdf of nuisances (constraints) also when there is a single term. This avoid cloning the real pdf components and will fix the noRounding bug in the Poisson constraints happening in the AsymptoticCalculator (ROOT-10920),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6048
https://github.com/root-project/root/pull/6049:0,Energy Efficiency,Reduce,Reduce,0,Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:23,Energy Efficiency,adapt,adapt,23,Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6049:23,Modifiability,adapt,adapt,23,Reduce the headers and adapt it to boost 1.72,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6049
https://github.com/root-project/root/pull/6051:54,Performance,load,loading,54,The datasets are suboptimally created and trigger the loading of the; full dataset with reading the metadata. This results in reading 150GB; of data even if we run nominally only on 1% of the events.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6051
https://github.com/root-project/root/pull/6054:100,Deployability,install,installation,100,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:183,Deployability,install,install,183,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:477,Deployability,install,installed,477,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:636,Deployability,configurat,configuration,636,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:915,Deployability,install,install,915,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6054:636,Modifiability,config,configuration,636,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6054
https://github.com/root-project/root/pull/6055:54,Integrability,wrap,wrapping,54,"If possible, this should be replaced by the automatic wrapping of Python callables provided by new cppyy (work started by @vepadulano).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6055
https://github.com/root-project/root/pull/6056:236,Availability,error,error,236,"This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```; input_line_12:3:10: fatal error: 'inc/classes.h' file not found; #include ""inc/classes.h""; ^~~~~~~~~~~~~~~; Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:275,Availability,error,error,275,"This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```; input_line_12:3:10: fatal error: 'inc/classes.h' file not found; #include ""inc/classes.h""; ^~~~~~~~~~~~~~~; Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:357,Availability,Error,Error,357,"This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```; input_line_12:3:10: fatal error: 'inc/classes.h' file not found; #include ""inc/classes.h""; ^~~~~~~~~~~~~~~; Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6056:423,Availability,failure,failure,423,"This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```; input_line_12:3:10: fatal error: 'inc/classes.h' file not found; #include ""inc/classes.h""; ^~~~~~~~~~~~~~~; Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6056
https://github.com/root-project/root/pull/6057:40,Deployability,update,update,40,"Since MacOS blocks our second thread to update the GUI, rootbrowse will; run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in; Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6057:156,Deployability,hotfix,hotfix,156,"Since MacOS blocks our second thread to update the GUI, rootbrowse will; run the event loop in the main thread if the underlying system is MacOS. This is a hotfix for ROOT-10787, but a general fix to enable the GUI in; Python script mode is still missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6057
https://github.com/root-project/root/pull/6058:35,Deployability,update,update,35,"WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6058
https://github.com/root-project/root/pull/6062:4,Testability,test,test,4,"The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:; ```; threads: 1 items: 10 events: 40000000 time: 192.72 s; threads: 2 items: 10 events: 40000000 time: 211.41 s; threads: 3 items: 10 events: 40000000 time: 219.9 s; threads: 4 items: 10 events: 40000000 time: 212.033 s; threads: 5 items: 10 events: 40000000 time: 214.991 s; threads: 6 items: 10 events: 40000000 time: 220.459 s; threads: 7 items: 10 events: 40000000 time: 219.831 s; threads: 8 items: 10 events: 40000000 time: 236.328 s; threads: 9 items: 10 events: 40000000 time: 222.565 s; threads: 10 items: 10 events: 40000000 time: 224.154 s; threads: 11 items: 10 events: 40000000 time: 229.009 s; threads: 12 items: 10 events: 40000000 time: 232.501 s; threads: 13 items: 10 events: 40000000 time: 227.134 s; threads: 14 items: 10 events: 40000000 time: 225.087 s; threads: 15 items: 10 events: 40000000 time: 223.564 s; threads: 16 items: 10 events: 40000000 time: 270.977 s; threads: 16 items: 10 events: 40000000 time: 291.434 s; threads: 17 items: 10 events: 40000000 time: 298.618 s; threads: 18 items: 10 events: 40000000 time: 237.387 s; threads: 19 items: 10 events: 40000000 time: 434.656 s; threads: 20 items: 10 events: 40000000 time: 358.451 s; threads: 21 items: 10 events: 40000000 time: 364.873 s; threads: 22 items: 10 events: 40000000 time: 491.755 s; threads: 23 items: 10 events: 40000000 time: 404.095 s; threads: 24 items: 10 events: 40000000 time: 444.607 s; threads: 25 items: 10 events: 40000000 time: 577.3 s; threads: 26 items: 10 events: 40000000 time: 603.918 s; threads: 27 items: 10 events: 40000000 time: 349.925 s; threads: 28 items: 10 events: 40000000 time: 359.936 s; threads: 29",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6062
https://github.com/root-project/root/pull/6065:154,Integrability,wrap,wrappers,154,"Backport of https://github.com/root-project/root/pull/6055. Same as for the PR in master, if a better solution can be implemented using the automatic C++ wrappers of cppyy (work started by @vepadulano ), the changes in this PR will not be necessary anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6065
https://github.com/root-project/root/pull/6067:47,Availability,redundant,redundant-argument-in-tgraphpolar,47,Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6067
https://github.com/root-project/root/pull/6067:47,Safety,redund,redundant-argument-in-tgraphpolar,47,Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6067
https://github.com/root-project/root/pull/6068:91,Usability,guid,guide,91,[skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6068
https://github.com/root-project/root/pull/6070:49,Deployability,update,updates,49,A (possibly growing) collection of documentation updates. Adding things as forum questions etc are coming in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6070
https://github.com/root-project/root/pull/6072:12,Deployability,patch,patch,12,"Before this patch, in cases in which t.GetBranch(""a.b"") and; t.GetBranch(""b"") both returned a valid address, RDataFrame was adding; only ""a.b"" to the list of valid TTree columns.; With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,; described in detail in ROOT-10942: since ROOT-10702 was fixed,; TTree::GetBranch became more powerful and started returning non-null; addresses for branch names with form ""a.b"" while it was returning a; nullptr until v6.20/06. With RDataFrame's previous logic, this in turn; meant that valid code that was using ""a"" as a column broke as RDataFrame; was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a; valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:190,Deployability,patch,patch,190,"Before this patch, in cases in which t.GetBranch(""a.b"") and; t.GetBranch(""b"") both returned a valid address, RDataFrame was adding; only ""a.b"" to the list of valid TTree columns.; With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,; described in detail in ROOT-10942: since ROOT-10702 was fixed,; TTree::GetBranch became more powerful and started returning non-null; addresses for branch names with form ""a.b"" while it was returning a; nullptr until v6.20/06. With RDataFrame's previous logic, this in turn; meant that valid code that was using ""a"" as a column broke as RDataFrame; was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a; valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:419,Energy Efficiency,power,powerful,419,"Before this patch, in cases in which t.GetBranch(""a.b"") and; t.GetBranch(""b"") both returned a valid address, RDataFrame was adding; only ""a.b"" to the list of valid TTree columns.; With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,; described in detail in ROOT-10942: since ROOT-10702 was fixed,; TTree::GetBranch became more powerful and started returning non-null; addresses for branch names with form ""a.b"" while it was returning a; nullptr until v6.20/06. With RDataFrame's previous logic, this in turn; meant that valid code that was using ""a"" as a column broke as RDataFrame; was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a; valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:289,Safety,avoid,avoid,289,"Before this patch, in cases in which t.GetBranch(""a.b"") and; t.GetBranch(""b"") both returned a valid address, RDataFrame was adding; only ""a.b"" to the list of valid TTree columns.; With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,; described in detail in ROOT-10942: since ROOT-10702 was fixed,; TTree::GetBranch became more powerful and started returning non-null; addresses for branch names with form ""a.b"" while it was returning a; nullptr until v6.20/06. With RDataFrame's previous logic, this in turn; meant that valid code that was using ""a"" as a column broke as RDataFrame; was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a; valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6072:580,Testability,log,logic,580,"Before this patch, in cases in which t.GetBranch(""a.b"") and; t.GetBranch(""b"") both returned a valid address, RDataFrame was adding; only ""a.b"" to the list of valid TTree columns.; With this patch, both ""a.b"" and ""b"" are recognized as valid column names. We need this change in behavior to avoid a _worse_ change in behavior,; described in detail in ROOT-10942: since ROOT-10702 was fixed,; TTree::GetBranch became more powerful and started returning non-null; addresses for branch names with form ""a.b"" while it was returning a; nullptr until v6.20/06. With RDataFrame's previous logic, this in turn; meant that valid code that was using ""a"" as a column broke as RDataFrame; was now adding the ""a.b"" spelling to the list of valid columns instead. This fixes the RDF-related part of ROOT-10942: ""a"" is recognized as a; valid spelling again, and ""a.b"" is kept as a new valid spelling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6072
https://github.com/root-project/root/pull/6073:465,Availability,error,error,465,"Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:; 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or; 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the; `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and; `TFileMerge*` info.; For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6073
https://github.com/root-project/root/pull/6075:5,Deployability,patch,patch,5,This patch also fixes an accidental merge problem where we essentially; added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6075
https://github.com/root-project/root/pull/6079:72,Deployability,configurat,configuration,72,"CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6079:72,Modifiability,config,configuration,72,"CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6079
https://github.com/root-project/root/pull/6082:99,Modifiability,variab,variable,99,This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:176,Performance,load,load,176,This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6082:223,Performance,load,load,223,This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6082
https://github.com/root-project/root/pull/6083:199,Deployability,update,updated,199,"- dependency_versions.py: cannot run the root-config shell script on Windows; - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6083:46,Modifiability,config,config,46,"- dependency_versions.py: cannot run the root-config shell script on Windows; - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6083
https://github.com/root-project/root/pull/6089:122,Deployability,patch,patches,122,"Hello,. these are exactly the same changes as PR #6027; Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:169,Deployability,patch,patches,169,"Hello,. these are exactly the same changes as PR #6027; Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6089:229,Deployability,patch,patches,229,"Hello,. these are exactly the same changes as PR #6027; Since it is a pure bugfix, I think it should be added also to the patches branch. In case this second PR for the patches branch is not necessary to get the changes into the patches branch, I'm sorry, however I am no expert on using git tools and this is the only way I know. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6089
https://github.com/root-project/root/pull/6094:234,Testability,test,tests,234,"Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF.; Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)?. EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:291,Testability,test,testing,291,"Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF.; Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)?. EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:479,Testability,test,tests,479,"Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF.; Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)?. EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6094:511,Testability,test,tests,511,"Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF.; Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)?. EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6094
https://github.com/root-project/root/pull/6096:159,Availability,avail,available,159,"Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6096
https://github.com/root-project/root/pull/6097:34,Availability,error,errors,34,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:101,Deployability,release,release,101,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:307,Integrability,interface,interface,307,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:654,Integrability,interface,interface,654,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1000,Integrability,interface,interface,1000,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:481,Performance,load,load,481,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:826,Performance,load,load,826,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6097:1173,Performance,load,load,1173,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6097
https://github.com/root-project/root/pull/6098:266,Deployability,patch,patch,266,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6098:149,Security,access,access,149,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6098
https://github.com/root-project/root/pull/6101:1669,Availability,Error,Error,1669,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1709,Availability,error,error,1709,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1733,Availability,Error,Error,1733,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:1764,Availability,error,error,1764,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:129,Integrability,bridg,bridge,129,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6101:246,Integrability,interface,interface,246,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6101
https://github.com/root-project/root/pull/6103:97,Availability,error,errors,97,"Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:149,Availability,error,errors,149,"Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6103:179,Testability,test,test,179,"Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6103
https://github.com/root-project/root/pull/6104:5,Deployability,patch,patch,5,This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6104:110,Deployability,install,installed,110,This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6104
https://github.com/root-project/root/pull/6106:177,Deployability,pipeline,pipeline,177,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:30,Energy Efficiency,schedul,schedules,30,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:40,Performance,load,loading,40,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:138,Performance,load,loaded,138,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6106:439,Testability,benchmark,benchmarks,439,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6106
https://github.com/root-project/root/pull/6107:88,Deployability,release,release,88,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:138,Deployability,release,release,138,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:261,Deployability,release,release,261,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:2,Energy Efficiency,Adapt,Adapted,2,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:2,Modifiability,Adapt,Adapted,2,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:574,Testability,benchmark,benchmark,574,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6107:598,Testability,test,test,598,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6107
https://github.com/root-project/root/pull/6108:144,Availability,avail,available,144,"Some platforms have problems (rightfully so!) in finding symbols; from libCling.so, which is dlopened with RTLD_LOCAL. libCling should; me made available to RuntimeDyld, but priority should be given to; the main binary, i.e. the ""traditional"" symbol resolution. This is; achieved by injecting libCling as a symbol source into the; DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,; not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:283,Integrability,inject,injecting,283,"Some platforms have problems (rightfully so!) in finding symbols; from libCling.so, which is dlopened with RTLD_LOCAL. libCling should; me made available to RuntimeDyld, but priority should be given to; the main binary, i.e. the ""traditional"" symbol resolution. This is; achieved by injecting libCling as a symbol source into the; DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,; not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6108:283,Security,inject,injecting,283,"Some platforms have problems (rightfully so!) in finding symbols; from libCling.so, which is dlopened with RTLD_LOCAL. libCling should; me made available to RuntimeDyld, but priority should be given to; the main binary, i.e. the ""traditional"" symbol resolution. This is; achieved by injecting libCling as a symbol source into the; DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,; not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6108
https://github.com/root-project/root/pull/6109:96,Availability,avail,available,96,We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6109
https://github.com/root-project/root/pull/6110:115,Availability,error,errors,115,"RooMomentMorphND was initialising fractions to zero. That will lead to; an all-zero PDF, which triggers evaluation errors. Setting all fractions; to 1 avoids those warnings, and the correct values will be calculated; during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6110:151,Safety,avoid,avoids,151,"RooMomentMorphND was initialising fractions to zero. That will lead to; an all-zero PDF, which triggers evaluation errors. Setting all fractions; to 1 avoids those warnings, and the correct values will be calculated; during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6110
https://github.com/root-project/root/pull/6112:98,Energy Efficiency,reduce,reduced,98,The tutorial runs now very fast in ~20s! The output is slightly different since the statistics is reduced by a factor of 10:. **Old**. ![](https://root.cern/doc/master/pict1_df105_WBosonAnalysis.py.png). **New**. ![df105_WBosonAnalysis](https://user-images.githubusercontent.com/6951222/89209409-892aaf80-d5be-11ea-879c-3fc8f321630d.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6112
https://github.com/root-project/root/pull/6113:70,Testability,test,test,70,This should bring RDF back to a fully working state (for all cases we test) after the change in valid column names discussed in ROOT-10942 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6113
https://github.com/root-project/root/pull/6116:71,Testability,test,test,71,This should bring RDF back to a fully working state (for all cases; we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6116
https://github.com/root-project/root/pull/6117:71,Testability,test,test,71,This should bring RDF back to a fully working state (for all cases; we test) after the change in valid column names discussed in ROOT-10942.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6117
https://github.com/root-project/root/pull/6119:66,Integrability,inject,inject,66,"If the method `__str__` is already defined on the C++ side, don't inject; the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6119:152,Performance,perform,performance,152,"If the method `__str__` is already defined on the C++ side, don't inject; the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6119:66,Security,inject,inject,66,"If the method `__str__` is already defined on the C++ side, don't inject; the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6119
https://github.com/root-project/root/pull/6121:20,Performance,concurren,concurrently,20,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6121:10,Testability,test,tests,10,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6121
https://github.com/root-project/root/pull/6122:20,Performance,concurren,concurrently,20,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6122:10,Testability,test,tests,10,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6122
https://github.com/root-project/root/pull/6123:20,Performance,concurren,concurrently,20,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6123:10,Testability,test,tests,10,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6123
https://github.com/root-project/root/pull/6125:21,Availability,error,errors,21,Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107); After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode.; It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args.; VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5.; A workaround was implemented for that and everything works until v16.5 comes.; The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:204,Availability,error,errors,204,Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107); After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode.; It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args.; VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5.; A workaround was implemented for that and everything works until v16.5 comes.; The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6125:575,Availability,error,errors,575,Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107); After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode.; It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args.; VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5.; A workaround was implemented for that and everything works until v16.5 comes.; The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6125
https://github.com/root-project/root/pull/6126:58,Performance,load,loaded,58,"Some platforms respect RTLD_LOCAL: symbols from libraries loaded with; this flag cannot be resolved by dlsym through the process. They should; instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols().; But then the JIT needs to actually make use of these libraries from; symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as; nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,; Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:154,Security,expose,exposed,154,"Some platforms respect RTLD_LOCAL: symbols from libraries loaded with; this flag cannot be resolved by dlsym through the process. They should; instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols().; But then the JIT needs to actually make use of these libraries from; symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as; nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,; Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6126:184,Security,Expose,ExposeHiddenSharedLibrarySymbols,184,"Some platforms respect RTLD_LOCAL: symbols from libraries loaded with; this flag cannot be resolved by dlsym through the process. They should; instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols().; But then the JIT needs to actually make use of these libraries from; symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as; nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,; Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6126
https://github.com/root-project/root/pull/6127:227,Availability,failure,failures,227,"Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:26,Testability,test,test,26,"Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:121,Testability,test,test,121,"Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6127:196,Testability,test,test,196,"Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6127
https://github.com/root-project/root/pull/6128:157,Availability,failure,failure,157,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:227,Availability,Error,Error,227,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2108,Availability,error,errors,2108,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1645,Deployability,install,installing,1645,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1693,Deployability,install,install,1693,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2300,Deployability,install,install,2300,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2377,Deployability,install,install,2377,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:409,Integrability,depend,depends,409,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:281,Modifiability,Plugin,Plugin,281,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:741,Modifiability,variab,variable,741,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1348,Modifiability,variab,variable,1348,"not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:168,Performance,load,loading,168,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:259,Performance,load,load,259,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:298,Performance,load,load,298,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1277,Performance,Load,Load,1277,"tility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1305,Performance,Load,Load,1305,"tility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1451,Performance,Load,Load,1451,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:1925,Performance,Load,Load,1925,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:2415,Performance,Load,Load,2415,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6128:188,Security,secur,security,188,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6128
https://github.com/root-project/root/pull/6131:226,Testability,benchmark,benchmarks,226,"make_unique<ConcreteFilterType> requires many different type; instantiations, but we actually always upcast to unique_ptr<FilterBase>,; so let's just instantiate _that_. This saves a few seconds of compile times in artificial benchmarks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6131
https://github.com/root-project/root/pull/6132:76,Testability,test,testing,76,"arrow/compute/test_util.h has been removed from recent versions,; but arrow/testing/gtest_util.h contains what we need and is present; both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6132
https://github.com/root-project/root/pull/6136:76,Testability,test,testing,76,"arrow/compute/test_util.h has been removed from recent versions,; but arrow/testing/gtest_util.h contains what we need and is present; both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6136
https://github.com/root-project/root/pull/6137:76,Testability,test,testing,76,"arrow/compute/test_util.h has been removed from recent versions,; but arrow/testing/gtest_util.h contains what we need and is present; both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6137
https://github.com/root-project/root/pull/6138:76,Testability,test,testing,76,"arrow/compute/test_util.h has been removed from recent versions,; but arrow/testing/gtest_util.h contains what we need and is present; both in v0.15 and v0.17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6138
https://github.com/root-project/root/pull/6139:470,Deployability,update,updated,470,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:5,Modifiability,extend,extends,5,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:55,Testability,assert,assert,55,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:252,Testability,assert,assert,252,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6139:661,Testability,test,test,661,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6139
https://github.com/root-project/root/pull/6143:1121,Availability,error,error,1121," ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1476,Availability,error,error,1476,"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1838,Availability,error,error,1838,"included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2208,Availability,error,error,2208,"re\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3334,Availability,error,error,3334,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3667,Availability,error,error,3667,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3675,Availability,Error,Error,3675,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:89,Deployability,update,update,89,"Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:; ```; Generating G__Core.cxx, ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:275,Deployability,release,release,275,"Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:; ```; Generating G__Core.cxx, ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:352,Deployability,release,release,352,"Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:; ```; Generating G__Core.cxx, ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:439,Deployability,release,release,439,"Silly workaround for rootcling not being able to parse the STL headers anymore after the update of Visual Studio to the version 16.7.0:; ```; Generating G__Core.cxx, ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1220,Deployability,release,release,1220," ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1531,Deployability,release,release,1531,"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:1937,Deployability,release,release,1937,"included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2263,Deployability,release,release,2263,"re\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2624,Deployability,release,release,2624,"sers\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsof",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2701,Deployability,release,release,2701,"his '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:2788,Deployability,release,release,2788,"Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3408,Deployability,release,release,3408,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3740,Deployability,release,release,3740,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3808,Deployability,upgrade,upgrade,3808,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6143:3681,Performance,load,loading,3681,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6143
https://github.com/root-project/root/pull/6144:53,Modifiability,config,configure,53,"@bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6144
https://github.com/root-project/root/pull/6148:122,Availability,error,error,122,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:274,Availability,error,error,274,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:282,Availability,error,error,282,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:372,Availability,error,error,372,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:767,Availability,error,error,767,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:71,Testability,test,test,71,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:83,Testability,Test,TestMethodDNNValidationSize,83,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:224,Testability,test,test,224,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:236,Testability,Test,TestMethodDNNValidationSize,236,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:524,Testability,test,test,524,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:536,Testability,Test,TestMethodDNNValidationSize,536,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:602,Testability,Test,TestMethodDNNValidationSize,602,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:716,Testability,test,test,716,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6148:728,Testability,Test,TestMethodDNNValidationSize,728,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6148
https://github.com/root-project/root/pull/6149:164,Performance,load,loaded,164,"As discussed with @Axel-Naumann, in the interest of more concise RNTuple tutorials this PR removes the ifdef around `R__LOAD_LIBRARY`. The library is simply always loaded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6149
https://github.com/root-project/root/pull/6149:150,Usability,simpl,simply,150,"As discussed with @Axel-Naumann, in the interest of more concise RNTuple tutorials this PR removes the ifdef around `R__LOAD_LIBRARY`. The library is simply always loaded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6149
https://github.com/root-project/root/pull/6151:79,Deployability,patch,patches,79,"Backport fixes from #6058, #6148, #6079 for supporting cudnn version 8 in 6.22 patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6151
https://github.com/root-project/root/pull/6152:48,Deployability,install,installation,48,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6152
https://github.com/root-project/root/pull/6152:149,Deployability,install,install,149,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6152
https://github.com/root-project/root/pull/6152:20,Usability,user-friendly,user-friendly,20,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6152
https://github.com/root-project/root/pull/6153:180,Availability,error,error,180,"It broke C++17 build of ROOT with:; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: error: 'std::__uniq_ptr_data<RooDataSet, std::default_delete<RooDataSet>, true, true>' has different definitions; in different modules; defined here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: note: definition in module 'std.condition_variable' is here; Error: /home/stefan/builds/root-dev/bin/rootcling: compilation failure (/home/stefan/builds/root-dev/lib/libRooStats03cff1ce95_dictUmbrella.h); make[2]: *** [roofit/roostats/CMakeFiles/G__RooStats.dir/build.make:222: roofit/roostats/G__RooStats.cxx] Error 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6153
https://github.com/root-project/root/pull/6153:543,Availability,Error,Error,543,"It broke C++17 build of ROOT with:; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: error: 'std::__uniq_ptr_data<RooDataSet, std::default_delete<RooDataSet>, true, true>' has different definitions; in different modules; defined here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: note: definition in module 'std.condition_variable' is here; Error: /home/stefan/builds/root-dev/bin/rootcling: compilation failure (/home/stefan/builds/root-dev/lib/libRooStats03cff1ce95_dictUmbrella.h); make[2]: *** [roofit/roostats/CMakeFiles/G__RooStats.dir/build.make:222: roofit/roostats/G__RooStats.cxx] Error 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6153
https://github.com/root-project/root/pull/6153:606,Availability,failure,failure,606,"It broke C++17 build of ROOT with:; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: error: 'std::__uniq_ptr_data<RooDataSet, std::default_delete<RooDataSet>, true, true>' has different definitions; in different modules; defined here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: note: definition in module 'std.condition_variable' is here; Error: /home/stefan/builds/root-dev/bin/rootcling: compilation failure (/home/stefan/builds/root-dev/lib/libRooStats03cff1ce95_dictUmbrella.h); make[2]: *** [roofit/roostats/CMakeFiles/G__RooStats.dir/build.make:222: roofit/roostats/G__RooStats.cxx] Error 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6153
https://github.com/root-project/root/pull/6153:793,Availability,Error,Error,793,"It broke C++17 build of ROOT with:; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: error: 'std::__uniq_ptr_data<RooDataSet, std::default_delete<RooDataSet>, true, true>' has different definitions; in different modules; defined here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: note: definition in module 'std.condition_variable' is here; Error: /home/stefan/builds/root-dev/bin/rootcling: compilation failure (/home/stefan/builds/root-dev/lib/libRooStats03cff1ce95_dictUmbrella.h); make[2]: *** [roofit/roostats/CMakeFiles/G__RooStats.dir/build.make:222: roofit/roostats/G__RooStats.cxx] Error 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6153
https://github.com/root-project/root/pull/6154:153,Availability,error,errors,153,"On Windows, the .dll files contain symbol information in COFF Format which DLM currently fails to understand properly. This leads to unrecognized symbol errors while starting ROOT with modules. This commit teaches DLM to correctly read symbols when the Object File is in COFF executable format. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6154
https://github.com/root-project/root/pull/6155:263,Availability,redundant,redundant,263,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:343,Deployability,install,installed,343,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:759,Deployability,install,installed,759,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:790,Deployability,Install,Install,790,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:989,Deployability,install,installation,989,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:1092,Deployability,install,installation,1092,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:1171,Deployability,install,installation,1171,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:518,Modifiability,config,config,518,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:1223,Modifiability,refactor,refactor,1223,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6155:263,Safety,redund,redundant,263,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6155
https://github.com/root-project/root/pull/6156:121,Availability,error,error,121,"Skip all DLL in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And an even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6156
https://github.com/root-project/root/pull/6156:143,Availability,error,error,143,"Skip all DLL in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And an even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6156
https://github.com/root-project/root/pull/6157:174,Availability,error,error,174,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6157:405,Integrability,interface,interface,405,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6157:752,Integrability,interface,interface,752,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6157:1098,Integrability,interface,interface,1098,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6157:579,Performance,load,load,579,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6157:924,Performance,load,load,924,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6157:1271,Performance,load,load,1271,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6157
https://github.com/root-project/root/pull/6160:261,Security,sanitiz,sanitizer,261,"...since it not used anywhere in Cppyy's code. It used to be used; in TPyClassGenerator.cxx, but the code in that file was completely; commented out. This will prevent a conflict with a class of the same name that; exists in TPython, as reported by the address sanitizer. Thanks to @hageboeck for the heads up!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6160
https://github.com/root-project/root/pull/6161:67,Deployability,update,update,67,"When reading an evaluated EST, make sure we provide *that* to the; update object, instead of leaving the EST to be used for the; update uninitialized. Remove the now unused (and due to two FuncDecls fairly ambiguous); ctor from a FuncDecl. Instead, set ShouldUpdateESI explicitly in; the only case where it matters. This fixes 30ecf72, and as that; points out, should become irrelevant once; llvm-mirror/clang@5d50602; is merged into ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6161
https://github.com/root-project/root/pull/6161:129,Deployability,update,update,129,"When reading an evaluated EST, make sure we provide *that* to the; update object, instead of leaving the EST to be used for the; update uninitialized. Remove the now unused (and due to two FuncDecls fairly ambiguous); ctor from a FuncDecl. Instead, set ShouldUpdateESI explicitly in; the only case where it matters. This fixes 30ecf72, and as that; points out, should become irrelevant once; llvm-mirror/clang@5d50602; is merged into ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6161
https://github.com/root-project/root/pull/6162:204,Availability,error,error-handling,204,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:108,Performance,perform,performs,108,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:270,Performance,queue,queue,270,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:463,Performance,queue,queue,463,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:377,Testability,benchmark,benchmark,377,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:511,Testability,test,test,511,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:543,Testability,test,test,543,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:574,Testability,test,test,574,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6162:197,Usability,simpl,simple,197,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6162
https://github.com/root-project/root/pull/6163:122,Availability,error,error,122,"Skip all DLLs in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And a even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6163
https://github.com/root-project/root/pull/6163:144,Availability,error,error,144,"Skip all DLLs in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And a even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6163
https://github.com/root-project/root/pull/6166:105,Testability,test,test,105,"If a fit fails, it might produce non-finite confidence levels. This can; be a problem for the hypothesis test inversion.; Here, all non-finite numbers are skipped, in the hope that this can; stabilise a limit calculation in cases where the failed fits are; irrelevant for finding the 95% CL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6166
https://github.com/root-project/root/pull/6170:400,Deployability,integrat,integration,400,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:1043,Energy Efficiency,reduce,reduced,1043,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:400,Integrability,integrat,integration,400,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:770,Integrability,depend,depending,770,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:267,Testability,log,logical,267,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:549,Testability,log,logical,549,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:1016,Testability,log,logical,1016,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:327,Usability,simpl,simplified,327,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:535,Usability,simpl,simplify,535,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6170:1132,Usability,simpl,simpler,1132,"Currently RDF reads all column values via a single RColumnValue type,; which knows how to deal with TTreeReaderValues, TTreeReaderArrays,; datasource columns and defined columns. Not only that's too many hats; for a single type, but this design requires some runtime logical branching; to decide which path to take that can be simplified.; Finally and most importantly, going forward we want smarter integration; with RDataSource, and we will require RDataSource-specialized column readers.; In order to allow this latter use-case and simplify some logical; branching, instead of a single RColumnValue type we add specialized; column reader types. RDefineReader reads values of Defined columns, RTreeColumnReader reads values; via TTreeReaderValues or TTreeReaderArrays depending on the class specialization,; and RDSColumnReader reads values from a datasource.; A given computation graph will only make use of one between; RTreeColumnReader and RDSColumnReader. The new column readers bring two main advantages:; - logical branching has been reduced (for now, at the cost of introducing a; virtual call); - the new design makes it simpler to insert datasource-specific column; readers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6170
https://github.com/root-project/root/pull/6176:128,Availability,Error,ErrorType,128,roofit/roofitcore/src/RooVectorDataStore.cxx: In member function; ‘virtual Double_t RooVectorDataStore::weightError(RooAbsData::ErrorType); const’:; roofit/roofitcore/src/RooVectorDataStore.cxx:574:15:; warning: ‘lo’ may be used uninitialized in this function; [-Wmaybe-uninitialized]; 574 | return (lo+hi)/2 ;; | ~~~^~~~; roofit/roofitcore/src/RooVectorDataStore.cxx:574:15: warning: ‘hi’ may; be used uninitialized in this function [-Wmaybe-uninitialized],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6176
https://github.com/root-project/root/pull/6178:126,Integrability,interface,interface,126,"Fix a long-standing problem in RooFit's faster batch computations. [ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. **NB**:; The test for this exists since ages, but was marked `WILLFAIL`. I will switching it back to normal in a roottest PR (to come).; Automatic checkout of the corresponding roottest branch will run the test in normal mode already in this build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6178
https://github.com/root-project/root/pull/6178:438,Integrability,depend,depend,438,"Fix a long-standing problem in RooFit's faster batch computations. [ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. **NB**:; The test for this exists since ages, but was marked `WILLFAIL`. I will switching it back to normal in a roottest PR (to come).; Automatic checkout of the corresponding roottest branch will run the test in normal mode already in this build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6178
https://github.com/root-project/root/pull/6178:609,Testability,test,test,609,"Fix a long-standing problem in RooFit's faster batch computations. [ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. **NB**:; The test for this exists since ages, but was marked `WILLFAIL`. I will switching it back to normal in a roottest PR (to come).; Automatic checkout of the corresponding roottest branch will run the test in normal mode already in this build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6178
https://github.com/root-project/root/pull/6178:802,Testability,test,test,802,"Fix a long-standing problem in RooFit's faster batch computations. [ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. **NB**:; The test for this exists since ages, but was marked `WILLFAIL`. I will switching it back to normal in a roottest PR (to come).; Automatic checkout of the corresponding roottest branch will run the test in normal mode already in this build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6178
https://github.com/root-project/root/pull/6179:45,Testability,test,tests,45,This commit changes the default behaviour of tests on Windows to accomodate Module builds. @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6179
https://github.com/root-project/root/pull/6180:112,Performance,load,load,112,"require.js was used in jupyter notebook by default, therefore was used; also for JSROOT. In jupyter lab one can load JSROOT direcrtly. ; If JSROOT fails to load from static location, default; https://root.cern/js/notebook/ version will be used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6180
https://github.com/root-project/root/pull/6180:156,Performance,load,load,156,"require.js was used in jupyter notebook by default, therefore was used; also for JSROOT. In jupyter lab one can load JSROOT direcrtly. ; If JSROOT fails to load from static location, default; https://root.cern/js/notebook/ version will be used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6180
https://github.com/root-project/root/pull/6183:59,Integrability,interface,interface,59,"[ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. (cherry picked from commit 47da6c180b7edd69dcb309fe06197cc50ffc538f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6183
https://github.com/root-project/root/pull/6183:371,Integrability,depend,depend,371,"[ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. (cherry picked from commit 47da6c180b7edd69dcb309fe06197cc50ffc538f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6183
https://github.com/root-project/root/pull/6184:349,Safety,avoid,avoid,349,"On windows, there are instances when the rdict file is still in use when we try to remove it. This happens due to some problem with file handling in LLVM5 which got resolved in D63453(https://reviews.llvm.org/D63453). But it was difficult to backport. With this commit, we switch to the standard C++ library functions for generating rdict files and avoid using this particular API of LLVM. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6184
https://github.com/root-project/root/pull/6185:71,Integrability,wrap,wrappers,71,"This PR includes reverts the previous changes to the generation of C++ wrappers during C++-Python inheritance, and introduces a fix to not mistake a move constructor of the base class for a copy constructor. It also introduces the support for protected methods and data members during the generation of the C++ wrapper. Both fixes were taken from upstream cppyy. The PR relies on a previous fix on ROOT meta: https://github.com/root-project/root/pull/6173",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6185
https://github.com/root-project/root/pull/6185:311,Integrability,wrap,wrapper,311,"This PR includes reverts the previous changes to the generation of C++ wrappers during C++-Python inheritance, and introduces a fix to not mistake a move constructor of the base class for a copy constructor. It also introduces the support for protected methods and data members during the generation of the C++ wrapper. Both fixes were taken from upstream cppyy. The PR relies on a previous fix on ROOT meta: https://github.com/root-project/root/pull/6173",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6185
https://github.com/root-project/root/pull/6185:98,Modifiability,inherit,inheritance,98,"This PR includes reverts the previous changes to the generation of C++ wrappers during C++-Python inheritance, and introduces a fix to not mistake a move constructor of the base class for a copy constructor. It also introduces the support for protected methods and data members during the generation of the C++ wrapper. Both fixes were taken from upstream cppyy. The PR relies on a previous fix on ROOT meta: https://github.com/root-project/root/pull/6173",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6185
https://github.com/root-project/root/pull/6190:185,Availability,redundant,redundant,185,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6190
https://github.com/root-project/root/pull/6190:12,Energy Efficiency,reduce,reduce,12,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6190
https://github.com/root-project/root/pull/6190:44,Performance,load,load,44,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6190
https://github.com/root-project/root/pull/6190:171,Performance,load,loading,171,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6190
https://github.com/root-project/root/pull/6190:185,Safety,redund,redundant,185,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6190
https://github.com/root-project/root/pull/6191:245,Modifiability,variab,variable,245,"Re-implement TWinNTSystem::GetLibraries() to make sure the list of libraries contains only existing - and reachable - `.lib` files. - Get the list of DLLs loaded in the current process; - Get the list of directories from the `%LIB%` environment variable; - For every DLL, check if the matching `.lib` file is found in one of the `LIB` directories; - Keep only the found ones and the `/LIBPATH:dir` linker option, if any. This also allows the user to add a directory in the `%LIB%` environment variable if a custon library is needed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6191
https://github.com/root-project/root/pull/6191:493,Modifiability,variab,variable,493,"Re-implement TWinNTSystem::GetLibraries() to make sure the list of libraries contains only existing - and reachable - `.lib` files. - Get the list of DLLs loaded in the current process; - Get the list of directories from the `%LIB%` environment variable; - For every DLL, check if the matching `.lib` file is found in one of the `LIB` directories; - Keep only the found ones and the `/LIBPATH:dir` linker option, if any. This also allows the user to add a directory in the `%LIB%` environment variable if a custon library is needed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6191
https://github.com/root-project/root/pull/6191:155,Performance,load,loaded,155,"Re-implement TWinNTSystem::GetLibraries() to make sure the list of libraries contains only existing - and reachable - `.lib` files. - Get the list of DLLs loaded in the current process; - Get the list of directories from the `%LIB%` environment variable; - For every DLL, check if the matching `.lib` file is found in one of the `LIB` directories; - Keep only the found ones and the `/LIBPATH:dir` linker option, if any. This also allows the user to add a directory in the `%LIB%` environment variable if a custon library is needed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6191
https://github.com/root-project/root/pull/6192:8,Testability,test,tests,8,The IMT tests were both registered with ROOT_ADD_GTEST and; ROOT_ADD_UNITTEST_DIR. The latter was removed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6192
https://github.com/root-project/root/pull/6195:527,Availability,toler,tolerance,527,"Fix using correct minimizer when computing the profiled nuisance parameters in the FrequentistCalculator. The Frequentist calculator needs to compute , before generating the toys, the profiled values of the nuisances for the nukll and alt case. RooProfileLL is used but the default (Minuit) minimizer was used.; Change now to use the static default value, which can be changed and also give possibility to control printlevel.; With this change we can now consistently use stressRooStats with Minuit2 minimizer. - Increase also tolerance of stressRooStats tests when using toys. This is needed in case a different minimizer is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6195
https://github.com/root-project/root/pull/6195:555,Testability,test,tests,555,"Fix using correct minimizer when computing the profiled nuisance parameters in the FrequentistCalculator. The Frequentist calculator needs to compute , before generating the toys, the profiled values of the nuisances for the nukll and alt case. RooProfileLL is used but the default (Minuit) minimizer was used.; Change now to use the static default value, which can be changed and also give possibility to control printlevel.; With this change we can now consistently use stressRooStats with Minuit2 minimizer. - Increase also tolerance of stressRooStats tests when using toys. This is needed in case a different minimizer is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6195
https://github.com/root-project/root/pull/6196:448,Availability,down,down,448,"Apple has switched to high-resolution timing for APFS, giving mu second resolution.; Ninja supports that since 1.9.0. BUT the binutils by Apple just write out zeros,; causing wrong time stamps and causing re-build events. CMake has worked around that by touching the library generated by Apple binutils,; to update its timestamp. That means:; On Apple (assuming Apple filesystem), with a recent Ninja, CMake has to be >= 3.14.4. This will be toned down to a WARNING message later - but for now, until we find the; CI nodes suffering from this, keep it as a FATAL_ERROR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6196
https://github.com/root-project/root/pull/6196:308,Deployability,update,update,308,"Apple has switched to high-resolution timing for APFS, giving mu second resolution.; Ninja supports that since 1.9.0. BUT the binutils by Apple just write out zeros,; causing wrong time stamps and causing re-build events. CMake has worked around that by touching the library generated by Apple binutils,; to update its timestamp. That means:; On Apple (assuming Apple filesystem), with a recent Ninja, CMake has to be >= 3.14.4. This will be toned down to a WARNING message later - but for now, until we find the; CI nodes suffering from this, keep it as a FATAL_ERROR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6196
https://github.com/root-project/root/pull/6196:466,Integrability,message,message,466,"Apple has switched to high-resolution timing for APFS, giving mu second resolution.; Ninja supports that since 1.9.0. BUT the binutils by Apple just write out zeros,; causing wrong time stamps and causing re-build events. CMake has worked around that by touching the library generated by Apple binutils,; to update its timestamp. That means:; On Apple (assuming Apple filesystem), with a recent Ninja, CMake has to be >= 3.14.4. This will be toned down to a WARNING message later - but for now, until we find the; CI nodes suffering from this, keep it as a FATAL_ERROR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6196
https://github.com/root-project/root/pull/6197:101,Availability,error,error,101,This double semicolon causes compilation with pedantic gcc settings in newer version to stop with an error,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6197
https://github.com/root-project/root/pull/6208:439,Safety,avoid,avoid,439,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6208
https://github.com/root-project/root/pull/6208:163,Security,access,accessed,163,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6208
https://github.com/root-project/root/pull/6208:510,Security,access,accesses,510,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6208
https://github.com/root-project/root/pull/6208:220,Testability,log,logic,220,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6208
https://github.com/root-project/root/pull/6208:418,Testability,Log,Logic,418,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6208
https://github.com/root-project/root/pull/6208:427,Usability,simpl,simpler,427,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6208
https://github.com/root-project/root/pull/6212:182,Modifiability,variab,variable,182,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6212
https://github.com/root-project/root/pull/6212:53,Security,access,access,53,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6212
https://github.com/root-project/root/pull/6212:324,Security,access,accessing,324,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6212
https://github.com/root-project/root/pull/6212:588,Testability,assert,assertion,588,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6212
https://github.com/root-project/root/pull/6212:599,Testability,Assert,Assertion,599,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6212
https://github.com/root-project/root/pull/6214:246,Security,access,access,246,"The Aggregate method was calling CheckAndFillDSColumns with an index sequence; of length 2 rather than 1 (the aggregator lambda does take 2 arguments,; but only the second corresponds to an RDF column). This resulted in; a harmless out of bounds access in a vector<bool>: two bits were checked; rather than one, but because of bit-packing the capacity of a vector<bool>; is always a multiple of 8 so this never resulted in access to invalid; memory (and because of zero-initialization, the out-of-bounds values always; happened to read to the harmless, ""correct"" value, `false`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6214
https://github.com/root-project/root/pull/6214:423,Security,access,access,423,"The Aggregate method was calling CheckAndFillDSColumns with an index sequence; of length 2 rather than 1 (the aggregator lambda does take 2 arguments,; but only the second corresponds to an RDF column). This resulted in; a harmless out of bounds access in a vector<bool>: two bits were checked; rather than one, but because of bit-packing the capacity of a vector<bool>; is always a multiple of 8 so this never resulted in access to invalid; memory (and because of zero-initialization, the out-of-bounds values always; happened to read to the harmless, ""correct"" value, `false`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6214
https://github.com/root-project/root/pull/6215:165,Testability,test,tests,165,"Improve the workaround for the deletion of fInterpreter in the TROOT destructor, which is needed in rootcling for c++ modules, and fix (or disable) the last failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6215
https://github.com/root-project/root/pull/6219:0,Deployability,Update,Update,0,"Update the cleanup routine. Add cleaning up failed fits as well, i.e.,; CLs < 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6219
https://github.com/root-project/root/pull/6219:19,Integrability,rout,routine,19,"Update the cleanup routine. Add cleaning up failed fits as well, i.e.,; CLs < 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6219
https://github.com/root-project/root/pull/6220:533,Energy Efficiency,reduce,reduce,533,"Before this commit, we had a generic RAction and two template; specializations for `RAction<SnapshotHelper>` and; `RAction<SnapshotHelperMT>`. Common logic between the three was kept; in the common base class `RActionCRTP<RAction<...>>`. This is unnecessarily complex. Instead, we now have a single RAction; class and a helper ActionImpl type that contains the parts of the; logic that needs to differ for `RAction<SnapshotHelper>` and; `RAction<SnapshotHelperMT>`. A single specialization of ActionImpl is; used for both helpers to reduce code duplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6220
https://github.com/root-project/root/pull/6220:150,Testability,log,logic,150,"Before this commit, we had a generic RAction and two template; specializations for `RAction<SnapshotHelper>` and; `RAction<SnapshotHelperMT>`. Common logic between the three was kept; in the common base class `RActionCRTP<RAction<...>>`. This is unnecessarily complex. Instead, we now have a single RAction; class and a helper ActionImpl type that contains the parts of the; logic that needs to differ for `RAction<SnapshotHelper>` and; `RAction<SnapshotHelperMT>`. A single specialization of ActionImpl is; used for both helpers to reduce code duplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6220
https://github.com/root-project/root/pull/6220:375,Testability,log,logic,375,"Before this commit, we had a generic RAction and two template; specializations for `RAction<SnapshotHelper>` and; `RAction<SnapshotHelperMT>`. Common logic between the three was kept; in the common base class `RActionCRTP<RAction<...>>`. This is unnecessarily complex. Instead, we now have a single RAction; class and a helper ActionImpl type that contains the parts of the; logic that needs to differ for `RAction<SnapshotHelper>` and; `RAction<SnapshotHelperMT>`. A single specialization of ActionImpl is; used for both helpers to reduce code duplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6220
https://github.com/root-project/root/pull/6221:0,Deployability,Integrat,Integrate,0,Integrate [Bitshuffle pre-conditioner](https://github.com/kiyo-masui/bitshuffle) to LZ4 compression algorithm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6221
https://github.com/root-project/root/pull/6221:0,Integrability,Integrat,Integrate,0,Integrate [Bitshuffle pre-conditioner](https://github.com/kiyo-masui/bitshuffle) to LZ4 compression algorithm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6221
https://github.com/root-project/root/pull/6223:621,Deployability,release,release,621,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:248,Integrability,message,message,248,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:1147,Integrability,message,message,1147,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:486,Modifiability,refactor,refactorings,486,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:721,Modifiability,refactor,refactorings,721,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:1263,Modifiability,refactor,refactorings,1263,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:1498,Performance,perform,performance,1498,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:547,Testability,log,logic,547,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:78,Usability,clear,clearer,78,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6223:1546,Usability,clear,clearly,1546,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6223
https://github.com/root-project/root/pull/6224:0,Usability,Simpl,Simplify,0,Simplify writing multiple `RNTuple`s in a single open `TFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6224
https://github.com/root-project/root/pull/6225:168,Availability,error,error,168,"The old client library libXrdClient is removed.; Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already; disabled by default - give error if someone enables it while building; with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6225
https://github.com/root-project/root/pull/6231:881,Availability,failure,failures,881,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6231
https://github.com/root-project/root/pull/6231:9,Modifiability,refactor,refactoring,9,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6231
https://github.com/root-project/root/pull/6231:586,Security,access,access,586,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6231
https://github.com/root-project/root/pull/6231:753,Testability,test,testReport,753,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6231
https://github.com/root-project/root/pull/6231:876,Testability,test,test,876,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6231
https://github.com/root-project/root/pull/6232:15,Performance,optimiz,optimize,15,… to decide to optimize/not the user scripts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6232
https://github.com/root-project/root/pull/6233:9,Integrability,depend,dependency,9,It was a dependency when building it using the old version 1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6233
https://github.com/root-project/root/pull/6236:65,Modifiability,config,config,65,"When --python2-version and --python3-version were added the root-config --usage, some other option were accidentally deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6236
https://github.com/root-project/root/pull/6237:38,Deployability,install,installed,38,The headers in the new PyROOT are not installed with COMPONENT headers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6237
https://github.com/root-project/root/pull/6238:49,Testability,test,test,49,This PR fixes ROOT-10152.; It also adds a better test and a proper fix for ROOT-9563.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6238
https://github.com/root-project/root/pull/6241:173,Deployability,release,release,173,1. Correctly cleanup Qt5WebEngine widgets to let normally exit ROOT; 2. Adjust to latest CEF code; 3. Support ROOT batch mode for CEF (with use of xvfb); 4. Provide hook to release all existing RCanvas on ROOT exit; 5. Update latest JSROOT dev 18/08/2020,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6241
https://github.com/root-project/root/pull/6241:219,Deployability,Update,Update,219,1. Correctly cleanup Qt5WebEngine widgets to let normally exit ROOT; 2. Adjust to latest CEF code; 3. Support ROOT batch mode for CEF (with use of xvfb); 4. Provide hook to release all existing RCanvas on ROOT exit; 5. Update latest JSROOT dev 18/08/2020,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6241
https://github.com/root-project/root/pull/6243:225,Testability,assert,assert,225,"While working on a feature, these commits piled up. They could be split off from the feature branch.; I hope they are (mostly) NFCs, but small things are changing. For example, floating point computations are reordered, and `assert(0)` are replaced by `throw` and `#include`s are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6243
https://github.com/root-project/root/pull/6244:299,Availability,down,down,299,"boost_align and boost_python have umbrella header design, however we cannot use that specifier because then it warns about all the rest of boost not being part of the particular module. This patch just adds align.hpp and python.hpp in the module. This may lead to some duplicates which we will hunt down and fix if needed. The patch should fix cmssw. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6244
https://github.com/root-project/root/pull/6244:191,Deployability,patch,patch,191,"boost_align and boost_python have umbrella header design, however we cannot use that specifier because then it warns about all the rest of boost not being part of the particular module. This patch just adds align.hpp and python.hpp in the module. This may lead to some duplicates which we will hunt down and fix if needed. The patch should fix cmssw. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6244
https://github.com/root-project/root/pull/6244:327,Deployability,patch,patch,327,"boost_align and boost_python have umbrella header design, however we cannot use that specifier because then it warns about all the rest of boost not being part of the particular module. This patch just adds align.hpp and python.hpp in the module. This may lead to some duplicates which we will hunt down and fix if needed. The patch should fix cmssw. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6244
https://github.com/root-project/root/pull/6245:109,Modifiability,inherit,inheritable,109,"This commit teaches ASTDeclReader::attachPreviousDecl to successfully merge; two Decl's when one contains an inheritable attribute like the; MSInheritanceAttr. Usually, attributes that are needed to be present along the; redeclaration chain are attached during ASTReading from; ASTDeclReader::attachPreviousDecl, but no such thing is done for inheritable; attributes. . Differential Revision: https://reviews.llvm.org/D83174. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6245
https://github.com/root-project/root/pull/6245:343,Modifiability,inherit,inheritable,343,"This commit teaches ASTDeclReader::attachPreviousDecl to successfully merge; two Decl's when one contains an inheritable attribute like the; MSInheritanceAttr. Usually, attributes that are needed to be present along the; redeclaration chain are attached during ASTReading from; ASTDeclReader::attachPreviousDecl, but no such thing is done for inheritable; attributes. . Differential Revision: https://reviews.llvm.org/D83174. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6245
https://github.com/root-project/root/pull/6246:29,Testability,Test,Test,29,With this change:. 1036/1038 Test #853: tutorial-tmva-TMVA_Higgs_Classification ............................. Passed 1248.66 sec; 1037/1038 Test #854: tutorial-tmva-TMVA_RNN_Classification ............................... Passed 1252.92 sec; 1038/1038 Test #852: tutorial-tmva-TMVA_CNN_Classification ............................... Passed 1273.47 sec. Instead of timing out at 1200 s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6246
https://github.com/root-project/root/pull/6246:140,Testability,Test,Test,140,With this change:. 1036/1038 Test #853: tutorial-tmva-TMVA_Higgs_Classification ............................. Passed 1248.66 sec; 1037/1038 Test #854: tutorial-tmva-TMVA_RNN_Classification ............................... Passed 1252.92 sec; 1038/1038 Test #852: tutorial-tmva-TMVA_CNN_Classification ............................... Passed 1273.47 sec. Instead of timing out at 1200 s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6246
https://github.com/root-project/root/pull/6246:251,Testability,Test,Test,251,With this change:. 1036/1038 Test #853: tutorial-tmva-TMVA_Higgs_Classification ............................. Passed 1248.66 sec; 1037/1038 Test #854: tutorial-tmva-TMVA_RNN_Classification ............................... Passed 1252.92 sec; 1038/1038 Test #852: tutorial-tmva-TMVA_CNN_Classification ............................... Passed 1273.47 sec. Instead of timing out at 1200 s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6246
https://github.com/root-project/root/pull/6248:116,Availability,failure,failure,116,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6248
https://github.com/root-project/root/pull/6248:325,Availability,failure,failure,325,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6248
https://github.com/root-project/root/pull/6248:288,Deployability,patch,patch,288,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6248
https://github.com/root-project/root/pull/6248:466,Testability,test,testReport,466,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6248
https://github.com/root-project/root/pull/6250:156,Energy Efficiency,reduce,reduced,156,"In old versions of RooFormula, one could mutate the internal formula; object from the outside. This was unsafe. Therefore, the visibility of; formula() was reduced.; It can, however, be beneficial to have at least read access. Therefore,; a const overload of the function was provided to give users access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6250
https://github.com/root-project/root/pull/6250:104,Safety,unsafe,unsafe,104,"In old versions of RooFormula, one could mutate the internal formula; object from the outside. This was unsafe. Therefore, the visibility of; formula() was reduced.; It can, however, be beneficial to have at least read access. Therefore,; a const overload of the function was provided to give users access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6250
https://github.com/root-project/root/pull/6250:219,Security,access,access,219,"In old versions of RooFormula, one could mutate the internal formula; object from the outside. This was unsafe. Therefore, the visibility of; formula() was reduced.; It can, however, be beneficial to have at least read access. Therefore,; a const overload of the function was provided to give users access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6250
https://github.com/root-project/root/pull/6250:299,Security,access,access,299,"In old versions of RooFormula, one could mutate the internal formula; object from the outside. This was unsafe. Therefore, the visibility of; formula() was reduced.; It can, however, be beneficial to have at least read access. Therefore,; a const overload of the function was provided to give users access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6250
https://github.com/root-project/root/pull/6253:10,Availability,redundant,redundant,10,Fix minor redundant code in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6253
https://github.com/root-project/root/pull/6253:10,Safety,redund,redundant,10,Fix minor redundant code in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6253
https://github.com/root-project/root/pull/6255:60,Safety,predict,prediction,60,Call SetDirectory(0) for the internal histogram ( plot + MC prediction templates) managed by TFractionFitter. This avoids double-delete when deleting TFractionFitter and gDirectory and fixes ROOT-10752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6255
https://github.com/root-project/root/pull/6255:115,Safety,avoid,avoids,115,Call SetDirectory(0) for the internal histogram ( plot + MC prediction templates) managed by TFractionFitter. This avoids double-delete when deleting TFractionFitter and gDirectory and fixes ROOT-10752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6255
https://github.com/root-project/root/pull/6257:39,Testability,log,log,39,Improve also TF1::GetRandom to control log(linear) scale when computing the tabulated CDF; used for generating the random numbers. This fixes ROOT-9583,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6257
https://github.com/root-project/root/pull/6260:135,Availability,Error,Error,135,"In Ubuntu snap chrome version is used and it does not correctly; translate command line arguments, making problem to use it in batch.; Error already communicated by Axel:; https://bugs.launchpad.net/ubuntu/+source/snap/+bug/1893020; Once it is fixed, this commit can be reverted",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6260
https://github.com/root-project/root/pull/6261:160,Modifiability,layers,layers,160,"Special algorithm is used now to produce pcon/pgon shape polygons; without inner surface (rmin==0). Where was mistake, which causes problem; when more than 2 z layers was specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6261
https://github.com/root-project/root/pull/6263:597,Deployability,update,updates,597,[Work Product] This pull request contains the code pertaining to the **Google Summer of Code 2020** project [Development of 3D CNN in TMVA](https://summerofcode.withgoogle.com/projects/#5442246578536448). It implements the following features:. - 3D CNN layer for cpu and and tests for the same; - 3D MaxPool layer for cpu and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is Added backward pass tests([1b82793](https://github.com/root-project/root/pull/6263/commits/1b8279319807d1940b5f4a3d5278e15f74a941fa)). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6263
https://github.com/root-project/root/pull/6263:275,Testability,test,tests,275,[Work Product] This pull request contains the code pertaining to the **Google Summer of Code 2020** project [Development of 3D CNN in TMVA](https://summerofcode.withgoogle.com/projects/#5442246578536448). It implements the following features:. - 3D CNN layer for cpu and and tests for the same; - 3D MaxPool layer for cpu and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is Added backward pass tests([1b82793](https://github.com/root-project/root/pull/6263/commits/1b8279319807d1940b5f4a3d5278e15f74a941fa)). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6263
https://github.com/root-project/root/pull/6263:326,Testability,test,tests,326,[Work Product] This pull request contains the code pertaining to the **Google Summer of Code 2020** project [Development of 3D CNN in TMVA](https://summerofcode.withgoogle.com/projects/#5442246578536448). It implements the following features:. - 3D CNN layer for cpu and and tests for the same; - 3D MaxPool layer for cpu and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is Added backward pass tests([1b82793](https://github.com/root-project/root/pull/6263/commits/1b8279319807d1940b5f4a3d5278e15f74a941fa)). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6263
https://github.com/root-project/root/pull/6263:436,Testability,test,tests,436,[Work Product] This pull request contains the code pertaining to the **Google Summer of Code 2020** project [Development of 3D CNN in TMVA](https://summerofcode.withgoogle.com/projects/#5442246578536448). It implements the following features:. - 3D CNN layer for cpu and and tests for the same; - 3D MaxPool layer for cpu and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is Added backward pass tests([1b82793](https://github.com/root-project/root/pull/6263/commits/1b8279319807d1940b5f4a3d5278e15f74a941fa)). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6263
https://github.com/root-project/root/pull/6264:18,Safety,timeout,timeouts,18,To help debug the timeouts seen on MacOS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6264
https://github.com/root-project/root/pull/6266:19,Deployability,integrat,integrated,19,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6266:19,Integrability,integrat,integrated,19,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6266:72,Integrability,message,message,72,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6266:318,Performance,Cache,Cache,318,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6266:400,Safety,safe,safe,400,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6266:267,Testability,test,test,267,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6266:307,Testability,test,tests,307,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6266
https://github.com/root-project/root/pull/6269:18,Safety,timeout,timeouts,18,To help debug the timeouts seen on MacOS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6269
https://github.com/root-project/root/pull/6273:41,Integrability,Interface,Interface,41,This PR aims to add tutorials of PyTorch Interface in TMVA and is an extension to the main PR i.e #5757. Feel free to comment and share feedback.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6273
https://github.com/root-project/root/pull/6273:136,Usability,feedback,feedback,136,This PR aims to add tutorials of PyTorch Interface in TMVA and is an extension to the main PR i.e #5757. Feel free to comment and share feedback.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6273
https://github.com/root-project/root/pull/6274:43,Performance,concurren,concurrency,43,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6274
https://github.com/root-project/root/pull/6274:131,Safety,timeout,timeouts,131,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6274
https://github.com/root-project/root/pull/6275:438,Deployability,Update,Update,438,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6275
https://github.com/root-project/root/pull/6275:102,Performance,load,loaded,102,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6275
https://github.com/root-project/root/pull/6275:219,Performance,load,loaded,219,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6275
https://github.com/root-project/root/pull/6275:295,Usability,Simpl,Simplify,295,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6275
https://github.com/root-project/root/pull/6280:352,Energy Efficiency,reduce,reduce,352,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6280
https://github.com/root-project/root/pull/6280:43,Performance,concurren,concurrency,43,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6280
https://github.com/root-project/root/pull/6280:131,Safety,timeout,timeouts,131,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6280
https://github.com/root-project/root/pull/6280:162,Safety,avoid,avoid,162,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6280
https://github.com/root-project/root/pull/6280:289,Testability,test,tests,289,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6280
https://github.com/root-project/root/pull/6282:124,Testability,Test,Test,124,"Copy of subdirectories with configure_file is not working correctly,; therefore use file(COPY ...) signature cmake command. Test that batch mode works on mac, no need for special ozone (headless) builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6282
https://github.com/root-project/root/pull/6284:143,Availability,error,errors,143,By setting an axis range underflow/overflow can also be included in the; cumulative histograms. This fixes ROOT-10832. Fix also computation of errors in case of a weighted histogram.; Note that the computed error on the cumulative histogram will be correlated with the previous bins.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6284
https://github.com/root-project/root/pull/6284:207,Availability,error,error,207,By setting an axis range underflow/overflow can also be included in the; cumulative histograms. This fixes ROOT-10832. Fix also computation of errors in case of a weighted histogram.; Note that the computed error on the cumulative histogram will be correlated with the previous bins.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6284
https://github.com/root-project/root/pull/6286:41,Availability,error,errors,41,Same as the backport for 6.18! Fixes the errors in the nightlies: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=21468. Coupled to https://github.com/root-project/roottest/pull/590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6286
https://github.com/root-project/root/pull/6292:51,Deployability,release,release,51,"* xrootd does not have anymore the -Werror flag in release mode.; Therefore, we can remove the -w flag and use the standard; ROOT_EXTERNAL_CXX_FLAGS for the builtin xrootd.; * Explicitely set the build type of xrootd to Release. This switches; from the default RelWithDebInfo to plain Release and ensures that; -Werror is not set. @amadio @oshadura Do you have any objections against these changes? Here are the magic lines in xrootd cmake (since 4.10.x and later): https://github.com/xrootd/xrootd/blob/stable-4.12.x/cmake/XRootDOSDefs.cmake#L26-L39)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6292
https://github.com/root-project/root/pull/6292:220,Deployability,Release,Release,220,"* xrootd does not have anymore the -Werror flag in release mode.; Therefore, we can remove the -w flag and use the standard; ROOT_EXTERNAL_CXX_FLAGS for the builtin xrootd.; * Explicitely set the build type of xrootd to Release. This switches; from the default RelWithDebInfo to plain Release and ensures that; -Werror is not set. @amadio @oshadura Do you have any objections against these changes? Here are the magic lines in xrootd cmake (since 4.10.x and later): https://github.com/xrootd/xrootd/blob/stable-4.12.x/cmake/XRootDOSDefs.cmake#L26-L39)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6292
https://github.com/root-project/root/pull/6292:285,Deployability,Release,Release,285,"* xrootd does not have anymore the -Werror flag in release mode.; Therefore, we can remove the -w flag and use the standard; ROOT_EXTERNAL_CXX_FLAGS for the builtin xrootd.; * Explicitely set the build type of xrootd to Release. This switches; from the default RelWithDebInfo to plain Release and ensures that; -Werror is not set. @amadio @oshadura Do you have any objections against these changes? Here are the magic lines in xrootd cmake (since 4.10.x and later): https://github.com/xrootd/xrootd/blob/stable-4.12.x/cmake/XRootDOSDefs.cmake#L26-L39)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6292
https://github.com/root-project/root/pull/6294:91,Availability,error,errors,91,"The builtin xrootd version 4.8.5 has the -Werror flag in release mode,; which causes build errors with future compilers such as happened with; gcc9. The -w flag suppresses all warnings even if -Werror is set; afterwards. Future xrootd releases (4.12 and later) have the -Werror; flag removed in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6294
https://github.com/root-project/root/pull/6294:57,Deployability,release,release,57,"The builtin xrootd version 4.8.5 has the -Werror flag in release mode,; which causes build errors with future compilers such as happened with; gcc9. The -w flag suppresses all warnings even if -Werror is set; afterwards. Future xrootd releases (4.12 and later) have the -Werror; flag removed in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6294
https://github.com/root-project/root/pull/6294:235,Deployability,release,releases,235,"The builtin xrootd version 4.8.5 has the -Werror flag in release mode,; which causes build errors with future compilers such as happened with; gcc9. The -w flag suppresses all warnings even if -Werror is set; afterwards. Future xrootd releases (4.12 and later) have the -Werror; flag removed in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6294
https://github.com/root-project/root/pull/6294:295,Deployability,release,release,295,"The builtin xrootd version 4.8.5 has the -Werror flag in release mode,; which causes build errors with future compilers such as happened with; gcc9. The -w flag suppresses all warnings even if -Werror is set; afterwards. Future xrootd releases (4.12 and later) have the -Werror; flag removed in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6294
https://github.com/root-project/root/pull/6295:14,Energy Efficiency,adapt,adapt,14,Backport (and adapt) llvm-svn 331428 plus required prerequisites.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6295
https://github.com/root-project/root/pull/6295:14,Modifiability,adapt,adapt,14,Backport (and adapt) llvm-svn 331428 plus required prerequisites.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6295
https://github.com/root-project/root/pull/6298:416,Availability,avail,available,416,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6298
https://github.com/root-project/root/pull/6298:365,Testability,test,tests,365,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6298
https://github.com/root-project/root/pull/6298:468,Testability,test,tests,468,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6298
https://github.com/root-project/root/pull/6298:617,Testability,test,tests,617,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6298
https://github.com/root-project/root/pull/6298:184,Usability,usab,usable,184,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6298
https://github.com/root-project/root/pull/6301:341,Modifiability,Extend,Extend,341,"Avoid global stack for TCling's mutex states. This solves race condition and ordering issues for the content of TCling::fInitialMutex. Rather than relying on a global stack of state, leverage the fact that the code that temporarily; suspend the interpreter lock during user-code execution is already keeping/stashing away some; information. Extend that code to stash all the necessary information (was 'only' the delta; and is now the delta + initial state + recurse count.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6301
https://github.com/root-project/root/pull/6301:58,Performance,race condition,race condition,58,"Avoid global stack for TCling's mutex states. This solves race condition and ordering issues for the content of TCling::fInitialMutex. Rather than relying on a global stack of state, leverage the fact that the code that temporarily; suspend the interpreter lock during user-code execution is already keeping/stashing away some; information. Extend that code to stash all the necessary information (was 'only' the delta; and is now the delta + initial state + recurse count.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6301
https://github.com/root-project/root/pull/6301:0,Safety,Avoid,Avoid,0,"Avoid global stack for TCling's mutex states. This solves race condition and ordering issues for the content of TCling::fInitialMutex. Rather than relying on a global stack of state, leverage the fact that the code that temporarily; suspend the interpreter lock during user-code execution is already keeping/stashing away some; information. Extend that code to stash all the necessary information (was 'only' the delta; and is now the delta + initial state + recurse count.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6301
https://github.com/root-project/root/pull/6302:6,Deployability,upgrade,upgrade,6,"After upgrade to latest CEF one cannot use it from original directory and have to copy it into ROOT `bin/` or `lib/` subdirectories; But when running, sometime CEF tries to search it's files in other location.; Try to convince CEF to search such files in concrete locations using `CefSettings` class. Fix several problems with Windows, provide short instruction how to compile CEF on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6302
https://github.com/root-project/root/pull/6305:73,Performance,load,loaded,73,An small bug detected in LCG98 that only affect python2; JupyROOT is not loaded when you are importing ROOT in the notebook. this code fix this problem. Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6305
https://github.com/root-project/root/pull/6305:13,Safety,detect,detected,13,An small bug detected in LCG98 that only affect python2; JupyROOT is not loaded when you are importing ROOT in the notebook. this code fix this problem. Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6305
https://github.com/root-project/root/pull/6307:158,Integrability,depend,dependent,158,"While parsing LateParsedTemplates, Clang assumes that the Global DeclID matches; with the Local DeclID of a Decl. This is not the case when we have multiple; dependent modules , each having their own LateParsedTemplate section. In such a; case, a Local/Global DeclID confusion occurs which leads to improper casting of; FunctionDecl's. This commit creates a Vector to map the LateParsedTemplate section of each; Module with their module file and therefore resolving the Global/Local DeclID; confusion. Reviewed By: rsmith. Differential Revision: https://reviews.llvm.org/D86514. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6307
https://github.com/root-project/root/pull/6309:348,Security,expose,exposed,348,"On Windows, the M_PI constants are hidden inside #define _USE_MATH_DEFINES; guard. If this macro is not defined at the start of the program, some; other header file might include math.h and the header is suppressed; forever. Therefore, this commit moves #define _USE_MATH_DEFINES to the start of; the file and also custom defines M_PI as it is not exposed on building; Modules with Windows. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6309
https://github.com/root-project/root/pull/6310:552,Deployability,integrat,integrate,552,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6310
https://github.com/root-project/root/pull/6310:1058,Energy Efficiency,reduce,reduced,1058,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6310
https://github.com/root-project/root/pull/6310:481,Integrability,interface,interfaces,481,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6310
https://github.com/root-project/root/pull/6310:552,Integrability,integrat,integrate,552,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6310
https://github.com/root-project/root/pull/6310:184,Usability,simpl,simplifies,184,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6310
https://github.com/root-project/root/pull/6312:104,Deployability,install,installed,104,This supersedes https://github.com/root-project/root/pull/6248 and should fix the case when JupyROOT is installed on Python directories. Uses the same solution implemented by @eguiraud for `libROOTPythonizations`:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L145-L146,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6312
https://github.com/root-project/root/pull/6315:218,Deployability,integrat,integrated,218,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6315:218,Integrability,integrat,integrated,218,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6315:109,Performance,cache,cached,109,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6315:120,Performance,Optimiz,Optimize,120,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6315:152,Performance,cache,caches,152,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6315:277,Performance,cache,cached,277,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6315:547,Performance,cache,cached,547,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6315
https://github.com/root-project/root/pull/6321:19,Performance,load,loaded,19,"When RooFitCore is loaded, an initialisation function is called.; It prints the RooFit banner, and contains a dummy function that can; load architecture-specific computation libraries once they are; implemented. So far, this only works for gcc and clang. For other compilers, a fall back; without architecture specific symbols will be used. Manos will use this; to provide Root with optimised fitting libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6321
https://github.com/root-project/root/pull/6321:135,Performance,load,load,135,"When RooFitCore is loaded, an initialisation function is called.; It prints the RooFit banner, and contains a dummy function that can; load architecture-specific computation libraries once they are; implemented. So far, this only works for gcc and clang. For other compilers, a fall back; without architecture specific symbols will be used. Manos will use this; to provide Root with optimised fitting libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6321
https://github.com/root-project/root/pull/6322:67,Integrability,depend,dependencies,67,First steps in direction of development RNTuple C API with minimal dependencies,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6322
https://github.com/root-project/root/pull/6323:60,Testability,Test,Testing,60,"This is a copy of #6300, where one commit has been removed. Testing now if windows is happy without the commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6323
https://github.com/root-project/root/pull/6325:9,Availability,recover,recovery,9,"It makes recovery of column values slightly faster, which is visible in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6325
https://github.com/root-project/root/pull/6325:9,Safety,recover,recovery,9,"It makes recovery of column values slightly faster, which is visible in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6325
https://github.com/root-project/root/pull/6327:1111,Availability,avail,available,1111,"d"" executor for ROOT, that takes an execution policy as a parameter and initializes the corresponding data member executor to execute on. ```cpp; ROOT::Internal::TExecutor x1{}; // defaults to multithreaded if IMT enabled, otherwise sequential; ROOT::EnableImplicitMT();; ROOT::Internal::TExecutor x2{};; ROOT::Internal::TExecutor x3(ROOT::Internal::ExecutionPolicy::kMultithread, 20); // will actually have ROOT::GetPoolSize() threads; ROOT::Internal::TExecutor x4(ROOT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:1701,Energy Efficiency,Reduce,Reduce,1701,"s TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:3006,Energy Efficiency,Adapt,Adapt,3006,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:3206,Energy Efficiency,Adapt,Adapt,3206,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:1401,Integrability,depend,dependencies,1401,":Internal::TExecutor x2{};; ROOT::Internal::TExecutor x3(ROOT::Internal::ExecutionPolicy::kMultithread, 20); // will actually have ROOT::GetPoolSize() threads; ROOT::Internal::TExecutor x4(ROOT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the chil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:1478,Integrability,interface,interfaces,1478,"OT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:1577,Integrability,interface,interfaces,1577,"OT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:2111,Integrability,interface,interfaces,2111,"ase we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:2393,Integrability,interface,interface,2393,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:2815,Integrability,interface,interface,2815,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:2907,Integrability,depend,dependencies,2907,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:2787,Modifiability,Extend,Extend,2787,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:3006,Modifiability,Adapt,Adapt,3006,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:3153,Modifiability,Refactor,Refactoring,3153,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:3206,Modifiability,Adapt,Adapt,3206,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:1386,Safety,avoid,avoid,1386,":Internal::TExecutor x2{};; ROOT::Internal::TExecutor x3(ROOT::Internal::ExecutionPolicy::kMultithread, 20); // will actually have ROOT::GetPoolSize() threads; ROOT::Internal::TExecutor x4(ROOT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the chil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/pull/6327:2857,Testability,test,tests,2857,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6327
https://github.com/root-project/root/issues/6331:95,Availability,failure,failures,95,"After https://sft.its.cern.ch/jira/browse/ROOT-10849 is fixed, we are now left with three test failures:. * projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead; * projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead; * projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6331
https://github.com/root-project/root/issues/6331:90,Testability,test,test,90,"After https://sft.its.cern.ch/jira/browse/ROOT-10849 is fixed, we are now left with three test failures:. * projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead; * projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead; * projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6331
https://github.com/root-project/root/pull/6334:91,Deployability,update,update,91,Apache 2.4 has now own FastCGI implementation and uses different name for parameter.; Also update docu with example FastCGI configuration for Apache 2.4 - older version no longer relevant,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6334
https://github.com/root-project/root/pull/6334:124,Deployability,configurat,configuration,124,Apache 2.4 has now own FastCGI implementation and uses different name for parameter.; Also update docu with example FastCGI configuration for Apache 2.4 - older version no longer relevant,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6334
https://github.com/root-project/root/pull/6334:124,Modifiability,config,configuration,124,Apache 2.4 has now own FastCGI implementation and uses different name for parameter.; Also update docu with example FastCGI configuration for Apache 2.4 - older version no longer relevant,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6334
https://github.com/root-project/root/pull/6339:83,Safety,avoid,avoid,83,"Besides being more in line with our coding conventions, we will need; the split to avoid circular includes between ColumnReaders.hxx and; RDataSource.hxx when we implement lazy RDS column readers. This PR is NFC, at least in spirit, but let's see what the bot says anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6339
https://github.com/root-project/root/issues/6343:712,Availability,error,error,712,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:899,Availability,error,error,899,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:1055,Availability,error,error,1055,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:1212,Availability,error,error,1212,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:1407,Availability,error,error,1407,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:755,Usability,guid,guide,755,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:949,Usability,guid,guide,949,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:1105,Usability,guid,guide,1105,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6343:1424,Usability,guid,guide,1424,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6343
https://github.com/root-project/root/issues/6344:1257,Performance,perform,performed,1257,"race looks typically like this; ```; #5 0x00007fc5a101e282 in TPad::ExecuteEvent(int, int, int) (this=0x5960390, event=21, px=1031, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:2149; #6 0x00007fc5a100442d in TCanvas::HandleInput(EEventType, int, int) (this=0x3566d70, event=kButton1Motion, px=637, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:1291; #7 0x00007fc5a156c04b in TRootEmbeddedCanvas::HandleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6344
https://github.com/root-project/root/issues/6344:2189,Safety,unsafe,unsafe,2189,"andleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPad::Resize, e.g. ```; // Compute new pad positions in the NDC space of parent; fXlowNDC = Double_t(apx1 - parentpx1)/Double_t(parentpx2 - parentpx1);; fYlowNDC = Double_t(apy1 - parentpy1)/Double_t(parentpy2 - parentpy1);; fWNDC = Double_t(apx2 - apx1)/Double_t(parentpx2 - parentpx1);; fHNDC = Double_t(apy2 - apy1)/Double_t(parentpy2 - parentpy1);; ```. Would someone from developers be interested to look there ?. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6344
https://github.com/root-project/root/issues/6344:1339,Usability,simpl,simply,1339,"int) (this=0x5960390, event=21, px=1031, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:2149; #6 0x00007fc5a100442d in TCanvas::HandleInput(EEventType, int, int) (this=0x3566d70, event=kButton1Motion, px=637, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:1291; #7 0x00007fc5a156c04b in TRootEmbeddedCanvas::HandleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPad::Resize, e.g. ```; // Compute new pad positions in the NDC space of parent; fXlowNDC = Do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6344
https://github.com/root-project/root/issues/6345:105,Availability,error,errors,105,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:199,Availability,error,error,199,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:390,Availability,error,error,390,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:692,Availability,error,error,692,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:988,Availability,error,error,988,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:1296,Availability,error,error,1296,"nput_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. It works ok with either TH1F or TH2F. It also worked with root 6.20.06. This is low priority. It showed up in ATLAS code, but the code in question is long obsolete and probably; best just removed. Submitting it now just to document the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:1604,Availability,error,error,1604,"nput_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. It works ok with either TH1F or TH2F. It also worked with root 6.20.06. This is low priority. It showed up in ATLAS code, but the code in question is long obsolete and probably; best just removed. Submitting it now just to document the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:494,Deployability,release,releases,494,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:796,Deployability,release,releases,796,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:1092,Deployability,release,releases,1092,". gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. It works ok with either TH1F or TH2F. It also worked w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:1400,Deployability,release,releases,1400,"nput_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. It works ok with either TH1F or TH2F. It also worked with root 6.20.06. This is low priority. It showed up in ATLAS code, but the code in question is long obsolete and probably; best just removed. Submitting it now just to document the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/issues/6345:1702,Deployability,release,releases,1702,"nput_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. It works ok with either TH1F or TH2F. It also worked with root 6.20.06. This is low priority. It showed up in ATLAS code, but the code in question is long obsolete and probably; best just removed. Submitting it now just to document the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6345
https://github.com/root-project/root/pull/6346:8,Deployability,release,release,8,The new release includes some improvements:; * Implement hessian matrices via the clad::jacobian interface. See more at: https://github.com/vgvassilev/clad/blob/v0.7/docs/ReleaseNotes.md. This patch should be the last part of the fix for ROOT-10886.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6346
https://github.com/root-project/root/pull/6346:171,Deployability,Release,ReleaseNotes,171,The new release includes some improvements:; * Implement hessian matrices via the clad::jacobian interface. See more at: https://github.com/vgvassilev/clad/blob/v0.7/docs/ReleaseNotes.md. This patch should be the last part of the fix for ROOT-10886.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6346
https://github.com/root-project/root/pull/6346:193,Deployability,patch,patch,193,The new release includes some improvements:; * Implement hessian matrices via the clad::jacobian interface. See more at: https://github.com/vgvassilev/clad/blob/v0.7/docs/ReleaseNotes.md. This patch should be the last part of the fix for ROOT-10886.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6346
https://github.com/root-project/root/pull/6346:97,Integrability,interface,interface,97,The new release includes some improvements:; * Implement hessian matrices via the clad::jacobian interface. See more at: https://github.com/vgvassilev/clad/blob/v0.7/docs/ReleaseNotes.md. This patch should be the last part of the fix for ROOT-10886.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6346
https://github.com/root-project/root/issues/6347:60,Availability,error,error,60,"Reading `RVecs` with `RNTuple` incurs in an off-by-one-byte error, because all `RVec<T>` are deserialized as `std::vector<char>`, but the position of the data buffer is different for `RVecs`:. ```; >>> p ((ROOT::VecOps::RVec<int>*)0x5555596c72a0)->data(); $983 = (int *) 0x5555581b2918; >>> p ((std::vector<char, std::allocator<char> > *)0x5555596c72a0)->data(); $984 = 0x5555581b2910; ```. I think the problematic logic is [here](https://github.com/root-project/root/blob/8d5b55f51ad8449d83fc0db8f49217e556c34036/tree/ntuple/v7/src/RField.cxx#L660). A second issue related to RVecs is that at RField.cxx:638 we use RVectorField for reading RVecs, but this means that the parent RField will have type name `std::vector<...>` even if it should (probably?) be `RVec<...>`. #6336 contains a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6347
https://github.com/root-project/root/issues/6347:415,Testability,log,logic,415,"Reading `RVecs` with `RNTuple` incurs in an off-by-one-byte error, because all `RVec<T>` are deserialized as `std::vector<char>`, but the position of the data buffer is different for `RVecs`:. ```; >>> p ((ROOT::VecOps::RVec<int>*)0x5555596c72a0)->data(); $983 = (int *) 0x5555581b2918; >>> p ((std::vector<char, std::allocator<char> > *)0x5555596c72a0)->data(); $984 = 0x5555581b2910; ```. I think the problematic logic is [here](https://github.com/root-project/root/blob/8d5b55f51ad8449d83fc0db8f49217e556c34036/tree/ntuple/v7/src/RField.cxx#L660). A second issue related to RVecs is that at RField.cxx:638 we use RVectorField for reading RVecs, but this means that the parent RField will have type name `std::vector<...>` even if it should (probably?) be `RVec<...>`. #6336 contains a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6347
https://github.com/root-project/root/pull/6348:296,Performance,load,load,296,"This PR adds a new version of the `RDataSource::GetColumnReaders` method. This new version allows the implementation of per-datasource, lazy column readers that know how to communicate with the concrete associated datasource type. As a consequence, datasource implementations are not required to load; values of all required columns when `RDataSource::SetEntry` is called, but; the loading can be delayed to the moment in which a value is actually; needed. In case of strict upstream `Filters`, this should result in; less work performed and therefore improved runtimes. For the `lhcb` benchmark at https://github.com/jblomer/iotools, using the new lazy column readers for `RNTupleDS` results in a 40% runtime improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6348
https://github.com/root-project/root/pull/6348:382,Performance,load,loading,382,"This PR adds a new version of the `RDataSource::GetColumnReaders` method. This new version allows the implementation of per-datasource, lazy column readers that know how to communicate with the concrete associated datasource type. As a consequence, datasource implementations are not required to load; values of all required columns when `RDataSource::SetEntry` is called, but; the loading can be delayed to the moment in which a value is actually; needed. In case of strict upstream `Filters`, this should result in; less work performed and therefore improved runtimes. For the `lhcb` benchmark at https://github.com/jblomer/iotools, using the new lazy column readers for `RNTupleDS` results in a 40% runtime improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6348
https://github.com/root-project/root/pull/6348:528,Performance,perform,performed,528,"This PR adds a new version of the `RDataSource::GetColumnReaders` method. This new version allows the implementation of per-datasource, lazy column readers that know how to communicate with the concrete associated datasource type. As a consequence, datasource implementations are not required to load; values of all required columns when `RDataSource::SetEntry` is called, but; the loading can be delayed to the moment in which a value is actually; needed. In case of strict upstream `Filters`, this should result in; less work performed and therefore improved runtimes. For the `lhcb` benchmark at https://github.com/jblomer/iotools, using the new lazy column readers for `RNTupleDS` results in a 40% runtime improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6348
https://github.com/root-project/root/pull/6348:586,Testability,benchmark,benchmark,586,"This PR adds a new version of the `RDataSource::GetColumnReaders` method. This new version allows the implementation of per-datasource, lazy column readers that know how to communicate with the concrete associated datasource type. As a consequence, datasource implementations are not required to load; values of all required columns when `RDataSource::SetEntry` is called, but; the loading can be delayed to the moment in which a value is actually; needed. In case of strict upstream `Filters`, this should result in; less work performed and therefore improved runtimes. For the `lhcb` benchmark at https://github.com/jblomer/iotools, using the new lazy column readers for `RNTupleDS` results in a 40% runtime improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6348
https://github.com/root-project/root/issues/6352:186,Performance,perform,performance,186,"Currently, `TGraph::Sort` does not check if the data is already sorted (stored in bit `TGraph::kIsSortedX`). For the implemented quicksort, sorting already sorted data is the worst case performance scenario, so I believe a check would be helpful.; Since the user can supply a custom `greaterfunc`, a check similar to https://github.com/root-project/root/blob/1dba738f4e5c472d7b6777da49e00ef041696dba/hist/hist/src/TGraph.cxx#L2394 might be appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6352
https://github.com/root-project/root/pull/6354:15,Availability,failure,failure,15,"… at the first failure. It works like expected: example of broken test that should be repeated 10 times, it stopped after 1 attempt and rerun second time with coredump https://gist.github.com/oshadura/32ffe755e4f8602a9e6a136992202f50. The feature was requested here: https://github.com/root-project/root/pull/6354",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6354
https://github.com/root-project/root/pull/6354:66,Testability,test,test,66,"… at the first failure. It works like expected: example of broken test that should be repeated 10 times, it stopped after 1 attempt and rerun second time with coredump https://gist.github.com/oshadura/32ffe755e4f8602a9e6a136992202f50. The feature was requested here: https://github.com/root-project/root/pull/6354",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6354
https://github.com/root-project/root/pull/6355:279,Usability,simpl,simple,279,"After being notified that beginners were unable to label the axes of a; histogram, I revised the TH1 documentation a bit, such that the words; ""axis labels"" can now be found on the doxygen page.; Some lvl4 headers were converted in lvl2, so there is a bit more; structure, and a simple table of contents was added. Unfortunately,; doxygen doesn't support an automatic table of contents in class; documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6355
https://github.com/root-project/root/issues/6356:811,Deployability,install,install,811,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The problem is visible in the [conda nightly builds](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/), e.g. [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/136/testReport/junit/projectroot.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/). JupyROOT tests are red because a new json field `""execution""` is added to the `.ipynb` file. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; It should be enough to install the [ROOT conda nightlies](https://root.cern/install/nightlies/#conda-package), build roottest against them and run one of the JupyROOT tests via ctest. ## Additional context; <!--; Add any other context about the problem here.; -->. I _think_ the reason this problem cropped up is that the version of nbconvert installed by conda (conda-forge channel) was recently bumped from 5.6.1 to 6.0.2. nbformat documents that new `""execution""` field in notebooks as of [8 months ago](https://github.com/jupyter/nbformat/commit/1b6cbffd2ae527354d8b90e17740f823291a8dca). The `nbdiff.py` steering script already filters some lines from the notebooks before diff'ing them, but the introduction of a new json field also changes the surrounding lines, e.g. a closed brace becomes a comma, an extra closing brace is added, and the current filtering mechanism is not able to deal with this, so I am not sure what the best way to proceed would be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6356
