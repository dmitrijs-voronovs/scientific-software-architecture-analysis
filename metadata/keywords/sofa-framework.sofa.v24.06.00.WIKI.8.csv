quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,wiki,url
Testability,test,testTags,"ation::Visitorinlinevirtual; getValue()sofa::simulation::DeactivationVisitorinline; isThreadSafe() const overridesofa::simulation::DeactivationVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::DeactivationVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::DeactivationVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; setValue(bool _active)sofa::simulation::DeactivationVisitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::DeactivationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::DeactivationVisitor Class Reference . #include <DeactivatedNodeVisitor.h>. Inheritance diagram for sofa::simulation::DeactivationVisitor:. [legend]. Protected Attributes; bool active;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DeactivationVisitor (const core::ExecParams *params, bool _active=false);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setValue (bool _active);  ; bool getValue ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html
Testability,test,testTags,"escending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setValue (bool _active);  ; bool getValue ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html
Deployability,update,updateInternal,"(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(DefaultAnimationLoop, sofa::core::behavior::BaseAnimationLoop)sofa::simulation::DefaultAnimationLoop; sofa::core::behavior::BaseAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solve(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::simulation::DefaultAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateInternalData(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMapping(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; updateSimulationContext(const sofa::core::ExecParams *params, SReal dt, SReal startTime) constsofa::simulation::DefaultAnimationLoopprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::DefaultAnimationLoop Member List . This is the complete list of members for sofa::simulation::DefaultAnimationLoop, including all inherited members. accumulateMatrixDeriv(sofa::core::ConstraintParams cparams) constsofa::simulation::DefaultAnimationLoopprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::DefaultAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; beginIntegration(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; behaviorUpdatePosition(const sofa::core::ExecParams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html
Performance,load,loader,"a::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNode(simulation::Node *)sofa::simulation::DefaultAnimationLoopvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(DefaultAnimationLoop, sofa::core::behavior::BaseAnimationLoop)sofa::simulation::DefaultAnimationLoop; sofa::core::behavior::BaseAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solve(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::simulation::DefaultAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html
Testability,log,logging," accumulateMatrixDeriv(sofa::core::ConstraintParams cparams) constsofa::simulation::DefaultAnimationLoopprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::DefaultAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; beginIntegration(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; behaviorUpdatePosition(const sofa::core::ExecParams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html
Usability,clear,clearLoggedMessages,"or::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::DefaultAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; beginIntegration(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; behaviorUpdatePosition(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; collisionDetection(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_parallelODESolvingsofa::simulation::DefaultAnimationLoop; DefaultAnimationLoop(simulation::Node *gnode=nullptr)sofa::simulation::DefaultAnimationLoopexplicitprotected; doUpdateInternal()sofa::core::objectmodel::BaseO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html
Availability,down,down,"ted Attributes; simulation::Node * m_node { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DefaultAnimationLoop, sofa::core::behavior::BaseAnimationLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void setNode (simulation::Node *);  Set the simulation node this animation loop is controlling. More...;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  perform one animation step More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Integrability,message,messages,"ulation::DefaultAnimationLoop:. [legend]; Detailed Description; Default Animation Loop to be created when no AnimationLoop found on simulation::node. . Public Attributes; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; simulation::Node * m_node { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::DefaultAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::DefaultAnimationLoop Class Reference . #include <DefaultAnimationLoop.h>; Default Animation Loop to be created when no AnimationLoop found on simulation::node. ; More... Inheritance diagram for sofa::simulation::DefaultAnimationLoop:. [legend]; Detailed Description; Default Animation Loop to be created when no AnimationLoop found on simulation::node. . Public Attributes; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileNa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Performance,perform,perform,"Link< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DefaultAnimationLoop, sofa::core::behavior::BaseAnimationLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void setNode (simulation::Node *);  Set the simulation node this animation loop is controlling. More...;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  perform one animation step More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::DefaultTaskScheduler Member List . This is the complete list of members for sofa::simulation::DefaultTaskScheduler, including all inherited members. addTask(Task *task) override finalsofa::simulation::DefaultTaskSchedulervirtual; sofa::simulation::TaskScheduler::addTask(Task::Status &status, const std::function< void()> &task)sofa::simulation::TaskSchedulervirtual; create()sofa::simulation::DefaultTaskSchedulerstatic; getCurrent()sofa::simulation::DefaultTaskScheduler; getCurrentThreadName() override finalsofa::simulation::DefaultTaskSchedulervirtual; getCurrentThreadType() override finalsofa::simulation::DefaultTaskSchedulervirtual; GetHardwareThreadsCount()sofa::simulation::TaskSchedulerstatic; getTaskAllocator() override finalsofa::simulation::DefaultTaskSchedulervirtual; getThreadCount(void) const finalsofa::simulation::DefaultTaskSchedulerinlinevirtual; init(const unsigned int nbThread=0) finalsofa::simulation::DefaultTaskSchedulervirtual; name()sofa::simulation::DefaultTaskSchedulerinlinestatic; stop() finalsofa::simulation::DefaultTaskSchedulervirtual; WorkerThread classsofa::simulation::DefaultTaskSchedulerfriend; workUntilDone(Task::Status *status) override finalsofa::simulation::DefaultTaskSchedulervirtual; ~TaskScheduler()=defaultsofa::simulation::TaskSchedulervirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::DefaultTaskScheduler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::simulation::DefaultTaskScheduler Class Reference . #include <DefaultTaskScheduler.h>. Inheritance diagram for sofa::simulation::DefaultTaskScheduler:. [legend]. Public Member Functions; virtual void init (const unsigned int nbThread=0) final;  ; void stop () final;  ; WorkerThread * getCurrent ();  ; unsigned int getThreadCount (void) const final;  ; const char * getCurrentThreadName () override final;  ; int getCurrentThreadType () override final;  ; bool addTask (Task *task) override final;  ; void workUntilDone (Task::Status *status) override final;  ; Task::Allocator * getTaskAllocator () override final;  ;  Public Member Functions inherited from sofa::simulation::TaskScheduler; virtual ~TaskScheduler ()=default;  ; virtual bool addTask (Task::Status &status, const std::function< void()> &task);  . Static Public Member Functions; static const char * name ();  ; static DefaultTaskScheduler * create ();  ;  Static Public Member Functions inherited from sofa::simulation::TaskScheduler; static unsigned GetHardwareThreadsCount ();  . Friends; class WorkerThread;  . Function details. ◆ addTask(). bool sofa::simulation::DefaultTaskScheduler::addTask ; (; Task * ; task). finaloverridevirtual . Implements sofa::simulation::TaskScheduler. ◆ create(). DefaultTaskScheduler * sofa::simulation::DefaultTaskScheduler::create ; (; ). static . ◆ getCurrent(). WorkerThread * sofa::simulation::DefaultTaskScheduler::getCurrent ; (; ). ◆ getCurrentThreadName(). const char * sofa::simulation::DefaultTaskScheduler::getCurrentThreadName ; (; ). finaloverridevirtual . Implements sofa::simulation::TaskScheduler. ◆ getCurrentThreadType(). int sofa::simulation::DefaultTaskScheduler::getCurrentThreadType ; (; ). finaloverridevirtual . Implements sofa::si",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler.html
Deployability,update,updateContextStep,"ounter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DefaultVisualManagerLoop, sofa::core::visual::VisualLoop)sofa::simulation::DefaultVisualManagerLoop; sofa::core::visual::VisualLoop::SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DefaultVisualManagerLo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::DefaultVisualManagerLoop Member List . This is the complete list of members for sofa::simulation::DefaultVisualManagerLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html
Performance,load,loader,"ase; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DefaultVisualManagerLoop, sofa::core::visual::VisualLoop)sofa::simulation::DefaultVisualManagerLoop; sofa::core::visual::VisualLoop::SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html
Usability,clear,clearLoggedMessages,"SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html
Availability,down,down,"ing;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DefaultVisualManagerLoop, sofa::core::visual::VisualLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initStep (sofa::core::visual::VisualParams *vparams) override;  Initialize the textures. More...;  ; void updateStep (sofa::core::visual::VisualParams *vparams) override;  Update the Visual Models: triggers the Mappings. More...;  ; void updateContextStep (sofa::core::visual::VisualParams *vparams) override;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Deployability,update,updateStep,"ore...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DefaultVisualManagerLoop, sofa::core::visual::VisualLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initStep (sofa::core::visual::VisualParams *vparams) override;  Initialize the textures. More...;  ; void updateStep (sofa::core::visual::VisualParams *vparams) override;  Update the Visual Models: triggers the Mappings. More...;  ; void updateContextStep (sofa::core::visual::VisualParams *vparams) override;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Integrability,message,messages," to be created when no VisualManager found on simulation::node. ; More... Inheritance diagram for sofa::simulation::DefaultVisualManagerLoop:. [legend]; Detailed Description; Default VisualManager Loop to be created when no VisualManager found on simulation::node. . Public Attributes; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DefaultVisualManagerLoop, sofa::core::visual::VisualLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initStep (sofa::core::visual::VisualParams *vparams) override;  Initialize the textures. More...;  ; void updateStep (sofa::core::visual::VisualParams *vparams) override;  Update the Visual Models: tr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::DefaultVisualManagerLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::DefaultVisualManagerLoop Class Reference . #include <DefaultVisualManagerLoop.h>; Default VisualManager Loop to be created when no VisualManager found on simulation::node. ; More... Inheritance diagram for sofa::simulation::DefaultVisualManagerLoop:. [legend]; Detailed Description; Default VisualManager Loop to be created when no VisualManager found on simulation::node. . Public Attributes; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DefaultVisualManagerLoo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Usability,clear,clearVisual,":VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::DeleteVisitor Member List . This is the complete list of members for sofa::simulation::DeleteVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; DeleteVisitor(const core::ExecParams *params)sofa::simulation::DeleteVisitorinline; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, P",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor-members.html
Testability,test,testTags,"ring &typeInfo)sofa::simulation::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::simulation::DeleteVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(Node *node) overridesofa::simulation::DeleteVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::DeleteVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::DeleteVisitor Class Reference . #include <DeleteVisitor.h>. Inheritance diagram for sofa::simulation::DeleteVisitor:. [legend]. Public Member Functions;  DeleteVisitor (const core::ExecParams *params);  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ct",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html
Testability,test,testTags,"::DeleteVisitor:. [legend]. Public Member Functions;  DeleteVisitor (const core::ExecParams *params);  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::DofPrintVisitor Member List . This is the complete list of members for sofa::simulation::DofPrintVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; dofname_sofa::simulation::DofPrintVisitorprotected; DofPrintVisitor(const core::ExecParams *params, sofa::core::ConstMultiVecId v, const std::string &dofname, std::ostream &=std::cerr)sofa::simulation::DofPrintVisitor; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html
Testability,test,testTags,"assName() const overridesofa::simulation::DofPrintVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; out_sofa::simulation::DofPrintVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::DofPrintVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; v_sofa::simulation::DofPrintVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::DofPrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::DofPrintVisitor Class Reference . #include <MechanicalVPrintVisitor.h>. Inheritance diagram for sofa::simulation::DofPrintVisitor:. [legend]. Protected Attributes; sofa::core::ConstMultiVecId v_;  ; std::ostream & out_;  ; const std::string & dofname_;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DofPrintVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId v, const std::string &dofname, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html
Testability,test,testTags,"ms, sofa::core::ConstMultiVecId v, const std::string &dofname, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::ExportGnuplotVisitor Member List . This is the complete list of members for sofa::simulation::ExportGnuplotVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; ExportGnuplotVisitor(const core::ExecParams *params, SReal time)sofa::simulation::ExportGnuplotVisitor; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor-members.html
Testability,test,testTags,"otVisitorinlinevirtual; getClassName() const overridesofa::simulation::ExportGnuplotVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; m_timesofa::simulation::ExportGnuplotVisitorprotected; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::ExportGnuplotVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::ExportGnuplotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::ExportGnuplotVisitor Class Reference . #include <ExportGnuplotVisitor.h>. Inheritance diagram for sofa::simulation::ExportGnuplotVisitor:. [legend]. Protected Attributes; SReal m_time;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportGnuplotVisitor (const core::ExecParams *params, SReal time);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::Visit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html
Testability,test,testTags,"ctions;  ExportGnuplotVisitor (const core::ExecParams *params, SReal time);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::ExportVisualModelOBJVisitor Member List . This is the complete list of members for sofa::simulation::ExportVisualModelOBJVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; countsofa::simulation::ExportVisualModelOBJVisitorprotected; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; ExportVisualModelOBJVisitor(const core::ExecParams *params, std::ostream *out)sofa::simulation::ExportVisualModelOBJVisitor; ExportVisualModelOBJVisitor(const core::ExecParams *params, std::ostream *out, std::ostream *mtl)sofa::simulation::ExportVisualModelOBJVisitor; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor-members.html
Testability,test,testTags,"tected; processNodeBottomUp(Node *node) overridesofa::simulation::ExportVisualModelOBJVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(Node *node) overridesofa::simulation::ExportVisualModelOBJVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processVisualModel(Node *node, core::visual::VisualModel *vm)sofa::simulation::ExportVisualModelOBJVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; tindexsofa::simulation::ExportVisualModelOBJVisitorprotected; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; vindexsofa::simulation::ExportVisualModelOBJVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~ExportVisualModelOBJVisitor() overridesofa::simulation::ExportVisualModelOBJVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::ExportVisualModelOBJVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::ExportVisualModelOBJVisitor Class Reference . #include <ExportVisualModelOBJVisitor.h>. Inheritance diagram for sofa::simulation::ExportVisualModelOBJVisitor:. [legend]. Public Attributes; std::ostream * out;  ; std::ostream * mtl;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; int ID;  ; sofa::Index vindex;  ; sofa::Index nindex;  ; sofa::Index tindex;  ; int count;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportVisualModelOBJVisitor (const core::ExecParams *params, std::ostream *out);  ;  ExportVisualModelOBJVisitor (const core::ExecParams *params, std::ostream *out, std::ostream *mtl);  ;  ~ExportVisualModelOBJVisitor () override;  ; virtual void processVisualModel (Node *node, core::visual::VisualModel *vm);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html
Security,access,access,"﻿. SOFA API: sofa::simulation::ExportVisualModelOBJVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::ExportVisualModelOBJVisitor Class Reference . #include <ExportVisualModelOBJVisitor.h>. Inheritance diagram for sofa::simulation::ExportVisualModelOBJVisitor:. [legend]. Public Attributes; std::ostream * out;  ; std::ostream * mtl;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; int ID;  ; sofa::Index vindex;  ; sofa::Index nindex;  ; sofa::Index tindex;  ; int count;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportVisualModelOBJVisitor (const core::ExecParams *params, std::ostream *out);  ;  ExportVisualModelOBJVisitor (const core::ExecParams *params, std::ostream *out, std::ostream *mtl);  ;  ~ExportVisualModelOBJVisitor () override;  ; virtual void processVisualModel (Node *node, core::visual::VisualModel *vm);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html
Testability,test,testTags,"ModelOBJVisitor () override;  ; virtual void processVisualModel (Node *node, core::visual::VisualModel *vm);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::FindByTypeVisitor< T > Member List . This is the complete list of members for sofa::simulation::FindByTypeVisitor< T >, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; FindByTypeVisitor(const core::ExecParams *params)sofa::simulation::FindByTypeVisitor< T >inline; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(Vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html
Testability,test,testTags,"constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::simulation::FindByTypeVisitor< T >inlinevirtual; getInfos() const overridesofa::simulation::FindByTypeVisitor< T >inlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::FindByTypeVisitor< T >inlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::FindByTypeVisitor< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::FindByTypeVisitor< T > Class Template Reference . #include <FindByTypeVisitor.h>. Inheritance diagram for sofa::simulation::FindByTypeVisitor< T >:. [legend]; Detailed Description; template<class T>; class sofa::simulation::FindByTypeVisitor< T >; Find all components of a given type and store pointers in a list. . Public Attributes; std::vector< T * > found;  The result of the search: contains pointers to all components of the given type found. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  FindByTypeVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  For each component, if it is of the given type, then put it in the list. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Ali",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html
Security,access,access,"﻿. SOFA API: sofa::simulation::FindByTypeVisitor< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::FindByTypeVisitor< T > Class Template Reference . #include <FindByTypeVisitor.h>. Inheritance diagram for sofa::simulation::FindByTypeVisitor< T >:. [legend]; Detailed Description; template<class T>; class sofa::simulation::FindByTypeVisitor< T >; Find all components of a given type and store pointers in a list. . Public Attributes; std::vector< T * > found;  The result of the search: contains pointers to all components of the given type found. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  FindByTypeVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  For each component, if it is of the given type, then put it in the list. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Ali",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html
Testability,test,testTags," nodes? More...;  . Public Member Functions;  FindByTypeVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  For each component, if it is of the given type, then put it in the list. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::InitGnuplotVisitor Member List . This is the complete list of members for sofa::simulation::InitGnuplotVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor-members.html
Testability,test,testTags,"tInfos() constsofa::simulation::Visitorinlinevirtual; gnuplotDirectorysofa::simulation::InitGnuplotVisitor; InitGnuplotVisitor(const core::ExecParams *params, std::string dir)sofa::simulation::InitGnuplotVisitorinline; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::InitGnuplotVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::InitGnuplotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::InitGnuplotVisitor Class Reference . #include <ExportGnuplotVisitor.h>. Inheritance diagram for sofa::simulation::InitGnuplotVisitor:. [legend]. Public Attributes; std::string gnuplotDirectory;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  InitGnuplotVisitor (const core::ExecParams *params, std::string dir);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html
Security,access,access,"﻿. SOFA API: sofa::simulation::InitGnuplotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::InitGnuplotVisitor Class Reference . #include <ExportGnuplotVisitor.h>. Inheritance diagram for sofa::simulation::InitGnuplotVisitor:. [legend]. Public Attributes; std::string gnuplotDirectory;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  InitGnuplotVisitor (const core::ExecParams *params, std::string dir);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html
Testability,test,testTags,"ons;  InitGnuplotVisitor (const core::ExecParams *params, std::string dir);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html
Energy Efficiency,schedul,scheduledThread,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::InitPerThreadDataTask Member List . This is the complete list of members for sofa::simulation::InitPerThreadDataTask, including all inherited members. CpuTask(Status *status, int scheduledThread=-1)sofa::simulation::CpuTask; Dynamic enum valuesofa::simulation::Task; getAllocator()sofa::simulation::Taskstatic; getScheduledThread() constsofa::simulation::Task; getStatus(void) const override finalsofa::simulation::CpuTaskvirtual; InitPerThreadDataTask(std::atomic< int > *atomicCounter, std::mutex *mutex, CpuTask::Status *status)sofa::simulation::InitPerThreadDataTask; m_idsofa::simulation::Task; m_scheduledThreadsofa::simulation::Taskprotected; MemoryAlloc enum namesofa::simulation::Task; operator delete(void *ptr)sofa::simulation::Taskstatic; operator delete(void *ptr, std::size_t sz)sofa::simulation::Taskstatic; operator new(std::size_t sz)sofa::simulation::Taskstatic; operator new[](std::size_t sz)=deletesofa::simulation::Taskstatic; run() overridesofa::simulation::InitPerThreadDataTaskvirtual; setAllocator(Task::Allocator *allocator)sofa::simulation::Taskstatic; Stack enum valuesofa::simulation::Task; Static enum valuesofa::simulation::Task; Status typedefsofa::simulation::CpuTask; Task(int scheduledThread)sofa::simulation::Task; ~CpuTask()=defaultsofa::simulation::CpuTaskvirtual; ~InitPerThreadDataTask() override=defaultsofa::simulation::InitPerThreadDataTask; ~Task()=defaultsofa::simulation::Taskvirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::InitPerThreadDataTask Member List . This is the complete list of members for sofa::simulation::InitPerThreadDataTask, including all inherited members. CpuTask(Status *status, int scheduledThread=-1)sofa::simulation::CpuTask; Dynamic enum valuesofa::simulation::Task; getAllocator()sofa::simulation::Taskstatic; getScheduledThread() constsofa::simulation::Task; getStatus(void) const override finalsofa::simulation::CpuTaskvirtual; InitPerThreadDataTask(std::atomic< int > *atomicCounter, std::mutex *mutex, CpuTask::Status *status)sofa::simulation::InitPerThreadDataTask; m_idsofa::simulation::Task; m_scheduledThreadsofa::simulation::Taskprotected; MemoryAlloc enum namesofa::simulation::Task; operator delete(void *ptr)sofa::simulation::Taskstatic; operator delete(void *ptr, std::size_t sz)sofa::simulation::Taskstatic; operator new(std::size_t sz)sofa::simulation::Taskstatic; operator new[](std::size_t sz)=deletesofa::simulation::Taskstatic; run() overridesofa::simulation::InitPerThreadDataTaskvirtual; setAllocator(Task::Allocator *allocator)sofa::simulation::Taskstatic; Stack enum valuesofa::simulation::Task; Static enum valuesofa::simulation::Task; Status typedefsofa::simulation::CpuTask; Task(int scheduledThread)sofa::simulation::Task; ~CpuTask()=defaultsofa::simulation::CpuTaskvirtual; ~InitPerThreadDataTask() override=defaultsofa::simulation::InitPerThreadDataTask; ~Task()=defaultsofa::simulation::Taskvirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task-members.html
Energy Efficiency,schedul,scheduledThread,"﻿. SOFA API: sofa::simulation::InitPerThreadDataTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::InitPerThreadDataTask Class Reference . #include <InitTasks.h>. Inheritance diagram for sofa::simulation::InitPerThreadDataTask:. [legend]. Public Member Functions;  InitPerThreadDataTask (std::atomic< int > *atomicCounter, std::mutex *mutex, CpuTask::Status *status);  ;  ~InitPerThreadDataTask () override=default;  ; MemoryAlloc run () override;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ InitPerThreadDataTask(). sofa::simulation::InitPerThreadDataTask::InitPerThreadDataTask ; (; std::atomic< int > * ; atomicCounter, . std::mutex * ; mutex, . CpuTask::Status * ; status . ). ◆ ~InitPerThreadDataTask(). sofa::simulation::InitPerThreadDataTask::~InitPerThreadDataTask ; (; ). overridedefault . Function details. ◆ run(). Task::MemoryAlloc sofa::simulation::InitPerThreadDataTask::run ; (; ). overridevirtual . Implements sofa::simulation::Task. sofasimulationInitPer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::InitPerThreadDataTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::InitPerThreadDataTask Class Reference . #include <InitTasks.h>. Inheritance diagram for sofa::simulation::InitPerThreadDataTask:. [legend]. Public Member Functions;  InitPerThreadDataTask (std::atomic< int > *atomicCounter, std::mutex *mutex, CpuTask::Status *status);  ;  ~InitPerThreadDataTask () override=default;  ; MemoryAlloc run () override;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ InitPerThreadDataTask(). sofa::simulation::InitPerThreadDataTask::InitPerThreadDataTask ; (; std::atomic< int > * ; atomicCounter, . std::mutex * ; mutex, . CpuTask::Status * ; status . ). ◆ ~InitPerThreadDataTask(). sofa::simulation::InitPerThreadDataTask::~InitPerThreadDataTask ; (; ). overridedefault . Function details. ◆ run(). Task::MemoryAlloc sofa::simulation::InitPerThreadDataTask::run ; (; ). overridevirtual . Implements sofa::simulation::Task. sofasimulationInitPer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::InitVisitor Member List . This is the complete list of members for sofa::simulation::InitVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(VisitorTy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html
Testability,test,testTags,") constsofa::simulation::Visitorinlinevirtual; InitVisitor(const core::ExecParams *params)sofa::simulation::InitVisitorinline; isThreadSafe() const overridesofa::simulation::InitVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::InitVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::InitVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootNodesofa::simulation::InitVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::InitVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::InitVisitor Class Reference . #include <InitVisitor.h>. Inheritance diagram for sofa::simulation::InitVisitor:. [legend]; Detailed Description; Initialize a newly created (or modified) scene graph.; Forward: simulation::Node::initialize() This method puts the OdeSolver, if any, first in the list of components. Then BaseObject::init() for all components.; Backward: OdeSolver::bwdInit() . Protected Attributes; Node * rootNode;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  InitVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html
Testability,test,testTags,"::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::IntegrateBeginEvent Member List . This is the complete list of members for sofa::simulation::IntegrateBeginEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::IntegrateBeginEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event-members.html
Deployability,integrat,integrate,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html
Integrability,integrat,integrate,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html
Performance,perform,performing,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html
Safety,detect,detection,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::IntegrateEndEvent Member List . This is the complete list of members for sofa::simulation::IntegrateEndEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::IntegrateEndEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event-members.html
Deployability,integrat,integrate,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html
Integrability,integrat,integrate,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html
Performance,perform,performing,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html
Safety,detect,detection,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MainTaskSchedulerFactory Member List . This is the complete list of members for sofa::simulation::MainTaskSchedulerFactory, including all inherited members. createInRegistry(const std::string &name)sofa::simulation::MainTaskSchedulerFactorystatic; createInRegistry()sofa::simulation::MainTaskSchedulerFactorystatic; defaultTaskSchedulerType()sofa::simulation::MainTaskSchedulerFactorystatic; getAvailableSchedulers()sofa::simulation::MainTaskSchedulerFactorystatic; instantiate(const std::string &name)sofa::simulation::MainTaskSchedulerFactorystatic; registerScheduler(const std::string &name, const std::function< TaskScheduler *()> &creatorFunc)sofa::simulation::MainTaskSchedulerFactorystatic. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory-members.html
Energy Efficiency,schedul,scheduler,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerFactory Class Reference . #include <MainTaskSchedulerFactory.h>; Detailed Description; A set of static function with the same interface than @TaskSchedulerFactory, working on a single instance of @TaskSchedulerFactory.; The static functions @createInRegistry use the factory to instantiate a task scheduler and store it in @MainTaskSchedulerRegistry . Static Public Member Functions; static bool registerScheduler (const std::string &name, const std::function< TaskScheduler *()> &creatorFunc);  ; static TaskScheduler * instantiate (const std::string &name);  ; static std::set< std::string > getAvailableSchedulers ();  ; static TaskScheduler * createInRegistry (const std::string &name);  ; static TaskScheduler * createInRegistry ();  ; static std::string defaultTaskSchedulerType ();  . Function details. ◆ createInRegistry() [1/2]. TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::createInRegistry ; (; ). static . ◆ createInRegistry() [2/2]. TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::createInRegistry ; (; const std::string & ; name). static . ◆ defaultTaskSchedulerType(). std::string sofa::simulation::MainTaskSchedulerFactory::defaultTaskSchedulerType ; (; ). static . ◆ getAvailableSchedulers(). std::set< std::string > sofa::simulation::MainTaskSchedulerFactory::getAvailableSchedulers ; (; ). static . ◆ instantiate(). TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::instantiate ; (; const std::string & ; name). static . ◆ registerScheduler(). bool sofa::simulation::MainTaskSchedulerFactory::registerScheduler ; (; const std::string & ; name, . const std::function< TaskScheduler *()> & ; creatorFunc . ). static . sofasimulationMainTaskSchedulerFactory; Generated on Mon Nov 11 2024 03:33:58 for SOFA API b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html
Integrability,interface,interface,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerFactory Class Reference . #include <MainTaskSchedulerFactory.h>; Detailed Description; A set of static function with the same interface than @TaskSchedulerFactory, working on a single instance of @TaskSchedulerFactory.; The static functions @createInRegistry use the factory to instantiate a task scheduler and store it in @MainTaskSchedulerRegistry . Static Public Member Functions; static bool registerScheduler (const std::string &name, const std::function< TaskScheduler *()> &creatorFunc);  ; static TaskScheduler * instantiate (const std::string &name);  ; static std::set< std::string > getAvailableSchedulers ();  ; static TaskScheduler * createInRegistry (const std::string &name);  ; static TaskScheduler * createInRegistry ();  ; static std::string defaultTaskSchedulerType ();  . Function details. ◆ createInRegistry() [1/2]. TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::createInRegistry ; (; ). static . ◆ createInRegistry() [2/2]. TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::createInRegistry ; (; const std::string & ; name). static . ◆ defaultTaskSchedulerType(). std::string sofa::simulation::MainTaskSchedulerFactory::defaultTaskSchedulerType ; (; ). static . ◆ getAvailableSchedulers(). std::set< std::string > sofa::simulation::MainTaskSchedulerFactory::getAvailableSchedulers ; (; ). static . ◆ instantiate(). TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::instantiate ; (; const std::string & ; name). static . ◆ registerScheduler(). bool sofa::simulation::MainTaskSchedulerFactory::registerScheduler ; (; const std::string & ; name, . const std::function< TaskScheduler *()> & ; creatorFunc . ). static . sofasimulationMainTaskSchedulerFactory; Generated on Mon Nov 11 2024 03:33:58 for SOFA API b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MainTaskSchedulerRegistry Member List . This is the complete list of members for sofa::simulation::MainTaskSchedulerRegistry, including all inherited members. addTaskSchedulerToRegistry(TaskScheduler *taskScheduler, const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic; clear()sofa::simulation::MainTaskSchedulerRegistrystatic; getLastInserted()sofa::simulation::MainTaskSchedulerRegistrystatic; getTaskScheduler(const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic; hasScheduler(const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MainTaskSchedulerRegistry Member List . This is the complete list of members for sofa::simulation::MainTaskSchedulerRegistry, including all inherited members. addTaskSchedulerToRegistry(TaskScheduler *taskScheduler, const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic; clear()sofa::simulation::MainTaskSchedulerRegistrystatic; getLastInserted()sofa::simulation::MainTaskSchedulerRegistrystatic; getTaskScheduler(const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic; hasScheduler(const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerRegistry Class Reference . #include <MainTaskSchedulerRegistry.h>; Detailed Description; A set of static functions with the same interface than a @TaskSchedulerRegistry, working on a single instance of a @TaskSchedulerRegistry. All functions are thread-safe. . Static Public Member Functions; static bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; static TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName);  ; static bool hasScheduler (const std::string &taskSchedulerName);  ; static const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted ();  ; static void clear ();  . Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::MainTaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). static . ◆ clear(). void sofa::simulation::MainTaskSchedulerRegistry::clear ; (; ). static . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::MainTaskSchedulerRegistry::getLastInserted ; (; ). static . ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::MainTaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName). static . ◆ hasScheduler(). bool sofa::simulation::MainTaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName). static . sofasimulationMainTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html
Safety,safe,safe,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerRegistry Class Reference . #include <MainTaskSchedulerRegistry.h>; Detailed Description; A set of static functions with the same interface than a @TaskSchedulerRegistry, working on a single instance of a @TaskSchedulerRegistry. All functions are thread-safe. . Static Public Member Functions; static bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; static TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName);  ; static bool hasScheduler (const std::string &taskSchedulerName);  ; static const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted ();  ; static void clear ();  . Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::MainTaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). static . ◆ clear(). void sofa::simulation::MainTaskSchedulerRegistry::clear ; (; ). static . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::MainTaskSchedulerRegistry::getLastInserted ; (; ). static . ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::MainTaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName). static . ◆ hasScheduler(). bool sofa::simulation::MainTaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName). static . sofasimulationMainTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html
Usability,clear,clear,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerRegistry Class Reference . #include <MainTaskSchedulerRegistry.h>; Detailed Description; A set of static functions with the same interface than a @TaskSchedulerRegistry, working on a single instance of a @TaskSchedulerRegistry. All functions are thread-safe. . Static Public Member Functions; static bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; static TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName);  ; static bool hasScheduler (const std::string &taskSchedulerName);  ; static const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted ();  ; static void clear ();  . Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::MainTaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). static . ◆ clear(). void sofa::simulation::MainTaskSchedulerRegistry::clear ; (; ). static . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::MainTaskSchedulerRegistry::getLastInserted ; (; ). static . ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::MainTaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName). static . ◆ hasScheduler(). bool sofa::simulation::MainTaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName). static . sofasimulationMainTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MechanicalVisitor Member List . This is the complete list of members for sofa::simulation::MechanicalVisitor, including all inherited members. addNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; addTag(Tag t)sofa::simulation::Visitorinline; BaseMechanicalVisitor(const sofa::core::ExecParams *params)sofa::simulation::BaseMechanicalVisitor; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; bwdConstraintSet(simulation::Node *, sofa::core::behavior::BaseConstraintSet *)sofa::simulation::BaseMechanicalVisitorvirtual; bwdConstraintSet(VisitorContext *ctx, sofa::core::behavior::BaseConstraintSet *c)sofa::simulation::BaseMechanicalVisitorvirtual; bwdConstraintSolver(simulation::Node *, sofa::core::behavior::ConstraintSolver *)sofa::simulation::BaseMechanicalVisitorvirtual; bwdConstraintSolver(VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver)sofa::simulation::BaseMechanicalVisitorvirtual; bwdMappedMechanicalState(simulation::Node *, sofa::core::behavior::BaseMechanicalState *)sofa::simulation::BaseMechanicalVisitorvirtual; bwdMappedMechanicalState(VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm)sofa::simulation::BaseMechanicalVisitorvirtual; bwdMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *)sofa::simulation::BaseMechanicalVisitorvirtual; bwdMechanicalMapping(VisitorContext *ctx, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; bwdMechanicalState(simulation::Node *, sofa::core::behavior::BaseMechanicalState *)sofa::simulation::BaseMechanicalVisitorvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor-members.html
Testability,test,testTags,"simulation::BaseMechanicalVisitorprotectedvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::MechanicalVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::MechanicalVisitor Class Reference . #include <MechanicalVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVisitor:. [legend]. Protected Attributes; const sofa::core::MechanicalParams * mparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html
Security,access,access,"ation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::BaseMechanicalVisitor; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html
Testability,test,testTags," Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (simulation::Node *, sofa::core::behavior::BaseConstraintSet *);  Process all the BaseConstraintSet. More...;  ; virtual void bwdProjectiveConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseProjectiveConstraintSet *c);  Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseConstraintSet *c);  Process all the BaseConstraintSet. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MechanicalVPrintVisitor Member List . This is the complete list of members for sofa::simulation::MechanicalVPrintVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Vis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor-members.html
Testability,test,testTags,"virtual; MechanicalVPrintVisitor(const core::ExecParams *params, sofa::core::ConstMultiVecId v, std::ostream &=std::cerr)sofa::simulation::MechanicalVPrintVisitor; NO_REPETITION enum valuesofa::simulation::Visitor; out_sofa::simulation::MechanicalVPrintVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::MechanicalVPrintVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; v_sofa::simulation::MechanicalVPrintVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::MechanicalVPrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::MechanicalVPrintVisitor Class Reference . #include <MechanicalVPrintVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVPrintVisitor:. [legend]; Detailed Description; Print a vector . Protected Attributes; sofa::core::ConstMultiVecId v_;  ; std::ostream & out_;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVPrintVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId v, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type"")); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html
Testability,test,testTags,"const core::ExecParams *params, sofa::core::ConstMultiVecId v, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor Member List . This is the complete list of members for sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; count_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html
Testability,test,testTags,"ation::MechanicalVPrintWithElapsedTimeVisitor; NO_REPETITION enum valuesofa::simulation::Visitor; out_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::MechanicalVPrintWithElapsedTimeVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; time_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; v_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor Class Reference . #include <MechanicalVPrintVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor:. [legend]; Detailed Description; Print a vector with an elapsed time, useful to compare convergence in odeSolver in function of time . Protected Attributes; sofa::core::ConstMultiVecId v_;  ; unsigned count_;  ; unsigned time_;  ; std::ostream & out_;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVPrintWithElapsedTimeVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId vid, unsigned time, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html
Testability,test,testTags,"arams *params, sofa::core::ConstMultiVecId vid, unsigned time, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MutationListener Member List . This is the complete list of members for sofa::simulation::MutationListener, including all inherited members. onBeginAddChild(Node *parent, Node *child)sofa::simulation::MutationListenervirtual; onBeginAddObject(Node *parent, core::objectmodel::BaseObject *object)sofa::simulation::MutationListenervirtual; onBeginAddSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave)sofa::simulation::MutationListenervirtual; onBeginRemoveChild(Node *parent, Node *child)sofa::simulation::MutationListenervirtual; onBeginRemoveObject(Node *parent, core::objectmodel::BaseObject *object)sofa::simulation::MutationListenervirtual; onBeginRemoveSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave)sofa::simulation::MutationListenervirtual; onEndAddChild(Node *parent, Node *child)sofa::simulation::MutationListenervirtual; onEndAddObject(Node *parent, core::objectmodel::BaseObject *object)sofa::simulation::MutationListenervirtual; onEndAddSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave)sofa::simulation::MutationListenervirtual; onEndRemoveChild(Node *parent, Node *child)sofa::simulation::MutationListenervirtual; onEndRemoveObject(Node *parent, core::objectmodel::BaseObject *object)sofa::simulation::MutationListenervirtual; onEndRemoveSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave)sofa::simulation::MutationListenervirtual; sleepChanged(Node *node)sofa::simulation::MutationListenervirtual; ~MutationListener()sofa::simulation::MutationListenervirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_mutation_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mutation_listener-members.html
Deployability,configurat,configurationSettingsofa,"back(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &nodeName)=0sofa::simulation::Nodepure virtual; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_componentStatesofa::core::objectmodel::Base; d_isSleepingsofa::core::objectmodel::Context; d_messageLogCountsofa::core::objectmodel::Basemutable; debug_sofa::simulation::Nodeprotected; detachFromGraph()=0sofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Node Member List . This is the complete list of members for sofa::simulation::Node, including all inherited members. _contextsofa::simulation::Nodeprotected; actionStacksofa::simulation::Nodeprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node) finalsofa::simulation::Nodevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addListener(MutationListener *obj)sofa::simulation::Nodevirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd) finalsofa::simulation::Nodevirtual; sofa::core::objectmodel::Context::addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html
Testability,log,logging," _contextsofa::simulation::Nodeprotected; actionStacksofa::simulation::Nodeprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node) finalsofa::simulation::Nodevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addListener(MutationListener *obj)sofa::simulation::Nodevirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd) finalsofa::simulation::Nodevirtual; sofa::core::objectmodel::Context::addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html
Usability,clear,clearLoggedMessages,"core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &nodeName)=0sofa::simulation::Nodepure virtual; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html
Availability,down,down,"ontext, Base);  ; virtual bool hasAncestor (const BaseContext *) const;  ; ComponentNameHelper & getNameHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Deployability,configurat,configurationSetting," Public Attributes; NodeSequence< Node, true > child;  ; NodeSequence< sofa::core::objectmodel::BaseObject, true > object;  ; NodeSequence< sofa::core::BehaviorModel > behaviorModel;  ; NodeSequence< sofa::core::BaseMapping > mapping;  ; NodeSequence< sofa::core::behavior::OdeSolver > solver;  ; NodeSequence< sofa::core::behavior::ConstraintSolver > constraintSolver;  ; NodeSequence< sofa::core::behavior::BaseLinearSolver > linearSolver;  ; NodeSequence< sofa::core::topology::BaseTopologyObject > topologyObject;  ; NodeSequence< sofa::core::behavior::BaseForceField > forceField;  ; NodeSequence< sofa::core::behavior::BaseInteractionForceField > interactionForceField;  ; NodeSequence< sofa::core::behavior::BaseProjectiveConstraintSet > projectiveConstraintSet;  ; NodeSequence< sofa::core::behavior::BaseConstraintSet > constraintSet;  ; NodeSequence< sofa::core::objectmodel::ContextObject > contextObject;  ; NodeSequence< sofa::core::objectmodel::ConfigurationSetting > configurationSetting;  ; NodeSequence< sofa::core::visual::Shader > shaders;  ; NodeSequence< sofa::core::visual::VisualModel > visualModel;  ; NodeSequence< sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Integrability,message,messages,"sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sofa::core::behavior::BaseAnimationLoop > animationManager;  ; NodeSingle< sofa::core::visual::VisualLoop > visualLoop;  ; NodeSingle< sofa::core::topology::Topology > topology;  ; NodeSingle< sofa::core::topology::BaseMeshTopology > meshTopology;  ; NodeSingle< sofa::core::BaseState > state;  ; NodeSingle< sofa::core::behavior::BaseMechanicalState > mechanicalState;  ; NodeSingle< sofa::core::BaseMapping > mechanicalMapping;  ; NodeSingle< sofa::core::behavior::BaseMass > mass;  ; NodeSingle< sofa::core::collision::Pipeline > collisionPipeline;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::objectmodel::Context; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Modifiability,config,configurationSetting," Public Attributes; NodeSequence< Node, true > child;  ; NodeSequence< sofa::core::objectmodel::BaseObject, true > object;  ; NodeSequence< sofa::core::BehaviorModel > behaviorModel;  ; NodeSequence< sofa::core::BaseMapping > mapping;  ; NodeSequence< sofa::core::behavior::OdeSolver > solver;  ; NodeSequence< sofa::core::behavior::ConstraintSolver > constraintSolver;  ; NodeSequence< sofa::core::behavior::BaseLinearSolver > linearSolver;  ; NodeSequence< sofa::core::topology::BaseTopologyObject > topologyObject;  ; NodeSequence< sofa::core::behavior::BaseForceField > forceField;  ; NodeSequence< sofa::core::behavior::BaseInteractionForceField > interactionForceField;  ; NodeSequence< sofa::core::behavior::BaseProjectiveConstraintSet > projectiveConstraintSet;  ; NodeSequence< sofa::core::behavior::BaseConstraintSet > constraintSet;  ; NodeSequence< sofa::core::objectmodel::ContextObject > contextObject;  ; NodeSequence< sofa::core::objectmodel::ConfigurationSetting > configurationSetting;  ; NodeSequence< sofa::core::visual::Shader > shaders;  ; NodeSequence< sofa::core::visual::VisualModel > visualModel;  ; NodeSequence< sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Performance,optimiz,optimization,"e * findCommonParent (simulation::Node *node2)=0;  return the smallest common parent between this and node2 (returns nullptr if separated sub-graphes) More...;  ; void setSleeping (bool val) override;  override context setSleeping to add notification. More...;  ; virtual void addListener (MutationListener *obj);  ; virtual void removeListener (MutationListener *obj);  ; High-level interface; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init (const sofa::core::ExecParams *params);  Initialize the components. More...;  ; bool isInitialized () const;  ; void reinit (const sofa::core::ExecParams *params);  Apply modifications to the components. More...;  ; void draw (sofa::core::visual::VisualParams *params);  Draw the objects (using visual visitors) More...;  ; Visitor handling; Parameters. precomputedOrderis not used by default but could allow optimization on certain Node specializations . Warningwhen calling with precomputedOrder=true, the function ""precomputeTraversalOrder"" must be called before executing the visitor and the user must ensure by himself that the simulation graph has done been modified since the last call to ""precomputeTraversalOrder"" . virtual void doExecuteVisitor (Visitor *action, bool precomputedOrder=false)=0;  Execute a recursive action starting from this node. More...;  ; void executeVisitor (Visitor *action, bool precomputedOrder=false) override;  Execute a recursive action starting from this node. More...;  ; void execute (Visitor &action, bool precomputedOrder=false);  Execute a recursive action starting from this node. More...;  ; void execute (Visitor *p, bool precomputedOrder=false);  Execute a recursive action starting from this node. More...;  ; template<class Act , class Params > ; void execute (const Params *params, bool precomputedOrder=false);  Execute a recursive action starting from",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Security,access,accessors,"﻿. SOFA API: sofa::simulation::Node Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::simulation::Node Class Referenceabstract . #include <Node.h>. Inheritance diagram for sofa::simulation::Node:. [legend]; Detailed Description; Implements the object (component) management of the core::Context. Contains objects in lists and provides accessors. The other nodes are not visible (unknown scene graph).; AuthorThe SOFA team </www.sofa-framework.org> . Public Attributes; NodeSequence< Node, true > child;  ; NodeSequence< sofa::core::objectmodel::BaseObject, true > object;  ; NodeSequence< sofa::core::BehaviorModel > behaviorModel;  ; NodeSequence< sofa::core::BaseMapping > mapping;  ; NodeSequence< sofa::core::behavior::OdeSolver > solver;  ; NodeSequence< sofa::core::behavior::ConstraintSolver > constraintSolver;  ; NodeSequence< sofa::core::behavior::BaseLinearSolver > linearSolver;  ; NodeSequence< sofa::core::topology::BaseTopologyObject > topologyObject;  ; NodeSequence< sofa::core::behavior::BaseForceField > forceField;  ; NodeSequence< sofa::core::behavior::BaseInteractionForceField > interactionForceField;  ; NodeSequence< sofa::core::behavior::BaseProjectiveConstraintSet > projectiveConstraintSet;  ; NodeSequence< sofa::core::behavior::BaseConstraintSet > constraintSet;  ; NodeSequence< sofa::core::objectmodel::ContextObject > contextObject;  ; NodeSequence< sofa::core::objectmodel::ConfigurationSetting > configurationSetting;  ; NodeSequence< sofa::core::visual::Shader > shaders;  ; NodeSequence< sofa::core::visual::VisualModel > visualModel;  ; NodeSequence< sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html
Deployability,update,updateCounter,"jectmodel::BaseLinkinline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; setValidator(ValidatorFn fn)sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>inline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; storePath() constsofa::core::objectmodel::BaseLinkinline; swap(iterator a, iterator b)sofa::simulation::NodeSequence< T, strong >inline; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TraitsContainer typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; TraitsDestPtr typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; TraitsValueType typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValidatorFn typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; value_type typedefsofa::simulation::NodeSequence< T, strong >; ValueType typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~MultiLink()sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>inlinevirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::NodeSequence< T, strong > Member List . This is the complete list of members for sofa::simulation::NodeSequence< T, strong >, including all inherited members. ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSequence< T, strong >; const_reverse_iterator typedefsofa::simulation::NodeSequence< T, strong >; Container typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html
Usability,clear,clear,":core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSequence< T, strong >; const_reverse_iterator typedefsofa::simulation::NodeSequence< T, strong >; Container typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html
Deployability,update,updateLinks,"tring &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; static constexpr unsigned ActiveFlags = TFlags;  ; static constexpr bool IsStrongLink = (ActiveFlags & FLAG_STRONGLINK) != 0;  ; static constexpr bool IsMultiLink = (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html
Integrability,message,message,"or a, iterator b);  Swap two values in the list. Uses a const_cast to violate the read-only iterators. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html
Modifiability,inherit,inherited,"or a, iterator b);  Swap two values in the list. Uses a const_cast to violate the read-only iterators. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html
Usability,clear,clear,"or a, iterator b);  Swap two values in the list. Uses a const_cast to violate the read-only iterators. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html
Deployability,update,updateCounter,"ink::InitLink< OwnerType > &init)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inline; SingleLink(const BaseLink::InitLink< OwnerType > &init, DestPtr val)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; storePath() constsofa::core::objectmodel::BaseLinkinline; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TraitsContainer typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; TraitsDestPtr typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; TraitsValueType typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValidatorFn typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; value_type typedefsofa::simulation::NodeSingle< T, duplicate >; ValueType typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~SingleLink()sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlinevirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::NodeSingle< T, duplicate > Member List . This is the complete list of members for sofa::simulation::NodeSingle< T, duplicate >, including all inherited members. ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; changed(DestPtr before, DestPtr val)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlineprotected; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSingle< T, duplicate >; const_reverse_iterator typedefsofa::simulation::NodeSingle< T, duplicate >; Container typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html
Usability,clear,clear,"nst std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; changed(DestPtr before, DestPtr val)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlineprotected; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSingle< T, duplicate >; const_reverse_iterator typedefsofa::simulation::NodeSingle< T, duplicate >; Container typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICAT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html
Deployability,update,updateLinks,"tring &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; static constexpr unsigned ActiveFlags = TFlags;  ; static constexpr bool IsStrongLink = (ActiveFlags & FLAG_STRONGLINK) != 0;  ; static constexpr bool IsMultiLink = (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html
Integrability,interface,interface,"﻿. SOFA API: sofa::simulation::NodeSingle< T, duplicate > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSingle< T, duplicate > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSingle< T, duplicate >:. [legend]; Detailed Description; template<class T, bool duplicate = true>; class sofa::simulation::NodeSingle< T, duplicate >; Class to hold 0-or-1 object. Public access is only readonly using an interface similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. UPDATE: it is now an alias for the Link pointer container . Public Member Functions;  NodeSingle (const BaseLink::InitLink< Node > &init);  ; T * operator-> () const;  ; T & operator* () const;  ;  operator T* () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html
Modifiability,inherit,inherited," multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSingle< T, duplicate > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSingle< T, duplicate >:. [legend]; Detailed Description; template<class T, bool duplicate = true>; class sofa::simulation::NodeSingle< T, duplicate >; Class to hold 0-or-1 object. Public access is only readonly using an interface similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. UPDATE: it is now an alias for the Link pointer container . Public Member Functions;  NodeSingle (const BaseLink::InitLink< Node > &init);  ; T * operator-> () const;  ; T & operator* () const;  ;  operator T* () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html
Security,access,access,"﻿. SOFA API: sofa::simulation::NodeSingle< T, duplicate > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSingle< T, duplicate > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSingle< T, duplicate >:. [legend]; Detailed Description; template<class T, bool duplicate = true>; class sofa::simulation::NodeSingle< T, duplicate >; Class to hold 0-or-1 object. Public access is only readonly using an interface similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. UPDATE: it is now an alias for the Link pointer container . Public Member Functions;  NodeSingle (const BaseLink::InitLink< Node > &init);  ; T * operator-> () const;  ; T & operator* () const;  ;  operator T* () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html
Usability,clear,clear,"alidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType > Member List . This is the complete list of members for sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >, including all inherited members. computeIntersection()sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >protected; computeProduct(bool forceComputeIntersection=false)sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; computeProductFromIntersection() overridesofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >inlinevirtual; computeRegularProduct()sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; getProductResult() constsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >inline; Index typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; invalidateIntersection()sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; LhsCleaned typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; LhsScalar typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; m_hasComputedIntersectionsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >protected; m_intersectionABsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >protected; m_lhssofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; m_productResultsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >protected; m_rhssofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; ProductResult typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; ResultCleaned typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; ResultScalar typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; RhsCleaned typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; RhsScalar typedefsofa::linearalgebra::SparseMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference . #include <ParallelSparseMatrixProduct.h>. Inheritance diagram for sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >:. [legend]. Public Attributes; TaskScheduler * taskScheduler { nullptr };  ;  Public Attributes inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; const LhsCleaned * m_lhs { nullptr };  Left side of the product A*B. More...;  ; const RhsCleaned * m_rhs { nullptr };  Right side of the product A*B. More...;  . Public Member Functions; void computeProductFromIntersection () override;  ;  Public Member Functions inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; void computeProduct (bool forceComputeIntersection=false);  ; void computeRegularProduct ();  ; const ResultType & getProductResult () const;  ; void invalidateIntersection ();  ;  SparseMatrixProduct (Lhs *lhs, Rhs *rhs);  ;  SparseMatrixProduct ()=default;  ; virtual ~SparseMatrixProduct ()=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; ProductResult m_productResult;  ; bool m_hasComputedIntersection { false };  Result of LHS * RHS. More...;  ; Intersection m_intersectionAB;  ;  Protected Member Functions inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; void computeIntersection ();  . Attribute details. ◆ taskScheduler. template<class Lhs , class Rhs , class ResultType > . TaskScheduler* sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >::taskScheduler { nullptr }. Function details. ◆ computeProductFromIntersection(). template<cl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::PauseEvent Member List . This is the complete list of members for sofa::simulation::PauseEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::PauseEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; PauseEvent()sofa::simulation::PauseEvent; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~PauseEvent() overridesofa::simulation::PauseEvent. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::PauseEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::PauseEvent Class Reference . #include <PauseEvent.h>. Inheritance diagram for sofa::simulation::PauseEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  PauseEvent ();  ;  ~PauseEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ PauseEvent(). sofa::simulation::PauseEvent::PauseEvent ; (; ). ◆ ~PauseEvent(). sofa::simulation::PauseEvent::~PauseEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::PauseEvent::GetClassName ; (; ). inlinestatic . sofasimulationPauseEvent; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event.html
Deployability,update,updateInternal,"el::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::simulation::PipelineImplvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::PipelineImpl Member List . This is the complete list of members for sofa::simulation::PipelineImpl, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html
Performance,load,loader,"reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::collision::Pipelinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::simulation::PipelineImplvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html
Usability,clear,clearLoggedMessages,"ack(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html
Availability,down,down,"﻿. SOFA API: sofa::simulation::PipelineImpl Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::PipelineImpl Class Reference . #include <PipelineImpl.h>. Inheritance diagram for sofa::simulation::PipelineImpl:. [legend]. Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Deployability,pipeline,pipeline,"ride;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Integrability,depend,dependent," sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Modifiability,inherit,inherited,"s Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::PipelineImpl Class Reference . #include <PipelineImpl.h>. Inheritance diagram for sofa::simulation::PipelineImpl:. [legend]. Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect depend",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Performance,load,loader,"tion * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Safety,detect,detection,"s Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::PipelineImpl Class Reference . #include <PipelineImpl.h>. Inheritance diagram for sofa::simulation::PipelineImpl:. [legend]. Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect depend",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Security,access,accessor,"s Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::PipelineImpl Class Reference . #include <PipelineImpl.h>. Inheritance diagram for sofa::simulation::PipelineImpl:. [legend]. Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect depend",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::PositionEvent Member List . This is the complete list of members for sofa::simulation::PositionEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::PositionEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; PositionEvent()sofa::simulation::PositionEvent; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~PositionEvent() overridesofa::simulation::PositionEvent. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_position_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_position_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::PositionEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::PositionEvent Class Reference . #include <PositionEvent.h>. Inheritance diagram for sofa::simulation::PositionEvent:. [legend]; Detailed Description; Event modify the position of model . Public Member Functions;  PositionEvent ();  ;  ~PositionEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ PositionEvent(). sofa::simulation::PositionEvent::PositionEvent ; (; ). ◆ ~PositionEvent(). sofa::simulation::PositionEvent::~PositionEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::PositionEvent::GetClassName ; (; ). inlinestatic . sofasimulationPositionEvent; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_position_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_position_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::PrintVisitor Member List . This is the complete list of members for sofa::simulation::PrintVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor-members.html
Testability,test,testTags,"se)sofa::simulation::PrintVisitorinline; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::PrintVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::PrintVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(T obj)sofa::simulation::PrintVisitor; processObjects(Seq &list, const char *name)sofa::simulation::PrintVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; setVerbose(int v)sofa::simulation::PrintVisitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::PrintVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; verbosesofa::simulation::PrintVisitorprotected; visitingOrdersofa::simulation::PrintVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor-members.html
Deployability,configurat,configurations,"on but can print the graph visiting by setting visitingOrder at true . Constructor details. ◆ PrintVisitor(). sofa::simulation::PrintVisitor::PrintVisitor ; (; const sofa::core::ExecParams * ; params, . bool ; visitingOrder = false . ). inline . Function details. ◆ getClassName(). const char* sofa::simulation::PrintVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ getVerbose(). int sofa::simulation::PrintVisitor::getVerbose ; (; ); const. inline . ◆ processNodeBottomUp(). void sofa::simulation::PrintVisitor::processNodeBottomUp ; (; simulation::Node * ; ). overridevirtual . Callback method called after child node have been processed and before going back to the parent node. ; Reimplemented from sofa::simulation::Visitor. ◆ processNodeTopDown(). Visitor::Result sofa::simulation::PrintVisitor::processNodeTopDown ; (; simulation::Node * ; ). overridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ processObject(). template<class T > . void sofa::simulation::PrintVisitor::processObject ; (; T ; obj). ◆ processObjects(). template<class Seq > . void sofa::simulation::PrintVisitor::processObjects ; (; Seq & ; list, . const char * ; name . ). ◆ setVerbose(). void sofa::simulation::PrintVisitor::setVerbose ; (; int ; v). inline . ◆ treeTraversal(). bool sofa::simulation::PrintVisitor::treeTraversal ; (; TreeTraversalRepetition & ; repeat). inlineoverridevirtual . ReturnstreeTraversal returns true if and only if a tree traversal must be enforced (even for a DAG) ; Parameters. repeatTell if a node callback can be executed several times (at each traversal in diamond configurations) . Reimplemented from sofa::simulation::Visitor. sofasimulationPrintVisitor; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::PrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::PrintVisitor Class Reference . #include <PrintVisitor.h>. Inheritance diagram for sofa::simulation::PrintVisitor:. [legend]. Protected Attributes; int verbose;  ; int level;  ; bool visitingOrder;  by default print the graph organisation but can print the graph visiting by setting visitingOrder at true More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  PrintVisitor (const sofa::core::ExecParams *params, bool visitingOrder=false);  ; void setVerbose (int v);  ; int getVerbose () const;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ; template<class T > ; void processObject (T obj);  ; template<class Seq > ; void processObjects (Seq &list, const char *name);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html
Testability,test,testTags,"class T > ; void processObject (T obj);  ; template<class Seq > ; void processObjects (Seq &list, const char *name);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::PropagateEventVisitor Member List . This is the complete list of members for sofa::simulation::PropagateEventVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor-members.html
Testability,test,testTags,"ion::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::PropagateEventVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *obj)sofa::simulation::PropagateEventVisitor; PropagateEventVisitor(const core::ExecParams *params, sofa::core::objectmodel::Event *e)sofa::simulation::PropagateEventVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~PropagateEventVisitor() overridesofa::simulation::PropagateEventVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor-members.html
Availability,down,down,"﻿. SOFA API: sofa::simulation::PropagateEventVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::PropagateEventVisitor Class Reference . #include <PropagateEventVisitor.h>. Inheritance diagram for sofa::simulation::PropagateEventVisitor:. [legend]; Detailed Description; Visitor used to propagate an event in the data structure. Propagation is done top-down until the event is handled. @author The SOFA team </www.sofa-framework.org>; . Protected Attributes; sofa::core::objectmodel::Event * m_event;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  PropagateEventVisitor (const core::ExecParams *params, sofa::core::objectmodel::Event *e);  ;  ~PropagateEventVisitor () override;  ; Visitor::Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processObject (simulation::Node *, core::objectmodel::BaseObject *obj);  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::PropagateEventVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::PropagateEventVisitor Class Reference . #include <PropagateEventVisitor.h>. Inheritance diagram for sofa::simulation::PropagateEventVisitor:. [legend]; Detailed Description; Visitor used to propagate an event in the data structure. Propagation is done top-down until the event is handled. @author The SOFA team </www.sofa-framework.org>; . Protected Attributes; sofa::core::objectmodel::Event * m_event;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  PropagateEventVisitor (const core::ExecParams *params, sofa::core::objectmodel::Event *e);  ;  ~PropagateEventVisitor () override;  ; Visitor::Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processObject (simulation::Node *, core::objectmodel::BaseObject *obj);  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html
Testability,test,testTags,"eTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processObject (simulation::Node *, core::objectmodel::BaseObject *obj);  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html
Deployability,update,updateInternal,"ag t)sofa::core::objectmodel::Base; RequiredPlugin()sofa::simulation::RequiredPluginprotected; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(RequiredPlugin, core::objectmodel::BaseObject)sofa::simulation::RequiredPlugin; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~RequiredPlugin() override=defaultsofa::simulation::RequiredPluginprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::RequiredPlugin Member List . This is the complete list of members for sofa::simulation::RequiredPlugin, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html
Performance,load,loadPlugin,"ar *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; loadPlugin()sofa::simulation::RequiredPlugin; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::simulation::RequiredPluginvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_loadedPluginssofa::simulation::RequiredPlugin; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pluginNamesofa::simulation::RequiredPlugin; d_requireAllsofa::simulation::RequiredPlugin; d_requireOnesofa::simulation::RequiredPlugin; d_stopAfterFirstNameFoundsofa::simulation::RequiredPlugin; d_stopAfterFirstSuffixFoundsofa::simulation::RequiredPlugin; d_suffixMapsofa::simulation::RequiredPlugin; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html
Availability,error,error,"mulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Deployability,update,updateInternal,");  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Integrability,message,message,"mulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Modifiability,plugin,plugin,"﻿. SOFA API: sofa::simulation::RequiredPlugin Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Performance,load,load,"﻿. SOFA API: sofa::simulation::RequiredPlugin Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::ResetVisitor Member List . This is the complete list of members for sofa::simulation::ResetVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor-members.html
Testability,test,testTags,"virtual; isThreadSafe() const overridesofa::simulation::ResetVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::ResetVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::ResetVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(core::objectmodel::BaseObject *obj)sofa::simulation::ResetVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; ResetVisitor(const core::ExecParams *params)sofa::simulation::ResetVisitorinline; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor-members.html
Modifiability,inherit,inherited,"ework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::ResetVisitor Class Reference . #include <ResetVisitor.h>. Inheritance diagram for sofa::simulation::ResetVisitor:. [legend]. Public Member Functions;  ResetVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html
Testability,test,testTags,"essNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class Vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheck Member List . This is the complete list of members for sofa::simulation::SceneCheck, including all inherited members. checkOn(sofa::simulation::Node *node, simulation::SceneLoader *sceneLoader)sofa::simulation::SceneCheckvirtual; doCheckOn(sofa::simulation::Node *node)=0sofa::simulation::SceneCheckpure virtual; doInit(sofa::simulation::Node *node)sofa::simulation::SceneCheckvirtual; doPrintSummary()sofa::simulation::SceneCheckvirtual; getDesc()=0sofa::simulation::SceneCheckpure virtual; getName()=0sofa::simulation::SceneCheckpure virtual; init(sofa::simulation::Node *node, simulation::SceneLoader *sceneLoader)sofa::simulation::SceneCheckvirtual; printSummary(simulation::SceneLoader *sceneLoader)sofa::simulation::SceneCheckvirtual; SPtr typedefsofa::simulation::SceneCheck; ~SceneCheck()sofa::simulation::SceneCheckvirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheckMainRegistry Member List . This is the complete list of members for sofa::simulation::SceneCheckMainRegistry, including all inherited members. addToRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckMainRegistrystatic; clearRegistry()sofa::simulation::SceneCheckMainRegistrystatic; getRegisteredSceneChecks()sofa::simulation::SceneCheckMainRegistrystatic; removeFromRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckMainRegistrystatic. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html
Usability,clear,clearRegistry,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheckMainRegistry Member List . This is the complete list of members for sofa::simulation::SceneCheckMainRegistry, including all inherited members. addToRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckMainRegistrystatic; clearRegistry()sofa::simulation::SceneCheckMainRegistrystatic; getRegisteredSceneChecks()sofa::simulation::SceneCheckMainRegistrystatic; removeFromRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckMainRegistrystatic. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html
Usability,clear,clearRegistry,﻿. SOFA API: sofa::simulation::SceneCheckMainRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::SceneCheckMainRegistry Class Reference . #include <SceneCheckMainRegistry.h>. Static Public Member Functions; static bool addToRegistry (const SceneCheck::SPtr &sceneCheck);  ; static void removeFromRegistry (const SceneCheck::SPtr &sceneCheck);  ; static void clearRegistry ();  ; static const type::vector< SceneCheck::SPtr > & getRegisteredSceneChecks ();  . Function details. ◆ addToRegistry(). bool sofa::simulation::SceneCheckMainRegistry::addToRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). static . ◆ clearRegistry(). void sofa::simulation::SceneCheckMainRegistry::clearRegistry ; (; ). static . ◆ getRegisteredSceneChecks(). const type::vector< SceneCheck::SPtr > & sofa::simulation::SceneCheckMainRegistry::getRegisteredSceneChecks ; (; ). static . ◆ removeFromRegistry(). void sofa::simulation::SceneCheckMainRegistry::removeFromRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). static . sofasimulationSceneCheckMainRegistry; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheckRegistry Member List . This is the complete list of members for sofa::simulation::SceneCheckRegistry, including all inherited members. addToRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckRegistry; clearRegistry()sofa::simulation::SceneCheckRegistry; getRegisteredSceneChecks() constsofa::simulation::SceneCheckRegistry; removeFromRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckRegistry. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html
Usability,clear,clearRegistry,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheckRegistry Member List . This is the complete list of members for sofa::simulation::SceneCheckRegistry, including all inherited members. addToRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckRegistry; clearRegistry()sofa::simulation::SceneCheckRegistry; getRegisteredSceneChecks() constsofa::simulation::SceneCheckRegistry; removeFromRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckRegistry. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html
Usability,clear,clearRegistry,﻿. SOFA API: sofa::simulation::SceneCheckRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneCheckRegistry Class Reference . #include <SceneCheckRegistry.h>. Public Member Functions; bool addToRegistry (const SceneCheck::SPtr &sceneCheck);  ; void removeFromRegistry (const SceneCheck::SPtr &sceneCheck);  ; void clearRegistry ();  ; const type::vector< SceneCheck::SPtr > & getRegisteredSceneChecks () const;  . Function details. ◆ addToRegistry(). bool sofa::simulation::SceneCheckRegistry::addToRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). ◆ clearRegistry(). void sofa::simulation::SceneCheckRegistry::clearRegistry ; (; ). ◆ getRegisteredSceneChecks(). const type::vector< SceneCheck::SPtr > & sofa::simulation::SceneCheckRegistry::getRegisteredSceneChecks ; (; ); const. ◆ removeFromRegistry(). void sofa::simulation::SceneCheckRegistry::removeFromRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). sofasimulationSceneCheckRegistry; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoader Member List . This is the complete list of members for sofa::simulation::SceneLoader, including all inherited members. addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension)=0sofa::simulation::SceneLoaderpure virtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *)sofa::simulation::SceneLoaderinlinevirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs)=0sofa::simulation::SceneLoaderpure virtual; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list)=0sofa::simulation::SceneLoaderpure virtual; getFileTypeDesc()=0sofa::simulation::SceneLoaderpure virtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; removeListener(Listener *l)sofa::simulation::SceneLoaderstatic; s_listenerssofa::simulation::SceneLoaderprotectedstatic; syntaxForAddingRequiredPlugin(const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded)sofa::simulation::SceneLoadervirtual; write(sofa::simulation::Node *, const char *)sofa::simulat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader-members.html
Performance,load,load,"e complete list of members for sofa::simulation::SceneLoader, including all inherited members. addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension)=0sofa::simulation::SceneLoaderpure virtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *)sofa::simulation::SceneLoaderinlinevirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs)=0sofa::simulation::SceneLoaderpure virtual; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list)=0sofa::simulation::SceneLoaderpure virtual; getFileTypeDesc()=0sofa::simulation::SceneLoaderpure virtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; removeListener(Listener *l)sofa::simulation::SceneLoaderstatic; s_listenerssofa::simulation::SceneLoaderprotectedstatic; syntaxForAddingRequiredPlugin(const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded)sofa::simulation::SceneLoadervirtual; write(sofa::simulation::Node *, const char *)sofa::simulation::SceneLoaderinlinevirtual; ~SceneLoader()=defaultsofa::simulation::SceneLoadervirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::simulation::SceneLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::simulation::SceneLoader Class Referenceabstract . #include <SceneLoaderFactory.h>; Main class used to register scene file loaders. ; More... Inheritance diagram for sofa::simulation::SceneLoader:. [legend]; Detailed Description; Main class used to register scene file loaders. ; It uses the Factory design pattern, where each class is registered in a map, and dynamically retrieved given the type name. Abstract interface of a scene loader . Classes; struct  Listener;  to be able to inform when a scene is loaded More...;  . Static Protected Attributes; static Listeners s_listeners;  . Public Member Functions; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canLoadFileExtension (const char *extension)=0;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs)=0;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual std::string getFileTypeDesc ()=0;  get the file type description More...;  ; virtual void getExtensionList (ExtensionList *list)=0;  get the list of file extensions More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html
Modifiability,plugin,pluginName,"ceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canLoadFileExtension (const char *extension)=0;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs)=0;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual std::string getFileTypeDesc ()=0;  get the file type description More...;  ; virtual void getExtensionList (ExtensionList *list)=0;  get the list of file extensions More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded);  . Static Public Member Functions; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  . Static Protected Member Functions; static void notifyLoadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyReloadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyLoadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  ; static void notifyReloadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  . Attribute details. ◆ s_listeners. SceneLoader::Listeners sofa::simulation::SceneLoader::s_listeners. staticprotected . Constructor details. ◆ ~SceneLoader(). virtual sofa::simulation::SceneLoader::~SceneLoader ; (; ). virtualdefault . Function details. ◆ addListener(). void sofa::simulation::SceneLoader::addListener ; (; Listener * ; l). static . add",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html
Performance,load,loaders,"﻿. SOFA API: sofa::simulation::SceneLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::simulation::SceneLoader Class Referenceabstract . #include <SceneLoaderFactory.h>; Main class used to register scene file loaders. ; More... Inheritance diagram for sofa::simulation::SceneLoader:. [legend]; Detailed Description; Main class used to register scene file loaders. ; It uses the Factory design pattern, where each class is registered in a map, and dynamically retrieved given the type name. Abstract interface of a scene loader . Classes; struct  Listener;  to be able to inform when a scene is loaded More...;  . Static Protected Attributes; static Listeners s_listeners;  . Public Member Functions; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canLoadFileExtension (const char *extension)=0;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs)=0;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual std::string getFileTypeDesc ()=0;  get the file type description More...;  ; virtual void getExtensionList (ExtensionList *list)=0;  get the list of file extensions More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoaderFactory Member List . This is the complete list of members for sofa::simulation::SceneLoaderFactory, including all inherited members. addEntry(SceneLoader *loader)sofa::simulation::SceneLoaderFactory; extensions()sofa::simulation::SceneLoaderFactory; getEntries()sofa::simulation::SceneLoaderFactoryinline; getEntryFileExtension(std::string extension)sofa::simulation::SceneLoaderFactory; getEntryFileName(std::string filename)sofa::simulation::SceneLoaderFactory; getExporterEntryFileExtension(std::string extension)sofa::simulation::SceneLoaderFactory; getExporterEntryFileName(std::string filename)sofa::simulation::SceneLoaderFactory; getInstance()sofa::simulation::SceneLoaderFactorystatic; registrysofa::simulation::SceneLoaderFactoryprotected; SceneLoaderList typedefsofa::simulation::SceneLoaderFactory; ~SceneLoaderFactory()sofa::simulation::SceneLoaderFactory. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory-members.html
Performance,load,loader,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoaderFactory Member List . This is the complete list of members for sofa::simulation::SceneLoaderFactory, including all inherited members. addEntry(SceneLoader *loader)sofa::simulation::SceneLoaderFactory; extensions()sofa::simulation::SceneLoaderFactory; getEntries()sofa::simulation::SceneLoaderFactoryinline; getEntryFileExtension(std::string extension)sofa::simulation::SceneLoaderFactory; getEntryFileName(std::string filename)sofa::simulation::SceneLoaderFactory; getExporterEntryFileExtension(std::string extension)sofa::simulation::SceneLoaderFactory; getExporterEntryFileName(std::string filename)sofa::simulation::SceneLoaderFactory; getInstance()sofa::simulation::SceneLoaderFactorystatic; registrysofa::simulation::SceneLoaderFactoryprotected; SceneLoaderList typedefsofa::simulation::SceneLoaderFactory; ~SceneLoaderFactory()sofa::simulation::SceneLoaderFactory. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory-members.html
Energy Efficiency,reduce,reduced,ader * getExporterEntryFileName (std::string filename);  Get an exporter entry given a file name. More...;  ; SceneLoader * addEntry (SceneLoader *loader);  Add a scene loader. More...;  ; SceneLoaderList * getEntries ();  Get the list of loaders. More...;  ; std::vector< std::string > extensions ();  . Static Public Member Functions; static SceneLoaderFactory * getInstance ();  Get the ObjectFactory singleton instance. More...;  . Attribute details. ◆ registry. SceneLoaderList sofa::simulation::SceneLoaderFactory::registry. protected . Main class registry. . Constructor details. ◆ ~SceneLoaderFactory(). sofa::simulation::SceneLoaderFactory::~SceneLoaderFactory ; (; ). Function details. ◆ addEntry(). SceneLoader * sofa::simulation::SceneLoaderFactory::addEntry ; (; SceneLoader * ; loader). Add a scene loader. . ◆ extensions(). std::vector< std::string > sofa::simulation::SceneLoaderFactory::extensions ; (; ). Get the list of supported extension. It returns a vector of string but it is RVO optimized so the overhead is reduced. . ◆ getEntries(). SceneLoaderList* sofa::simulation::SceneLoaderFactory::getEntries ; (; ). inline . Get the list of loaders. . ◆ getEntryFileExtension(). SceneLoader * sofa::simulation::SceneLoaderFactory::getEntryFileExtension ; (; std::string ; extension). Get an entry given a file extension. . ◆ getEntryFileName(). SceneLoader * sofa::simulation::SceneLoaderFactory::getEntryFileName ; (; std::string ; filename). Get an entry given a file name. ; Get an entry given a file extension. . ◆ getExporterEntryFileExtension(). SceneLoader * sofa::simulation::SceneLoaderFactory::getExporterEntryFileExtension ; (; std::string ; extension). Get an exporter entry given a file extension. . ◆ getExporterEntryFileName(). SceneLoader * sofa::simulation::SceneLoaderFactory::getExporterEntryFileName ; (; std::string ; filename). Get an exporter entry given a file name. . ◆ getInstance(). SceneLoaderFactory * sofa::simulation::SceneLoaderFactory::getInstance ;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html
Performance,load,loader,﻿. SOFA API: sofa::simulation::SceneLoaderFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SceneLoaderFactory Class Reference . #include <SceneLoaderFactory.h>. Protected Attributes; SceneLoaderList registry;  Main class registry. More...;  . Public Member Functions;  ~SceneLoaderFactory ();  ; SceneLoader * getEntryFileExtension (std::string extension);  Get an entry given a file extension. More...;  ; SceneLoader * getEntryFileName (std::string filename);  Get an entry given a file name. More...;  ; SceneLoader * getExporterEntryFileExtension (std::string extension);  Get an exporter entry given a file extension. More...;  ; SceneLoader * getExporterEntryFileName (std::string filename);  Get an exporter entry given a file name. More...;  ; SceneLoader * addEntry (SceneLoader *loader);  Add a scene loader. More...;  ; SceneLoaderList * getEntries ();  Get the list of loaders. More...;  ; std::vector< std::string > extensions ();  . Static Public Member Functions; static SceneLoaderFactory * getInstance ();  Get the ObjectFactory singleton instance. More...;  . Attribute details. ◆ registry. SceneLoaderList sofa::simulation::SceneLoaderFactory::registry. protected . Main class registry. . Constructor details. ◆ ~SceneLoaderFactory(). sofa::simulation::SceneLoaderFactory::~SceneLoaderFactory ; (; ). Function details. ◆ addEntry(). SceneLoader * sofa::simulation::SceneLoaderFactory::addEntry ; (; SceneLoader * ; loader). Add a scene loader. . ◆ extensions(). std::vector< std::string > sofa::simulation::SceneLoaderFactory::extensions ; (; ). Get the list of supported extension. It returns a vector of string but it is RVO optimized so the overhead is reduced. . ◆ getEntries(). SceneLoaderList* sofa::simulation::SceneLoaderFactory::getEntries ; (; ). inline . Get the list of loaders. . ◆ getEntryFile,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoaderPHP Member List . This is the complete list of members for sofa::simulation::SceneLoaderPHP, including all inherited members. addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension) overridesofa::simulation::SceneLoaderPHPvirtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *)sofa::simulation::SceneLoaderinlinevirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs) overridesofa::simulation::SceneLoaderPHPvirtual; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list) overridesofa::simulation::SceneLoaderPHPvirtual; getFileTypeDesc() overridesofa::simulation::SceneLoaderPHPvirtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; removeListener(Listener *l)sofa::simulation::SceneLoaderstatic; s_listenerssofa::simulation::SceneLoaderprotectedstatic; syntaxForAddingRequiredPlugin(const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded)sofa::simulation::SceneLoadervirtual; write(sofa::simulation::Node *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p-members.html
Performance,load,load,"ers for sofa::simulation::SceneLoaderPHP, including all inherited members. addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension) overridesofa::simulation::SceneLoaderPHPvirtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *)sofa::simulation::SceneLoaderinlinevirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs) overridesofa::simulation::SceneLoaderPHPvirtual; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list) overridesofa::simulation::SceneLoaderPHPvirtual; getFileTypeDesc() overridesofa::simulation::SceneLoaderPHPvirtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; removeListener(Listener *l)sofa::simulation::SceneLoaderstatic; s_listenerssofa::simulation::SceneLoaderprotectedstatic; syntaxForAddingRequiredPlugin(const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded)sofa::simulation::SceneLoadervirtual; write(sofa::simulation::Node *, const char *)sofa::simulation::SceneLoaderinlinevirtual; ~SceneLoader()=defaultsofa::simulation::SceneLoadervirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SceneLoaderPHP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoaderPHP Class Reference . #include <SceneLoaderPHP.h>. Inheritance diagram for sofa::simulation::SceneLoaderPHP:. [legend]. Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::simulation::SceneLoader; static Listeners s_listeners;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  ;  Static Protected Member Functions in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html
Performance,load,loading,"﻿. SOFA API: sofa::simulation::SceneLoaderPHP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoaderPHP Class Reference . #include <SceneLoaderPHP.h>. Inheritance diagram for sofa::simulation::SceneLoaderPHP:. [legend]. Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::simulation::SceneLoader; static Listeners s_listeners;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  ;  Static Protected Member Functions in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoaderXML Member List . This is the complete list of members for sofa::simulation::SceneLoaderXML, including all inherited members. addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension) overridesofa::simulation::SceneLoaderXMLvirtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *extension) overridesofa::simulation::SceneLoaderXMLvirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs) overridesofa::simulation::SceneLoaderXMLvirtual; doLoadFromMemory(const char *filename, const char *data)sofa::simulation::SceneLoaderXML; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list) overridesofa::simulation::SceneLoaderXMLvirtual; getFileTypeDesc() overridesofa::simulation::SceneLoaderXMLvirtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; loadFromMemory(const char *filename, const char *data)sofa::simulation::SceneLoaderXMLstatic; loadSucceedsofa::simulation::SceneLoaderXMLstatic; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; processXML(xml::BaseElement *xml, const char *filename)sofa::simulation::SceneLoaderXMLstatic; removeListener",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html
Performance,load,load," addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension) overridesofa::simulation::SceneLoaderXMLvirtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *extension) overridesofa::simulation::SceneLoaderXMLvirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs) overridesofa::simulation::SceneLoaderXMLvirtual; doLoadFromMemory(const char *filename, const char *data)sofa::simulation::SceneLoaderXML; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list) overridesofa::simulation::SceneLoaderXMLvirtual; getFileTypeDesc() overridesofa::simulation::SceneLoaderXMLvirtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; loadFromMemory(const char *filename, const char *data)sofa::simulation::SceneLoaderXMLstatic; loadSucceedsofa::simulation::SceneLoaderXMLstatic; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; processXML(xml::BaseElement *xml, const char *filename)sofa::simulation::SceneLoaderXMLstatic; removeListener",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html
Integrability,depend,depends," ; Implements sofa::simulation::SceneLoader. ◆ doLoadFromMemory(). NodeSPtr sofa::simulation::SceneLoaderXML::doLoadFromMemory ; (; const char * ; filename, . const char * ; data . ). load a scene from memory (typically : an xml into a string) . ◆ getExtensionList(). void sofa::simulation::SceneLoaderXML::getExtensionList ; (; ExtensionList * ; list). overridevirtual . get the list of file extensions ; Implements sofa::simulation::SceneLoader. ◆ getFileTypeDesc(). std::string sofa::simulation::SceneLoaderXML::getFileTypeDesc ; (; ). overridevirtual . get the file type description ; Implements sofa::simulation::SceneLoader. ◆ loadFromMemory(). Node::SPtr sofa::simulation::SceneLoaderXML::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). static . load a scene from memory (typically : an xml into a string) ; Load from a string in memory. . ◆ processXML(). Node::SPtr sofa::simulation::SceneLoaderXML::processXML ; (; xml::BaseElement * ; xml, . const char * ; filename . ). static . generic function to process xml tree (after loading the xml structure) ; Load a scene from a file. . ◆ syntaxForAddingRequiredPlugin(). bool sofa::simulation::SceneLoaderXML::syntaxForAddingRequiredPlugin ; (; const std::string & ; pluginName, . const std::vector< std::string > & ; listComponents, . std::ostream & ; ss, . sofa::simulation::Node * ; nodeWhereAdded . ). overridevirtual . Write into a ostream the syntax to add a RequiredPlugin component in the scene file. The syntax depends on the file format, hence the SceneLoader. The function returns true if the derived SceneLoader implements this function, false otherwise. ; Reimplemented from sofa::simulation::SceneLoader. ◆ write(). void sofa::simulation::SceneLoaderXML::write ; (; sofa::simulation::Node * ; node, . const char * ; filename . ). overridevirtual . write the file ; Reimplemented from sofa::simulation::SceneLoader. sofasimulationSceneLoaderXML; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html
Modifiability,plugin,pluginName,"oadSucceed = true;  . Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; bool canWriteFileExtension (const char *extension) override;  Pre-saving check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; void write (sofa::simulation::Node *node, const char *filename) override;  write the file More...;  ; NodeSPtr doLoadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ; bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded) override;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  . Static Public Member Functions; static NodeSPtr processXML (xml::BaseElement *xml, const char *filename);  generic function to process xml tree (after loading the xml structure) More...;  ; static NodeSPtr loadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  remov",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html
Performance,load,loadSucceed,"﻿. SOFA API: sofa::simulation::SceneLoaderXML Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SceneLoaderXML Class Reference . #include <SceneLoaderXML.h>. Inheritance diagram for sofa::simulation::SceneLoaderXML:. [legend]. Static Public Attributes; static bool loadSucceed = true;  . Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; bool canWriteFileExtension (const char *extension) override;  Pre-saving check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; void write (sofa::simulation::Node *node, const char *filename) override;  write the file More...;  ; NodeSPtr doLoadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ; bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded) override;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  . Static Public Member Functions; static NodeSPtr processXML (xml::BaseElement *xml, const char *fi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::ScopedLock Member List . This is the complete list of members for sofa::simulation::ScopedLock, including all inherited members. operator=(ScopedLock const &)=deletesofa::simulation::ScopedLock; ScopedLock(SpinLock &lock)sofa::simulation::ScopedLockinlineexplicit; ScopedLock(ScopedLock const &)=deletesofa::simulation::ScopedLock; ~ScopedLock()sofa::simulation::ScopedLockinline. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_scoped_lock-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scoped_lock-members.html
Deployability,update,updateContext," *root, SReal *minBBox, SReal *maxBBox, bool init=true)=deletesofa::simulation::Simulationvirtual; computeTotalBBox(Node *root, SReal *minBBox, SReal *maxBBox)=deletesofa::simulation::Simulationvirtual; createNewGraph(const std::string &name)=0sofa::simulation::Simulationpure virtual; createNewNode(const std::string &name)=0sofa::simulation::Simulationpure virtual; draw(sofa::core::visual::VisualParams *vparams, Node *root)=deletesofa::simulation::Simulationvirtual; dumpState(Node *root, std::ofstream &out)=deletesofa::simulation::Simulationvirtual; exportGraph(Node *root, const char *filename=nullptr)=deletesofa::simulation::Simulationvirtual; exportOBJ(Node *root, const char *filename, bool exportMTL=true)=deletesofa::simulation::Simulationvirtual; exportXML(Node *root, const char *fileName=nullptr)=deletesofa::simulation::Simulationvirtual; init(Node *root)=deletesofa::simulation::Simulationvirtual; initNode(Node *node)=deletesofa::simulation::Simulationvirtual; initTextures(Node *root)=deletesofa::simulation::Simulationvirtual; isDirectedAcyclicGraph()=0sofa::simulation::Simulationpure virtual; load(const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=deletesofa::simulation::Simulationvirtual; operator=(const Simulation &n)=deletesofa::simulation::Simulation; print(Node *root)=deletesofa::simulation::Simulationvirtual; reset(Node *root)=deletesofa::simulation::Simulationvirtual; Simulation()sofa::simulation::Simulation; Simulation(const Simulation &n)=deletesofa::simulation::Simulation; SPtr typedefsofa::simulation::Simulation; theSimulationsofa::simulation::Simulationinlinestatic; unload(NodeSPtr root)=deletesofa::simulation::Simulationvirtual; updateContext(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisual(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisualContext(Node *root)=deletesofa::simulation::Simulationvirtual; ~Simulation()sofa::simulation::Simulationvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Simulation Member List . This is the complete list of members for sofa::simulation::Simulation, including all inherited members. animate(Node *root, SReal dt=0.0)=deletesofa::simulation::Simulationvirtual; computeBBox(Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=deletesofa::simulation::Simulationvirtual; computeTotalBBox(Node *root, SReal *minBBox, SReal *maxBBox)=deletesofa::simulation::Simulationvirtual; createNewGraph(const std::string &name)=0sofa::simulation::Simulationpure virtual; createNewNode(const std::string &name)=0sofa::simulation::Simulationpure virtual; draw(sofa::core::visual::VisualParams *vparams, Node *root)=deletesofa::simulation::Simulationvirtual; dumpState(Node *root, std::ofstream &out)=deletesofa::simulation::Simulationvirtual; exportGraph(Node *root, const char *filename=nullptr)=deletesofa::simulation::Simulationvirtual; exportOBJ(Node *root, const char *filename, bool exportMTL=true)=deletesofa::simulation::Simulationvirtual; exportXML(Node *root, const char *fileName=nullptr)=deletesofa::simulation::Simulationvirtual; init(Node *root)=deletesofa::simulation::Simulationvirtual; initNode(Node *node)=deletesofa::simulation::Simulationvirtual; initTextures(Node *root)=deletesofa::simulation::Simulationvirtual; isDirectedAcyclicGraph()=0sofa::simulation::Simulationpure virtual; load(const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=deletesofa::simulation::Simulationvirtual; operator=(const Simulation &n)=deletesofa::simulation::Simulation; print(Node *root)=deletesofa::simulation::Simulationvirtual; reset(Node *root)=deletesofa::simulation::Simulationvirtual; Simulation()sofa::simulation::Simulation; Simulation(const Simulation &n)=deletesofa::simulation::Simulation; SPtr typedefsofa::simulation::Simulation; theSimulationsofa::simulation::Simulation",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html
Performance,load,load," *root, SReal *minBBox, SReal *maxBBox, bool init=true)=deletesofa::simulation::Simulationvirtual; computeTotalBBox(Node *root, SReal *minBBox, SReal *maxBBox)=deletesofa::simulation::Simulationvirtual; createNewGraph(const std::string &name)=0sofa::simulation::Simulationpure virtual; createNewNode(const std::string &name)=0sofa::simulation::Simulationpure virtual; draw(sofa::core::visual::VisualParams *vparams, Node *root)=deletesofa::simulation::Simulationvirtual; dumpState(Node *root, std::ofstream &out)=deletesofa::simulation::Simulationvirtual; exportGraph(Node *root, const char *filename=nullptr)=deletesofa::simulation::Simulationvirtual; exportOBJ(Node *root, const char *filename, bool exportMTL=true)=deletesofa::simulation::Simulationvirtual; exportXML(Node *root, const char *fileName=nullptr)=deletesofa::simulation::Simulationvirtual; init(Node *root)=deletesofa::simulation::Simulationvirtual; initNode(Node *node)=deletesofa::simulation::Simulationvirtual; initTextures(Node *root)=deletesofa::simulation::Simulationvirtual; isDirectedAcyclicGraph()=0sofa::simulation::Simulationpure virtual; load(const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=deletesofa::simulation::Simulationvirtual; operator=(const Simulation &n)=deletesofa::simulation::Simulation; print(Node *root)=deletesofa::simulation::Simulationvirtual; reset(Node *root)=deletesofa::simulation::Simulationvirtual; Simulation()sofa::simulation::Simulation; Simulation(const Simulation &n)=deletesofa::simulation::Simulation; SPtr typedefsofa::simulation::Simulation; theSimulationsofa::simulation::Simulationinlinestatic; unload(NodeSPtr root)=deletesofa::simulation::Simulationvirtual; updateContext(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisual(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisualContext(Node *root)=deletesofa::simulation::Simulationvirtual; ~Simulation()sofa::simulation::Simulationvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html
Deployability,update,updated,"﻿. SOFA API: sofa::simulation::Simulation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::Simulation Class Referenceabstract . #include <Simulation.h>. Inheritance diagram for sofa::simulation::Simulation:. [legend]; Detailed Description; Main controller of the scene. Defines how the scene is inited at the beginning, and updated at each time step. Derives from Base in order to use smart pointers and model the parameters as Datas, which makes their edition easy in the GUI. . Static Public Attributes; static Simulation::SPtr theSimulation { nullptr };  . Public Member Functions;  Simulation ();  ; virtual ~Simulation ();  ;  Simulation (const Simulation &n)=delete;  ; Simulation & operator= (const Simulation &n)=delete;  ; virtual void print (Node *root)=delete;  Print all object in the graph. More...;  ; virtual void init (Node *root)=delete;  Initialize the objects. More...;  ; virtual void initNode (Node *node)=delete;  Init a node without changing the context of the simulation. More...;  ; virtual void animate (Node *root, SReal dt=0.0)=delete;  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; virtual void updateVisual (Node *root)=delete;  Update the Visual Models: triggers the Mappings. More...;  ; virtual void reset (Node *root)=delete;  Reset to initial state. More...;  ; virtual void initTextures (Node *root)=delete;  Initialize the textures. More...;  ; virtual void updateContext (Node *root)=delete;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void updateVisualContext (Node *root)=delete;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=delete;  ; virtual void computeTotalBBox (Node *root, SReal *minBB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html
Performance,load,load," the scene if root flags are modified. More...;  ; virtual void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=delete;  ; virtual void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox)=delete;  ; virtual void draw (sofa::core::visual::VisualParams *vparams, Node *root)=delete;  Render the scene. More...;  ; virtual void exportOBJ (Node *root, const char *filename, bool exportMTL=true)=delete;  Export a scene to an OBJ 3D Scene. More...;  ; virtual void exportXML (Node *root, const char *fileName=nullptr)=delete;  Print all object in the graph in XML format. More...;  ; virtual void exportGraph (Node *root, const char *filename=nullptr)=delete;  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; virtual void dumpState (Node *root, std::ofstream &out)=delete;  Dump the current state in the given stream. More...;  ; virtual NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=delete;  Load a scene from a file. More...;  ; virtual void unload (NodeSPtr root)=delete;  Unload a scene from a Node. More...;  ; virtual NodeSPtr createNewGraph (const std::string &name)=0;  create a new graph(or tree) and return its root node. More...;  ; virtual NodeSPtr createNewNode (const std::string &name)=0;  creates and returns a new node. More...;  ; virtual bool isDirectedAcyclicGraph ()=0;  Can the simulation handle a directed acyclic graph? More...;  . Attribute details. ◆ theSimulation. Simulation::SPtr sofa::simulation::Simulation::theSimulation { nullptr }. inlinestatic . Constructor details. ◆ Simulation() [1/2]. sofa::simulation::Simulation::Simulation ; (; ). ◆ ~Simulation(). sofa::simulation::Simulation::~Simulation ; (; ). virtual . ◆ Simulation() [2/2]. sofa::simulation::Simulation::Simulation ; (; const Simulation & ; n). delete . Function details. ◆ animate(). virtual void sofa::simulation::Simulation::anim",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SimulationInitDoneEvent Member List . This is the complete list of members for sofa::simulation::SimulationInitDoneEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::SimulationInitDoneEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; SimulationInitDoneEvent()sofa::simulation::SimulationInitDoneEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~SimulationInitDoneEvent() overridesofa::simulation::SimulationInitDoneEvent. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SimulationInitDoneEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitDoneEvent Class Reference . #include <SimulationInitDoneEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitDoneEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationInitDoneEvent ();  ;  ~SimulationInitDoneEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitDoneEvent(). sofa::simulation::SimulationInitDoneEvent::SimulationInitDoneEvent ; (; ). ◆ ~SimulationInitDoneEvent(). sofa::simulation::SimulationInitDoneEvent::~SimulationInitDoneEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitDoneEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationInitDoneEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SimulationInitStartEvent Member List . This is the complete list of members for sofa::simulation::SimulationInitStartEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::SimulationInitStartEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; SimulationInitStartEvent()sofa::simulation::SimulationInitStartEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~SimulationInitStartEvent() overridesofa::simulation::SimulationInitStartEvent. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SimulationInitStartEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitStartEvent Class Reference . #include <SimulationInitStartEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitStartEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationInitStartEvent ();  ;  ~SimulationInitStartEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitStartEvent(). sofa::simulation::SimulationInitStartEvent::SimulationInitStartEvent ; (; ). ◆ ~SimulationInitStartEvent(). sofa::simulation::SimulationInitStartEvent::~SimulationInitStartEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitStartEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationInitStartEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SimulationInitTexturesDoneEvent Member List . This is the complete list of members for sofa::simulation::SimulationInitTexturesDoneEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::SimulationInitTexturesDoneEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; SimulationInitTexturesDoneEvent()=defaultsofa::simulation::SimulationInitTexturesDoneEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~SimulationInitTexturesDoneEvent() override=defaultsofa::simulation::SimulationInitTexturesDoneEvent. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SimulationInitTexturesDoneEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitTexturesDoneEvent Class Reference . #include <SimulationInitTexturesDoneEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitTexturesDoneEvent:. [legend]; Detailed Description; Event fired when sofa::simulation::Simulation::initTextures has been called. . Public Member Functions;  SimulationInitTexturesDoneEvent ()=default;  ;  ~SimulationInitTexturesDoneEvent () override=default;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitTexturesDoneEvent(). sofa::simulation::SimulationInitTexturesDoneEvent::SimulationInitTexturesDoneEvent ; (; ). default . ◆ ~SimulationInitTexturesDoneEvent(). sofa::simulation::SimulationInitTexturesDoneEvent::~SimulationInitTexturesDoneEvent ; (; ). overridedefault . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitTexturesDoneEvent::GetClassName ; (; ). in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SimulationStartEvent Member List . This is the complete list of members for sofa::simulation::SimulationStartEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::SimulationStartEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; SimulationStartEvent()sofa::simulation::SimulationStartEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~SimulationStartEvent() overridesofa::simulation::SimulationStartEvent. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SimulationStartEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationStartEvent Class Reference . #include <SimulationStartEvent.h>. Inheritance diagram for sofa::simulation::SimulationStartEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationStartEvent ();  ;  ~SimulationStartEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationStartEvent(). sofa::simulation::SimulationStartEvent::SimulationStartEvent ; (; ). ◆ ~SimulationStartEvent(). sofa::simulation::SimulationStartEvent::~SimulationStartEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationStartEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationStartEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SimulationStopEvent Member List . This is the complete list of members for sofa::simulation::SimulationStopEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::SimulationStopEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; SimulationStopEvent()sofa::simulation::SimulationStopEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~SimulationStopEvent() overridesofa::simulation::SimulationStopEvent. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SimulationStopEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationStopEvent Class Reference . #include <SimulationStopEvent.h>. Inheritance diagram for sofa::simulation::SimulationStopEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationStopEvent ();  ;  ~SimulationStopEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationStopEvent(). sofa::simulation::SimulationStopEvent::SimulationStopEvent ; (; ). ◆ ~SimulationStopEvent(). sofa::simulation::SimulationStopEvent::~SimulationStopEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationStopEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationStopEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SolveConstraintSystemEndEvent Member List . This is the complete list of members for sofa::simulation::SolveConstraintSystemEndEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::SolveConstraintSystemEndEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; SolveConstraintSystemEndEvent()sofa::simulation::SolveConstraintSystemEndEventinline; ~Event()sofa::core::objectmodel::Eventvirtual; ~SolveConstraintSystemEndEvent() overridesofa::simulation::SolveConstraintSystemEndEventinline. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SolveConstraintSystemEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SolveConstraintSystemEndEvent Class Reference . #include <SolveConstraintSystemEndEvent.h>. Inheritance diagram for sofa::simulation::SolveConstraintSystemEndEvent:. [legend]. Public Member Functions;  SolveConstraintSystemEndEvent ();  ;  ~SolveConstraintSystemEndEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SolveConstraintSystemEndEvent(). sofa::simulation::SolveConstraintSystemEndEvent::SolveConstraintSystemEndEvent ; (; ). inline . ◆ ~SolveConstraintSystemEndEvent(). sofa::simulation::SolveConstraintSystemEndEvent::~SolveConstraintSystemEndEvent ; (; ). inlineoverride . Function details. ◆ GetClassName(). static const char* sofa::simulation::SolveConstraintSystemEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationSolveConstraintSystemEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SolveVisitor Member List . This is the complete list of members for sofa::simulation::SolveVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; dtsofa::simulation::SolveVisitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html
Testability,test,testTags,"core::behavior::OdeSolver *b)sofa::simulation::SolveVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; sequentialSolve(simulation::Node *node)sofa::simulation::SolveVisitorprotected; setDt(SReal _dt)sofa::simulation::SolveVisitor; setTags(const TagSet &t)sofa::simulation::Visitorinline; SolveVisitor(const sofa::core::ExecParams *params, SReal _dt, sofa::core::MultiVecCoordId X=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId V=sofa::core::VecDerivId::velocity(), bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false)sofa::simulation::SolveVisitor; SolveVisitor(const sofa::core::ExecParams *params, SReal _dt, bool free, bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false)sofa::simulation::SolveVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; vsofa::simulation::SolveVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; xsofa::simulation::SolveVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html
Energy Efficiency,schedul,scheduler," ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Protected Member Functions; void sequentialSolve (simulation::Node *node);  Function called if the solvers run sequentially. More...;  ; void parallelSolve (simulation::Node *node);  ; void initializeTaskScheduler ();  Initialize the task scheduler if it is not done already. More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SolveVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::SolveVisitor Class Reference . #include <SolveVisitor.h>. Inheritance diagram for sofa::simulation::SolveVisitor:. [legend]; Detailed Description; Used by the animation loop: send the solve signal to the others solvers This visitor is able to run the solvers sequentially or concurrently. . Protected Attributes; SReal dt;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ; bool m_parallelSolve {false };  ; bool m_computeForceIsolatedInteractionForceFields { false };  ; std::list< SolveVisitorTask > m_tasks;  Container for the parallel tasks. More...;  ; sofa::simulation::CpuTask::Status m_status;  Status for the parallel tasks. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  SolveVisitor (const sofa::core::ExecParams *params, SReal _dt, sofa::core::MultiVecCoordId X=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId V=sofa::core::VecDerivId::velocity(), bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false);  ;  SolveVisitor (const sofa::core::ExecParams *params, SReal _dt, bool free, bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false);  ; virtual void processSolver (simulation::Node *node, sofa::core::behavior::OdeSolver *b);  ; void fwdInteractionForceField (Node *node, core::behavior::BaseInteractionForceField *forceField);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *) override;  Callback method called after child node have been processed and befor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html
Performance,concurren,concurrently,"﻿. SOFA API: sofa::simulation::SolveVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::SolveVisitor Class Reference . #include <SolveVisitor.h>. Inheritance diagram for sofa::simulation::SolveVisitor:. [legend]; Detailed Description; Used by the animation loop: send the solve signal to the others solvers This visitor is able to run the solvers sequentially or concurrently. . Protected Attributes; SReal dt;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ; bool m_parallelSolve {false };  ; bool m_computeForceIsolatedInteractionForceFields { false };  ; std::list< SolveVisitorTask > m_tasks;  Container for the parallel tasks. More...;  ; sofa::simulation::CpuTask::Status m_status;  Status for the parallel tasks. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  SolveVisitor (const sofa::core::ExecParams *params, SReal _dt, sofa::core::MultiVecCoordId X=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId V=sofa::core::VecDerivId::velocity(), bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false);  ;  SolveVisitor (const sofa::core::ExecParams *params, SReal _dt, bool free, bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false);  ; virtual void processSolver (simulation::Node *node, sofa::core::behavior::OdeSolver *b);  ; void fwdInteractionForceField (Node *node, core::behavior::BaseInteractionForceField *forceField);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *) override;  Callback method called after child node have been processed and befor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html
Security,access,access,", class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Attribute details. ◆ dt. SReal sofa::simulation::SolveVisitor::dt. protected . ◆ m_computeForceIsolatedInteractionForceFields. bool sofa::simulation::SolveVisitor::m_computeForceIsolatedInteractionForceFields { false }. protected . ◆ m_parallelSolve. bool sofa::simulation::SolveVisitor::m_parallelSolve {false }. protected . ◆ m_status. sofa::simulation::CpuTask::Status sofa::simulation::SolveVisitor::m_status. protected . Status for the parallel tasks. . ◆ m_tasks. std::list<SolveVisitorTask> sofa::simulation::SolveVisitor::m_tasks. protected . Container for the parallel tasks. . ◆ v. sofa::core::MultiVecDerivId sofa::simulation::SolveVisitor::v. protected . ◆ x. sofa::core::MultiVecCoordId sofa::simulation::SolveVisitor::x. protected . Constructor details. ◆ SolveVisitor() [1/2]. sofa::simulation::SolveVisitor::SolveVisitor ; (; const sofa::core::ExecParams * ; params, . SReal ; _dt, . sofa::core::MultiVecCoordId ; X = sofa::core::VecCoord",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html
Testability,test,testTags,"when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setDt (SReal _dt);  ; SReal getDt () const;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html
Energy Efficiency,schedul,scheduledThread,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SolveVisitorTask Member List . This is the complete list of members for sofa::simulation::SolveVisitorTask, including all inherited members. CpuTask(Status *status, int scheduledThread=-1)sofa::simulation::CpuTask; Dynamic enum valuesofa::simulation::Task; getAllocator()sofa::simulation::Taskstatic; getScheduledThread() constsofa::simulation::Task; getStatus(void) const override finalsofa::simulation::CpuTaskvirtual; m_idsofa::simulation::Task; m_scheduledThreadsofa::simulation::Taskprotected; MemoryAlloc enum namesofa::simulation::Task; operator delete(void *ptr)sofa::simulation::Taskstatic; operator delete(void *ptr, std::size_t sz)sofa::simulation::Taskstatic; operator new(std::size_t sz)sofa::simulation::Taskstatic; operator new[](std::size_t sz)=deletesofa::simulation::Taskstatic; run() finalsofa::simulation::SolveVisitorTaskvirtual; setAllocator(Task::Allocator *allocator)sofa::simulation::Taskstatic; SolveVisitorTask(sofa::simulation::CpuTask::Status *status, sofa::core::behavior::OdeSolver *odeSolver, const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId v)sofa::simulation::SolveVisitorTaskinline; Stack enum valuesofa::simulation::Task; Static enum valuesofa::simulation::Task; Status typedefsofa::simulation::CpuTask; Task(int scheduledThread)sofa::simulation::Task; ~CpuTask()=defaultsofa::simulation::CpuTaskvirtual; ~SolveVisitorTask() override=defaultsofa::simulation::SolveVisitorTask; ~Task()=defaultsofa::simulation::Taskvirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SolveVisitorTask Member List . This is the complete list of members for sofa::simulation::SolveVisitorTask, including all inherited members. CpuTask(Status *status, int scheduledThread=-1)sofa::simulation::CpuTask; Dynamic enum valuesofa::simulation::Task; getAllocator()sofa::simulation::Taskstatic; getScheduledThread() constsofa::simulation::Task; getStatus(void) const override finalsofa::simulation::CpuTaskvirtual; m_idsofa::simulation::Task; m_scheduledThreadsofa::simulation::Taskprotected; MemoryAlloc enum namesofa::simulation::Task; operator delete(void *ptr)sofa::simulation::Taskstatic; operator delete(void *ptr, std::size_t sz)sofa::simulation::Taskstatic; operator new(std::size_t sz)sofa::simulation::Taskstatic; operator new[](std::size_t sz)=deletesofa::simulation::Taskstatic; run() finalsofa::simulation::SolveVisitorTaskvirtual; setAllocator(Task::Allocator *allocator)sofa::simulation::Taskstatic; SolveVisitorTask(sofa::simulation::CpuTask::Status *status, sofa::core::behavior::OdeSolver *odeSolver, const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId v)sofa::simulation::SolveVisitorTaskinline; Stack enum valuesofa::simulation::Task; Static enum valuesofa::simulation::Task; Status typedefsofa::simulation::CpuTask; Task(int scheduledThread)sofa::simulation::Task; ~CpuTask()=defaultsofa::simulation::CpuTaskvirtual; ~SolveVisitorTask() override=defaultsofa::simulation::SolveVisitorTask; ~Task()=defaultsofa::simulation::Taskvirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task-members.html
Energy Efficiency,schedul,scheduler,"﻿. SOFA API: sofa::simulation::SolveVisitorTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SolveVisitorTask Class Reference . #include <SolveVisitor.h>; A task to provide to a task scheduler in which a solver solves. ; More... Inheritance diagram for sofa::simulation::SolveVisitorTask:. [legend]; Detailed Description; A task to provide to a task scheduler in which a solver solves. . Public Member Functions;  SolveVisitorTask (sofa::simulation::CpuTask::Status *status, sofa::core::behavior::OdeSolver *odeSolver, const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId v);  ;  ~SolveVisitorTask () override=default;  ; sofa::simulation::Task::MemoryAlloc run () final;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ SolveVisitorTask(). sofa::simulation::SolveVisitorTask::SolveVisitorTask ; (; sofa::simulation::CpuTask::Status * ; status, . sofa::core::behavior::OdeSolver * ; odeSolver, . const sofa::core::ExecPar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::SolveVisitorTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SolveVisitorTask Class Reference . #include <SolveVisitor.h>; A task to provide to a task scheduler in which a solver solves. ; More... Inheritance diagram for sofa::simulation::SolveVisitorTask:. [legend]; Detailed Description; A task to provide to a task scheduler in which a solver solves. . Public Member Functions;  SolveVisitorTask (sofa::simulation::CpuTask::Status *status, sofa::core::behavior::OdeSolver *odeSolver, const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId v);  ;  ~SolveVisitorTask () override=default;  ; sofa::simulation::Task::MemoryAlloc run () final;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ SolveVisitorTask(). sofa::simulation::SolveVisitorTask::SolveVisitorTask ; (; sofa::simulation::CpuTask::Status * ; status, . sofa::core::behavior::OdeSolver * ; odeSolver, . const sofa::core::ExecPar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SpinLock Member List . This is the complete list of members for sofa::simulation::SpinLock, including all inherited members. lock()sofa::simulation::SpinLockinline; SpinLock()sofa::simulation::SpinLockinline; try_lock()sofa::simulation::SpinLockinline; unlock()sofa::simulation::SpinLockinline; ~SpinLock()sofa::simulation::SpinLockinline. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_spin_lock-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_spin_lock-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::StateChangeVisitor Member List . This is the complete list of members for sofa::simulation::StateChangeVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor-members.html
Testability,test,testTags,"m valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::StateChangeVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processStateChange(sofa::core::behavior::BaseMechanicalState *obj)sofa::simulation::StateChangeVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::StateChangeVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; StateChangeVisitor(const sofa::core::ExecParams *params, sofa::core::topology::Topology *source)sofa::simulation::StateChangeVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::StateChangeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::StateChangeVisitor Class Reference . #include <StateChangeVisitor.h>. Inheritance diagram for sofa::simulation::StateChangeVisitor:. [legend]. Protected Attributes; bool root;  ; sofa::core::topology::Topology * m_source;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  StateChangeVisitor (const sofa::core::ExecParams *params, sofa::core::topology::Topology *source);  ; virtual void processStateChange (sofa::core::behavior::BaseMechanicalState *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simul",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html
Testability,test,testTags,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html
Energy Efficiency,allocate,allocate,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::StdTaskAllocator Member List . This is the complete list of members for sofa::simulation::StdTaskAllocator, including all inherited members. allocate(std::size_t sz) finalsofa::simulation::StdTaskAllocatorinlinevirtual; free(void *ptr, std::size_t sz) finalsofa::simulation::StdTaskAllocatorinlinevirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::StdTaskAllocator Member List . This is the complete list of members for sofa::simulation::StdTaskAllocator, including all inherited members. allocate(std::size_t sz) finalsofa::simulation::StdTaskAllocatorinlinevirtual; free(void *ptr, std::size_t sz) finalsofa::simulation::StdTaskAllocatorinlinevirtual. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator-members.html
Energy Efficiency,allocate,allocate,"﻿. SOFA API: sofa::simulation::StdTaskAllocator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::StdTaskAllocator Class Reference . Inheritance diagram for sofa::simulation::StdTaskAllocator:. [legend]. Public Member Functions; void * allocate (std::size_t sz) final;  ; void free (void *ptr, std::size_t sz) final;  . Function details. ◆ allocate(). void* sofa::simulation::StdTaskAllocator::allocate ; (; std::size_t ; sz). inlinefinalvirtual . Implements sofa::simulation::Task::Allocator. ◆ free(). void sofa::simulation::StdTaskAllocator::free ; (; void * ; ptr, . std::size_t ; sz . ). inlinefinalvirtual . Implements sofa::simulation::Task::Allocator. sofasimulationStdTaskAllocator; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::StoreResetStateVisitor Member List . This is the complete list of members for sofa::simulation::StoreResetStateVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html
Testability,test,testTags,"eResetStateVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::StoreResetStateVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::StoreResetStateVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(core::objectmodel::BaseObject *obj)sofa::simulation::StoreResetStateVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; StoreResetStateVisitor(const core::ExecParams *params)sofa::simulation::StoreResetStateVisitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html
Modifiability,inherit,inherited,"ion. Public Member Functions |; List of all members . sofa::simulation::StoreResetStateVisitor Class Reference . #include <ResetVisitor.h>. Inheritance diagram for sofa::simulation::StoreResetStateVisitor:. [legend]. Public Member Functions;  StoreResetStateVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html
Testability,test,testTags,"essNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class Vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html
Energy Efficiency,schedul,scheduledThread,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Task Member List . This is the complete list of members for sofa::simulation::Task, including all inherited members. Dynamic enum valuesofa::simulation::Task; getAllocator()sofa::simulation::Taskstatic; getScheduledThread() constsofa::simulation::Task; getStatus(void) const =0sofa::simulation::Taskpure virtual; m_idsofa::simulation::Task; m_scheduledThreadsofa::simulation::Taskprotected; MemoryAlloc enum namesofa::simulation::Task; operator delete(void *ptr)sofa::simulation::Taskstatic; operator delete(void *ptr, std::size_t sz)sofa::simulation::Taskstatic; operator new(std::size_t sz)sofa::simulation::Taskstatic; operator new[](std::size_t sz)=deletesofa::simulation::Taskstatic; run()=0sofa::simulation::Taskpure virtual; setAllocator(Task::Allocator *allocator)sofa::simulation::Taskstatic; Stack enum valuesofa::simulation::Task; Static enum valuesofa::simulation::Task; Task(int scheduledThread)sofa::simulation::Task; ~Task()=defaultsofa::simulation::Taskvirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Task Member List . This is the complete list of members for sofa::simulation::Task, including all inherited members. Dynamic enum valuesofa::simulation::Task; getAllocator()sofa::simulation::Taskstatic; getScheduledThread() constsofa::simulation::Task; getStatus(void) const =0sofa::simulation::Taskpure virtual; m_idsofa::simulation::Task; m_scheduledThreadsofa::simulation::Taskprotected; MemoryAlloc enum namesofa::simulation::Task; operator delete(void *ptr)sofa::simulation::Taskstatic; operator delete(void *ptr, std::size_t sz)sofa::simulation::Taskstatic; operator new(std::size_t sz)sofa::simulation::Taskstatic; operator new[](std::size_t sz)=deletesofa::simulation::Taskstatic; run()=0sofa::simulation::Taskpure virtual; setAllocator(Task::Allocator *allocator)sofa::simulation::Taskstatic; Stack enum valuesofa::simulation::Task; Static enum valuesofa::simulation::Task; Task(int scheduledThread)sofa::simulation::Task; ~Task()=defaultsofa::simulation::Taskvirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task-members.html
Energy Efficiency,allocate,allocate,"﻿. SOFA API: sofa::simulation::Task Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::Task Class Referenceabstract . #include <Task.h>. Inheritance diagram for sofa::simulation::Task:. [legend]; Detailed Description; Task class interface . Classes; class  Allocator;  Task Allocator class interface used to allocate tasks. More...;  ; class  Status;  Task Status class interface used to synchronize tasks. More...;  . Public Attributes; int m_id;  . Protected Attributes; int m_scheduledThread;  . Public Member Functions;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; virtual MemoryAlloc run ()=0;  ; virtual Task::Status * getStatus (void) const =0;  ; int getScheduledThread () const;  . Static Public Member Functions; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Attribute details. ◆ m_id. int sofa::simulation::Task::m_id. ◆ m_scheduledThread. int sofa::simulation::Task::m_scheduledThread. protected . Constructor details. ◆ Task(). sofa::simulation::Task::Task ; (; int ; scheduledThread). ◆ ~Task(). virtual sofa::simulation::Task::~Task ; (; ). virtualdefault . Function details. ◆ getAllocator(). Task::Allocator * sofa::simulation::Task::getAllocator ; (; ). static . ◆ getScheduledThread(). int sofa::simulation::Task::getScheduledThread ; (; ); const. ◆ getStatus(). virtual Task::Status* sofa::simulation::Task::getStatus ; (; void ; ); const. pure virtual . Implemented in sofa::simulation::CpuTask. ◆ operator delete() [1/2]. void sofa::simulation::Task::operator delete ; (; void * ; ptr). static . ◆ op",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task.html
Integrability,interface,interface,"﻿. SOFA API: sofa::simulation::Task Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::Task Class Referenceabstract . #include <Task.h>. Inheritance diagram for sofa::simulation::Task:. [legend]; Detailed Description; Task class interface . Classes; class  Allocator;  Task Allocator class interface used to allocate tasks. More...;  ; class  Status;  Task Status class interface used to synchronize tasks. More...;  . Public Attributes; int m_id;  . Protected Attributes; int m_scheduledThread;  . Public Member Functions;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; virtual MemoryAlloc run ()=0;  ; virtual Task::Status * getStatus (void) const =0;  ; int getScheduledThread () const;  . Static Public Member Functions; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Attribute details. ◆ m_id. int sofa::simulation::Task::m_id. ◆ m_scheduledThread. int sofa::simulation::Task::m_scheduledThread. protected . Constructor details. ◆ Task(). sofa::simulation::Task::Task ; (; int ; scheduledThread). ◆ ~Task(). virtual sofa::simulation::Task::~Task ; (; ). virtualdefault . Function details. ◆ getAllocator(). Task::Allocator * sofa::simulation::Task::getAllocator ; (; ). static . ◆ getScheduledThread(). int sofa::simulation::Task::getScheduledThread ; (; ); const. ◆ getStatus(). virtual Task::Status* sofa::simulation::Task::getStatus ; (; void ; ); const. pure virtual . Implemented in sofa::simulation::CpuTask. ◆ operator delete() [1/2]. void sofa::simulation::Task::operator delete ; (; void * ; ptr). static . ◆ op",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task.html
Energy Efficiency,allocate,allocate,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Task::Allocator Member List . This is the complete list of members for sofa::simulation::Task::Allocator, including all inherited members. allocate(std::size_t sz)=0sofa::simulation::Task::Allocatorpure virtual; free(void *ptr, std::size_t sz)=0sofa::simulation::Task::Allocatorpure virtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Task::Allocator Member List . This is the complete list of members for sofa::simulation::Task::Allocator, including all inherited members. allocate(std::size_t sz)=0sofa::simulation::Task::Allocatorpure virtual; free(void *ptr, std::size_t sz)=0sofa::simulation::Task::Allocatorpure virtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator-members.html
Energy Efficiency,allocate,allocate,"﻿. SOFA API: sofa::simulation::Task::Allocator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Allocator Class Referenceabstract . #include <Task.h>; Task Allocator class interface used to allocate tasks. ; More... Inheritance diagram for sofa::simulation::Task::Allocator:. [legend]; Detailed Description; Task Allocator class interface used to allocate tasks. . Public Member Functions; virtual void * allocate (std::size_t sz)=0;  ; virtual void free (void *ptr, std::size_t sz)=0;  . Function details. ◆ allocate(). virtual void* sofa::simulation::Task::Allocator::allocate ; (; std::size_t ; sz). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. ◆ free(). virtual void sofa::simulation::Task::Allocator::free ; (; void * ; ptr, . std::size_t ; sz . ). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. sofasimulationTaskAllocator; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html
Integrability,interface,interface,"﻿. SOFA API: sofa::simulation::Task::Allocator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Allocator Class Referenceabstract . #include <Task.h>; Task Allocator class interface used to allocate tasks. ; More... Inheritance diagram for sofa::simulation::Task::Allocator:. [legend]; Detailed Description; Task Allocator class interface used to allocate tasks. . Public Member Functions; virtual void * allocate (std::size_t sz)=0;  ; virtual void free (void *ptr, std::size_t sz)=0;  . Function details. ◆ allocate(). virtual void* sofa::simulation::Task::Allocator::allocate ; (; std::size_t ; sz). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. ◆ free(). virtual void sofa::simulation::Task::Allocator::free ; (; void * ; ptr, . std::size_t ; sz . ). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. sofasimulationTaskAllocator; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Task::Status Member List . This is the complete list of members for sofa::simulation::Task::Status, including all inherited members. isBusy() const =0sofa::simulation::Task::Statuspure virtual; setBusy(bool busy)=0sofa::simulation::Task::Statuspure virtual; ~Status()=defaultsofa::simulation::Task::Statusvirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status-members.html
Integrability,interface,interface,﻿. SOFA API: sofa::simulation::Task::Status Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Status Class Referenceabstract . #include <Task.h>; Task Status class interface used to synchronize tasks. ; More... Inheritance diagram for sofa::simulation::Task::Status:. [legend]; Detailed Description; Task Status class interface used to synchronize tasks. . Public Member Functions; virtual ~Status ()=default;  ; virtual bool isBusy () const =0;  ; virtual int setBusy (bool busy)=0;  . Constructor details. ◆ ~Status(). virtual sofa::simulation::Task::Status::~Status ; (; ). virtualdefault . Function details. ◆ isBusy(). virtual bool sofa::simulation::Task::Status::isBusy ; (; ); const. pure virtual . Implemented in sofa::simulation::CpuTaskStatus. ◆ setBusy(). virtual int sofa::simulation::Task::Status::setBusy ; (; bool ; busy). pure virtual . Implemented in sofa::simulation::CpuTaskStatus. sofasimulationTaskStatus; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TaskScheduler Member List . This is the complete list of members for sofa::simulation::TaskScheduler, including all inherited members. addTask(Task *task)=0sofa::simulation::TaskSchedulerpure virtual; addTask(Task::Status &status, const std::function< void()> &task)sofa::simulation::TaskSchedulervirtual; getCurrentThreadName()=0sofa::simulation::TaskSchedulerpure virtual; getCurrentThreadType()=0sofa::simulation::TaskSchedulerpure virtual; GetHardwareThreadsCount()sofa::simulation::TaskSchedulerstatic; getTaskAllocator()=0sofa::simulation::TaskSchedulerpure virtual; getThreadCount(void) const =0sofa::simulation::TaskSchedulerpure virtual; init(const unsigned int nbThread=0)=0sofa::simulation::TaskSchedulerpure virtual; stop(void)=0sofa::simulation::TaskSchedulerpure virtual; Task classsofa::simulation::TaskSchedulerfriend; workUntilDone(Task::Status *status)=0sofa::simulation::TaskSchedulerpure virtual; ~TaskScheduler()=defaultsofa::simulation::TaskSchedulervirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler-members.html
Energy Efficiency,schedul,scheduler,"﻿. SOFA API: sofa::simulation::TaskScheduler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::simulation::TaskScheduler Class Referenceabstract . #include <TaskScheduler.h>. Inheritance diagram for sofa::simulation::TaskScheduler:. [legend]; Detailed Description; Base class for a task scheduler; The API allows to:; initialize the scheduler with a number of dedicated threads; add a task to the scheduler; wait until all tasks are done etc. . Public Member Functions; virtual ~TaskScheduler ()=default;  ; virtual void init (const unsigned int nbThread=0)=0;  ; virtual void stop (void)=0;  ; virtual unsigned int getThreadCount (void) const =0;  ; virtual const char * getCurrentThreadName ()=0;  ; virtual int getCurrentThreadType ()=0;  ; virtual bool addTask (Task *task)=0;  ; virtual bool addTask (Task::Status &status, const std::function< void()> &task);  ; virtual void workUntilDone (Task::Status *status)=0;  ; virtual Task::Allocator * getTaskAllocator ()=0;  . Static Public Member Functions; static unsigned GetHardwareThreadsCount ();  . Friends; class Task;  . Constructor details. ◆ ~TaskScheduler(). virtual sofa::simulation::TaskScheduler::~TaskScheduler ; (; ). virtualdefault . Function details. ◆ addTask() [1/2]. virtual bool sofa::simulation::TaskScheduler::addTask ; (; Task * ; task). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ addTask() [2/2]. bool sofa::simulation::TaskScheduler::addTask ; (; Task::Status & ; status, . const std::function< void()> & ; task . ). virtual . ◆ getCurrentThreadName(). virtual const char* sofa::simulation::TaskScheduler::getCurrentThreadName ; (; ). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ getCurrentThreadType(). virtual int sofa::simulation::TaskScheduler::getCurrentThreadType ; (; ). pure virtual . Implemented in sofa::simulation::D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html
Performance,concurren,concurrent,"hreadsCount ();  . Friends; class Task;  . Constructor details. ◆ ~TaskScheduler(). virtual sofa::simulation::TaskScheduler::~TaskScheduler ; (; ). virtualdefault . Function details. ◆ addTask() [1/2]. virtual bool sofa::simulation::TaskScheduler::addTask ; (; Task * ; task). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ addTask() [2/2]. bool sofa::simulation::TaskScheduler::addTask ; (; Task::Status & ; status, . const std::function< void()> & ; task . ). virtual . ◆ getCurrentThreadName(). virtual const char* sofa::simulation::TaskScheduler::getCurrentThreadName ; (; ). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ getCurrentThreadType(). virtual int sofa::simulation::TaskScheduler::getCurrentThreadType ; (; ). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ GetHardwareThreadsCount(). unsigned sofa::simulation::TaskScheduler::GetHardwareThreadsCount ; (; ). static . Assuming 2 concurrent threads by CPU core, return the number of CPU core on the system . ◆ getTaskAllocator(). virtual Task::Allocator* sofa::simulation::TaskScheduler::getTaskAllocator ; (; ). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ getThreadCount(). virtual unsigned int sofa::simulation::TaskScheduler::getThreadCount ; (; void ; ); const. pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ init(). virtual void sofa::simulation::TaskScheduler::init ; (; const unsigned int ; nbThread = 0). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ stop(). virtual void sofa::simulation::TaskScheduler::stop ; (; void ; ). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ workUntilDone(). virtual void sofa::simulation::TaskScheduler::workUntilDone ; (; Task::Status * ; status). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. Related details. ◆ Task. friend class Task. friend . sofasimulationTaskScheduler; Generated on Mon No",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TaskSchedulerFactory Member List . This is the complete list of members for sofa::simulation::TaskSchedulerFactory, including all inherited members. getAvailableSchedulers()sofa::simulation::TaskSchedulerFactory; instantiate(const std::string &name)sofa::simulation::TaskSchedulerFactory; registerScheduler(const std::string &name, const std::function< TaskScheduler *()> &creatorFunc)sofa::simulation::TaskSchedulerFactory. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_factory-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_factory-members.html
Energy Efficiency,schedul,schedulers,"﻿. SOFA API: sofa::simulation::TaskSchedulerFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::TaskSchedulerFactory Class Reference . #include <TaskSchedulerFactory.h>; Detailed Description; Simple factory structure used to instantiate a @TaskScheduler based on a name. The name and a creation function must be registered before trying to instantiate. . Public Member Functions; bool registerScheduler (const std::string &name, const std::function< TaskScheduler *()> &creatorFunc);  ; TaskScheduler * instantiate (const std::string &name);  ; std::set< std::string > getAvailableSchedulers ();  . Function details. ◆ getAvailableSchedulers(). std::set< std::string > sofa::simulation::TaskSchedulerFactory::getAvailableSchedulers ; (; ). Returnsa list of registered schedulers . ◆ instantiate(). TaskScheduler * sofa::simulation::TaskSchedulerFactory::instantiate ; (; const std::string & ; name). ◆ registerScheduler(). bool sofa::simulation::TaskSchedulerFactory::registerScheduler ; (; const std::string & ; name, . const std::function< TaskScheduler *()> & ; creatorFunc . ). Register a new scheduler in the factory; Parameters. namekey in the factory ; creatorFuncfunction creating a new TaskScheduler or a derived class . Returnsfalse if scheduler could not be registered . sofasimulationTaskSchedulerFactory; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_factory.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TaskSchedulerRegistry Member List . This is the complete list of members for sofa::simulation::TaskSchedulerRegistry, including all inherited members. addTaskSchedulerToRegistry(TaskScheduler *taskScheduler, const std::string &taskSchedulerName)sofa::simulation::TaskSchedulerRegistry; clear()sofa::simulation::TaskSchedulerRegistry; getLastInserted() constsofa::simulation::TaskSchedulerRegistry; getTaskScheduler(const std::string &taskSchedulerName) constsofa::simulation::TaskSchedulerRegistry; hasScheduler(const std::string &taskSchedulerName) constsofa::simulation::TaskSchedulerRegistry; m_lastInsertedsofa::simulation::TaskSchedulerRegistryprotected; m_schedulerssofa::simulation::TaskSchedulerRegistryprotected; ~TaskSchedulerRegistry()sofa::simulation::TaskSchedulerRegistry. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TaskSchedulerRegistry Member List . This is the complete list of members for sofa::simulation::TaskSchedulerRegistry, including all inherited members. addTaskSchedulerToRegistry(TaskScheduler *taskScheduler, const std::string &taskSchedulerName)sofa::simulation::TaskSchedulerRegistry; clear()sofa::simulation::TaskSchedulerRegistry; getLastInserted() constsofa::simulation::TaskSchedulerRegistry; getTaskScheduler(const std::string &taskSchedulerName) constsofa::simulation::TaskSchedulerRegistry; hasScheduler(const std::string &taskSchedulerName) constsofa::simulation::TaskSchedulerRegistry; m_lastInsertedsofa::simulation::TaskSchedulerRegistryprotected; m_schedulerssofa::simulation::TaskSchedulerRegistryprotected; ~TaskSchedulerRegistry()sofa::simulation::TaskSchedulerRegistry. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html
Energy Efficiency,schedul,schedulers,"﻿. SOFA API: sofa::simulation::TaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TaskSchedulerRegistry Class Reference . #include <TaskSchedulerRegistry.h>; Detailed Description; Container for task schedulers and its associated name The registry is also owner of the schedulers: it destroys them in its destructor . Protected Attributes; std::map< std::string, TaskScheduler * > m_schedulers;  ; std::optional< std::pair< std::string, TaskScheduler * > > m_lastInserted {};  . Public Member Functions; bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName) const;  ; bool hasScheduler (const std::string &taskSchedulerName) const;  ; const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted () const;  ; void clear ();  ;  ~TaskSchedulerRegistry ();  . Attribute details. ◆ m_lastInserted. std::optional<std::pair<std::string, TaskScheduler*> > sofa::simulation::TaskSchedulerRegistry::m_lastInserted {}. protected . ◆ m_schedulers. std::map<std::string, TaskScheduler*> sofa::simulation::TaskSchedulerRegistry::m_schedulers. protected . Constructor details. ◆ ~TaskSchedulerRegistry(). sofa::simulation::TaskSchedulerRegistry::~TaskSchedulerRegistry ; (; ). Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::TaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). Add a task scheduler to the registry and transfer the ownership . ◆ clear(). void sofa::simulation::TaskSchedulerRegistry::clear ; (; ). Clear the registry and destroy the task schedulers sstored in the registry . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::TaskSchedule",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html
Usability,clear,clear,"﻿. SOFA API: sofa::simulation::TaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TaskSchedulerRegistry Class Reference . #include <TaskSchedulerRegistry.h>; Detailed Description; Container for task schedulers and its associated name The registry is also owner of the schedulers: it destroys them in its destructor . Protected Attributes; std::map< std::string, TaskScheduler * > m_schedulers;  ; std::optional< std::pair< std::string, TaskScheduler * > > m_lastInserted {};  . Public Member Functions; bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName) const;  ; bool hasScheduler (const std::string &taskSchedulerName) const;  ; const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted () const;  ; void clear ();  ;  ~TaskSchedulerRegistry ();  . Attribute details. ◆ m_lastInserted. std::optional<std::pair<std::string, TaskScheduler*> > sofa::simulation::TaskSchedulerRegistry::m_lastInserted {}. protected . ◆ m_schedulers. std::map<std::string, TaskScheduler*> sofa::simulation::TaskSchedulerRegistry::m_schedulers. protected . Constructor details. ◆ ~TaskSchedulerRegistry(). sofa::simulation::TaskSchedulerRegistry::~TaskSchedulerRegistry ; (; ). Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::TaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). Add a task scheduler to the registry and transfer the ownership . ◆ clear(). void sofa::simulation::TaskSchedulerRegistry::clear ; (; ). Clear the registry and destroy the task schedulers sstored in the registry . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::TaskSchedule",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TopologyChangeVisitor Member List . This is the complete list of members for sofa::simulation::TopologyChangeVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html
Testability,test,testTags,"de *node) overridesofa::simulation::TopologyChangeVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::TopologyChangeVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processTopologyChange(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj)sofa::simulation::TopologyChangeVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; TopologyChangeVisitor(const sofa::core::ExecParams *params, sofa::core::topology::Topology *source)sofa::simulation::TopologyChangeVisitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~TopologyChangeVisitor() overridesofa::simulation::TopologyChangeVisitorinline; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::TopologyChangeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TopologyChangeVisitor Class Reference . #include <TopologyChangeVisitor.h>. Inheritance diagram for sofa::simulation::TopologyChangeVisitor:. [legend]. Protected Attributes; sofa::core::topology::Topology * m_source;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  TopologyChangeVisitor (const sofa::core::ExecParams *params, sofa::core::topology::Topology *source);  ;  ~TopologyChangeVisitor () override;  ; virtual void processTopologyChange (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html
Testability,test,testTags,";  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container ,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TransformationVisitor Member List . This is the complete list of members for sofa::simulation::TransformationVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor-members.html
Testability,test,testTags,"n::Visitorvirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *v)sofa::simulation::TransformationVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rotationsofa::simulation::TransformationVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; scalesofa::simulation::TransformationVisitorprotected; setRotation(SReal rx, SReal ry, SReal rz)sofa::simulation::TransformationVisitorinline; setScale(SReal sx, SReal sy, SReal sz)sofa::simulation::TransformationVisitorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::simulation::TransformationVisitorinline; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::simulation::TransformationVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; TransformationVisitor(const sofa::core::ExecParams *params)sofa::simulation::TransformationVisitor; translationsofa::simulation::TransformationVisitorprotected; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::TransformationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TransformationVisitor Class Reference . #include <TransformationVisitor.h>. Inheritance diagram for sofa::simulation::TransformationVisitor:. [legend]. Protected Attributes; Vec3 translation;  ; Vec3 rotation;  ; Vec3 scale;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  TransformationVisitor (const sofa::core::ExecParams *params);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *v);  ; void processMechanicalState (simulation::Node *node, core::behavior::BaseMechanicalState *m);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &rep",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html
Testability,test,testTags,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateBoundingBoxVisitor Member List . This is the complete list of members for sofa::simulation::UpdateBoundingBoxVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor-members.html
Testability,test,testTags,"getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::UpdateBoundingBoxVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateBoundingBoxVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateBoundingBoxVisitor(const sofa::core::ExecParams *params)sofa::simulation::UpdateBoundingBoxVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::UpdateBoundingBoxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateBoundingBoxVisitor Class Reference . #include <UpdateBoundingBoxVisitor.h>. Inheritance diagram for sofa::simulation::UpdateBoundingBoxVisitor:. [legend]. Public Member Functions;  UpdateBoundingBoxVisitor (const sofa::core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual const char * getClassName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html
Testability,test,testTags,"sitor:. [legend]. Public Member Functions;  UpdateBoundingBoxVisitor (const sofa::core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual const char * getClassName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateContextVisitor Member List . This is the complete list of members for sofa::simulation::UpdateContextVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html
Testability,test,testTags,"::simulation::Visitorinlinevirtual; isThreadSafe() const overridesofa::simulation::UpdateContextVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::UpdateContextVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::UpdateContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateContextVisitor:. [legend]. Protected Attributes; Node * startingNode;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  UpdateContextVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html
Testability,test,testTags,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateInternalDataVisitor Member List . This is the complete list of members for sofa::simulation::UpdateInternalDataVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor-members.html
Testability,test,testTags,"taVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateInternalDataVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processUpdateInternalData(simulation::Node *node, sofa::core::objectmodel::BaseObject *baseObj)sofa::simulation::UpdateInternalDataVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateInternalDataVisitor(const core::ExecParams *params)sofa::simulation::UpdateInternalDataVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor-members.html
Deployability,update,updateInternal,"﻿. SOFA API: sofa::simulation::UpdateInternalDataVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateInternalDataVisitor Class Reference . #include <UpdateInternalDataVisitor.h>. Inheritance diagram for sofa::simulation::UpdateInternalDataVisitor:. [legend]; Detailed Description; Triggers the updateInternal() function to update method called when variables (used to compute other internal variables) are modified . Public Member Functions;  UpdateInternalDataVisitor (const core::ExecParams *params);  ; void processUpdateInternalData (simulation::Node *node, sofa::core::objectmodel::BaseObject *baseObj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html
Modifiability,variab,variables,"﻿. SOFA API: sofa::simulation::UpdateInternalDataVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateInternalDataVisitor Class Reference . #include <UpdateInternalDataVisitor.h>. Inheritance diagram for sofa::simulation::UpdateInternalDataVisitor:. [legend]; Detailed Description; Triggers the updateInternal() function to update method called when variables (used to compute other internal variables) are modified . Public Member Functions;  UpdateInternalDataVisitor (const core::ExecParams *params);  ; void processUpdateInternalData (simulation::Node *node, sofa::core::objectmodel::BaseObject *baseObj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html
Testability,test,testTags,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateLinksVisitor Member List . This is the complete list of members for sofa::simulation::UpdateLinksVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html
Testability,test,testTags,"desofa::simulation::UpdateLinksVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::UpdateLinksVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateLinksVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(core::objectmodel::BaseObject *obj)sofa::simulation::UpdateLinksVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateLinksVisitor(const core::ExecParams *params)sofa::simulation::UpdateLinksVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html
Modifiability,inherit,inherited,"simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateLinksVisitor Class Reference . #include <UpdateLinksVisitor.h>. Inheritance diagram for sofa::simulation::UpdateLinksVisitor:. [legend]. Public Member Functions;  UpdateLinksVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html
Testability,test,testTags,"essNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class Vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateMappingEndEvent Member List . This is the complete list of members for sofa::simulation::UpdateMappingEndEvent, including all inherited members. dtsofa::simulation::UpdateMappingEndEventprotected; Event()sofa::core::objectmodel::Event; GetClassName()sofa::simulation::UpdateMappingEndEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getDt() constsofa::simulation::UpdateMappingEndEventinline; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; UpdateMappingEndEvent(SReal dt)sofa::simulation::UpdateMappingEndEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~UpdateMappingEndEvent() overridesofa::simulation::UpdateMappingEndEvent. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::UpdateMappingEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::UpdateMappingEndEvent Class Reference . #include <UpdateMappingEndEvent.h>. Inheritance diagram for sofa::simulation::UpdateMappingEndEvent:. [legend]; Detailed Description; Event fired by Simulation::animate() after computing a new animation step. AuthorJeremie Allard . Protected Attributes; SReal dt;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  UpdateMappingEndEvent (SReal dt);  ;  ~UpdateMappingEndEvent () override;  ; SReal getDt () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ dt. SReal sofa::simulation::UpdateMappingEndEvent::dt. protected . Constructor details. ◆ UpdateMappingEndEvent(). sofa::simulation::UpdateMappingEndEvent::UpdateMappingEndEvent ; (; SReal ; dt). ◆ ~UpdateMappingEndEvent(). sofa::simulation::UpdateMappingEndEvent::~UpdateMappingEndEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateMappingVisitor Member List . This is the complete list of members for sofa::simulation::UpdateMappingVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor-members.html
Testability,test,testTags,"ion::Visitor; paramssofa::simulation::Visitorprotected; processMapping(simulation::Node *node, core::BaseMapping *obj)sofa::simulation::UpdateMappingVisitor; processMechanicalMapping(simulation::Node *, core::BaseMapping *obj)sofa::simulation::UpdateMappingVisitor; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateMappingVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateMappingVisitor(const sofa::core::ExecParams *params)sofa::simulation::UpdateMappingVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor-members.html
Modifiability,inherit,inherited,"itor:. [legend]; Detailed Description; propagating position and velocity through non-mechanical mappings (while MechanicalPropagateOnlyPositionAndVelocityVisitor is propagating mechanical mappings) . Public Member Functions;  UpdateMappingVisitor (const sofa::core::ExecParams *params);  ; void processMapping (simulation::Node *node, core::BaseMapping *obj);  ; void processMechanicalMapping (simulation::Node *, core::BaseMapping *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html
Testability,test,testTags,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateSimulationContextVisitor Member List . This is the complete list of members for sofa::simulation::UpdateSimulationContextVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html
Testability,test,testTags,"ION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateSimulationContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; UpdateSimulationContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateSimulationContextVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::UpdateSimulationContextVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateSimulationContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateSimulationContextVisitor:. [legend]. Public Member Functions;  UpdateSimulationContextVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::UpdateContextVisitor; Node * startingNode;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , cla",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html
Testability,test,testTags,". More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::UpdateVisualContextVisitor Member List . This is the complete list of members for sofa::simulation::UpdateVisualContextVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html
Testability,test,testTags,"TION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateVisualContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; UpdateVisualContextVisitor(const sofa::core::visual::VisualParams *vparams)sofa::simulation::UpdateVisualContextVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::UpdateVisualContextVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateVisualContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateVisualContextVisitor:. [legend]. Public Member Functions;  UpdateVisualContextVisitor (const sofa::core::visual::VisualParams *vparams);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *nod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html
Security,access,access,"t *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::UpdateContextVisitor; Node * startingNode;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , cla",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html
Testability,test,testTags,". More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VelocityThresholdVisitor Member List . This is the complete list of members for sofa::simulation::VelocityThresholdVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor-members.html
Testability,test,testTags,"torinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VelocityThresholdVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; thresholdsofa::simulation::VelocityThresholdVisitorprotected; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; VelocityThresholdVisitor(const core::ExecParams *params, core::MultiVecId v, SReal threshold)sofa::simulation::VelocityThresholdVisitor; vidsofa::simulation::VelocityThresholdVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VelocityThresholdVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::VelocityThresholdVisitor Class Reference . #include <VelocityThresholdVisitor.h>. Inheritance diagram for sofa::simulation::VelocityThresholdVisitor:. [legend]. Protected Attributes; core::MultiVecId vid;  Id of the vector to process. More...;  ; SReal threshold;  All the entries below this threshold will be set to 0. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions; Visitor::Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ;  VelocityThresholdVisitor (const core::ExecParams *params, core::MultiVecId v, SReal threshold);  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html
Testability,test,testTags,"tion::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ;  VelocityThresholdVisitor (const core::ExecParams *params, core::MultiVecId v, SReal threshold);  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Visitor Member List . This is the complete list of members for sofa::simulation::Visitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(VisitorType *visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html
Testability,test,testTags,")(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() constsofa::simulation::Visitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor-members.html
Deployability,configurat,configurations,"ag(). Visitor& sofa::simulation::Visitor::removeTag ; (; Tag ; t). inline . ◆ runVisitorTask() [1/2]. template<class VisitorType , class VContext , class ObjectType > . Visitor::Result sofa::simulation::Visitor::runVisitorTask ; (; VisitorType * ; visitor, . VContext * ; ctx, . Result(VisitorType::*)(VContext *, ObjectType *) ; task, . ObjectType * ; ptr, . const std::string & ; typeInfo = std::string(""type"") . ). protected . Function to be called when a visitor executes a main task It surrounds the task function with debug information . ◆ runVisitorTask() [2/2]. template<class VisitorType , class VContext , class ObjectType > . void sofa::simulation::Visitor::runVisitorTask ; (; VisitorType * ; visitor, . VContext * ; ctx, . void(VisitorType::*)(VContext *, ObjectType *) ; task, . ObjectType * ; ptr, . const std::string & ; typeInfo = std::string(""type"") . ). protected . Function to be called when a visitor executes a main task It surrounds the task function with debug information . ◆ setTags(). Visitor& sofa::simulation::Visitor::setTags ; (; const TagSet & ; t). inline . ◆ testTags(). bool sofa::simulation::Visitor::testTags ; (; sofa::core::objectmodel::BaseObject * ; obj). ◆ treeTraversal(). virtual bool sofa::simulation::Visitor::treeTraversal ; (; TreeTraversalRepetition & ; repeat). inlinevirtual . ReturnstreeTraversal returns true if and only if a tree traversal must be enforced (even for a DAG) ; Parameters. repeatTell if a node callback can be executed several times (at each traversal in diamond configurations) . Reimplemented in sofa::simulation::XMLPrintVisitor, sofa::simulation::VisualVisitor, and sofa::simulation::PrintVisitor. Enum details. ◆ Result. enum sofa::simulation::Visitor::Result. EnumeratorRESULT_CONTINUE ; RESULT_PRUNE . ◆ TreeTraversalRepetition. enum sofa::simulation::Visitor::TreeTraversalRepetition. EnumeratorNO_REPETITION ; REPEAT_ALL ; REPEAT_ONCE . sofasimulationVisitor; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html
Modifiability,extend,extended,"""type""));  . Attribute details. ◆ canAccessSleepingNode. bool sofa::simulation::Visitor::canAccessSleepingNode. Can the visitor access sleeping nodes? . ◆ params. const sofa::core::ExecParams* sofa::simulation::Visitor::params. protected . ◆ subsetsToManage. TagSet sofa::simulation::Visitor::subsetsToManage. list of the subsets . Constructor details. ◆ Visitor(). sofa::simulation::Visitor::Visitor ; (; const sofa::core::ExecParams * ; params). explicit . ◆ ~Visitor(). sofa::simulation::Visitor::~Visitor ; (; ). virtualdefault . Function details. ◆ addTag(). Visitor& sofa::simulation::Visitor::addTag ; (; Tag ; t). inline . ◆ begin() [1/2]. simulation::Visitor::ctime_t sofa::simulation::Visitor::begin ; (; simulation::Node * ; node, . sofa::core::objectmodel::BaseObject * ; obj, . const std::string & ; typeInfo = std::string(""type"") . ). virtual . Optional helper method to call before handling an object if not using the for_each method. It currently takes care of time logging, but could be extended (step-by-step execution for instance) . ◆ begin() [2/2]. simulation::Visitor::ctime_t sofa::simulation::Visitor::begin ; (; simulation::Visitor::VisitorContext * ; node, . sofa::core::objectmodel::BaseObject * ; obj, . const std::string & ; typeInfo = std::string(""type"") . ). virtual . Optional helper method to call before handling an object if not using the for_each method. It currently takes care of time logging, but could be extended (step-by-step execution for instance) . ◆ childOrderReversed(). virtual bool sofa::simulation::Visitor::childOrderReversed ; (; simulation::Node * ; ). inlinevirtual . Return true to reverse the order of traversal of child nodes. ; Reimplemented in sofa::simulation::mechanicalvisitor::MechanicalAccumulateMatrixDeriv. ◆ debug_write_state_after(). void sofa::simulation::Visitor::debug_write_state_after ; (; sofa::core::objectmodel::BaseObject * ; obj). protected . ◆ debug_write_state_before(). void sofa::simulation::Visitor::debug_write_state_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html
Security,access,access,"﻿. SOFA API: sofa::simulation::Visitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::Visitor Class Reference . #include <Visitor.h>; Base class for visitors propagated recursively through the scenegraph. ; More... Inheritance diagram for sofa::simulation::Visitor:. [legend]; Detailed Description; Base class for visitors propagated recursively through the scenegraph. . Classes; class  VisitorContext;  . Public Attributes; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; const sofa::core::ExecParams * params;  . Public Member Functions;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual const char * getClassName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html
Testability,test,testTags,"subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; const sofa::core::ExecParams * params;  . Public Member Functions;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual const char * getClassName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Visitor::VisitorContext Member List . This is the complete list of members for sofa::simulation::Visitor::VisitorContext, including all inherited members. nodesofa::simulation::Visitor::VisitorContext; nodeDatasofa::simulation::Visitor::VisitorContext; rootsofa::simulation::Visitor::VisitorContext. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor_1_1_visitor_context-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor_1_1_visitor_context-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VisualClearVisitor Member List . This is the complete list of members for sofa::simulation::VisualClearVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html
Testability,test,testTags,"e *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *, core::visual::VisualModel *vm) overridesofa::simulation::VisualClearVisitorinlinevirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualClearVisitor(core::visual::VisualParams *params)sofa::simulation::VisualClearVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VisualClearVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::VisualClearVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualClearVisitor:. [legend]. Public Member Functions;  VisualClearVisitor (core::visual::VisualParams *params);  ; void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html
Testability,test,testTags,"Down (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VisualComputeBBoxVisitor Member List . This is the complete list of members for sofa::simulation::VisualComputeBBoxVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor-members.html
Testability,test,testTags,"torvirtual; processMechanicalState(simulation::Node *, core::behavior::BaseMechanicalState *vm)sofa::simulation::VisualComputeBBoxVisitorvirtual; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualComputeBBoxVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processVisualModel(simulation::Node *, core::visual::VisualModel *vm)sofa::simulation::VisualComputeBBoxVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualComputeBBoxVisitor(const core::ExecParams *params)sofa::simulation::VisualComputeBBoxVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VisualComputeBBoxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualComputeBBoxVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualComputeBBoxVisitor:. [legend]. Public Attributes; SReal minBBox [3];  ; SReal maxBBox [3];  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualComputeBBoxVisitor (const core::ExecParams *params);  ; virtual void processBehaviorModel (simulation::Node *, core::BehaviorModel *vm);  ; virtual void processMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *vm);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html
Security,access,access,"﻿. SOFA API: sofa::simulation::VisualComputeBBoxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualComputeBBoxVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualComputeBBoxVisitor:. [legend]. Public Attributes; SReal minBBox [3];  ; SReal maxBBox [3];  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualComputeBBoxVisitor (const core::ExecParams *params);  ; virtual void processBehaviorModel (simulation::Node *, core::BehaviorModel *vm);  ; virtual void processMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *vm);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html
Testability,test,testTags,";  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VisualDrawVisitor Member List . This is the complete list of members for sofa::simulation::VisualDrawVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; bwdVisualModel(simulation::Node *node, core::visual::VisualModel *vm)sofa::simulation::VisualDrawVisitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html
Testability,test,testTags,"calStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualDrawVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *node, core::objectmodel::BaseObject *o) overridesofa::simulation::VisualDrawVisitorvirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *vm) overridesofa::simulation::VisualDrawVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualDrawVisitor(core::visual::VisualParams *params)sofa::simulation::VisualDrawVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VisualDrawVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualDrawVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualDrawVisitor:. [legend]. Public Attributes; bool hasShader;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualDrawVisitor (core::visual::VisualParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual void fwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm) override;  ; void processObject (simulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html
Security,access,access,"﻿. SOFA API: sofa::simulation::VisualDrawVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualDrawVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualDrawVisitor:. [legend]. Public Attributes; bool hasShader;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualDrawVisitor (core::visual::VisualParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual void fwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm) override;  ; void processObject (simulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html
Testability,test,testTags,"mulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VisualInitVisitor Member List . This is the complete list of members for sofa::simulation::VisualInitVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_ea",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html
Testability,test,testTags,"::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualInitVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *, core::visual::VisualModel *vm) overridesofa::simulation::VisualInitVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualInitVisitor(core::visual::VisualParams *params)sofa::simulation::VisualInitVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VisualInitVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::VisualInitVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualInitVisitor:. [legend]. Public Member Functions;  VisualInitVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html
Testability,test,testTags,"lation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VisualUpdateVisitor Member List . This is the complete list of members for sofa::simulation::VisualUpdateVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; fo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor-members.html
Testability,test,testTags,"node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualUpdateVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *, core::visual::VisualModel *vm) overridesofa::simulation::VisualUpdateVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualUpdateVisitor(core::visual::VisualParams *params)sofa::simulation::VisualUpdateVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VisualUpdateVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualUpdateVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualUpdateVisitor:. [legend]. Protected Attributes; core::visual::VisualParams * m_vparams;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  VisualUpdateVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html
Testability,test,testTags,"lation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::VisualVisitor Member List . This is the complete list of members for sofa::simulation::VisualVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(Visit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html
Testability,test,testTags,"NodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *vm)=0sofa::simulation::VisualVisitorpure virtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::VisualVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualVisitor Class Referenceabstract . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualVisitor:. [legend]. Protected Attributes; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm)=0;  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html
Testability,test,testTags,"k method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::WorkerThread Member List . This is the complete list of members for sofa::simulation::WorkerThread, including all inherited members. addTask(Task *pTask)sofa::simulation::WorkerThread; DefaultTaskScheduler classsofa::simulation::WorkerThreadfriend; getCurrentStatus() constsofa::simulation::WorkerThreadinline; getId() constsofa::simulation::WorkerThread; getName() constsofa::simulation::WorkerThreadinline; getTaskCount()sofa::simulation::WorkerThreadinline; getTasksQueue()sofa::simulation::WorkerThreadinline; getType() constsofa::simulation::WorkerThreadinline; WorkerThread(DefaultTaskScheduler *const &taskScheduler, int index, const std::string &name=""Worker"")sofa::simulation::WorkerThread; workUntilDone(Task::Status *status)sofa::simulation::WorkerThread; ~WorkerThread()sofa::simulation::WorkerThread. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_worker_thread-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_worker_thread-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::WriteStateVisitor Member List . This is the complete list of members for sofa::simulation::WriteStateVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_ea",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor-members.html
Testability,test,testTags,"readSafe() constsofa::simulation::Visitorinlinevirtual; m_outsofa::simulation::WriteStateVisitorprotected; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *) overridesofa::simulation::WriteStateVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; WriteStateVisitor(const sofa::core::ExecParams *params, std::ostream &out)sofa::simulation::WriteStateVisitor; ~Visitor()sofa::simulation::Visitorvirtual; ~WriteStateVisitor() overridesofa::simulation::WriteStateVisitor.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::WriteStateVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::WriteStateVisitor Class Reference . #include <WriteStateVisitor.h>. Inheritance diagram for sofa::simulation::WriteStateVisitor:. [legend]. Protected Attributes; std::ostream & m_out;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  WriteStateVisitor (const sofa::core::ExecParams *params, std::ostream &out);  ;  ~WriteStateVisitor () override;  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html
Testability,test,testTags,"const sofa::core::ExecParams *params, std::ostream &out);  ;  ~WriteStateVisitor () override;  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::XMLPrintVisitor Member List . This is the complete list of members for sofa::simulation::XMLPrintVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html
Testability,test,testTags,"bj)sofa::simulation::XMLPrintVisitor; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::XMLPrintVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::XMLPrintVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(T obj)sofa::simulation::XMLPrintVisitor; processObjects(Seq &list)sofa::simulation::XMLPrintVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setLevel(int l)sofa::simulation::XMLPrintVisitorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::XMLPrintVisitorvirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; XMLPrintVisitor(const sofa::core::ExecParams *params, std::ostream &out)sofa::simulation::XMLPrintVisitorinline; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html
Deployability,configurat,configurations,"imulation::XMLPrintVisitor::XMLPrintVisitor ; (; const sofa::core::ExecParams * ; params, . std::ostream & ; out . ). inline . Function details. ◆ getClassName(). const char* sofa::simulation::XMLPrintVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ getLevel(). int sofa::simulation::XMLPrintVisitor::getLevel ; (; ); const. inline . ◆ processBaseObject(). void sofa::simulation::XMLPrintVisitor::processBaseObject ; (; sofa::core::objectmodel::BaseObject * ; obj). ◆ processNodeBottomUp(). void sofa::simulation::XMLPrintVisitor::processNodeBottomUp ; (; simulation::Node * ; ). overridevirtual . Callback method called after child node have been processed and before going back to the parent node. ; Reimplemented from sofa::simulation::Visitor. ◆ processNodeTopDown(). Visitor::Result sofa::simulation::XMLPrintVisitor::processNodeTopDown ; (; simulation::Node * ; ). overridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ processObject(). template<class T > . void sofa::simulation::XMLPrintVisitor::processObject ; (; T ; obj). ◆ processObjects(). template<class Seq > . void sofa::simulation::XMLPrintVisitor::processObjects ; (; Seq & ; list). ◆ setLevel(). void sofa::simulation::XMLPrintVisitor::setLevel ; (; int ; l). inline . ◆ treeTraversal(). bool sofa::simulation::XMLPrintVisitor::treeTraversal ; (; TreeTraversalRepetition & ; repeat). overridevirtual . ReturnstreeTraversal returns true if and only if a tree traversal must be enforced (even for a DAG) ; Parameters. repeatTell if a node callback can be executed several times (at each traversal in diamond configurations) . Reimplemented from sofa::simulation::Visitor. sofasimulationXMLPrintVisitor; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::simulation::XMLPrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::XMLPrintVisitor Class Reference . #include <XMLPrintVisitor.h>. Inheritance diagram for sofa::simulation::XMLPrintVisitor:. [legend]. Protected Attributes; std::ostream & m_out;  ; int level;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  XMLPrintVisitor (const sofa::core::ExecParams *params, std::ostream &out);  ; template<class T > ; void processObject (T obj);  ; template<class Seq > ; void processObjects (Seq &list);  ; void processBaseObject (sofa::core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ; int getLevel () const;  ; void setLevel (int l);  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html
Testability,test,testTags,"; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ; int getLevel () const;  ; void setLevel (int l);  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest Member List . This is the complete list of members for sofa::testing::BaseSimulationTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest Member List . This is the complete list of members for sofa::testing::BaseSimulationTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::testing::BaseSimulationTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest Class Reference . #include <BaseSimulationTest.h>. Inheritance diagram for sofa::testing::BaseSimulationTest:. [legend]. Classes; class  SceneInstance;  . Public Member Functions;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ BaseSimulationTest(). sofa::testing::BaseSimulationTest::BaseSimulationTest ; (; ). Function details. ◆ importPlugin(). bool sofa::testing::BaseSimulationTest::importPlugin ; (; const std::string & ; name). sofatestingBaseSimulationTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html
Testability,test,testing,﻿. SOFA API: sofa::testing::BaseSimulationTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest Class Reference . #include <BaseSimulationTest.h>. Inheritance diagram for sofa::testing::BaseSimulationTest:. [legend]. Classes; class  SceneInstance;  . Public Member Functions;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ BaseSimulationTest(). sofa::testing::BaseSimulationTest::BaseSimulationTest ; (; ). Function details. ◆ importPlugin(). bool sofa::testing::BaseSimulationTest::importPlugin ; (; const std::string & ; name). sofatestingBaseSimulationTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest::SceneInstance Member List . This is the complete list of members for sofa::testing::BaseSimulationTest::SceneInstance, including all inherited members. initScene()sofa::testing::BaseSimulationTest::SceneInstance; LoadFromFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstancestatic; loadSceneFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstance; rootsofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &rootname=""root"")sofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &type, const std::string &memory)sofa::testing::BaseSimulationTest::SceneInstance; simulate(const double timestep)sofa::testing::BaseSimulationTest::SceneInstance; ~SceneInstance()sofa::testing::BaseSimulationTest::SceneInstance. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html
Performance,load,loadSceneFile,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest::SceneInstance Member List . This is the complete list of members for sofa::testing::BaseSimulationTest::SceneInstance, including all inherited members. initScene()sofa::testing::BaseSimulationTest::SceneInstance; LoadFromFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstancestatic; loadSceneFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstance; rootsofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &rootname=""root"")sofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &type, const std::string &memory)sofa::testing::BaseSimulationTest::SceneInstance; simulate(const double timestep)sofa::testing::BaseSimulationTest::SceneInstance; ~SceneInstance()sofa::testing::BaseSimulationTest::SceneInstance. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest::SceneInstance Member List . This is the complete list of members for sofa::testing::BaseSimulationTest::SceneInstance, including all inherited members. initScene()sofa::testing::BaseSimulationTest::SceneInstance; LoadFromFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstancestatic; loadSceneFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstance; rootsofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &rootname=""root"")sofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &type, const std::string &memory)sofa::testing::BaseSimulationTest::SceneInstance; simulate(const double timestep)sofa::testing::BaseSimulationTest::SceneInstance; ~SceneInstance()sofa::testing::BaseSimulationTest::SceneInstance. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html
Performance,load,loadSceneFile,"﻿. SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest::SceneInstance Class Reference . #include <BaseSimulationTest.h>. Public Attributes; Node::SPtr root;  . Public Member Functions;  SceneInstance (const std::string &rootname=""root"");  ;  SceneInstance (const std::string &type, const std::string &memory);  ;  ~SceneInstance ();  ; void initScene ();  ; void simulate (const double timestep);  ; void loadSceneFile (const std::string &filename);  . Static Public Member Functions; static SceneInstance LoadFromFile (const std::string &filename);  Create a new scene instance from the content of the filename using the factory. More...;  . Attribute details. ◆ root. Node::SPtr sofa::testing::BaseSimulationTest::SceneInstance::root. Constructor details. ◆ SceneInstance() [1/2]. sofa::testing::BaseSimulationTest::SceneInstance::SceneInstance ; (; const std::string & ; rootname = ""root""). ◆ SceneInstance() [2/2]. sofa::testing::BaseSimulationTest::SceneInstance::SceneInstance ; (; const std::string & ; type, . const std::string & ; memory . ). ◆ ~SceneInstance(). sofa::testing::BaseSimulationTest::SceneInstance::~SceneInstance ; (; ). Function details. ◆ initScene(). void sofa::testing::BaseSimulationTest::SceneInstance::initScene ; (; ). ◆ LoadFromFile(). BaseSimulationTest::SceneInstance sofa::testing::BaseSimulationTest::SceneInstance::LoadFromFile ; (; const std::string & ; filename). static . Create a new scene instance from the content of the filename using the factory. . ◆ loadSceneFile(). void sofa::testing::BaseSimulationTest::SceneInstance::loadSceneFile ; (; const std::string & ; filename). ◆ simulate(). void sofa::testing::BaseSimulationTest::SceneInstance::simulate ; (; const double ; timestep). sofatestingBaseSimulationTestSceneI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest::SceneInstance Class Reference . #include <BaseSimulationTest.h>. Public Attributes; Node::SPtr root;  . Public Member Functions;  SceneInstance (const std::string &rootname=""root"");  ;  SceneInstance (const std::string &type, const std::string &memory);  ;  ~SceneInstance ();  ; void initScene ();  ; void simulate (const double timestep);  ; void loadSceneFile (const std::string &filename);  . Static Public Member Functions; static SceneInstance LoadFromFile (const std::string &filename);  Create a new scene instance from the content of the filename using the factory. More...;  . Attribute details. ◆ root. Node::SPtr sofa::testing::BaseSimulationTest::SceneInstance::root. Constructor details. ◆ SceneInstance() [1/2]. sofa::testing::BaseSimulationTest::SceneInstance::SceneInstance ; (; const std::string & ; rootname = ""root""). ◆ SceneInstance() [2/2]. sofa::testing::BaseSimulationTest::SceneInstance::SceneInstance ; (; const std::string & ; type, . const std::string & ; memory . ). ◆ ~SceneInstance(). sofa::testing::BaseSimulationTest::SceneInstance::~SceneInstance ; (; ). Function details. ◆ initScene(). void sofa::testing::BaseSimulationTest::SceneInstance::initScene ; (; ). ◆ LoadFromFile(). BaseSimulationTest::SceneInstance sofa::testing::BaseSimulationTest::SceneInstance::LoadFromFile ; (; const std::string & ; filename). static . Create a new scene instance from the content of the filename using the factory. . ◆ loadSceneFile(). void sofa::testing::BaseSimulationTest::SceneInstance::loadSceneFile ; (; const std::string & ; filename). ◆ simulate(). void sofa::testing::BaseSimulationTest::SceneInstance::simulate ; (; const double ; timestep). sofatestingBaseSimulationTestSceneI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseTest Member List . This is the complete list of members for sofa::testing::BaseTest, including all inherited members. BaseTest()sofa::testing::BaseTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseTest Member List . This is the complete list of members for sofa::testing::BaseTest, including all inherited members. BaseTest()sofa::testing::BaseTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html
Integrability,message,message,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html
Usability,simpl,simply,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::ExpectMessage Member List . This is the complete list of members for sofa::testing::ExpectMessage, including all inherited members. ExpectMessage(helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0)sofa::testing::ExpectMessage; ~ExpectMessage()sofa::testing::ExpectMessagevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::ExpectMessage Member List . This is the complete list of members for sofa::testing::ExpectMessage, including all inherited members. ExpectMessage(helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0)sofa::testing::ExpectMessage; ~ExpectMessage()sofa::testing::ExpectMessagevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html
Availability,failure,failure,"﻿. SOFA API: sofa::testing::ExpectMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::ExpectMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure during the object destruction when the expected message have not been received. Better use the macro: EXPECT_MSG_EMIT(Error) as a more 'good looking' version of; sofa::helper::logging::ExpectMessage failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  ExpectMessage (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~ExpectMessage ();  . Constructor details. ◆ ExpectMessage(). sofa::testing::ExpectMessage::ExpectMessage ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). ◆ ~ExpectMessage(). sofa::testing::ExpectMessage::~ExpectMessage ; (; ). virtual . sofatestingExpectMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html
Integrability,message,message,"﻿. SOFA API: sofa::testing::ExpectMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::ExpectMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure during the object destruction when the expected message have not been received. Better use the macro: EXPECT_MSG_EMIT(Error) as a more 'good looking' version of; sofa::helper::logging::ExpectMessage failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  ExpectMessage (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~ExpectMessage ();  . Constructor details. ◆ ExpectMessage(). sofa::testing::ExpectMessage::ExpectMessage ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). ◆ ~ExpectMessage(). sofa::testing::ExpectMessage::~ExpectMessage ; (; ). virtual . sofatestingExpectMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::ExpectMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::ExpectMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure during the object destruction when the expected message have not been received. Better use the macro: EXPECT_MSG_EMIT(Error) as a more 'good looking' version of; sofa::helper::logging::ExpectMessage failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  ExpectMessage (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~ExpectMessage ();  . Constructor details. ◆ ExpectMessage(). sofa::testing::ExpectMessage::ExpectMessage ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). ◆ ~ExpectMessage(). sofa::testing::ExpectMessage::~ExpectMessage ; (; ). virtual . sofatestingExpectMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrame Member List . This is the complete list of members for sofa::testing::GtestMessageFrame, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &)sofa::testing::GtestMessageFrameinlinevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrame Member List . This is the complete list of members for sofa::testing::GtestMessageFrame, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &)sofa::testing::GtestMessageFrameinlinevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::GtestMessageFrame Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrame Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrame:. [legend]; Detailed Description; PRIVATE DECLARATION ///////////////////////////////////////////////// Here are declared the classes that are only used for internal use. In case someone want to use them it is easy to move that in .h file. Until that happens, keeps these here to hide the implementation details from the users of the .h And accelerate compilation of Sofa :) . Public Attributes; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Attribute details. ◆ m_filename. const char* sofa::testing::GtestMessageFrame::m_filename. ◆ m_lineno. int sofa::testing::GtestMessageFrame::m_lineno. ◆ m_type. Message::Type sofa::testing::GtestMessageFrame::m_type. Constructor details. ◆ ~GtestMessageFrame(). virtual sofa::testing::GtestMessageFrame::~GtestMessageFrame ; (; ). inlinevirtual . Function details. ◆ finalize(). virtual void sofa::testing::GtestMessageFrame::finalize ; (; ). inlinevirtual . Reimplemented in sofa::testing::GtestMessageFrameFailureWhenMissing. ◆ process(). virtual void sofa::testing::GtestMessageFrame::process ; (; Message & ; ). inlinevirtual . Reimplemented in sofa::testing::GtestMessageFrameFailureWhenMissing, and sofa::testing::GtestMessageFrameFailure. sofatestingGtestMessageFrame; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html
Integrability,message,message,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailure Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailure, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameFailure(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailure; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailurevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailure Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailure, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameFailure(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailure; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailurevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailure Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailure, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameFailure(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailure; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailurevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html
Integrability,message,message,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailure Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailure:. [legend]. Public Member Functions;  GtestMessageFrameFailure (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameFailure(). sofa::testing::GtestMessageFrameFailure::GtestMessageFrameFailure ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). DEFINITION OF PRIVATE CLASSES ////////////////////////////////// . Function details. ◆ process(). void sofa::testing::GtestMessageFrameFailure::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailure Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailure:. [legend]. Public Member Functions;  GtestMessageFrameFailure (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameFailure(). sofa::testing::GtestMessageFrameFailure::GtestMessageFrameFailure ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). DEFINITION OF PRIVATE CLASSES ////////////////////////////////// . Function details. ◆ process(). void sofa::testing::GtestMessageFrameFailure::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailure Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailure:. [legend]. Public Member Functions;  GtestMessageFrameFailure (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameFailure(). sofa::testing::GtestMessageFrameFailure::GtestMessageFrameFailure ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). DEFINITION OF PRIVATE CLASSES ////////////////////////////////// . Function details. ◆ process(). void sofa::testing::GtestMessageFrameFailure::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html
Integrability,message,message,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailureWhenMissing Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailureWhenMissing, including all inherited members. finalize() overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; GtestMessageFrameFailureWhenMissing(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailureWhenMissing; m_filenamesofa::testing::GtestMessageFrame; m_gotMessagesofa::testing::GtestMessageFrameFailureWhenMissing; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailureWhenMissing Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailureWhenMissing, including all inherited members. finalize() overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; GtestMessageFrameFailureWhenMissing(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailureWhenMissing; m_filenamesofa::testing::GtestMessageFrame; m_gotMessagesofa::testing::GtestMessageFrameFailureWhenMissing; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailureWhenMissing Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailureWhenMissing, including all inherited members. finalize() overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; GtestMessageFrameFailureWhenMissing(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailureWhenMissing; m_filenamesofa::testing::GtestMessageFrame; m_gotMessagesofa::testing::GtestMessageFrameFailureWhenMissing; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html
Integrability,message,message,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailureWhenMissing:. [legend]. Public Attributes; bool m_gotMessage {false};  ;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions;  GtestMessageFrameFailureWhenMissing (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ; void finalize () override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  . Attribute details. ◆ m_gotMessage. bool sofa::testing::GtestMessageFrameFailureWhenMissing::m_gotMessage {false}. Constructor details. ◆ GtestMessageFrameFailureWhenMissing(). sofa::testing::GtestMessageFrameFailureWhenMissing::GtestMessageFrameFailureWhenMissing ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). Function details. ◆ finalize(). void sofa::testing::GtestMessageFrameFailureWhenMissing::finalize ; (; ). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. ◆ process(). void sofa::testing::GtestMessageFrameFailureWhenMissing::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailureWhenMissing; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailureWhenMissing:. [legend]. Public Attributes; bool m_gotMessage {false};  ;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions;  GtestMessageFrameFailureWhenMissing (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ; void finalize () override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  . Attribute details. ◆ m_gotMessage. bool sofa::testing::GtestMessageFrameFailureWhenMissing::m_gotMessage {false}. Constructor details. ◆ GtestMessageFrameFailureWhenMissing(). sofa::testing::GtestMessageFrameFailureWhenMissing::GtestMessageFrameFailureWhenMissing ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). Function details. ◆ finalize(). void sofa::testing::GtestMessageFrameFailureWhenMissing::finalize ; (; ). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. ◆ process(). void sofa::testing::GtestMessageFrameFailureWhenMissing::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailureWhenMissing; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailureWhenMissing:. [legend]. Public Attributes; bool m_gotMessage {false};  ;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions;  GtestMessageFrameFailureWhenMissing (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ; void finalize () override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  . Attribute details. ◆ m_gotMessage. bool sofa::testing::GtestMessageFrameFailureWhenMissing::m_gotMessage {false}. Constructor details. ◆ GtestMessageFrameFailureWhenMissing(). sofa::testing::GtestMessageFrameFailureWhenMissing::GtestMessageFrameFailureWhenMissing ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). Function details. ◆ finalize(). void sofa::testing::GtestMessageFrameFailureWhenMissing::finalize ; (; ). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. ◆ process(). void sofa::testing::GtestMessageFrameFailureWhenMissing::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailureWhenMissing; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameIgnore Member List . This is the complete list of members for sofa::testing::GtestMessageFrameIgnore, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameIgnore(Message::Type type)sofa::testing::GtestMessageFrameIgnore; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &)sofa::testing::GtestMessageFrameinlinevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameIgnore Member List . This is the complete list of members for sofa::testing::GtestMessageFrameIgnore, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameIgnore(Message::Type type)sofa::testing::GtestMessageFrameIgnore; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &)sofa::testing::GtestMessageFrameinlinevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameIgnore Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameIgnore:. [legend]. Public Member Functions;  GtestMessageFrameIgnore (Message::Type type);  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameIgnore(). sofa::testing::GtestMessageFrameIgnore::GtestMessageFrameIgnore ; (; Message::Type ; type). sofatestingGtestMessageFrameIgnore; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html
Testability,test,testing,﻿. SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameIgnore Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameIgnore:. [legend]. Public Member Functions;  GtestMessageFrameIgnore (Message::Type type);  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameIgnore(). sofa::testing::GtestMessageFrameIgnore::GtestMessageFrameIgnore ; (; Message::Type ; type). sofatestingGtestMessageFrameIgnore; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageHandler Member List . This is the complete list of members for sofa::testing::GtestMessageHandler, including all inherited members. GtestMessageHandler(Message::Class mclass)sofa::testing::GtestMessageHandler; popFrame(Message::Type type)sofa::testing::GtestMessageHandler; process(Message &m) overridesofa::testing::GtestMessageHandlervirtual; pushFrame(Message::Type type, GtestMessageFrame *frame)sofa::testing::GtestMessageHandler; ~ GtestMessageHandler() overridesofa::testing::GtestMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageHandler Member List . This is the complete list of members for sofa::testing::GtestMessageHandler, including all inherited members. GtestMessageHandler(Message::Class mclass)sofa::testing::GtestMessageHandler; popFrame(Message::Type type)sofa::testing::GtestMessageHandler; process(Message &m) overridesofa::testing::GtestMessageHandlervirtual; pushFrame(Message::Type type, GtestMessageFrame *frame)sofa::testing::GtestMessageHandler; ~ GtestMessageHandler() overridesofa::testing::GtestMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::testing::GtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageHandler Class Reference . Inheritance diagram for sofa::testing::GtestMessageHandler:. [legend]. Public Member Functions;  GtestMessageHandler (Message::Class mclass);  ;  ~ GtestMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ; void pushFrame (Message::Type type, GtestMessageFrame *frame);  ; void popFrame (Message::Type type);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ GtestMessageHandler(). sofa::testing::GtestMessageHandler::GtestMessageHandler ; (; Message::Class ; mclass). ◆ ~ GtestMessageHandler(). sofa::testing::GtestMessageHandler::~ GtestMessageHandler ; (; ). override . Function details. ◆ popFrame(). void sofa::testing::GtestMessageHandler::popFrame ; (; Message::Type ; type). ◆ process(). void sofa::testing::GtestMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ pushFrame(). void sofa::testing::GtestMessageHandler::pushFrame ; (; Message::Type ; type, . GtestMessageFrame * ; frame . ). sofatestingGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::GtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageHandler Class Reference . Inheritance diagram for sofa::testing::GtestMessageHandler:. [legend]. Public Member Functions;  GtestMessageHandler (Message::Class mclass);  ;  ~ GtestMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ; void pushFrame (Message::Type type, GtestMessageFrame *frame);  ; void popFrame (Message::Type type);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ GtestMessageHandler(). sofa::testing::GtestMessageHandler::GtestMessageHandler ; (; Message::Class ; mclass). ◆ ~ GtestMessageHandler(). sofa::testing::GtestMessageHandler::~ GtestMessageHandler ; (; ). override . Function details. ◆ popFrame(). void sofa::testing::GtestMessageHandler::popFrame ; (; Message::Type ; type). ◆ process(). void sofa::testing::GtestMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ pushFrame(). void sofa::testing::GtestMessageHandler::pushFrame ; (; Message::Type ; type, . GtestMessageFrame * ; frame . ). sofatestingGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::IgnoreMessage Member List . This is the complete list of members for sofa::testing::IgnoreMessage, including all inherited members. IgnoreMessage(helper::logging::Message::Type t)sofa::testing::IgnoreMessage; ~IgnoreMessage()sofa::testing::IgnoreMessagevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::IgnoreMessage Member List . This is the complete list of members for sofa::testing::IgnoreMessage, including all inherited members. IgnoreMessage(helper::logging::Message::Type t)sofa::testing::IgnoreMessage; ~IgnoreMessage()sofa::testing::IgnoreMessagevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html
Integrability,message,message,﻿. SOFA API: sofa::testing::IgnoreMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::IgnoreMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Locally hide the fact that a message is expected. Better use the macro: IGNORE_MSG(Error) as a more 'good looking' version of; sofa::helper::logging::IgnoreMessage ignore(sofa::helper::logging::Message::Error); . Public Member Functions;  IgnoreMessage (helper::logging::Message::Type t);  ; virtual ~IgnoreMessage ();  . Constructor details. ◆ IgnoreMessage(). sofa::testing::IgnoreMessage::IgnoreMessage ; (; helper::logging::Message::Type ; t). ◆ ~IgnoreMessage(). sofa::testing::IgnoreMessage::~IgnoreMessage ; (; ). virtual . sofatestingIgnoreMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html
Testability,test,testing,﻿. SOFA API: sofa::testing::IgnoreMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::IgnoreMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Locally hide the fact that a message is expected. Better use the macro: IGNORE_MSG(Error) as a more 'good looking' version of; sofa::helper::logging::IgnoreMessage ignore(sofa::helper::logging::Message::Error); . Public Member Functions;  IgnoreMessage (helper::logging::Message::Type t);  ; virtual ~IgnoreMessage ();  . Constructor details. ◆ IgnoreMessage(). sofa::testing::IgnoreMessage::IgnoreMessage ; (; helper::logging::Message::Type ; t). ◆ ~IgnoreMessage(). sofa::testing::IgnoreMessage::~IgnoreMessage ; (; ). virtual . sofatestingIgnoreMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::LinearCongruentialRandomGenerator Member List . This is the complete list of members for sofa::testing::LinearCongruentialRandomGenerator, including all inherited members. generateInRange(double rmin, double rmax)sofa::testing::LinearCongruentialRandomGenerator; generateInRange(float rmin, float rmax)sofa::testing::LinearCongruentialRandomGenerator; generateInUnitRange()sofa::testing::LinearCongruentialRandomGeneratorinline; generateRandom()sofa::testing::LinearCongruentialRandomGenerator; LinearCongruentialRandomGenerator(unsigned int initialSeed)sofa::testing::LinearCongruentialRandomGeneratorexplicit. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::LinearCongruentialRandomGenerator Member List . This is the complete list of members for sofa::testing::LinearCongruentialRandomGenerator, including all inherited members. generateInRange(double rmin, double rmax)sofa::testing::LinearCongruentialRandomGenerator; generateInRange(float rmin, float rmax)sofa::testing::LinearCongruentialRandomGenerator; generateInUnitRange()sofa::testing::LinearCongruentialRandomGeneratorinline; generateRandom()sofa::testing::LinearCongruentialRandomGenerator; LinearCongruentialRandomGenerator(unsigned int initialSeed)sofa::testing::LinearCongruentialRandomGeneratorexplicit. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html
Deployability,update,update,"ange(10.0, 20.0);; sofa::testing::LinearCongruentialRandomGenerator::generateInRangedouble generateInRange(double rmin, double rmax)Generates a pseudo-random double value within a specified range.Definition: LinearCongruentialRandomGenerator.cpp:41. ◆ generateInRange() [2/2]. float sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; float ; rmin, . float ; rmax . ). Generates a pseudo-random float value within a specified range. ; This function generates a pseudo-random float value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random float value in the specified range [rmin, rmax].; Example usage: float randomValue = generateInRange(10.f, 20.f);. ◆ generateInUnitRange(). template<class Scalar > . Scalar sofa::testing::LinearCongruentialRandomGenerator::generateInUnitRange ; (; ). inline . Generates a pseudo-random value within the unit interval [0, 1]. ; This templated function generates a pseudo-random value of the specified scalar type within the unit interval [0, 1]. It utilizes the underlying random number generator to produce a normalized random value within the unit range.; Template Parameters. ScalarThe scalar type for the generated value (e.g., float, double). . ReturnsA pseudo-random value of the specified scalar type within the range [0, 1].; Example usage: float randomFloat = generateInUnitRange<float>();; double randomDouble = generateInUnitRange<double>();. ◆ generateRandom(). unsigned sofa::testing::LinearCongruentialRandomGenerator::generateRandom ; (; ). Generates the next pseudo-random number. ; ReturnsThe generated pseudo-random number.; This method uses a Linear Congruential Generator (LCG) algorithm to update the seed and produce the next pseudo-random number. . sofatestingLinearCongruentialRandomGenerator; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html
Modifiability,portab,portable,"﻿. SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::LinearCongruentialRandomGenerator Class Reference . #include <LinearCongruentialRandomGenerator.h>; A simple deterministic and portable random number generator. ; More...; Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax]",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::LinearCongruentialRandomGenerator Class Reference . #include <LinearCongruentialRandomGenerator.h>; A simple deterministic and portable random number generator. ; More...; Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax]",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html
Usability,simpl,simple,"﻿. SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::LinearCongruentialRandomGenerator Class Reference . #include <LinearCongruentialRandomGenerator.h>; A simple deterministic and portable random number generator. ; More...; Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax]",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MainGtestMessageHandler Member List . This is the complete list of members for sofa::testing::MainGtestMessageHandler, including all inherited members. getInstance()sofa::testing::MainGtestMessageHandlerstatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MainGtestMessageHandler Member List . This is the complete list of members for sofa::testing::MainGtestMessageHandler, including all inherited members. getInstance()sofa::testing::MainGtestMessageHandlerstatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html
Deployability,install,installed,"﻿. SOFA API: sofa::testing::MainGtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandler Class Reference . #include <TestMessageHandler.h>; Detailed Description; Inherited from MessageHandler, this handler must be installed to have the testing subsystem working. By default it is added in Sofa_test but if you are not inheriting from Sofa_test you have to install it manually. . Static Public Member Functions; static helper::logging::MessageHandler * getInstance ();  . Function details. ◆ getInstance(). MessageHandler * sofa::testing::MainGtestMessageHandler::getInstance ; (; ). static . sofatestingMainGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html
Modifiability,inherit,inheriting,"﻿. SOFA API: sofa::testing::MainGtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandler Class Reference . #include <TestMessageHandler.h>; Detailed Description; Inherited from MessageHandler, this handler must be installed to have the testing subsystem working. By default it is added in Sofa_test but if you are not inheriting from Sofa_test you have to install it manually. . Static Public Member Functions; static helper::logging::MessageHandler * getInstance ();  . Function details. ◆ getInstance(). MessageHandler * sofa::testing::MainGtestMessageHandler::getInstance ; (; ). static . sofatestingMainGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::MainGtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandler Class Reference . #include <TestMessageHandler.h>; Detailed Description; Inherited from MessageHandler, this handler must be installed to have the testing subsystem working. By default it is added in Sofa_test but if you are not inheriting from Sofa_test you have to install it manually. . Static Public Member Functions; static helper::logging::MessageHandler * getInstance ();  . Function details. ◆ getInstance(). MessageHandler * sofa::testing::MainGtestMessageHandler::getInstance ; (; ). static . sofatestingMainGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MainGtestMessageHandlerPrivate Member List . This is the complete list of members for sofa::testing::MainGtestMessageHandlerPrivate, including all inherited members. getInstance()sofa::testing::MainGtestMessageHandlerPrivatestatic; popFrame(Message::Type type)sofa::testing::MainGtestMessageHandlerPrivatestatic; pushFrame(Message::Type type, GtestMessageFrame *frame)sofa::testing::MainGtestMessageHandlerPrivatestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MainGtestMessageHandlerPrivate Member List . This is the complete list of members for sofa::testing::MainGtestMessageHandlerPrivate, including all inherited members. getInstance()sofa::testing::MainGtestMessageHandlerPrivatestatic; popFrame(Message::Type type)sofa::testing::MainGtestMessageHandlerPrivatestatic; pushFrame(Message::Type type, GtestMessageFrame *frame)sofa::testing::MainGtestMessageHandlerPrivatestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandlerPrivate Class Reference . Static Public Member Functions; static GtestMessageHandler & getInstance ();  ; static void pushFrame (Message::Type type, GtestMessageFrame *frame);  ; static void popFrame (Message::Type type);  . Function details. ◆ getInstance(). GtestMessageHandler & sofa::testing::MainGtestMessageHandlerPrivate::getInstance ; (; ). static . ◆ popFrame(). void sofa::testing::MainGtestMessageHandlerPrivate::popFrame ; (; Message::Type ; type). static . ◆ pushFrame(). void sofa::testing::MainGtestMessageHandlerPrivate::pushFrame ; (; Message::Type ; type, . GtestMessageFrame * ; frame . ). static . sofatestingMainGtestMessageHandlerPrivate; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MessageAsTestFailure Member List . This is the complete list of members for sofa::testing::MessageAsTestFailure, including all inherited members. MessageAsTestFailure(helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0)sofa::testing::MessageAsTestFailure; ~MessageAsTestFailure()sofa::testing::MessageAsTestFailurevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MessageAsTestFailure Member List . This is the complete list of members for sofa::testing::MessageAsTestFailure, including all inherited members. MessageAsTestFailure(helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0)sofa::testing::MessageAsTestFailure; ~MessageAsTestFailure()sofa::testing::MessageAsTestFailurevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html
Availability,failure,failure,"﻿. SOFA API: sofa::testing::MessageAsTestFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::MessageAsTestFailure Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure when a message of type Message:type is emitted. Better use the macro: EXPECT_MSG_NOEMIT(Error) as a more 'good looking' version of; sofa::helper::logging::MessageAsTestFailure failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  MessageAsTestFailure (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~MessageAsTestFailure ();  . Constructor details. ◆ MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::MessageAsTestFailure ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). DEFINITION OF PUBLIC CLASSES /////////////////////////////////// . ◆ ~MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::~MessageAsTestFailure ; (; ). virtual . sofatestingMessageAsTestFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html
Integrability,message,message,"﻿. SOFA API: sofa::testing::MessageAsTestFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::MessageAsTestFailure Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure when a message of type Message:type is emitted. Better use the macro: EXPECT_MSG_NOEMIT(Error) as a more 'good looking' version of; sofa::helper::logging::MessageAsTestFailure failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  MessageAsTestFailure (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~MessageAsTestFailure ();  . Constructor details. ◆ MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::MessageAsTestFailure ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). DEFINITION OF PUBLIC CLASSES /////////////////////////////////// . ◆ ~MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::~MessageAsTestFailure ; (; ). virtual . sofatestingMessageAsTestFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::MessageAsTestFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::MessageAsTestFailure Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure when a message of type Message:type is emitted. Better use the macro: EXPECT_MSG_NOEMIT(Error) as a more 'good looking' version of; sofa::helper::logging::MessageAsTestFailure failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  MessageAsTestFailure (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~MessageAsTestFailure ();  . Constructor details. ◆ MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::MessageAsTestFailure ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). DEFINITION OF PUBLIC CLASSES /////////////////////////////////// . ◆ ~MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::~MessageAsTestFailure ; (; ). virtual . sofatestingMessageAsTestFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::fixed_array< T, N > Member List . This is the complete list of members for sofa::type::fixed_array< T, N >, including all inherited members. Array typedefsofa::type::fixed_array< T, N >; array() const noexceptsofa::type::fixed_array< T, N >inline; array() noexceptsofa::type::fixed_array< T, N >inline; assign(const T &value) noexceptsofa::type::fixed_array< T, N >inline; at(size_type i)sofa::type::fixed_array< T, N >inline; at(size_type i) constsofa::type::fixed_array< T, N >inline; back()sofa::type::fixed_array< T, N >inline; back() constsofa::type::fixed_array< T, N >inline; begin() noexceptsofa::type::fixed_array< T, N >inline; begin() const noexceptsofa::type::fixed_array< T, N >inline; cbegin() const noexceptsofa::type::fixed_array< T, N >inline; cend() const noexceptsofa::type::fixed_array< T, N >inline; const_iterator typedefsofa::type::fixed_array< T, N >; const_reference typedefsofa::type::fixed_array< T, N >; data() const noexceptsofa::type::fixed_array< T, N >inline; difference_type typedefsofa::type::fixed_array< T, N >; elemssofa::type::fixed_array< T, N >; empty() noexceptsofa::type::fixed_array< T, N >inlinestatic; end() noexceptsofa::type::fixed_array< T, N >inline; end() const noexceptsofa::type::fixed_array< T, N >inline; fixed_array()sofa::type::fixed_array< T, N >inline; fixed_array(value_type r1) noexceptsofa::type::fixed_array< T, N >inlineexplicit; fixed_array(ArgsT &&... r) noexceptsofa::type::fixed_array< T, N >inline; front()sofa::type::fixed_array< T, N >inline; front() constsofa::type::fixed_array< T, N >inline; get() &noexceptsofa::type::fixed_array< T, N >inline; get() const &noexceptsofa::type::fixed_array< T, N >inline; get() &&noexceptsofa::type::fixed_array< T, N >inline; get() const &&noexceptsofa::type::fixed_array< T, N >inline; iterator typedefsofa::type::fixed_array< T, N >; max_size() noexceptsofa::type::fixed_array< T",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1fixed__array-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1fixed__array-members.html
Security,access,access," Functions; constexpr fixed_array ();  ; template<size_type NN = N, typename std::enable_if< NN==1, int >::type = 0> ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, value_type> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == N && sizeof...(ArgsT) > 1) >> ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; template<std::size_t I> ; constexpr T & get () &noexcept;  ; template<std::size_t I> ; constexpr const T & get () const &noexcept;  ; template<std::size_t I> ; constexpr T && get () &&noexcept;  ; template<std::size_t I> ; constexpr const T && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< T, N > &y);  ; constexpr const T * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; template<typename T2 > ; constexpr fixed_array< T, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const T &value) noexcept;  . Static Public Member Functions; static constexpr size_type size () noexcept;  ; static bool empty () noexcept;  ; static constexpr size_type max_size () noexcept;  . Friends; std::ostream & operator<< (st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1fixed__array.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1fixed__array.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::vector< T, MemoryManager > Member List . This is the complete list of members for sofa::type::vector< T, MemoryManager >, including all inherited members. Alloc typedefsofa::type::vector< T, MemoryManager >; const_reference typedefsofa::type::vector< T, MemoryManager >; fastResize(Size n)sofa::type::vector< T, MemoryManager >inline; fill(const T &value)sofa::type::vector< T, MemoryManager >inline; memory_manager typedefsofa::type::vector< T, MemoryManager >; operator<<(std::ostream &os, const vector &vec)sofa::type::vector< T, MemoryManager >friend; operator=(const std::vector< T, Alloc > &x)sofa::type::vector< T, MemoryManager >inline; operator=(std::vector< T, Alloc > &&v)sofa::type::vector< T, MemoryManager >inline; operator>>(std::istream &in, vector &vec)sofa::type::vector< T, MemoryManager >friend; operator[](Size n)sofa::type::vector< T, MemoryManager >inline; operator[](Size n) constsofa::type::vector< T, MemoryManager >inline; read(std::istream &in)sofa::type::vector< T, MemoryManager >inline; read(std::istream &in)sofa::type::vector< T, MemoryManager >; read(std::istream &in)sofa::type::vector< T, MemoryManager >; read(std::istream &in)sofa::type::vector< T, MemoryManager >; read(std::istream &in)sofa::type::vector< T, MemoryManager >; read(std::istream &in)sofa::type::vector< T, MemoryManager >; read(std::istream &in)sofa::type::vector< T, MemoryManager >; rebind_to typedefsofa::type::vector< T, MemoryManager >; reference typedefsofa::type::vector< T, MemoryManager >; Size typedefsofa::type::vector< T, MemoryManager >; vector()sofa::type::vector< T, MemoryManager >inline; vector(Size n, const T &value)sofa::type::vector< T, MemoryManager >inline; vector(Size n)sofa::type::vector< T, MemoryManager >inlineexplicit; vector(const std::vector< T, Alloc > &x)sofa::type::vector< T, MemoryManager >inline; vector(const std::initializer_list< T > &t)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector-members.html
Safety,safe,safely,"<class T , class MemoryManager = CPUMemoryManager<T>> . sofa::type::vector< T, MemoryManager >::vector ; (; const std::initializer_list< T > & ; t). inline . Brace initializer constructor. . ◆ vector() [6/7]. template<class T , class MemoryManager = CPUMemoryManager<T>> . sofa::type::vector< T, MemoryManager >::vector ; (; std::vector< T, Alloc > && ; v). inline . Move constructor. . ◆ vector() [7/7]. template<class T , class MemoryManager = CPUMemoryManager<T>> . sofa::type::vector< T, MemoryManager >::vector ; (; typename vector< T >::const_iterator ; first, . typename vector< T >::const_iterator ; last . ). inline . Constructor. . Function details. ◆ fastResize(). template<class T , class MemoryManager = CPUMemoryManager<T>> . void sofa::type::vector< T, MemoryManager >::fastResize ; (; Size ; n). inline . this function is useful for vector_device because it resize the vector without device operation (if device is not valid). Therefore the function is used in asynchronous code to safely resize a vector which is either cuda of type::vector . ◆ fill(). template<class T , class MemoryManager = CPUMemoryManager<T>> . void sofa::type::vector< T, MemoryManager >::fill ; (; const T & ; value). inline . Sets every element to 'value'. . ◆ operator=() [1/2]. template<class T , class MemoryManager = CPUMemoryManager<T>> . vector& sofa::type::vector< T, MemoryManager >::operator= ; (; const std::vector< T, Alloc > & ; x). inline . Copy operator. . ◆ operator=() [2/2]. template<class T , class MemoryManager = CPUMemoryManager<T>> . vector& sofa::type::vector< T, MemoryManager >::operator= ; (; std::vector< T, Alloc > && ; v). inline . Move assignment operator. . ◆ operator[]() [1/2]. template<class T , class MemoryManager = CPUMemoryManager<T>> . reference sofa::type::vector< T, MemoryManager >::operator[] ; (; Size ; n). inline . Read/write random access. . ◆ operator[]() [2/2]. template<class T , class MemoryManager = CPUMemoryManager<T>> . const_reference sofa::type::vector",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html
Security,access,access,"r<T>>; class sofa::type::vector< T, MemoryManager >; Regular vector Using CPUMemoryManager, it has the same behavior as std::vector with extra conveniences:; string serialization (making it usable in Data); operator[] is checking if the index is within the bounds in debug . Public Member Functions;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ; vector & operator= (const std::vector< T, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< T, Alloc > &&v);  Move assignment operator. More...;  ;  vector (typename vector< T >::const_iterator first, typename vector< T >::const_iterator last);  Constructor. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. More...;  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; void fill (const T &value);  Sets every element to 'value'. More...;  ; void fastResize (Size n);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  Specialization for reading vectors of int and unsigned int using ""A-B"" notation for all integers between A and B. More...;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  Specialization for writing vectors of unsigned char. More...;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html
Usability,usab,usable,"﻿. SOFA API: sofa::type::vector< T, MemoryManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::type::vector< T, MemoryManager > Class Template Reference . #include <vector_T.h>. Inheritance diagram for sofa::type::vector< T, MemoryManager >:. [legend]; Detailed Description; template<class T, class MemoryManager = CPUMemoryManager<T>>; class sofa::type::vector< T, MemoryManager >; Regular vector Using CPUMemoryManager, it has the same behavior as std::vector with extra conveniences:; string serialization (making it usable in Data); operator[] is checking if the index is within the bounds in debug . Public Member Functions;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ; vector & operator= (const std::vector< T, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< T, Alloc > &&v);  Move assignment operator. More...;  ;  vector (typename vector< T >::const_iterator first, typename vector< T >::const_iterator last);  Constructor. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. More...;  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; void fill (const T &value);  Sets every element to 'value'. More...;  ; void fastResize (Size n);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::istream & read (std::istream &in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html
Energy Efficiency,allocate,allocate," ALL_DEVICE_VALID enum valuesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; allocate(int d) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; allocSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, Dat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager > Member List . This is the complete list of members for sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >, including all inherited members. ALL_DEVICE_VALID enum valuesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; allocate(int d) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; allocSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, Dat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html
Usability,clear,clear,"< T, MemoryManager, DataTypeInfoManager >inlineprotected; allocSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHostSingle(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; cptidsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotectedstatic; createBuffer()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; data() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; data()sofa::type::vector_device< T, MemoryManag",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html
Energy Efficiency,allocate,allocated,"cted Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager > Class Template Reference . #include <vector_device.h>. Protected Attributes; Size vectorSize;  Current size of the vector. More...;  ; Size allocSize;  Allocated size on host. More...;  ; Size deviceVectorSize [MemoryManager::MAX_DEVICES];  Initialized size on each device. More...;  ; Size deviceAllocSize [MemoryManager::MAX_DEVICES];  Allocated size on each device. More...;  ; device_pointer devicePointer [MemoryManager::MAX_DEVICES];  Pointer to the data on the GPU side. More...;  ; Size clearSize;  when initializing missing device data, up to where entries should be set to zero ? More...;  ; T * hostPointer;  Pointer to the data on the CPU side. More...;  ; int deviceIsValid;  True if the data on the GPU is currently valid (up to the given deviceVectorSize of each device, i.e. additional space may need to be allocated and/or initialized) More...;  ; bool hostIsValid;  True if the data on the CPU is currently valid. More...;  ; bool bufferIsRegistered;  True if the buffer is registered with CUDA. More...;  ; buffer_id_type bufferObject;  Optional associated buffer ID. More...;  . Static Protected Attributes; static int cptid = 0;  . Public Member Functions;  vector_device ();  ;  vector_device (const Size n);  ;  vector_device (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  vector_device (const std::initializer_list< T > &t);  ; bool isHostValid () const;  ; bool isDeviceValid (unsigned gpu) const;  ; void clear ();  ; void operator= (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  ~vector_device ();  ; Size size () const;  ; Size capacity () const;  ; bool empty () const;  ; void reserve (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void fastResize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector without calling constructors ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html
Integrability,synchroniz,synchronizing," missing device data, up to where entries should be set to zero ? More...;  ; T * hostPointer;  Pointer to the data on the CPU side. More...;  ; int deviceIsValid;  True if the data on the GPU is currently valid (up to the given deviceVectorSize of each device, i.e. additional space may need to be allocated and/or initialized) More...;  ; bool hostIsValid;  True if the data on the CPU is currently valid. More...;  ; bool bufferIsRegistered;  True if the buffer is registered with CUDA. More...;  ; buffer_id_type bufferObject;  Optional associated buffer ID. More...;  . Static Protected Attributes; static int cptid = 0;  . Public Member Functions;  vector_device ();  ;  vector_device (const Size n);  ;  vector_device (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  vector_device (const std::initializer_list< T > &t);  ; bool isHostValid () const;  ; bool isDeviceValid (unsigned gpu) const;  ; void clear ();  ; void operator= (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  ~vector_device ();  ; Size size () const;  ; Size capacity () const;  ; bool empty () const;  ; void reserve (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void fastResize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector without calling constructors or destructors, and without synchronizing the device and host copy More...;  ; void recreate (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector discarding any old values, without calling constructors or destructors, and without synchronizing the device and host copy More...;  ; void invalidateDevice ();  ; void invalidateHost ();  ; void memsetDevice (int v=0);  ; void memsetHost (int v=0);  ; void resize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void swap (vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ; const device_pointer deviceReadAt (int i, int gpu=MemoryManager::getBufferDevice()) const;  ; const device_pointer deviceRead (int gpu=MemoryManager::ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html
Usability,clear,clearSize,"﻿. SOFA API: sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager > Class Template Reference . #include <vector_device.h>. Protected Attributes; Size vectorSize;  Current size of the vector. More...;  ; Size allocSize;  Allocated size on host. More...;  ; Size deviceVectorSize [MemoryManager::MAX_DEVICES];  Initialized size on each device. More...;  ; Size deviceAllocSize [MemoryManager::MAX_DEVICES];  Allocated size on each device. More...;  ; device_pointer devicePointer [MemoryManager::MAX_DEVICES];  Pointer to the data on the GPU side. More...;  ; Size clearSize;  when initializing missing device data, up to where entries should be set to zero ? More...;  ; T * hostPointer;  Pointer to the data on the CPU side. More...;  ; int deviceIsValid;  True if the data on the GPU is currently valid (up to the given deviceVectorSize of each device, i.e. additional space may need to be allocated and/or initialized) More...;  ; bool hostIsValid;  True if the data on the CPU is currently valid. More...;  ; bool bufferIsRegistered;  True if the buffer is registered with CUDA. More...;  ; buffer_id_type bufferObject;  Optional associated buffer ID. More...;  . Static Protected Attributes; static int cptid = 0;  . Public Member Functions;  vector_device ();  ;  vector_device (const Size n);  ;  vector_device (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  vector_device (const std::initializer_list< T > &t);  ; bool isHostValid () const;  ; bool isDeviceValid (unsigned gpu) const;  ; void clear ();  ; void operator= (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  ~vector_device ();  ; Size size () const;  ; Size capac",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::BoundingBox Member List . This is the complete list of members for sofa::type::BoundingBox, including all inherited members. bboxsofa::type::BoundingBoxprotected; bbox_t typedefsofa::type::BoundingBox; BoundingBox()sofa::type::BoundingBox; BoundingBox(const sofa::type::Vec3 &minBBox, const sofa::type::Vec3 &maxBBox)sofa::type::BoundingBox; BoundingBox(const bbox_t &bbox)sofa::type::BoundingBox; BoundingBox(SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax)sofa::type::BoundingBox; BoundingBox(const Vec6f &bbox)sofa::type::BoundingBox; BoundingBox(const Vec6d &bbox)sofa::type::BoundingBox; contains(const sofa::type::Vec3 &point) constsofa::type::BoundingBox; contains(const BoundingBox &other) constsofa::type::BoundingBox; getInclude(const sofa::type::Vec3 &point) constsofa::type::BoundingBox; getInclude(const BoundingBox &other) constsofa::type::BoundingBox; getInflate(SReal amount) constsofa::type::BoundingBox; getIntersection(const BoundingBox &other) constsofa::type::BoundingBox; include(const sofa::type::Vec3 &point)sofa::type::BoundingBox; include(const BoundingBox &other)sofa::type::BoundingBox; inflate(SReal amount)sofa::type::BoundingBox; intersect(const BoundingBox &other) constsofa::type::BoundingBox; intersection(const BoundingBox &other)sofa::type::BoundingBox; invalidate()sofa::type::BoundingBox; isFlat() constsofa::type::BoundingBox; isNegligeable() constsofa::type::BoundingBox; isNull() constsofa::type::BoundingBox; isValid() constsofa::type::BoundingBox; maxBBox() constsofa::type::BoundingBox; maxBBox()sofa::type::BoundingBox; maxBBoxPtr()sofa::type::BoundingBox; maxBBoxPtr() constsofa::type::BoundingBox; minBBox() constsofa::type::BoundingBox; minBBox()sofa::type::BoundingBox; minBBoxPtr()sofa::type::BoundingBox; minBBoxPtr() constsofa::type::BoundingBox; neutral_bbox()sofa::type::BoundingBoxstatic; operator bbox_t() cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_bounding_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_bounding_box-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::BoundingBox1D Member List . This is the complete list of members for sofa::type::BoundingBox1D, including all inherited members. bboxsofa::type::BoundingBox1Dprotected; bbox_t typedefsofa::type::BoundingBox1D; BoundingBox1D()sofa::type::BoundingBox1D; BoundingBox1D(SReal minBBox, SReal maxBBox)sofa::type::BoundingBox1D; BoundingBox1D(const bbox_t &bbox)sofa::type::BoundingBox1D; BoundingBox1D(const Vec2f &bbox)sofa::type::BoundingBox1D; BoundingBox1D(const Vec2d &bbox)sofa::type::BoundingBox1D; contains(SReal point) constsofa::type::BoundingBox1D; contains(const BoundingBox1D &other) constsofa::type::BoundingBox1D; getInclude(SReal point) constsofa::type::BoundingBox1D; getInclude(const BoundingBox1D &other) constsofa::type::BoundingBox1D; getInflate(SReal amount) constsofa::type::BoundingBox1D; getIntersection(const BoundingBox1D &other) constsofa::type::BoundingBox1D; include(SReal point)sofa::type::BoundingBox1D; include(const BoundingBox1D &other)sofa::type::BoundingBox1D; inflate(SReal amount)sofa::type::BoundingBox1D; intersect(const BoundingBox1D &other) constsofa::type::BoundingBox1D; intersection(const BoundingBox1D &other)sofa::type::BoundingBox1D; invalidate()sofa::type::BoundingBox1D; isFlat() constsofa::type::BoundingBox1D; isNegligeable() constsofa::type::BoundingBox1D; isNull() constsofa::type::BoundingBox1D; isValid() constsofa::type::BoundingBox1D; maxBBox() constsofa::type::BoundingBox1D; maxBBox()sofa::type::BoundingBox1D; minBBox() constsofa::type::BoundingBox1D; minBBox()sofa::type::BoundingBox1D; neutral_bbox()sofa::type::BoundingBox1Dstatic; operator bbox_t() constsofa::type::BoundingBox1D; operator<<(std::ostream &out, const BoundingBox1D &bbox)sofa::type::BoundingBox1Dfriend; operator>>(std::istream &in, BoundingBox1D &bbox)sofa::type::BoundingBox1Dfriend. Generated on Mon Nov 11 2024 03:36:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_bounding_box1_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_bounding_box1_d-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::BoundingBox2D Member List . This is the complete list of members for sofa::type::BoundingBox2D, including all inherited members. bboxsofa::type::BoundingBox2Dprotected; bbox_t typedefsofa::type::BoundingBox2D; BoundingBox2D()sofa::type::BoundingBox2D; BoundingBox2D(const sofa::type::Vec< 2, SReal > &minBBox, const sofa::type::Vec< 2, SReal > &maxBBox)sofa::type::BoundingBox2D; BoundingBox2D(const bbox_t &bbox)sofa::type::BoundingBox2D; BoundingBox2D(SReal xmin, SReal xmax, SReal ymin, SReal ymax)sofa::type::BoundingBox2D; BoundingBox2D(const Vec4f &bbox)sofa::type::BoundingBox2D; BoundingBox2D(const Vec4d &bbox)sofa::type::BoundingBox2D; contains(const sofa::type::Vec< 2, SReal > &point) constsofa::type::BoundingBox2D; contains(const BoundingBox2D &other) constsofa::type::BoundingBox2D; getInclude(const sofa::type::Vec< 2, SReal > &point) constsofa::type::BoundingBox2D; getInclude(const BoundingBox2D &other) constsofa::type::BoundingBox2D; getInflate(SReal amount) constsofa::type::BoundingBox2D; getIntersection(const BoundingBox2D &other) constsofa::type::BoundingBox2D; include(const sofa::type::Vec< 2, SReal > &point)sofa::type::BoundingBox2D; include(const BoundingBox2D &other)sofa::type::BoundingBox2D; inflate(SReal amount)sofa::type::BoundingBox2D; intersect(const BoundingBox2D &other) constsofa::type::BoundingBox2D; intersection(const BoundingBox2D &other)sofa::type::BoundingBox2D; invalidate()sofa::type::BoundingBox2D; isFlat() constsofa::type::BoundingBox2D; isNegligeable() constsofa::type::BoundingBox2D; isNull() constsofa::type::BoundingBox2D; isValid() constsofa::type::BoundingBox2D; maxBBox() constsofa::type::BoundingBox2D; maxBBox()sofa::type::BoundingBox2D; maxBBoxPtr()sofa::type::BoundingBox2D; maxBBoxPtr() constsofa::type::BoundingBox2D; minBBox() constsofa::type::BoundingBox2D; minBBox()sofa::type::BoundingBox2D; minBBoxPtr()sofa::type::Boun",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_bounding_box2_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_bounding_box2_d-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::DualQuatCoord3< real > Member List . This is the complete list of members for sofa::type::DualQuatCoord3< real >, including all inherited members. clear()sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const Quat &Dual, const Quat &orient)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const DualQuatCoord3< real2 > &c)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const Pos &p, const sofa::type::Quat< real > &q)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3()sofa::type::DualQuatCoord3< real >inline; getDual()sofa::type::DualQuatCoord3< real >inline; getDual() constsofa::type::DualQuatCoord3< real >inline; getOrientation()sofa::type::DualQuatCoord3< real >inline; getOrientation() constsofa::type::DualQuatCoord3< real >inline; getTranslation()sofa::type::DualQuatCoord3< real >inline; identity()sofa::type::DualQuatCoord3< real >inlinestatic; inverse()sofa::type::DualQuatCoord3< real >; inverseRotate(const Vec3 &v) constsofa::type::DualQuatCoord3< real >; invert()sofa::type::DualQuatCoord3< real >; max_size()sofa::type::DualQuatCoord3< real >inlinestatic; multLeft(const DualQuatCoord3< real > &c)sofa::type::DualQuatCoord3< real >; multLeft_getJ(type::Mat< 4, 4, real > &J0, type::Mat< 4, 4, real > &JE)sofa::type::DualQuatCoord3< real >; multRight(const DualQuatCoord3< real > &c) constsofa::type::DualQuatCoord3< real >; multRight_getJ(type::Mat< 4, 4, real > &J0, type::Mat< 4, 4, real > &JE)sofa::type::DualQuatCoord3< real >; norm() constsofa::type::DualQuatCoord3< real >inline; norm2() constsofa::type::DualQuatCoord3< real >; normalize()sofa::type::DualQuatCoord3< real >; normalize_applyJ(const DualQuatCoord3< real > &dq)sofa::type::DualQuatCoord3< real >; normalize_applyJT(const DualQuatCoord3< real > &dqn)sofa::type::DualQuatCoord3< real >; normalize_getdJ(type::Mat< 4, 4, real > &dJ0, type::Mat< 4, 4, real > &dJE, const D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html
Usability,clear,clear," clear()sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const Quat &Dual, const Quat &orient)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const DualQuatCoord3< real2 > &c)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const Pos &p, const sofa::type::Quat< real > &q)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3()sofa::type::DualQuatCoord3< real >inline; getDual()sofa::type::DualQuatCoord3< real >inline; getDual() constsofa::type::DualQuatCoord3< real >inline; getOrientation()sofa::type::DualQuatCoord3< real >inline; getOrientation() constsofa::type::DualQuatCoord3< real >inline; getTranslation()sofa::type::DualQuatCoord3< real >inline; identity()sofa::type::DualQuatCoord3< real >inlinestatic; inverse()sofa::type::DualQuatCoord3< real >; inverseRotate(const Vec3 &v) constsofa::type::DualQuatCoord3< real >; invert()sofa::type::DualQuatCoord3< real >; max_size()sofa::type::DualQuatCoord3< real >inlinestatic; multLeft(const DualQuatCoord3< real > &c)sofa::type::DualQuatCoord3< real >; multLeft_getJ(type::Mat< 4, 4, real > &J0, type::Mat< 4, 4, real > &JE)sofa::type::DualQuatCoord3< real >; multRight(const DualQuatCoord3< real > &c) constsofa::type::DualQuatCoord3< real >; multRight_getJ(type::Mat< 4, 4, real > &J0, type::Mat< 4, 4, real > &JE)sofa::type::DualQuatCoord3< real >; norm() constsofa::type::DualQuatCoord3< real >inline; norm2() constsofa::type::DualQuatCoord3< real >; normalize()sofa::type::DualQuatCoord3< real >; normalize_applyJ(const DualQuatCoord3< real > &dq)sofa::type::DualQuatCoord3< real >; normalize_applyJT(const DualQuatCoord3< real > &dqn)sofa::type::DualQuatCoord3< real >; normalize_getdJ(type::Mat< 4, 4, real > &dJ0, type::Mat< 4, 4, real > &dJE, const D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html
Usability,clear,clear," Public Member Functions;  DualQuatCoord3 (const Quat &Dual, const Quat &orient);  ; template<typename real2 > ;  DualQuatCoord3 (const DualQuatCoord3< real2 > &c);  ;  DualQuatCoord3 (const Pos &p, const sofa::type::Quat< real > &q);  ;  DualQuatCoord3 ();  ; void clear ();  ;  ~DualQuatCoord3 ();  ; real * ptr ();  ; const real * ptr () const;  ; void setTranslation (const Vec3 &p);  ; Vec3 getTranslation ();  ; Quat & getDual ();  ; Quat & getOrientation ();  ; const Quat & getDual () const;  ; const Quat & getOrientation () const;  ; real norm2 () const;  ; real norm () const;  ; void normalize ();  ; void invert ();  ; template<typename real2 > ; void toMatrix (type::Mat< 3, 4, real2 > &m) const;  ; template<typename real2 > ; void toRotationMatrix (type::Mat< 3, 3, real2 > &m) const;  ; Vec3 rotate (const Vec3 &v) const;  ; Vec3 inverseRotate (const Vec3 &v) const;  ; DualQuatCoord3< real > inverse ();  ; DualQuatCoord3< real > multRight (const DualQuatCoord3< real > &c) const;  ; DualQuatCoord3< real > multLeft (const DualQuatCoord3< real > &c);  ; Vec3 pointToParent (const Vec3 &p);  ; Vec3 pointToChild (const Vec3 &v);  ; Vec3 vectorToChild (const Vec3 &v);  ; template<typename real2 > ; void operator= (const DualQuatCoord3< real2 > &c);  ; void operator= (const Vec3 &p);  ; void operator+= (const DualQuatCoord3< real > &a);  ; template<typename real2 > ; void operator*= (real2 a);  ; template<typename real2 > ; void operator/= (real2 a);  ; template<typename real2 > ; DualQuatCoord3< real > operator* (real2 a) const;  ; real operator* (const DualQuatCoord3< real > &a) const;  ; DualQuatCoord3< real > operator+ (const type::Vec< 6, real >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Frame Member List . This is the complete list of members for sofa::type::Frame, including all inherited members. clear()sofa::type::Frame; Frame(const Vec3 &origin, const Mat33 &matrix)sofa::type::Frame; Frame(const Vec3 &origin, const Quat &orientation, const Vec3 &scale=Vec3(1_sreal, 1_sreal, 1_sreal))sofa::type::Frame; Frame(const Vec3 &origin)sofa::type::Frame; Frame()sofa::type::Frame; getBasis()sofa::type::Frame; getBasis() constsofa::type::Frame; getOrigin()sofa::type::Frame; getOrigin() constsofa::type::Frame; identity()sofa::type::Framestatic; inversed() constsofa::type::Frame; Mat33 typedefsofa::type::Frame; mult(const Frame &c) constsofa::type::Frame; multRight(const Frame &c)sofa::type::Frame; operator<<(std::ostream &out, const Frame &c)sofa::type::Framefriend; projectPoint(const V &v) constsofa::type::Frameinline; projectVector(const V &v) constsofa::type::Frameinline; Quat typedefsofa::type::Frame; setBasis(const Mat33 &m)sofa::type::Frame; setOrigin(const Vec3 &origin)sofa::type::Frame; setTransform(const Vec3 &origin, const Quat &orientation, const Vec3 &scale)sofa::type::Frame; writeOpenGlMatrix(float *m) constsofa::type::Frame; writeOpenGlMatrix(double *m) constsofa::type::Frame. Generated on Mon Nov 11 2024 03:36:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Frame Member List . This is the complete list of members for sofa::type::Frame, including all inherited members. clear()sofa::type::Frame; Frame(const Vec3 &origin, const Mat33 &matrix)sofa::type::Frame; Frame(const Vec3 &origin, const Quat &orientation, const Vec3 &scale=Vec3(1_sreal, 1_sreal, 1_sreal))sofa::type::Frame; Frame(const Vec3 &origin)sofa::type::Frame; Frame()sofa::type::Frame; getBasis()sofa::type::Frame; getBasis() constsofa::type::Frame; getOrigin()sofa::type::Frame; getOrigin() constsofa::type::Frame; identity()sofa::type::Framestatic; inversed() constsofa::type::Frame; Mat33 typedefsofa::type::Frame; mult(const Frame &c) constsofa::type::Frame; multRight(const Frame &c)sofa::type::Frame; operator<<(std::ostream &out, const Frame &c)sofa::type::Framefriend; projectPoint(const V &v) constsofa::type::Frameinline; projectVector(const V &v) constsofa::type::Frameinline; Quat typedefsofa::type::Frame; setBasis(const Mat33 &m)sofa::type::Frame; setOrigin(const Vec3 &origin)sofa::type::Frame; setTransform(const Vec3 &origin, const Quat &orientation, const Vec3 &scale)sofa::type::Frame; writeOpenGlMatrix(float *m) constsofa::type::Frame; writeOpenGlMatrix(double *m) constsofa::type::Frame. Generated on Mon Nov 11 2024 03:36:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html
Usability,clear,clear,"placements starting from the reference frame: translation, then rotation along the new origin, then scale along the new axes. Conversely, the projection of a point from the local frame to the reference frame undergoes scaling, then rotation, then translation. Vectors do not undergo translation since they model directions or displacement.; The product F1F2 can be seen as a frame displacement F1 starting from the reference frame followed by a frame displacement F2 starting from the new frame. It is used in frame hierarchies to model the transformation from frame 2 wrt the reference frame.; AuthorFrancois Faure, INRIA-UJF, 2006 . Public Member Functions;  Frame (const Vec3 &origin, const Mat33 &matrix);  ;  Frame (const Vec3 &origin, const Quat &orientation, const Vec3 &scale=Vec3(1_sreal, 1_sreal, 1_sreal));  ;  Frame (const Vec3 &origin);  ;  Frame ();  Default constructor set the transformation to identity. More...;  ; void setTransform (const Vec3 &origin, const Quat &orientation, const Vec3 &scale);  ; void clear ();  Reset the transformation to identity. More...;  ; Vec3 & getOrigin ();  Origin of the local frame in the reference frame,. More...;  ; const Vec3 & getOrigin () const;  Origin of the local frame in the reference frame,. More...;  ; void setOrigin (const Vec3 &origin);  Set the origin of the local frame in the reference frame,. More...;  ; Mat33 & getBasis ();  The columns represent the base vectors of the local frame wrt the reference frame. More...;  ; const Mat33 & getBasis () const;  The columns represent the base vectors of the local frame wrt the reference frame. More...;  ; void setBasis (const Mat33 &m);  The columns represent the base vectors of the local frame wrt the reference frame. More...;  ; void multRight (const Frame &c);  Apply a transformation defined in the child frame (mult. right) More...;  ; Frame mult (const Frame &c) const;  compute the product with another frame on the right More...;  ; void writeOpenGlMatrix (float *m) const;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Mat< L, C, real > Member List . This is the complete list of members for sofa::type::Mat< L, C, real >, including all inherited members. addTransposed(const Mat< C, L, real > &m) noexceptsofa::type::Mat< L, C, real >inline; ArrayLineType typedefsofa::type::Mat< L, C, real >; back()sofa::type::Mat< L, C, real >inline; back() constsofa::type::Mat< L, C, real >inline; begin() noexceptsofa::type::Mat< L, C, real >inline; begin() const noexceptsofa::type::Mat< L, C, real >inline; canSelfTranspose(const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexceptsofa::type::Mat< L, C, real >inlinestatic; canSelfTranspose(const Mat< I, J, real > &, const Mat< J, I, real > &) noexceptsofa::type::Mat< L, C, real >inlinestatic; clear() noexceptsofa::type::Mat< L, C, real >inline; Col typedefsofa::type::Mat< L, C, real >; col(Size j) const noexceptsofa::type::Mat< L, C, real >inline; const_iterator typedefsofa::type::Mat< L, C, real >; const_reference typedefsofa::type::Mat< L, C, real >; data() const noexceptsofa::type::Mat< L, C, real >inline; difference_type typedefsofa::type::Mat< L, C, real >; elemssofa::type::Mat< L, C, real >; end() noexceptsofa::type::Mat< L, C, real >inline; end() const noexceptsofa::type::Mat< L, C, real >inline; fill(real r) noexceptsofa::type::Mat< L, C, real >inline; front()sofa::type::Mat< L, C, real >inline; front() constsofa::type::Mat< L, C, real >inline; getNbCols() constsofa::type::Mat< L, C, real >inline; getNbLines() constsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, Mat< L2, C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(const Size L0, const Size C0, Vec< C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, real &m) const noexceptsofa::type::Mat< L, C, real >inline; identity() noexceptsofa::type::Mat< L, C, real >inline; Identity() noexceptsofa::typ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html
Usability,clear,clear," addTransposed(const Mat< C, L, real > &m) noexceptsofa::type::Mat< L, C, real >inline; ArrayLineType typedefsofa::type::Mat< L, C, real >; back()sofa::type::Mat< L, C, real >inline; back() constsofa::type::Mat< L, C, real >inline; begin() noexceptsofa::type::Mat< L, C, real >inline; begin() const noexceptsofa::type::Mat< L, C, real >inline; canSelfTranspose(const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexceptsofa::type::Mat< L, C, real >inlinestatic; canSelfTranspose(const Mat< I, J, real > &, const Mat< J, I, real > &) noexceptsofa::type::Mat< L, C, real >inlinestatic; clear() noexceptsofa::type::Mat< L, C, real >inline; Col typedefsofa::type::Mat< L, C, real >; col(Size j) const noexceptsofa::type::Mat< L, C, real >inline; const_iterator typedefsofa::type::Mat< L, C, real >; const_reference typedefsofa::type::Mat< L, C, real >; data() const noexceptsofa::type::Mat< L, C, real >inline; difference_type typedefsofa::type::Mat< L, C, real >; elemssofa::type::Mat< L, C, real >; end() noexceptsofa::type::Mat< L, C, real >inline; end() const noexceptsofa::type::Mat< L, C, real >inline; fill(real r) noexceptsofa::type::Mat< L, C, real >inline; front()sofa::type::Mat< L, C, real >inline; front() constsofa::type::Mat< L, C, real >inline; getNbCols() constsofa::type::Mat< L, C, real >inline; getNbLines() constsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, Mat< L2, C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(const Size L0, const Size C0, Vec< C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, real &m) const noexceptsofa::type::Mat< L, C, real >inline; identity() noexceptsofa::type::Mat< L, C, real >inline; Identity() noexceptsofa::typ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html
Security,access,access,"ine). More...;  ; template<typename real2 > ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; template<Size L2, Size C2> ; constexpr void operator= (const Mat< L2, C2, real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; template<Size L2, Size C2> ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, real > &m) const noexcept;  ; template<Size C2> ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, real &m) const noexcept;  ; template<Size L2, Size C2> ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, real > &m) noexcept;  ; template<Size L2> ; constexpr void setsub (Size L0, Size C0, const Vec< L2, real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr real & operator() (Size i, Size j) noexcept;  Write access to element (i,j). More...;  ; constexpr const real & operator() (Size i, Size j) const noexcept;  Read-only access to element (i,j). More...;  ; constexpr const Line * lptr () const noexcept;  Cast into a standard C array of lines (read-only). More...;  ; constexpr Line * lptr () noexcept;  Cast into a standard C array of lines. More...;  ; constexpr const real * ptr () const noexcept;  Cast into a standar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html
Testability,assert,assert,"ass real > . constexpr sofa::Size sofa::type::Mat< L, C, real >::total_size = L. staticconstexpr . Constructor details. ◆ Mat() [1/9]. template<sofa::Size L, sofa::Size C, class real > . constexpr sofa::type::Mat< L, C, real >::Mat ; (; ). constexprdefaultnoexcept . ◆ Mat() [2/9]. template<sofa::Size L, sofa::Size C, class real > . constexpr sofa::type::Mat< L, C, real >::Mat ; (; NoInit ; ). inlineexplicitconstexprnoexcept . ◆ Mat() [3/9]. template<sofa::Size L, sofa::Size C, class real > . template<sofa::Size TL = L, sofa::Size TC = C, typename = std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)>> . constexpr sofa::type::Mat< L, C, real >::Mat ; (; std::initializer_list< Real > && ; scalars). inlineconstexprnoexcept . Constructs a 1xC matrix (single-row, multiple columns) or a Lx1 matrix (multiple row, single column) and initializes it from a scalar initializer-list. Allows to build a matrix with the following syntax: sofa::type::Mat<1, 3, int> M {1, 2, 3} or sofa::type::Mat<3, 1, int> M {1, 2, 3} Initializer-list must match matrix column size, otherwise an assert is triggered. . ◆ Mat() [4/9]. template<sofa::Size L, sofa::Size C, class real > . constexpr sofa::type::Mat< L, C, real >::Mat ; (; std::initializer_list< std::initializer_list< Real >> && ; rows). inlineconstexprnoexcept . Constructs a matrix and initializes it from scalar initializer-lists grouped by row. Allows to build a matrix with the following syntax: sofa::type::Mat<3, 3, int> M {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}} Initializer-lists must match matrix size, otherwise an assert is triggered. . ◆ Mat() [5/9]. template<sofa::Size L, sofa::Size C, class real > . template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, Line> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == L && sizeof...(ArgsT) > 1) >> . constexpr sofa::type::Mat< L, C, real >::Mat ; (; ArgsT &&... ; r). inlineconstexprnoexcept . ◆ Mat() [6/9]. template<sofa::Size L, sofa::Size C, clas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html
Usability,clear,clear,"d ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ; constexpr Size getNbCols () const;  number of columns More...;  ; constexpr void operator= (const real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; template<typename real2 > ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; template<Size L2, Size C2> ; constexpr void operator= (const Mat< L2, C2, real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; template<Size L2, Size C2> ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, real > &m) const noexcept;  ; template<Size C2> ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, real &m) const noexcept;  ; template<Size L2, Size C2> ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, real > &m) noexcept;  ; template<Size L2> ; constexpr void setsub (Size L0, Size C0, const Vec< L2, real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr real & operator() (Size i, Size j) noexcept;  Write acce",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Material Member List . This is the complete list of members for sofa::type::Material, including all inherited members. activatedsofa::type::Material; ambientsofa::type::Material; bumpTextureFilenamesofa::type::Material; diffusesofa::type::Material; emissivesofa::type::Material; Material()sofa::type::Material; Material(const Material &mat)sofa::type::Material; namesofa::type::Material; operator<<(std::ostream &out, const Material &m)sofa::type::Materialfriend; operator=(const Material &other)sofa::type::Material; operator>>(std::istream &in, Material &m)sofa::type::Materialfriend; setColor(float r, float g, float b, float a)sofa::type::Material; shininesssofa::type::Material; specularsofa::type::Material; textureFilenamesofa::type::Material; useAmbientsofa::type::Material; useBumpMappingsofa::type::Material; useDiffusesofa::type::Material; useEmissivesofa::type::Material; useShininesssofa::type::Material; useSpecularsofa::type::Material; useTexturesofa::type::Material. Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_material-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_material-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::MatNoInit< L, C, real > Member List . This is the complete list of members for sofa::type::MatNoInit< L, C, real >, including all inherited members. addTransposed(const Mat< C, L, real > &m) noexceptsofa::type::Mat< L, C, real >inline; ArrayLineType typedefsofa::type::Mat< L, C, real >; back()sofa::type::Mat< L, C, real >inline; back() constsofa::type::Mat< L, C, real >inline; begin() noexceptsofa::type::Mat< L, C, real >inline; begin() const noexceptsofa::type::Mat< L, C, real >inline; canSelfTranspose(const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexceptsofa::type::Mat< L, C, real >inlinestatic; canSelfTranspose(const Mat< I, J, real > &, const Mat< J, I, real > &) noexceptsofa::type::Mat< L, C, real >inlinestatic; clear() noexceptsofa::type::Mat< L, C, real >inline; col(Size j) const noexceptsofa::type::Mat< L, C, real >inline; Col typedefsofa::type::Mat< L, C, real >; const_iterator typedefsofa::type::Mat< L, C, real >; const_reference typedefsofa::type::Mat< L, C, real >; data() const noexceptsofa::type::Mat< L, C, real >inline; difference_type typedefsofa::type::Mat< L, C, real >; elemssofa::type::Mat< L, C, real >; end() noexceptsofa::type::Mat< L, C, real >inline; end() const noexceptsofa::type::Mat< L, C, real >inline; fill(real r) noexceptsofa::type::Mat< L, C, real >inline; front()sofa::type::Mat< L, C, real >inline; front() constsofa::type::Mat< L, C, real >inline; getNbCols() constsofa::type::Mat< L, C, real >inline; getNbLines() constsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, Mat< L2, C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(const Size L0, const Size C0, Vec< C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, real &m) const noexceptsofa::type::Mat< L, C, real >inline; identity() noexceptsofa::type::Mat< L, C, real >inline; Identity() noexc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html
Usability,clear,clear," addTransposed(const Mat< C, L, real > &m) noexceptsofa::type::Mat< L, C, real >inline; ArrayLineType typedefsofa::type::Mat< L, C, real >; back()sofa::type::Mat< L, C, real >inline; back() constsofa::type::Mat< L, C, real >inline; begin() noexceptsofa::type::Mat< L, C, real >inline; begin() const noexceptsofa::type::Mat< L, C, real >inline; canSelfTranspose(const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexceptsofa::type::Mat< L, C, real >inlinestatic; canSelfTranspose(const Mat< I, J, real > &, const Mat< J, I, real > &) noexceptsofa::type::Mat< L, C, real >inlinestatic; clear() noexceptsofa::type::Mat< L, C, real >inline; col(Size j) const noexceptsofa::type::Mat< L, C, real >inline; Col typedefsofa::type::Mat< L, C, real >; const_iterator typedefsofa::type::Mat< L, C, real >; const_reference typedefsofa::type::Mat< L, C, real >; data() const noexceptsofa::type::Mat< L, C, real >inline; difference_type typedefsofa::type::Mat< L, C, real >; elemssofa::type::Mat< L, C, real >; end() noexceptsofa::type::Mat< L, C, real >inline; end() const noexceptsofa::type::Mat< L, C, real >inline; fill(real r) noexceptsofa::type::Mat< L, C, real >inline; front()sofa::type::Mat< L, C, real >inline; front() constsofa::type::Mat< L, C, real >inline; getNbCols() constsofa::type::Mat< L, C, real >inline; getNbLines() constsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, Mat< L2, C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(const Size L0, const Size C0, Vec< C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, real &m) const noexceptsofa::type::Mat< L, C, real >inline; identity() noexceptsofa::type::Mat< L, C, real >inline; Identity() noexc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html
Modifiability,inherit,inherited,"List of all members . sofa::type::MatNoInit< L, C, real > Class Template Reference . #include <Mat.h>; Same as Mat except the values are not initialized by default. ; More... Inheritance diagram for sofa::type::MatNoInit< L, C, real >:. [legend]; Detailed Description; template<sofa::Size L, sofa::Size C, typename real>; class sofa::type::MatNoInit< L, C, real >; Same as Mat except the values are not initialized by default. . Public Member Functions; constexpr MatNoInit () noexcept;  ; constexpr void operator= (const real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; template<sofa::Size L2, sofa::Size C2, typename real2 > ; constexpr void operator= (const Mat< L2, C2, real2 > &m) noexcept;  Assignment from another matrix. More...;  ;  Public Member Functions inherited from sofa::type::Mat< L, C, real >; constexpr Mat () noexcept=default;  ; constexpr Mat (NoInit) noexcept;  ; template<sofa::Size TL = L, sofa::Size TC = C, typename = std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)>> ; constexpr Mat (std::initializer_list< Real > &&scalars) noexcept;  ; constexpr Mat (std::initializer_list< std::initializer_list< Real >> &&rows) noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, Line> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == L && sizeof...(ArgsT) > 1) >> ; constexpr Mat (ArgsT &&... r) noexcept;  ; constexpr Mat (const real &v) noexcept;  Constructor from an element. More...;  ; template<typename real2 > ; constexpr Mat (const Mat< L, C, real2 > &m) noexcept;  Constructor from another matrix. More...;  ; template<Size L2, Size C2, typename real2 > ; constexpr Mat (const Mat< L2, C2, real2 > &m) noexcept;  Constructor from another matrix with different size (with null default entries and ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). Mor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html
Security,access,access,"ine). More...;  ; template<typename real2 > ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; template<Size L2, Size C2> ; constexpr void operator= (const Mat< L2, C2, real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; template<Size L2, Size C2> ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, real > &m) const noexcept;  ; template<Size C2> ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, real &m) const noexcept;  ; template<Size L2, Size C2> ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, real > &m) noexcept;  ; template<Size L2> ; constexpr void setsub (Size L0, Size C0, const Vec< L2, real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr real & operator() (Size i, Size j) noexcept;  Write access to element (i,j). More...;  ; constexpr const real & operator() (Size i, Size j) const noexcept;  Read-only access to element (i,j). More...;  ; constexpr const Line * lptr () const noexcept;  Cast into a standard C array of lines (read-only). More...;  ; constexpr Line * lptr () noexcept;  Cast into a standard C array of lines. More...;  ; constexpr const real * ptr () const noexcept;  Cast into a standar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html
Usability,clear,clear,"d ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ; constexpr Size getNbCols () const;  number of columns More...;  ; constexpr void operator= (const real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; template<typename real2 > ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; template<Size L2, Size C2> ; constexpr void operator= (const Mat< L2, C2, real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; template<Size L2, Size C2> ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, real > &m) const noexcept;  ; template<Size C2> ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, real &m) const noexcept;  ; template<Size L2, Size C2> ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, real > &m) noexcept;  ; template<Size L2> ; constexpr void setsub (Size L0, Size C0, const Vec< L2, real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr real & operator() (Size i, Size j) noexcept;  Write acce",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::MatSym< D, real > Member List . This is the complete list of members for sofa::type::MatSym< D, real >, including all inherited members. ArrayType typedefsofa::type::Vec< N, ValueType >; assign(const ValueType &value) noexceptsofa::type::Vec< N, ValueType >inline; back()sofa::type::Vec< N, ValueType >inline; back() constsofa::type::Vec< N, ValueType >inline; begin() noexceptsofa::type::Vec< N, ValueType >inline; begin() const noexceptsofa::type::Vec< N, ValueType >inline; clear()sofa::type::MatSym< D, real >inline; const_iterator typedefsofa::type::Vec< N, ValueType >; const_reference typedefsofa::type::Vec< N, ValueType >; Coord typedefsofa::type::MatSym< D, real >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, ValueType >inline; data() const noexceptsofa::type::Vec< N, ValueType >inline; difference_type typedefsofa::type::Vec< N, ValueType >; divscalar(const ValueType f) const noexceptsofa::type::Vec< N, ValueType >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, ValueType >inline; elemssofa::type::Vec< N, ValueType >; end() noexceptsofa::type::Vec< N, ValueType >inline; end() const noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; fill(real r)sofa::type::MatSym< D, real >inline; VecNoInit< D *(D+1)/2, SReal >::fill(ValueType r) noexceptsofa::type::Vec< N, ValueType >inline; front()sofa::type::Vec< N, ValueType >inline; front() constsofa::type::Vec< N, ValueType >inline; getsub(const Size i, Vec< N2, ValueType > &m) const noexceptsofa::type::Vec< N, ValueType >inline; getsub(const Size i, ValueType &m) const noexceptsofa::type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html
Usability,clear,clear," ArrayType typedefsofa::type::Vec< N, ValueType >; assign(const ValueType &value) noexceptsofa::type::Vec< N, ValueType >inline; back()sofa::type::Vec< N, ValueType >inline; back() constsofa::type::Vec< N, ValueType >inline; begin() noexceptsofa::type::Vec< N, ValueType >inline; begin() const noexceptsofa::type::Vec< N, ValueType >inline; clear()sofa::type::MatSym< D, real >inline; const_iterator typedefsofa::type::Vec< N, ValueType >; const_reference typedefsofa::type::Vec< N, ValueType >; Coord typedefsofa::type::MatSym< D, real >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, ValueType >inline; data() const noexceptsofa::type::Vec< N, ValueType >inline; difference_type typedefsofa::type::Vec< N, ValueType >; divscalar(const ValueType f) const noexceptsofa::type::Vec< N, ValueType >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, ValueType >inline; elemssofa::type::Vec< N, ValueType >; end() noexceptsofa::type::Vec< N, ValueType >inline; end() const noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; fill(real r)sofa::type::MatSym< D, real >inline; VecNoInit< D *(D+1)/2, SReal >::fill(ValueType r) noexceptsofa::type::Vec< N, ValueType >inline; front()sofa::type::Vec< N, ValueType >inline; front() constsofa::type::Vec< N, ValueType >inline; getsub(const Size i, Vec< N2, ValueType > &m) const noexceptsofa::type::Vec< N, ValueType >inline; getsub(const Size i, ValueType &m) const noexceptsofa::type",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::type::MatSym< D, real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::type::MatSym< D, real > Class Template Reference . #include <MatSym.h>. Inheritance diagram for sofa::type::MatSym< D, real >:. [legend]; Detailed Description; template<sofa::Size D, class real = SReal>; class sofa::type::MatSym< D, real >; Dense symmetric matrix of size DxD storing only D*(D+1)/2 values Template Parameters. DSize of the matrix ; realType of scalar . Static Public Attributes; static constexpr auto NumberStoredValues = D * (D + 1) / 2;  ;  Static Public Attributes inherited from sofa::type::Vec< N, ValueType >; static constexpr sofa::Size static_size = N;  ; static constexpr Size total_size = N;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions = N;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  . Public Member Functions; constexpr MatSym () noexcept;  ; constexpr MatSym (NoInit) noexcept;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> ; constexpr MatSym (const real &v1, const real &v2, const real &v3, const real &v4, const real &v5, const real &v6);  Constructor from 6 elements. More...;  ; constexpr MatSym (const sofa::Size sizeM, const real &v);  Constructor from an element. More...;  ; template<typename real2 > ;  MatSym (const MatSym< D, real2 > &m);  Constructor from another matrix. More...;  ; template<typename real2 > ; void operator= (const MatSym< D, real2 > &m);  Assignment from another matrix. More...;  ; void clear ();  Sets each element to 0. More...;  ; void fill (real r);  Sets each element to r. More...;  ; real & operator() (const int i, const int j);  Write acce",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html
Security,access,access,"static_size and size() method) More...;  ; static constexpr Size spatial_dimensions = N;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  . Public Member Functions; constexpr MatSym () noexcept;  ; constexpr MatSym (NoInit) noexcept;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> ; constexpr MatSym (const real &v1, const real &v2, const real &v3, const real &v4, const real &v5, const real &v6);  Constructor from 6 elements. More...;  ; constexpr MatSym (const sofa::Size sizeM, const real &v);  Constructor from an element. More...;  ; template<typename real2 > ;  MatSym (const MatSym< D, real2 > &m);  Constructor from another matrix. More...;  ; template<typename real2 > ; void operator= (const MatSym< D, real2 > &m);  Assignment from another matrix. More...;  ; void clear ();  Sets each element to 0. More...;  ; void fill (real r);  Sets each element to r. More...;  ; real & operator() (const int i, const int j);  Write access to element (i,j). More...;  ; const real & operator() (const int i, const int j) const;  Read-only access to element (i,j). More...;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> ; Vec< NumberStoredValues, real > getVoigt () const;  convert to Voigt notation (supported only for D == 2 and D == 3) More...;  ; constexpr void identity ();  Set matrix to identity. More...;  ; Mat< D, D, real > SymSymMultiply (const MatSym< D, real > &m) const;  Matrix multiplication operator: product of two symmetric matrices. More...;  ; Mat< D, D, real > operator* (const MatSym< D, real > &m) const;  ; Mat< D, D, real > SymMatMultiply (const Mat< D, D, real > &m) const;  ; Mat< D, D, real > operator* (const Mat< D, D, real > &m) const;  ; Mat< D, D, real > MatSymMultiply (const Mat< D, D, real > &m) const;  ; MatSym< D, real > operator+ (const MatSym< D, real > &m) const;  Matrix addition operator with a symmetric matrix. More...;  ; Mat< D, D, re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html
Usability,clear,clear,"static constexpr Size total_size = N;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions = N;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  . Public Member Functions; constexpr MatSym () noexcept;  ; constexpr MatSym (NoInit) noexcept;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> ; constexpr MatSym (const real &v1, const real &v2, const real &v3, const real &v4, const real &v5, const real &v6);  Constructor from 6 elements. More...;  ; constexpr MatSym (const sofa::Size sizeM, const real &v);  Constructor from an element. More...;  ; template<typename real2 > ;  MatSym (const MatSym< D, real2 > &m);  Constructor from another matrix. More...;  ; template<typename real2 > ; void operator= (const MatSym< D, real2 > &m);  Assignment from another matrix. More...;  ; void clear ();  Sets each element to 0. More...;  ; void fill (real r);  Sets each element to r. More...;  ; real & operator() (const int i, const int j);  Write access to element (i,j). More...;  ; const real & operator() (const int i, const int j) const;  Read-only access to element (i,j). More...;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> ; Vec< NumberStoredValues, real > getVoigt () const;  convert to Voigt notation (supported only for D == 2 and D == 3) More...;  ; constexpr void identity ();  Set matrix to identity. More...;  ; Mat< D, D, real > SymSymMultiply (const MatSym< D, real > &m) const;  Matrix multiplication operator: product of two symmetric matrices. More...;  ; Mat< D, D, real > operator* (const MatSym< D, real > &m) const;  ; Mat< D, D, real > SymMatMultiply (const Mat< D, D, real > &m) const;  ; Mat< D, D, real > operator* (const Mat< D, D, real > &m) const;  ; Mat< D, D, real > MatSymMultiply (const Mat< D, D, real > &m) const;  ; MatSym< D, r",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::PrimitiveGroup Member List . This is the complete list of members for sofa::type::PrimitiveGroup, including all inherited members. groupNamesofa::type::PrimitiveGroup; materialIdsofa::type::PrimitiveGroup; materialNamesofa::type::PrimitiveGroup; nbpsofa::type::PrimitiveGroup; operator<(const PrimitiveGroup &p) constsofa::type::PrimitiveGroup; operator<<(std::ostream &out, const PrimitiveGroup &g)sofa::type::PrimitiveGroupfriend; operator>>(std::istream &in, PrimitiveGroup &g)sofa::type::PrimitiveGroupfriend; p0sofa::type::PrimitiveGroup; PrimitiveGroup()sofa::type::PrimitiveGroup; PrimitiveGroup(int p0, int nbp, std::string materialName, std::string groupName, int materialId)sofa::type::PrimitiveGroup. Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_primitive_group-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_primitive_group-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Quat< Real > Member List . This is the complete list of members for sofa::type::Quat< Real >, including all inherited members. angularDisplacement(const Quat &a, const Quat &b) -> Vec3sofa::type::Quat< Real >static; axisToQuat(Vec3 a, Real phi) -> Quatsofa::type::Quat< Real >; buildRotationMatrix(Real m[4][4]) constsofa::type::Quat< Real >inline; clear()sofa::type::Quat< Real >inline; createFromRotationVector(const Vec3 &a) -> Quatsofa::type::Quat< Real >static; createFromRotationVector(Real a0, Real a1, Real a2) -> Quatsofa::type::Quat< Real >static; createQuaterFromEuler(const Vec3 &v, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; createQuaterFromFrame(const Vec3 &lox, const Vec3 &loy, const Vec3 &loz) -> Quatsofa::type::Quat< Real >static; EulerOrder enum namesofa::type::Quat< Real >; fromEuler(Real alpha, Real beta, Real gamma, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; fromFrame(const Vec3 &x, const Vec3 &y, const Vec3 &z)sofa::type::Quat< Real >; fromMatrix(const Mat3x3 &m)sofa::type::Quat< Real >; identity()sofa::type::Quat< Real >inlinestatic; inverse() const -> Quatsofa::type::Quat< Real >; inverseRotate(const Vec3 &v) const -> Vec3sofa::type::Quat< Real >inline; isNormalized()sofa::type::Quat< Real >; normalize()sofa::type::Quat< Real >; operator!=(const Quat &q) constsofa::type::Quat< Real >; operator*(const Quat &q1) const -> Quatsofa::type::Quat< Real >inline; operator*(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator*=(const Real &r)sofa::type::Quat< Real >inline; operator*=(const Quat &q1)sofa::type::Quat< Real >inline; operator+(const Quat &q1) const -> Quatsofa::type::Quat< Real >; operator+=(const Quat &q2)sofa::type::Quat< Real >; operator/(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator/=(const Real &r)sofa::type::Quat< Real >inline; operato",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html
Usability,clear,clear," angularDisplacement(const Quat &a, const Quat &b) -> Vec3sofa::type::Quat< Real >static; axisToQuat(Vec3 a, Real phi) -> Quatsofa::type::Quat< Real >; buildRotationMatrix(Real m[4][4]) constsofa::type::Quat< Real >inline; clear()sofa::type::Quat< Real >inline; createFromRotationVector(const Vec3 &a) -> Quatsofa::type::Quat< Real >static; createFromRotationVector(Real a0, Real a1, Real a2) -> Quatsofa::type::Quat< Real >static; createQuaterFromEuler(const Vec3 &v, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; createQuaterFromFrame(const Vec3 &lox, const Vec3 &loy, const Vec3 &loz) -> Quatsofa::type::Quat< Real >static; EulerOrder enum namesofa::type::Quat< Real >; fromEuler(Real alpha, Real beta, Real gamma, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; fromFrame(const Vec3 &x, const Vec3 &y, const Vec3 &z)sofa::type::Quat< Real >; fromMatrix(const Mat3x3 &m)sofa::type::Quat< Real >; identity()sofa::type::Quat< Real >inlinestatic; inverse() const -> Quatsofa::type::Quat< Real >; inverseRotate(const Vec3 &v) const -> Vec3sofa::type::Quat< Real >inline; isNormalized()sofa::type::Quat< Real >; normalize()sofa::type::Quat< Real >; operator!=(const Quat &q) constsofa::type::Quat< Real >; operator*(const Quat &q1) const -> Quatsofa::type::Quat< Real >inline; operator*(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator*=(const Real &r)sofa::type::Quat< Real >inline; operator*=(const Quat &q1)sofa::type::Quat< Real >inline; operator+(const Quat &q1) const -> Quatsofa::type::Quat< Real >; operator+=(const Quat &q2)sofa::type::Quat< Real >; operator/(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator/=(const Real &r)sofa::type::Quat< Real >inline; operato",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html
Integrability,rout,routine,":Quat< Real >::operator* ; (; const Quat< Real > & ; q1); const -> Quat. inlineconstexpr . ◆ operator*() [2/2]. template<class Real > . constexpr auto sofa::type::Quat< Real >::operator* ; (; const Real & ; r); const -> Quat. inlineconstexpr . ◆ operator*=() [1/2]. template<class Real > . constexpr void sofa::type::Quat< Real >::operator*= ; (; const Quat< Real > & ; q1). inlineconstexpr . ◆ operator*=() [2/2]. template<class Real > . void sofa::type::Quat< Real >::operator*= ; (; const Real & ; r). inline . ◆ operator+(). template<class Real > . auto sofa::type::Quat< Real >::operator+ ; (; const Quat< Real > & ; q1); const -> Quat. Given two quaternions, add them together to get a third quaternion. Adding quaternions to get a compound rotation is analogous to adding translations to get a compound translation.; Given two rotations, e1 and e2, expressed as quaternion rotations, figure out the equivalent single rotation and stuff it into dest. NOTE: This routine is written so that q1 or q2 may be the same as dest (or each other). . ◆ operator+=(). template<class Real > . void sofa::type::Quat< Real >::operator+= ; (; const Quat< Real > & ; q2). ◆ operator/(). template<class Real > . auto sofa::type::Quat< Real >::operator/ ; (; const Real & ; r); const -> Quat. inline . ◆ operator/=(). template<class Real > . void sofa::type::Quat< Real >::operator/= ; (; const Real & ; r). inline . ◆ operator==(). template<class Real > . bool sofa::type::Quat< Real >::operator== ; (; const Quat< Real > & ; q); const. ◆ operator[]() [1/2]. template<class Real > . constexpr Real& sofa::type::Quat< Real >::operator[] ; (; Size ; index). inlineconstexpr . ◆ operator[]() [2/2]. template<class Real > . constexpr const Real& sofa::type::Quat< Real >::operator[] ; (; Size ; index); const. inlineconstexpr . ◆ ptr() [1/2]. template<class Real > . Real* sofa::type::Quat< Real >::ptr ; (; ). inline . Cast into a standard C array of elements. . ◆ ptr() [2/2]. template<class Real > . const Real* ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html
Usability,clear,clear,"texpr Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for quaternions) More...;  . Public Member Functions; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const Vec3 &v) const -> Vec3;  Apply the rotation to a given vector. More...;  ; constexpr auto inverseRotate (const Vec3 &v) const -> Vec3;  Apply the inverse rotation to a given vector. More...;  ; auto operator+ (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Real &r) const -> Quat;  ; auto operator/ (const Real &r) const -> Quat;  ; void operator*= (const Real &r);  ; void operator/= (const Real &r);  ; constexpr auto quatVectMult (const Vec3 &vect) const -> Quat;  Given two Quats, multiply them together to get a third quaternion. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::QuatNoInit< Real > Member List . This is the complete list of members for sofa::type::QuatNoInit< Real >, including all inherited members. angularDisplacement(const Quat &a, const Quat &b) -> Vec3sofa::type::Quat< Real >static; axisToQuat(Vec3 a, Real phi) -> Quatsofa::type::Quat< Real >; buildRotationMatrix(Real m[4][4]) constsofa::type::Quat< Real >inline; clear()sofa::type::Quat< Real >inline; createFromRotationVector(const Vec3 &a) -> Quatsofa::type::Quat< Real >static; createFromRotationVector(Real a0, Real a1, Real a2) -> Quatsofa::type::Quat< Real >static; createQuaterFromEuler(const Vec3 &v, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; createQuaterFromFrame(const Vec3 &lox, const Vec3 &loy, const Vec3 &loz) -> Quatsofa::type::Quat< Real >static; EulerOrder enum namesofa::type::Quat< Real >; fromEuler(Real alpha, Real beta, Real gamma, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; fromFrame(const Vec3 &x, const Vec3 &y, const Vec3 &z)sofa::type::Quat< Real >; fromMatrix(const Mat3x3 &m)sofa::type::Quat< Real >; identity()sofa::type::Quat< Real >inlinestatic; inverse() const -> Quatsofa::type::Quat< Real >; inverseRotate(const Vec3 &v) const -> Vec3sofa::type::Quat< Real >inline; isNormalized()sofa::type::Quat< Real >; normalize()sofa::type::Quat< Real >; operator!=(const Quat &q) constsofa::type::Quat< Real >; operator*(const Quat &q1) const -> Quatsofa::type::Quat< Real >inline; operator*(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator*=(const Real &r)sofa::type::Quat< Real >inline; operator*=(const Quat &q1)sofa::type::Quat< Real >inline; operator+(const Quat &q1) const -> Quatsofa::type::Quat< Real >; operator+=(const Quat &q2)sofa::type::Quat< Real >; operator/(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator/=(const Real &r)sofa::type::Quat< Real >inl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html
Usability,clear,clear," angularDisplacement(const Quat &a, const Quat &b) -> Vec3sofa::type::Quat< Real >static; axisToQuat(Vec3 a, Real phi) -> Quatsofa::type::Quat< Real >; buildRotationMatrix(Real m[4][4]) constsofa::type::Quat< Real >inline; clear()sofa::type::Quat< Real >inline; createFromRotationVector(const Vec3 &a) -> Quatsofa::type::Quat< Real >static; createFromRotationVector(Real a0, Real a1, Real a2) -> Quatsofa::type::Quat< Real >static; createQuaterFromEuler(const Vec3 &v, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; createQuaterFromFrame(const Vec3 &lox, const Vec3 &loy, const Vec3 &loz) -> Quatsofa::type::Quat< Real >static; EulerOrder enum namesofa::type::Quat< Real >; fromEuler(Real alpha, Real beta, Real gamma, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; fromFrame(const Vec3 &x, const Vec3 &y, const Vec3 &z)sofa::type::Quat< Real >; fromMatrix(const Mat3x3 &m)sofa::type::Quat< Real >; identity()sofa::type::Quat< Real >inlinestatic; inverse() const -> Quatsofa::type::Quat< Real >; inverseRotate(const Vec3 &v) const -> Vec3sofa::type::Quat< Real >inline; isNormalized()sofa::type::Quat< Real >; normalize()sofa::type::Quat< Real >; operator!=(const Quat &q) constsofa::type::Quat< Real >; operator*(const Quat &q1) const -> Quatsofa::type::Quat< Real >inline; operator*(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator*=(const Real &r)sofa::type::Quat< Real >inline; operator*=(const Quat &q1)sofa::type::Quat< Real >inline; operator+(const Quat &q1) const -> Quatsofa::type::Quat< Real >; operator+=(const Quat &q2)sofa::type::Quat< Real >; operator/(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator/=(const Real &r)sofa::type::Quat< Real >inl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::type::QuatNoInit< Real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::type::QuatNoInit< Real > Class Template Reference . #include <Quat.h>; Same as Quat except the values are not initialized by default. ; More... Inheritance diagram for sofa::type::QuatNoInit< Real >:. [legend]; Detailed Description; template<class Real>; class sofa::type::QuatNoInit< Real >; Same as Quat except the values are not initialized by default. . Public Member Functions; constexpr QuatNoInit () noexcept;  ;  Public Member Functions inherited from sofa::type::Quat< Real >; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const Vec3 &v) const -> Vec3;  Apply the rotation to a given vector. More...;  ; constexpr auto inverseRotate (const Vec3 &v) co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html
Usability,clear,clear,"s Quat except the values are not initialized by default. . Public Member Functions; constexpr QuatNoInit () noexcept;  ;  Public Member Functions inherited from sofa::type::Quat< Real >; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const Vec3 &v) const -> Vec3;  Apply the rotation to a given vector. More...;  ; constexpr auto inverseRotate (const Vec3 &v) const -> Vec3;  Apply the inverse rotation to a given vector. More...;  ; auto operator+ (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Real &r) const -> Quat;  ; auto operator/ (const Real &r) const -> Quat;  ; void operator*= (const Real &r);  ; void operator/= (const Real &r);  ; constexpr auto quatVectMult (const Vec3 &vect) const -> Quat;  Given two Quats, multiply them together to get a third quaternion. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Ray Member List . This is the complete list of members for sofa::type::Ray, including all inherited members. direction() constsofa::type::Rayinline; getPoint(double z) constsofa::type::Rayinline; origin() constsofa::type::Rayinline; Ray(const Vec3 &origin=Vec3(0, 0, 0), const Vec3 &direction=Vec3(0, 0, 0))sofa::type::Rayinline; setDirection(const Vec3 &direction)sofa::type::Rayinline; setOrigin(const Vec3 &origin)sofa::type::Rayinline. Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_ray-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_ray-members.html
Energy Efficiency,green,green,"ay()sofa::type::RGBAColorstatic; data() const noexceptsofa::type::RGBAColorinline; end() noexceptsofa::type::RGBAColorinline; end() const noexceptsofa::type::RGBAColorinline; fromFloat(float r, float g, float b, float a)sofa::type::RGBAColorstatic; fromHSVA(float h, float s, float v, float a)sofa::type::RGBAColorstatic; fromStdArray(const std::array< float, 4 > &color)sofa::type::RGBAColorstatic; fromStdArray(const std::array< double, 4 > &color)sofa::type::RGBAColorstatic; fromString(const std::string &str)sofa::type::RGBAColorstatic; fromVec4(const type::fixed_array< float, 4 > &color)=deletesofa::type::RGBAColorstatic; fromVec4(const type::fixed_array< double, 4 > &color)=deletesofa::type::RGBAColorstatic; fromVec4(const Vec4f &color)=deletesofa::type::RGBAColorstatic; fromVec4(const Vec4d &color)=deletesofa::type::RGBAColorstatic; g()sofa::type::RGBAColorinline; g() constsofa::type::RGBAColorinline; g(const float g)sofa::type::RGBAColorinline; gray()sofa::type::RGBAColorstatic; green()sofa::type::RGBAColorstatic; lighten(const RGBAColor &in, const SReal factor)sofa::type::RGBAColorstatic; lightgray()sofa::type::RGBAColorstatic; magenta()sofa::type::RGBAColorstatic; NumberOfComponentssofa::type::RGBAColorstatic; operator!=(const RGBAColor &b) constsofa::type::RGBAColorinline; operator*(float f) constsofa::type::RGBAColor; operator<(const RGBAColor &b) constsofa::type::RGBAColorinline; operator<<(std::ostream &i, const RGBAColor &t)sofa::type::RGBAColorfriend; operator==(const RGBAColor &b) constsofa::type::RGBAColorinline; operator>>(std::istream &i, RGBAColor &t)sofa::type::RGBAColorfriend; operator[](std::size_t i)sofa::type::RGBAColorinline; operator[](std::size_t i) constsofa::type::RGBAColorinline; r()sofa::type::RGBAColorinline; r() constsofa::type::RGBAColorinline; r(const float r)sofa::type::RGBAColorinline; read(const std::string &str, RGBAColor &color)sofa::type::RGBAColorstatic; red()sofa::type::RGBAColorstatic; RGBAColor()sofa::type::RGBAColorinline; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::RGBAColor Member List . This is the complete list of members for sofa::type::RGBAColor, including all inherited members. a()sofa::type::RGBAColorinline; a() constsofa::type::RGBAColorinline; a(const float a)sofa::type::RGBAColorinline; array() const noexceptsofa::type::RGBAColorinline; array() noexceptsofa::type::RGBAColorinline; b()sofa::type::RGBAColorinline; b() constsofa::type::RGBAColorinline; b(const float b)sofa::type::RGBAColorinline; begin() noexceptsofa::type::RGBAColorinline; begin() const noexceptsofa::type::RGBAColorinline; black()sofa::type::RGBAColorstatic; blue()sofa::type::RGBAColorstatic; clamp(const RGBAColor &color, float min, float max)sofa::type::RGBAColorinlinestatic; ComponentArray typedefsofa::type::RGBAColor; cyan()sofa::type::RGBAColorstatic; darkgray()sofa::type::RGBAColorstatic; data() const noexceptsofa::type::RGBAColorinline; end() noexceptsofa::type::RGBAColorinline; end() const noexceptsofa::type::RGBAColorinline; fromFloat(float r, float g, float b, float a)sofa::type::RGBAColorstatic; fromHSVA(float h, float s, float v, float a)sofa::type::RGBAColorstatic; fromStdArray(const std::array< float, 4 > &color)sofa::type::RGBAColorstatic; fromStdArray(const std::array< double, 4 > &color)sofa::type::RGBAColorstatic; fromString(const std::string &str)sofa::type::RGBAColorstatic; fromVec4(const type::fixed_array< float, 4 > &color)=deletesofa::type::RGBAColorstatic; fromVec4(const type::fixed_array< double, 4 > &color)=deletesofa::type::RGBAColorstatic; fromVec4(const Vec4f &color)=deletesofa::type::RGBAColorstatic; fromVec4(const Vec4d &color)=deletesofa::type::RGBAColorstatic; g()sofa::type::RGBAColorinline; g() constsofa::type::RGBAColorinline; g(const float g)sofa::type::RGBAColorinline; gray()sofa::type::RGBAColorstatic; green()sofa::type::RGBAColorstatic; lighten(const RGBAColor &in, const SReal factor)sofa::type::RGBAColors",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color-members.html
Energy Efficiency,green,green,"texpr ComponentArray & array () noexcept;  direct access to array More...;  ; constexpr ComponentArray::iterator begin () noexcept;  ; constexpr ComponentArray::const_iterator begin () const noexcept;  ; constexpr ComponentArray::iterator end () noexcept;  ; constexpr ComponentArray::const_iterator end () const noexcept;  . Static Public Member Functions; static RGBAColor fromVec4 (const type::fixed_array< float, 4 > &color)=delete;  ; static RGBAColor fromVec4 (const type::fixed_array< double, 4 > &color)=delete;  ; static RGBAColor fromVec4 (const Vec4f &color)=delete;  ; static RGBAColor fromVec4 (const Vec4d &color)=delete;  ; static RGBAColor fromString (const std::string &str);  ; static RGBAColor fromFloat (float r, float g, float b, float a);  ; static RGBAColor fromStdArray (const std::array< float, 4 > &color);  ; static RGBAColor fromStdArray (const std::array< double, 4 > &color);  ; static RGBAColor fromHSVA (float h, float s, float v, float a);  ; static bool read (const std::string &str, RGBAColor &color);  ; constexpr static const RGBAColor & white ();  ; constexpr static const RGBAColor & black ();  ; constexpr static const RGBAColor & red ();  ; constexpr static const RGBAColor & green ();  ; constexpr static const RGBAColor & blue ();  ; constexpr static const RGBAColor & cyan ();  ; constexpr static const RGBAColor & magenta ();  ; constexpr static const RGBAColor & yellow ();  ; constexpr static const RGBAColor & gray ();  ; constexpr static const RGBAColor & darkgray ();  ; constexpr static const RGBAColor & lightgray ();  ; static RGBAColor lighten (const RGBAColor &in, const SReal factor);  enlight a color by a given factor. More...;  ; static constexpr RGBAColor clamp (const RGBAColor &color, float min, float max);  ; static constexpr sofa::Size size ();  . Friends; SOFA_TYPE_API std::ostream & operator<< (std::ostream &i, const RGBAColor &t);  Write to an output stream. More...;  ; SOFA_TYPE_API std::istream & operator>> (std::istream &i, RG",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color.html
Security,access,access,"ic Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::type::RGBAColor Class Reference . #include <RGBAColor.h>; encode a 4 RGBA component color ; More...; Detailed Description; encode a 4 RGBA component color . Static Public Attributes; static constexpr sofa::Size NumberOfComponents = 4;  ; static constexpr sofa::Size static_size = NumberOfComponents;  . Public Member Functions; constexpr RGBAColor ();  ; constexpr RGBAColor (const std::array< float, NumberOfComponents > &c);  ; constexpr RGBAColor (float r, float g, float b, float a);  ;  RGBAColor (const type::fixed_array< float, NumberOfComponents > &c)=delete;  ;  RGBAColor (const type::Vec4f &c)=delete;  ; constexpr float & r ();  ; constexpr float & g ();  ; constexpr float & b ();  ; constexpr float & a ();  ; constexpr const float & r () const;  ; constexpr const float & g () const;  ; constexpr const float & b () const;  ; constexpr const float & a () const;  ; constexpr void r (const float r);  ; constexpr void g (const float g);  ; constexpr void b (const float b);  ; constexpr void a (const float a);  ; constexpr float & operator[] (std::size_t i);  ; constexpr const float & operator[] (std::size_t i) const;  ; void set (float r, float g, float b, float a);  ; bool operator== (const RGBAColor &b) const;  ; bool operator!= (const RGBAColor &b) const;  ; bool operator< (const RGBAColor &b) const;  ; RGBAColor operator* (float f) const;  ; constexpr const float * data () const noexcept;  ; constexpr const ComponentArray & array () const noexcept;  direct access to array More...;  ; constexpr ComponentArray & array () noexcept;  direct access to array More...;  ; constexpr ComponentArray::iterator begin () noexcept;  ; constexpr ComponentArray::const_iterator begin () const noexcept;  ; constexpr ComponentArray::iterator end () noexcept;  ; constexpr ComponentArray::const_iterator end () const noexcept;  . Static Public Member Functions; static RGBAColor fromVec4 (co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_r_g_b_a_color.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::SpatialVector< TReal > Member List . This is the complete list of members for sofa::type::SpatialVector< TReal >, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; operator<<(std::ostream &out, const SpatialVector &t)sofa::type::SpatialVector< TReal >friend; operator>>(std::istream &in, SpatialVector &t)sofa::type::SpatialVector< TReal >friend; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::typ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html
Usability,clear,clear,"ll inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; operator<<(std::ostream &out, const SpatialVector &t)sofa::type::SpatialVector< TReal >friend; operator>>(std::istream &in, SpatialVector &t)sofa::type::SpatialVector< TReal >friend; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Vec typedefsofa::type::SpatialVector< TReal >. Generated on Mon Nov",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html
Usability,clear,clear,"sofa::type::SpatialVector< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::type::SpatialVector< TReal > Class Template Reference . #include <SpatialVector.h>. Inheritance diagram for sofa::type::SpatialVector< TReal >:. [legend]; Detailed Description; template<class TReal>; class sofa::type::SpatialVector< TReal >; A spatial vector. When representing a velocity, lineVec is the angular velocity and freeVec is the linear velocity. When representing a spatial force, lineVec is the force and freeVec is the torque. . Public Attributes; Vec lineVec { type::NOINIT };  ; Vec freeVec { type::NOINIT };  . Public Member Functions; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & operator>> (std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::SVector< T > Member List . This is the complete list of members for sofa::type::SVector< T >, including all inherited members. Alloc typedefsofa::type::SVector< T >; const_reference typedefsofa::type::vector< T, type::CPUMemoryManager< T > >; fastResize(Size n)sofa::type::vector< T, type::CPUMemoryManager< T > >inline; fill(const T &value)sofa::type::vector< T, type::CPUMemoryManager< T > >inline; Inherit typedefsofa::type::SVector< T >; memory_manager typedefsofa::type::vector< T, type::CPUMemoryManager< T > >; operator<<(std::ostream &os, const SVector< T > &vec)sofa::type::SVector< T >friend; operator=(const Inherit &x)sofa::type::SVector< T >inline; operator=(Inherit &&v)sofa::type::SVector< T >inline; vector< T, type::CPUMemoryManager< T > >::operator=(const std::vector< T, Alloc > &x)sofa::type::vector< T, type::CPUMemoryManager< T > >inline; vector< T, type::CPUMemoryManager< T > >::operator=(std::vector< T, Alloc > &&v)sofa::type::vector< T, type::CPUMemoryManager< T > >inline; operator>>(std::istream &in, SVector< T > &vec)sofa::type::SVector< T >friend; operator[](Size n)sofa::type::vector< T, type::CPUMemoryManager< T > >inline; operator[](Size n) constsofa::type::vector< T, type::CPUMemoryManager< T > >inline; read(std::istream &in)sofa::type::SVector< T >inline; read(std::istream &in)sofa::type::SVector< T >; read(std::istream &in)sofa::type::SVector< T >; rebind_to typedefsofa::type::vector< T, type::CPUMemoryManager< T > >; reference typedefsofa::type::vector< T, type::CPUMemoryManager< T > >; Size typedefsofa::type::SVector< T >; SVector()sofa::type::SVector< T >inline; SVector(Size n, const T &value)sofa::type::SVector< T >inline; SVector(int n, const T &value)sofa::type::SVector< T >inline; SVector(long n, const T &value)sofa::type::SVector< T >inline; SVector(Size n)sofa::type::SVector< T >inlineexplicit; SVector(const Inherit &x)sofa::ty",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_s_vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_s_vector-members.html
Modifiability,inherit,inherited,"class sofa::type::SVector< T >; Same as type::vector, + delimiters on serialization. . Public Member Functions;  SVector ();  reference to a value (read-write) More...;  ;  SVector (Size n, const T &value);  Constructor. More...;  ;  SVector (int n, const T &value);  Constructor. More...;  ;  SVector (long n, const T &value);  Constructor. More...;  ;  SVector (Size n);  Constructor. More...;  ;  SVector (const Inherit &x);  Constructor. More...;  ;  SVector (Inherit &&v);  Move constructor. More...;  ; SVector< T > & operator= (const Inherit &x);  Copy operator. More...;  ; SVector< T > & operator= (Inherit &&v);  Move assignment operator. More...;  ;  SVector (typename SVector< T >::const_iterator first, typename SVector< T >::const_iterator last);  Constructor. More...;  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; std::ostream & write (std::ostream &os) const;  ;  Public Member Functions inherited from sofa::type::vector< T, type::CPUMemoryManager< T > >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ;  vector (typename vector< T >::const_iterator first, typename vector< T >::const_iterator last);  Constructor. More...;  ; vector & operator= (const std::vector< T, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< T, Alloc > &&v);  Move assignment operator. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html
Security,access,access,"E_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; std::ostream & write (std::ostream &os) const;  ;  Public Member Functions inherited from sofa::type::vector< T, type::CPUMemoryManager< T > >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ;  vector (typename vector< T >::const_iterator first, typename vector< T >::const_iterator last);  Constructor. More...;  ; vector & operator= (const std::vector< T, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< T, Alloc > &&v);  Move assignment operator. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. More...;  ; std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  Specialization for writing vectors of unsigned char. More...;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  Specialization for reading vectors of int and unsigned int using ""A-B"" notation for all integers between A and B. More...;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Transform< TReal > Member List . This is the complete list of members for sofa::type::Transform< TReal >, including all inherited members. backProjectPoint(const Vec &pointInParent) constsofa::type::Transform< TReal >; backProjectVector(const Vec &vectorInParent) constsofa::type::Transform< TReal >; clear()sofa::type::Transform< TReal >; CreateSpatialVector()sofa::type::Transform< TReal >; DTrans()sofa::type::Transform< TReal >; getAdjointMatrix() constsofa::type::Transform< TReal >; getOrientation() constsofa::type::Transform< TReal >; getOrigin() constsofa::type::Transform< TReal >; getOriginOfParentInChild() constsofa::type::Transform< TReal >; getRotationMatrix() constsofa::type::Transform< TReal >; identity()sofa::type::Transform< TReal >static; inversed() constsofa::type::Transform< TReal >; Mat3x3 typedefsofa::type::Transform< TReal >; Mat6x6 typedefsofa::type::Transform< TReal >; operator*(const Transform &f2) constsofa::type::Transform< TReal >; operator*(const SpatialVector< TReal > &sv) constsofa::type::Transform< TReal >; operator*(Real2 a) constsofa::type::Transform< TReal >inline; operator*=(const Transform &f2)sofa::type::Transform< TReal >; operator*=(Real2 a)sofa::type::Transform< TReal >inline; operator+=(const SpatialVector< TReal > &a)sofa::type::Transform< TReal >; operator+=(const Transform &a)sofa::type::Transform< TReal >; operator/(const SpatialVector< TReal > &sv) constsofa::type::Transform< TReal >; operator<<(std::ostream &out, const Transform &t)sofa::type::Transform< TReal >friend; operator>>(std::istream &in, Transform &t)sofa::type::Transform< TReal >friend; orientation_sofa::type::Transform< TReal >protected; origin_sofa::type::Transform< TReal >protected; printInternal(std::ostream &) constsofa::type::Transform< TReal >; projectPoint(const Vec &pointInChild) constsofa::type::Transform< TReal >; projectVector(const Vec &vect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html
Usability,clear,clear," backProjectPoint(const Vec &pointInParent) constsofa::type::Transform< TReal >; backProjectVector(const Vec &vectorInParent) constsofa::type::Transform< TReal >; clear()sofa::type::Transform< TReal >; CreateSpatialVector()sofa::type::Transform< TReal >; DTrans()sofa::type::Transform< TReal >; getAdjointMatrix() constsofa::type::Transform< TReal >; getOrientation() constsofa::type::Transform< TReal >; getOrigin() constsofa::type::Transform< TReal >; getOriginOfParentInChild() constsofa::type::Transform< TReal >; getRotationMatrix() constsofa::type::Transform< TReal >; identity()sofa::type::Transform< TReal >static; inversed() constsofa::type::Transform< TReal >; Mat3x3 typedefsofa::type::Transform< TReal >; Mat6x6 typedefsofa::type::Transform< TReal >; operator*(const Transform &f2) constsofa::type::Transform< TReal >; operator*(const SpatialVector< TReal > &sv) constsofa::type::Transform< TReal >; operator*(Real2 a) constsofa::type::Transform< TReal >inline; operator*=(const Transform &f2)sofa::type::Transform< TReal >; operator*=(Real2 a)sofa::type::Transform< TReal >inline; operator+=(const SpatialVector< TReal > &a)sofa::type::Transform< TReal >; operator+=(const Transform &a)sofa::type::Transform< TReal >; operator/(const SpatialVector< TReal > &sv) constsofa::type::Transform< TReal >; operator<<(std::ostream &out, const Transform &t)sofa::type::Transform< TReal >friend; operator>>(std::istream &in, Transform &t)sofa::type::Transform< TReal >friend; orientation_sofa::type::Transform< TReal >protected; origin_sofa::type::Transform< TReal >protected; printInternal(std::ostream &) constsofa::type::Transform< TReal >; projectPoint(const Vec &pointInChild) constsofa::type::Transform< TReal >; projectVector(const Vec &vect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html
Deployability,integrat,integration,";  ; Transform & operator*= (const Transform &f2);  Combine two transforms. If (*this) locates frame B (child) wrt frame A (parent) and if f2 locates frame C (child) wrt frame B (parent) then the result locates frame C wrt to Frame A. More...;  ; SpatialVector< TReal > CreateSpatialVector ();  ; SpatialVector< TReal > DTrans ();  ; SpatialVector< TReal > operator* (const SpatialVector< TReal > &sv) const;  ; SpatialVector< TReal > operator/ (const SpatialVector< TReal > &sv) const;  Project a spatial vector from parent to child (the inverse of operator *). This method computes (*this).inversed()*sv without inverting (*this). More...;  ; void writeOpenGlMatrix (double *m) const;  Write an OpenGL matrix encoding the transformation of the coordinate system of the child wrt the coordinate system of the parent. More...;  ; void printInternal (std::ostream &) const;  Print the internal values (i.e. using Featherstone's conventions, see class documentation) More...;  ; Time integration; Methods used in time integration . Transform & operator+= (const SpatialVector< TReal > &a);  ; Transform & operator+= (const Transform &a);  ; template<class Real2 > ; Transform & operator*= (Real2 a);  ; template<class Real2 > ; Transform operator* (Real2 a) const;  . Static Public Member Functions; static Transform identity ();  The identity transform (child = parent) More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Transform &t);  ; std::istream & operator>> (std::istream &in, Transform &t);  read from an input stream More...;  . Attribute details. ◆ orientation_. template<class TReal > . Rot sofa::type::Transform< TReal >::orientation_. protected . child wrt parent . ◆ origin_. template<class TReal > . Vec sofa::type::Transform< TReal >::origin_. protected . parent wrt child . Constructor details. ◆ Transform() [1/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform. The default constructor does not initialize the transform. . ◆ Transform() [2/4",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html
Integrability,integrat,integration,";  ; Transform & operator*= (const Transform &f2);  Combine two transforms. If (*this) locates frame B (child) wrt frame A (parent) and if f2 locates frame C (child) wrt frame B (parent) then the result locates frame C wrt to Frame A. More...;  ; SpatialVector< TReal > CreateSpatialVector ();  ; SpatialVector< TReal > DTrans ();  ; SpatialVector< TReal > operator* (const SpatialVector< TReal > &sv) const;  ; SpatialVector< TReal > operator/ (const SpatialVector< TReal > &sv) const;  Project a spatial vector from parent to child (the inverse of operator *). This method computes (*this).inversed()*sv without inverting (*this). More...;  ; void writeOpenGlMatrix (double *m) const;  Write an OpenGL matrix encoding the transformation of the coordinate system of the child wrt the coordinate system of the parent. More...;  ; void printInternal (std::ostream &) const;  Print the internal values (i.e. using Featherstone's conventions, see class documentation) More...;  ; Time integration; Methods used in time integration . Transform & operator+= (const SpatialVector< TReal > &a);  ; Transform & operator+= (const Transform &a);  ; template<class Real2 > ; Transform & operator*= (Real2 a);  ; template<class Real2 > ; Transform operator* (Real2 a) const;  . Static Public Member Functions; static Transform identity ();  The identity transform (child = parent) More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Transform &t);  ; std::istream & operator>> (std::istream &in, Transform &t);  read from an input stream More...;  . Attribute details. ◆ orientation_. template<class TReal > . Rot sofa::type::Transform< TReal >::orientation_. protected . child wrt parent . ◆ origin_. template<class TReal > . Vec sofa::type::Transform< TReal >::origin_. protected . parent wrt child . Constructor details. ◆ Transform() [1/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform. The default constructor does not initialize the transform. . ◆ Transform() [2/4",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html
Usability,clear,clear,"M in parent given the coordinates M_c of the same point in child are given by: M_p = orientation * ( M_c - origin ). This is due to Featherstone's conventions. Use method setTranslationRotation( const Vec& t, const Rot& q ) to model the Transform the standard way (i.e. translation given in the parent frame). . Protected Attributes; Rot orientation_;  child wrt parent More...;  ; Vec origin_;  parent wrt child More...;  . Public Member Functions;  Transform ();  The default constructor does not initialize the transform. More...;  ;  Transform (const Vec &origin, const Rot &orientation);  Origin of the child in parent coordinates, orientation of the child wrt to parent. More...;  ;  Transform (const Rot &q, const Vec &o);  WARNING: using Featherstone's conventions (see class documentation) More...;  ; void set (const Vec &t, const Rot &q);  Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) More...;  ; void clear ();  Reset this to identity. More...;  ;  Transform (const SpatialVector< TReal > &v);  Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) More...;  ; Transform inversed () const;  The inverse transform i.e. parent wrt child. More...;  ; const Vec & getOriginOfParentInChild () const;  Parent origin in child coordinates (the way it is actually stored internally) More...;  ; Vec getOrigin () const;  Origin of child in parent coordinates. More...;  ; void setOrigin (const Vec &);  Origin of child in parent coordinates. More...;  ; const Rot & getOrientation () const;  Orientation of the child coordinate axes wrt the parent coordinate axes. More...;  ; void setOrientation (const Rot &);  Orientation of the child coordinate axes wrt the parent coordinate axes. More...;  ; Mat3x3 getRotationMatrix () const;  Matrix which projects vectors from child coordinates to parent coordinates. The columns of the matrix are the axes of the c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::TBoundingBox< TReal > Member List . This is the complete list of members for sofa::type::TBoundingBox< TReal >, including all inherited members. bboxsofa::type::BoundingBoxprotected; bbox_t typedefsofa::type::BoundingBox; BoundingBox()sofa::type::BoundingBox; BoundingBox(const sofa::type::Vec3 &minBBox, const sofa::type::Vec3 &maxBBox)sofa::type::BoundingBox; BoundingBox(const bbox_t &bbox)sofa::type::BoundingBox; BoundingBox(SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax)sofa::type::BoundingBox; BoundingBox(const Vec6f &bbox)sofa::type::BoundingBox; BoundingBox(const Vec6d &bbox)sofa::type::BoundingBox; contains(const sofa::type::Vec3 &point) constsofa::type::BoundingBox; contains(const BoundingBox &other) constsofa::type::BoundingBox; getInclude(const sofa::type::Vec3 &point) constsofa::type::BoundingBox; getInclude(const BoundingBox &other) constsofa::type::BoundingBox; getInflate(SReal amount) constsofa::type::BoundingBox; getIntersection(const BoundingBox &other) constsofa::type::BoundingBox; include(const sofa::type::Vec3 &point)sofa::type::BoundingBox; include(const BoundingBox &other)sofa::type::BoundingBox; inflate(SReal amount)sofa::type::BoundingBox; intersect(const BoundingBox &other) constsofa::type::BoundingBox; intersection(const BoundingBox &other)sofa::type::BoundingBox; invalidate()sofa::type::BoundingBox; isFlat() constsofa::type::BoundingBox; isNegligeable() constsofa::type::BoundingBox; isNull() constsofa::type::BoundingBox; isValid() constsofa::type::BoundingBox; maxBBox() constsofa::type::BoundingBox; maxBBox()sofa::type::BoundingBox; maxBBoxPtr()sofa::type::BoundingBox; maxBBoxPtr() constsofa::type::BoundingBox; minBBox() constsofa::type::BoundingBox; minBBox()sofa::type::BoundingBox; minBBoxPtr()sofa::type::BoundingBox; minBBoxPtr() constsofa::type::BoundingBox; neutral_bbox()sofa::type::BoundingBoxstatic; op",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::type::TBoundingBox< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::type::TBoundingBox< TReal > Class Template Reference . #include <BoundingBox.h>. Inheritance diagram for sofa::type::TBoundingBox< TReal >:. [legend]. Public Member Functions;  TBoundingBox (const TReal *minBBoxPtr, const TReal *maxBBoxPtr);  ;  TBoundingBox ();  ;  Public Member Functions inherited from sofa::type::BoundingBox;  BoundingBox ();  ;  BoundingBox (const sofa::type::Vec3 &minBBox, const sofa::type::Vec3 &maxBBox);  Define using the endpoints of the main diagonal. More...;  ;  BoundingBox (const bbox_t &bbox);  ;  BoundingBox (SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  BoundingBox (const Vec6f &bbox);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  BoundingBox (const Vec6d &bbox);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  operator bbox_t () const;  ; void invalidate ();  ; bool isValid () const;  ; bool isFlat () const;  ; bool isNegligeable () const;  ; bool isNull () const;  ; SReal * minBBoxPtr ();  ; SReal * maxBBoxPtr ();  ; const SReal * minBBoxPtr () const;  ; const SReal * maxBBoxPtr () const;  ; const sofa::type::Vec3 & minBBox () const;  ; const sofa::type::Vec3 & maxBBox () const;  ; sofa::type::Vec3 & minBBox ();  ; sofa::type::Vec3 & maxBBox ();  ; bool contains (const sofa::type::Vec3 &point) const;  ; bool contains (const BoundingBox &other) const;  ; bool intersect (const BoundingBox &other) const;  ; void intersection (const BoundingBox &other);  ; void include (const sofa::type::Vec3 &point);  ; void include (const BoundingBox &other);  ; void inflate (SReal amount);  ; BoundingBox getIntersection (const BoundingBox &other) const;  ; BoundingBox getInclude (const sofa::t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Vec< N, ValueType > Member List . This is the complete list of members for sofa::type::Vec< N, ValueType >, including all inherited members. ArrayType typedefsofa::type::Vec< N, ValueType >; assign(const ValueType &value) noexceptsofa::type::Vec< N, ValueType >inline; back()sofa::type::Vec< N, ValueType >inline; back() constsofa::type::Vec< N, ValueType >inline; begin() noexceptsofa::type::Vec< N, ValueType >inline; begin() const noexceptsofa::type::Vec< N, ValueType >inline; clear() noexceptsofa::type::Vec< N, ValueType >inline; const_iterator typedefsofa::type::Vec< N, ValueType >; const_reference typedefsofa::type::Vec< N, ValueType >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, ValueType >inline; data() const noexceptsofa::type::Vec< N, ValueType >inline; difference_type typedefsofa::type::Vec< N, ValueType >; divscalar(const ValueType f) const noexceptsofa::type::Vec< N, ValueType >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, ValueType >inline; elemssofa::type::Vec< N, ValueType >; end() noexceptsofa::type::Vec< N, ValueType >inline; end() const noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; fill(ValueType r) noexceptsofa::type::Vec< N, ValueType >inline; front()sofa::type::Vec< N, ValueType >inline; front() constsofa::type::Vec< N, ValueType >inline; getsub(const Size i, Vec< N2, ValueType > &m) const noexceptsofa::type::Vec< N, ValueType >inline; getsub(const Size i, ValueType &m) const noexceptsofa::type::Vec< N, ValueType >inline; isNormalized(ValueType threshold=std::numeric_limits< ValueType >::epsilon() *(Va",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html
Usability,clear,clear," ArrayType typedefsofa::type::Vec< N, ValueType >; assign(const ValueType &value) noexceptsofa::type::Vec< N, ValueType >inline; back()sofa::type::Vec< N, ValueType >inline; back() constsofa::type::Vec< N, ValueType >inline; begin() noexceptsofa::type::Vec< N, ValueType >inline; begin() const noexceptsofa::type::Vec< N, ValueType >inline; clear() noexceptsofa::type::Vec< N, ValueType >inline; const_iterator typedefsofa::type::Vec< N, ValueType >; const_reference typedefsofa::type::Vec< N, ValueType >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, ValueType >inline; data() const noexceptsofa::type::Vec< N, ValueType >inline; difference_type typedefsofa::type::Vec< N, ValueType >; divscalar(const ValueType f) const noexceptsofa::type::Vec< N, ValueType >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, ValueType >inline; elemssofa::type::Vec< N, ValueType >; end() noexceptsofa::type::Vec< N, ValueType >inline; end() const noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; fill(ValueType r) noexceptsofa::type::Vec< N, ValueType >inline; front()sofa::type::Vec< N, ValueType >inline; front() constsofa::type::Vec< N, ValueType >inline; getsub(const Size i, Vec< N2, ValueType > &m) const noexceptsofa::type::Vec< N, ValueType >inline; getsub(const Size i, ValueType &m) const noexceptsofa::type::Vec< N, ValueType >inline; isNormalized(ValueType threshold=std::numeric_limits< ValueType >::epsilon() *(Va",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html
Security,access,access,"te<Size N2, class real2 > ; constexpr void set (const Vec< N2, real2 > &v, ValueType defaultvalue=0) noexcept;  Specific set from a different size vector (given default value and ignored outside entries) More...;  ; template<Size NN = N, typename std::enable_if<(NN >1), int >::type = 0> ; constexpr Vec (const Vec< N-1, ValueType > &v, ValueType r1) noexcept;  Constructor from an N-1 elements vector and an additional value (added at the end). More...;  ; constexpr Vec (const sofa::type::fixed_array< ValueType, N > &p) noexcept;  ; template<Size N2, typename real2 > ; constexpr Vec (const Vec< N2, real2 > &v) noexcept;  Constructor from a different size vector (null default value and ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Vec (const Vec< N, real2 > &p) noexcept;  ; template<typename real2 > ; constexpr Vec (const real2 *p) noexcept;  Constructor from an array of values. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=1), int >::type = 0> ; constexpr ValueType & x () noexcept;  Special access to first element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=2), int >::type = 0> ; constexpr ValueType & y () noexcept;  Special access to second element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=3), int >::type = 0> ; constexpr ValueType & z () noexcept;  Special access to third element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=4), int >::type = 0> ; constexpr ValueType & w () noexcept;  Special access to fourth element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=1), int >::type = 0> ; constexpr const ValueType & x () const noexcept;  Special const access to first element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=2), int >::type = 0> ; constexpr const ValueType & y () const noexcept;  Special const access to second element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=3), int >::type = 0> ; constexp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html
Usability,clear,clear,"pr const ValueType & y () const noexcept;  Special const access to second element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=3), int >::type = 0> ; constexpr const ValueType & z () const noexcept;  Special const access to third element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=4), int >::type = 0> ; constexpr const ValueType & w () const noexcept;  Special const access to fourth element. More...;  ; template<Size NN = N, typename std::enable_if< NN==1, int >::type = 0> ; constexpr void operator= (const ValueType r1) noexcept;  Specific Assignment operator for 1-element vectors. More...;  ; template<typename real2 > ; constexpr void operator= (const real2 *p) noexcept;  Assignment operator from an array of values. More...;  ; template<Size M, typename real2 > ; constexpr void operator= (const Vec< M, real2 > &v) noexcept;  Assignment from a vector with different dimensions. More...;  ; constexpr void assign (const ValueType &value) noexcept;  ; constexpr void clear () noexcept;  Sets every element to 0. More...;  ; constexpr void fill (ValueType r) noexcept;  Sets every element to r. More...;  ; constexpr ValueType & operator() (Size i) noexcept;  Access to i-th element. More...;  ; constexpr const ValueType & operator() (Size i) const noexcept;  Const access to i-th element. More...;  ; constexpr const ValueType * ptr () const noexcept;  Cast into a const array of values. More...;  ; constexpr ValueType * ptr () noexcept;  Cast into an array of values. More...;  ; template<Size N2, std::enable_if_t<(N2< N), bool > = true> ; constexpr void getsub (const Size i, Vec< N2, ValueType > &m) const noexcept;  ; constexpr void getsub (const Size i, ValueType &m) const noexcept;  ; constexpr Vec< N, ValueType > mulscalar (const ValueType f) const noexcept;  ; template<class real2 , std::enable_if_t< std::is_convertible_v< real2, ValueType >, bool > = true> ; constexpr Vec< N, ValueType > mulscalar (const real2 f) const noexcept;  M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::VecNoInit< N, real > Member List . This is the complete list of members for sofa::type::VecNoInit< N, real >, including all inherited members. ArrayType typedefsofa::type::Vec< N, real >; assign(const real &value) noexceptsofa::type::Vec< N, real >inline; back()sofa::type::Vec< N, real >inline; back() constsofa::type::Vec< N, real >inline; begin() noexceptsofa::type::Vec< N, real >inline; begin() const noexceptsofa::type::Vec< N, real >inline; clear() noexceptsofa::type::Vec< N, real >inline; const_iterator typedefsofa::type::Vec< N, real >; const_reference typedefsofa::type::Vec< N, real >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, real >inline; data() const noexceptsofa::type::Vec< N, real >inline; difference_type typedefsofa::type::Vec< N, real >; divscalar(const real f) const noexceptsofa::type::Vec< N, real >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, real >inline; elemssofa::type::Vec< N, real >; end() noexceptsofa::type::Vec< N, real >inline; end() const noexceptsofa::type::Vec< N, real >inline; eqdivscalar(const real f) noexceptsofa::type::Vec< N, real >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, real >inline; eqmulscalar(const real f) noexceptsofa::type::Vec< N, real >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, real >inline; fill(real r) noexceptsofa::type::Vec< N, real >inline; front()sofa::type::Vec< N, real >inline; front() constsofa::type::Vec< N, real >inline; getsub(const Size i, Vec< N2, real > &m) const noexceptsofa::type::Vec< N, real >inline; getsub(const Size i, real &m) const noexceptsofa::type::Vec< N, real >inline; isNormalized(real threshold=std::numeric_limits< real >::epsilon() *(real) 10) constsofa::type::Vec< N, real >inline; iterator typedefsofa::type::Vec< N, real >; linearDivision(const Vec< N, real2 > &v) const noexceptsofa::type::Vec< N, real >i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html
Usability,clear,clear," ArrayType typedefsofa::type::Vec< N, real >; assign(const real &value) noexceptsofa::type::Vec< N, real >inline; back()sofa::type::Vec< N, real >inline; back() constsofa::type::Vec< N, real >inline; begin() noexceptsofa::type::Vec< N, real >inline; begin() const noexceptsofa::type::Vec< N, real >inline; clear() noexceptsofa::type::Vec< N, real >inline; const_iterator typedefsofa::type::Vec< N, real >; const_reference typedefsofa::type::Vec< N, real >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, real >inline; data() const noexceptsofa::type::Vec< N, real >inline; difference_type typedefsofa::type::Vec< N, real >; divscalar(const real f) const noexceptsofa::type::Vec< N, real >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, real >inline; elemssofa::type::Vec< N, real >; end() noexceptsofa::type::Vec< N, real >inline; end() const noexceptsofa::type::Vec< N, real >inline; eqdivscalar(const real f) noexceptsofa::type::Vec< N, real >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, real >inline; eqmulscalar(const real f) noexceptsofa::type::Vec< N, real >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, real >inline; fill(real r) noexceptsofa::type::Vec< N, real >inline; front()sofa::type::Vec< N, real >inline; front() constsofa::type::Vec< N, real >inline; getsub(const Size i, Vec< N2, real > &m) const noexceptsofa::type::Vec< N, real >inline; getsub(const Size i, real &m) const noexceptsofa::type::Vec< N, real >inline; isNormalized(real threshold=std::numeric_limits< real >::epsilon() *(real) 10) constsofa::type::Vec< N, real >inline; iterator typedefsofa::type::Vec< N, real >; linearDivision(const Vec< N, real2 > &v) const noexceptsofa::type::Vec< N, real >i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::type::VecNoInit< N, real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::type::VecNoInit< N, real > Class Template Reference . #include <Vec.h>; Same as Vec except the values are not initialized by default. ; More... Inheritance diagram for sofa::type::VecNoInit< N, real >:. [legend]; Detailed Description; template<sofa::Size N, typename real>; class sofa::type::VecNoInit< N, real >; Same as Vec except the values are not initialized by default. . Public Member Functions; constexpr VecNoInit () noexcept;  ; constexpr VecNoInit (const Vec< N, real > &v) noexcept;  ; constexpr VecNoInit (Vec< N, real > &&v) noexcept;  ;  Public Member Functions inherited from sofa::type::Vec< N, real >; constexpr Vec ()=default;  Default constructor: sets all values to 0. More...;  ; constexpr Vec (NoInit);  Fast constructor: no initialization. More...;  ; constexpr Vec (const real r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr Vec (ArgsT &&... r) noexcept;  ;  Vec (const Vec< 3, R > &a, const Vec< 3, T > &b);  Specific constructor for 6-elements vectors, taking two 3-elements vectors. More...;  ; constexpr Vec (const Vec< N-1, real > &v, real r1) noexcept;  Constructor from an N-1 elements vector and an additional value (added at the end). More...;  ; constexpr Vec (const sofa::type::fixed_array< real, N > &p) noexcept;  ; constexpr Vec (const Vec< N2, real2 > &v) noexcept;  Constructor from a different size vector (null default value and ignoring outside entries) More...;  ; constexpr Vec (const Vec< N, real2 > &p) noexcept;  ; constexpr Vec (const real2 *p) noexcept;  Constructor from an array of values. More...;  ; constexpr void set (const real r1) noexcept;  Specific set function for 1-element vectors. More...;  ; constexpr void set (const ArgsT... r) noexcept;  ; constexpr void set (const Vec< N2, real2 > &v, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html
Security,access,access,"3, T > &b);  Specific constructor for 6-elements vectors, taking two 3-elements vectors. More...;  ; constexpr Vec (const Vec< N-1, real > &v, real r1) noexcept;  Constructor from an N-1 elements vector and an additional value (added at the end). More...;  ; constexpr Vec (const sofa::type::fixed_array< real, N > &p) noexcept;  ; constexpr Vec (const Vec< N2, real2 > &v) noexcept;  Constructor from a different size vector (null default value and ignoring outside entries) More...;  ; constexpr Vec (const Vec< N, real2 > &p) noexcept;  ; constexpr Vec (const real2 *p) noexcept;  Constructor from an array of values. More...;  ; constexpr void set (const real r1) noexcept;  Specific set function for 1-element vectors. More...;  ; constexpr void set (const ArgsT... r) noexcept;  ; constexpr void set (const Vec< N2, real2 > &v, real defaultvalue=0) noexcept;  Specific set from a different size vector (given default value and ignored outside entries) More...;  ; constexpr real & x () noexcept;  Special access to first element. More...;  ; constexpr const real & x () const noexcept;  Special const access to first element. More...;  ; constexpr real & y () noexcept;  Special access to second element. More...;  ; constexpr const real & y () const noexcept;  Special const access to second element. More...;  ; constexpr real & z () noexcept;  Special access to third element. More...;  ; constexpr const real & z () const noexcept;  Special const access to third element. More...;  ; constexpr real & w () noexcept;  Special access to fourth element. More...;  ; constexpr const real & w () const noexcept;  Special const access to fourth element. More...;  ; constexpr void operator= (const real r1) noexcept;  Specific Assignment operator for 1-element vectors. More...;  ; constexpr void operator= (const real2 *p) noexcept;  Assignment operator from an array of values. More...;  ; constexpr void operator= (const Vec< M, real2 > &v) noexcept;  Assignment from a vector with different d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html
Usability,clear,clear,"onst noexcept;  Special const access to first element. More...;  ; constexpr real & y () noexcept;  Special access to second element. More...;  ; constexpr const real & y () const noexcept;  Special const access to second element. More...;  ; constexpr real & z () noexcept;  Special access to third element. More...;  ; constexpr const real & z () const noexcept;  Special const access to third element. More...;  ; constexpr real & w () noexcept;  Special access to fourth element. More...;  ; constexpr const real & w () const noexcept;  Special const access to fourth element. More...;  ; constexpr void operator= (const real r1) noexcept;  Specific Assignment operator for 1-element vectors. More...;  ; constexpr void operator= (const real2 *p) noexcept;  Assignment operator from an array of values. More...;  ; constexpr void operator= (const Vec< M, real2 > &v) noexcept;  Assignment from a vector with different dimensions. More...;  ; constexpr void assign (const real &value) noexcept;  ; constexpr void clear () noexcept;  Sets every element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets every element to r. More...;  ; constexpr real & operator() (Size i) noexcept;  Access to i-th element. More...;  ; constexpr const real & operator() (Size i) const noexcept;  Const access to i-th element. More...;  ; constexpr const real * ptr () const noexcept;  Cast into a const array of values. More...;  ; constexpr real * ptr () noexcept;  Cast into an array of values. More...;  ; constexpr void getsub (const Size i, Vec< N2, real > &m) const noexcept;  ; constexpr void getsub (const Size i, real &m) const noexcept;  ; constexpr Vec< N, real > mulscalar (const real f) const noexcept;  ; constexpr Vec< N, real > mulscalar (const real2 f) const noexcept;  Multiplication by a scalar f. More...;  ; constexpr Vec< N, real > operator* (const real2 f) const noexcept;  ; constexpr real operator* (const Vec< N, real2 > &v) const noexcept;  Dot product. More...;  ; constexpr ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::TemplateAliasTest Member List . This is the complete list of members for sofa::TemplateAliasTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; registerAlias(const std::string &alias, const std::string &target, bool succeed, bool warn)sofa::TemplateAliasTestinlineprotected; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1_template_alias_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_template_alias_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::TemplateAliasTest Member List . This is the complete list of members for sofa::TemplateAliasTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; registerAlias(const std::string &alias, const std::string &target, bool succeed, bool warn)sofa::TemplateAliasTestinlineprotected; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1_template_alias_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_template_alias_test-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::TemplateAliasTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Member Functions |; List of all members . sofa::TemplateAliasTest Class Reference . Inheritance diagram for sofa::TemplateAliasTest:. [legend]. Protected Member Functions; bool registerAlias (const std::string &alias, const std::string &target, bool succeed, bool warn);  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Function details. ◆ registerAlias(). bool sofa::TemplateAliasTest::registerAlias ; (; const std::string & ; alias, . const std::string & ; target, . bool ; succeed, . bool ; warn . ). inlineprotected . sofaTemplateAliasTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1_template_alias_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_template_alias_test.html
Testability,test,testing,"﻿. SOFA API: sofa::TemplateAliasTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Member Functions |; List of all members . sofa::TemplateAliasTest Class Reference . Inheritance diagram for sofa::TemplateAliasTest:. [legend]. Protected Member Functions; bool registerAlias (const std::string &alias, const std::string &target, bool succeed, bool warn);  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Function details. ◆ registerAlias(). bool sofa::TemplateAliasTest::registerAlias ; (; const std::string & ; alias, . const std::string & ; target, . bool ; succeed, . bool ; warn . ). inlineprotected . sofaTemplateAliasTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1_template_alias_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_template_alias_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::TestDataEngine< DataEngineType > Member List . This is the complete list of members for sofa::TestDataEngine< DataEngineType >, including all inherited members. doUpdate() overridesofa::TestDataEngine< DataEngineType >inline; getCounter() constsofa::TestDataEngine< DataEngineType >inline; resetCounter()sofa::TestDataEngine< DataEngineType >inline; SOFA_CLASS(SOFA_TEMPLATE(TestDataEngine, DataEngineType), DataEngineType)sofa::TestDataEngine< DataEngineType >; TestDataEngine()sofa::TestDataEngine< DataEngineType >inline. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1_test_data_engine-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_test_data_engine-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::SparseTimeDenseProduct_MT< Lhs, Rhs > Member List . This is the complete list of members for Eigen::SparseTimeDenseProduct_MT< Lhs, Rhs >, including all inherited members. scaleAndAddTo(Dest &dest, const Scalar &alpha) constEigen::SparseTimeDenseProduct_MT< Lhs, Rhs >inline; SparseTimeDenseProduct_MT(const Lhs &lhs, const Rhs &rhs, unsigned nbThreads)Eigen::SparseTimeDenseProduct_MT< Lhs, Rhs >inline. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/class_eigen_1_1_sparse_time_dense_product___m_t-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/class_eigen_1_1_sparse_time_dense_product___m_t-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. WDoubleLineEdit Member List . This is the complete list of members for WDoubleLineEdit, including all inherited members. checkValue()WDoubleLineEditprotected; getDisplayedValue()WDoubleLineEditinline; getIntDisplayedValue()WDoubleLineEditinline; getIntValue()WDoubleLineEditinline; getMaxValue()WDoubleLineEditinline; getMinValue()WDoubleLineEditinline; getValue()WDoubleLineEditinline; intValueWDoubleLineEdit; intValue() constWDoubleLineEditinline; keyPressEvent(QKeyEvent *) overrideWDoubleLineEditprotected; m_bFirstWDoubleLineEditprotected; m_bInternalWDoubleLineEditprotected; m_DblValidWDoubleLineEditprotected; m_fMaxValueWDoubleLineEditprotected; m_fMinValueWDoubleLineEditprotected; m_fValueWDoubleLineEditmutableprotected; m_iPercentWDoubleLineEditprotected; m_isDraggingWDoubleLineEditprotected; m_prevMousePositionWDoubleLineEditprotected; maxValueWDoubleLineEdit; maxValue() constWDoubleLineEditinline; minValueWDoubleLineEdit; minValue() constWDoubleLineEditinline; mouseMoveEvent(QMouseEvent *) overrideWDoubleLineEditprotected; mousePressEvent(QMouseEvent *) overrideWDoubleLineEditprotected; mouseReleaseEvent(QMouseEvent *) overrideWDoubleLineEditprotected; setIntValue(int f)WDoubleLineEdit; setMaxValue(double f)WDoubleLineEditinline; setMinValue(double f)WDoubleLineEditinline; setValue(double f)WDoubleLineEdit; setValuePercent(int p)WDoubleLineEditslot; slotCalcValue(const QString &)WDoubleLineEditprotectedslot; slotCalcValue(double, bool isEditted=false)WDoubleLineEditprotectedslot; slotReturnPressed()WDoubleLineEditprotectedslot; ValueWDoubleLineEdit; Value() constWDoubleLineEditinline; valueChanged(double)WDoubleLineEditsignal; valueEdited(double)WDoubleLineEditsignal; valuePercent()WDoubleLineEdit; valuePercentChanged(int)WDoubleLineEditsignal; WDoubleLineEdit(QWidget *parent, const char *name)WDoubleLineEdit. Generated on Mon Nov 11 2024 02:15:07 for SOFA API by",MatchSource.WIKI,api/master/sofa/html/class_w_double_line_edit-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/class_w_double_line_edit-members.html
Energy Efficiency,green,green,"; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A dark blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the pointed class or struct is accessible. . A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labelled with the template parameters of the instance. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/graph_legend.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html
Modifiability,inherit,inheritance,"﻿. SOFA API: Graph Legend. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Graph Legend . This page explains how to interpret the graphs that are generated by doxygen.; Consider the following example: /*! Invisible class because of truncation */; class Invisible { };; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A dark blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the",MatchSource.WIKI,api/master/sofa/html/graph_legend.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html
Security,access,accessible,"; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A dark blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the pointed class or struct is accessible. . A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labelled with the template parameters of the instance. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/graph_legend.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html
Usability,undo,undocumented,"; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A dark blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the pointed class or struct is accessible. . A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labelled with the template parameters of the instance. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/graph_legend.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html
Availability,avail,available,﻿. SOFA API: SOFA API Documentation. . SOFA API;  679a9147. Open source framework for multi-physics simuation. SOFA API Documentation . You are on the main page of the SOFA API Documentation. This is the starting point of the documentation of the classes of the framework itself.; A general introduction to SOFA and the user documentation are available on https://www.sofa-framework.org/community/doc/; Plugins; Plugins doc are listed on the Plugins page. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/index.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/index.html
Availability,avail,available,"mespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; template<typename DataTypes > ; using VecReal_t = typename DataTypes::VecReal;  ; template<typename DataTypes > ; usin",MatchSource.WIKI,api/master/sofa/html/namespacesofa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html
Deployability,patch,patch,"ngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; template<typename DataTypes > ; using VecReal_t = typename DataTypes::VecReal;  ; template<typename DataTypes > ; using Deriv_t = typename DataTypes::Deriv;  ; template<typename DataTypes > ; using MatrixDeriv_t = typename DataTypes::MatrixDeriv;  ; template<typename DataTypes > ; using VecCoord_t = typename DataTypes::VecCoord;  ; template<typename DataTypes > ; using VecDeriv_t = typename DataTypes::VecDeriv;  ; template<typename DataTypes > ; using DataVecCoord_t = core::objectmodel::Data< VecCoord_t< DataTypes > >;  ; tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html
Energy Efficiency,adapt,adapted,"﻿. SOFA API: sofa Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html
Modifiability,adapt,adapted,"﻿. SOFA API: sofa Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html
Testability,test,testing,"﻿. SOFA API: sofa Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html
Usability,simpl,simpleapi,"﻿. SOFA API: sofa Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html
Safety,detect,detection,﻿. SOFA API: sofa::component::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Functions . sofa::component::collision Namespace Reference . Namespaces;  detection;  ;  geometry;  ;  model;  ;  response;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::collision::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::collision::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_COLLISION_API void sofa::component::collision::init ; (; ). ◆ initExternalModule(). void sofa::component::collision::initExternalModule ; (; ). ◆ registerObjects(). void sofa::component::collision::registerObjects ; (; sofa::core::ObjectFactory * ; factory). sofacomponentcollision; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision.html
Safety,detect,detection,﻿. SOFA API: sofa::component::collision::detection Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Functions . sofa::component::collision::detection Namespace Reference . Namespaces;  algorithm;  ;  intersection;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::collision::detection::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::collision::detection::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_COLLISION_DETECTION_API void sofa::component::collision::detection::init ; (; ). ◆ initExternalModule(). void sofa::component::collision::detection::initExternalModule ; (; ). ◆ registerObjects(). void sofa::component::collision::detection::registerObjects ; (; sofa::core::ObjectFactory * ; factory). sofacomponentcollisiondetection; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection.html
Safety,detect,detection,﻿. SOFA API: sofa::component::collision::detection::algorithm Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::collision::detection::algorithm Namespace Reference . Classes; class  BruteForceBroadPhase;  Perform an extensive pair-wise collision test based on the bounding volume of collision models. More...;  ; class  BruteForceDetection;  ; class  BVHNarrowPhase;  Narrow phase collision detection based on bounding volume hierarchy. More...;  ; class  CollisionPipeline;  ; class  CollidingPair;  ; class  CollisionPairID;  ; class  CollidingPM;  ; class  DirectSAP;  ; class  DirectSAPNarrowPhase;  ; class  DSAPBox;  ; class  EndPoint;  ; class  EndPointID;  ; struct  CompPEndPoint;  ; class  ISAPBox;  ; class  IncrSAP;  ; class  MirrorIntersector;  ; class  RayTraceDetection;  It is a Ray Trace based collision detection algorithm. More...;  ; class  RayTraceNarrowPhase;  It is a Ray Trace based collision detection algorithm. More...;  . Functions; void registerBruteForceBroadPhase (sofa::core::ObjectFactory *factory);  ; void registerBruteForceDetection (sofa::core::ObjectFactory *factory);  ; void registerBVHNarrowPhase (sofa::core::ObjectFactory *factory);  ; void registerCollisionPipeline (sofa::core::ObjectFactory *factory);  ; void registerDirectSAP (sofa::core::ObjectFactory *factory);  ; void registerDirectSAPNarrowPhase (sofa::core::ObjectFactory *factory);  ; void registerIncrSAP (sofa::core::ObjectFactory *factory);  ; void registerRayTraceDetection (sofa::core::ObjectFactory *factory);  ; void registerRayTraceNarrowPhase (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html
Testability,test,test,﻿. SOFA API: sofa::component::collision::detection::algorithm Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::collision::detection::algorithm Namespace Reference . Classes; class  BruteForceBroadPhase;  Perform an extensive pair-wise collision test based on the bounding volume of collision models. More...;  ; class  BruteForceDetection;  ; class  BVHNarrowPhase;  Narrow phase collision detection based on bounding volume hierarchy. More...;  ; class  CollisionPipeline;  ; class  CollidingPair;  ; class  CollisionPairID;  ; class  CollidingPM;  ; class  DirectSAP;  ; class  DirectSAPNarrowPhase;  ; class  DSAPBox;  ; class  EndPoint;  ; class  EndPointID;  ; struct  CompPEndPoint;  ; class  ISAPBox;  ; class  IncrSAP;  ; class  MirrorIntersector;  ; class  RayTraceDetection;  It is a Ray Trace based collision detection algorithm. More...;  ; class  RayTraceNarrowPhase;  It is a Ray Trace based collision detection algorithm. More...;  . Functions; void registerBruteForceBroadPhase (sofa::core::ObjectFactory *factory);  ; void registerBruteForceDetection (sofa::core::ObjectFactory *factory);  ; void registerBVHNarrowPhase (sofa::core::ObjectFactory *factory);  ; void registerCollisionPipeline (sofa::core::ObjectFactory *factory);  ; void registerDirectSAP (sofa::core::ObjectFactory *factory);  ; void registerDirectSAPNarrowPhase (sofa::core::ObjectFactory *factory);  ; void registerIncrSAP (sofa::core::ObjectFactory *factory);  ; void registerRayTraceDetection (sofa::core::ObjectFactory *factory);  ; void registerRayTraceNarrowPhase (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html
Safety,detect,detection,"﻿. SOFA API: sofa::component::collision::detection::intersection Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::collision::detection::intersection Namespace Reference . Classes; class  BaseProximityIntersection;  ; class  DiscreteIntersection;  ; class  LocalMinDistance;  ; class  MeshDiscreteIntersection;  ; class  MeshMinProximityIntersection;  ; class  MeshNewProximityIntersection;  ; class  MinProximityIntersection;  ; class  NewProximityIntersection;  ; class  RayDiscreteIntersection;  ; class  RayNewProximityIntersection;  ; class  TetrahedronDiscreteIntersection;  . Functions; void registerDiscreteIntersection (sofa::core::ObjectFactory *factory);  ; void registerLocalMinDistance (sofa::core::ObjectFactory *factory);  ; void registerMinProximityIntersection (sofa::core::ObjectFactory *factory);  ; void registerNewProximityIntersection (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; IntersectorCreator< DiscreteIntersection, MeshDiscreteIntersection > MeshDiscreteIntersectors (""Mesh"");  ; IntersectorCreator< MinProximityIntersection, MeshMinProximityIntersection > MeshMinProximityIntersectors (""Mesh"");  ; IntersectorCreator< NewProximityIntersection, MeshNewProximityIntersection > MeshNewProximityIntersectors (""Mesh"");  ; IntersectorCreator< DiscreteIntersection, RayDiscreteIntersection > RayDiscreteIntersectors (""Ray"");  ; IntersectorCreator< MinProximityIntersection, RayDiscreteIntersection > RayMinProximityIntersectors (""Ray"");  ; IntersectorCreator< NewProximityIntersection, RayNewProximityIntersection > RayNewProximityIntersectors (""Ray"");  ; IntersectorCreator< Disc",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1intersection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1intersection.html
Integrability,interface,interface,ofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; const sofa::defaulttype::Rigid3fTypes::Coord & ; i). ◆ getVec() [4/10]. const sofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; const sofa::defaulttype::Rigid3fTypes::Deriv & ; i). ◆ getVec() [5/10]. const sofa::type::Vec6f & sofa::component::constraint::projective::getVec ; (; const sofa::defaulttype::Vec3dTypes::Deriv & ; i). ◆ getVec() [6/10]. sofa::type::Vec3d& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3dTypes::Coord & ; i). ◆ getVec() [7/10]. sofa::type::Vec3d& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3dTypes::Deriv & ; i). This function are there to provide kind of type translation to the vector one so we can implement the algorithm as is the different objects where of similar type. this solution is not really satisfactory but for the moment it does the job. A better solution would that all the used types are following the same interface which requires to touch core sofa classes. . ◆ getVec() [8/10]. sofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3fTypes::Coord & ; i). ◆ getVec() [9/10]. sofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3fTypes::Deriv & ; i). ◆ getVec() [10/10]. sofa::type::Vec6f & sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Vec3dTypes::Deriv & ; i). ◆ init(). SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::init ; (; ). ◆ initExternalModule(). void sofa::component::constraint::projective::initExternalModule ; (; ). ◆ registerAffineMovementProjectiveConstraint(). void sofa::component::constraint::projective::registerAffineMovementProjectiveConstraint ; (; sofa::core::ObjectFactory * ; factory). ◆ registerAttachProjectiveConstraint(). void sofa::component::constraint::projective::registerAttachProjectiveConstraint ; (; sofa::,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1projective.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1projective.html
Integrability,interface,interface,﻿. SOFA API: sofa::component::controller Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::controller Namespace Reference . Classes; class  Controller;  Controller Class. Interface of user interaction on SOFA Components. Provides also an interface for BeginAnimation and EndAnimation events launched at the beginning and the end of a time step. More...;  ; class  MechanicalStateController;  MechanicalStateController Class. More...;  . Functions; void registerMechanicalStateController (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; template class SOFA_COMPONENT_CONTROLLER_API MechanicalStateController< Vec1Types >;  ; template class SOFA_COMPONENT_CONTROLLER_API MechanicalStateController< Rigid3Types >;  . Function Documentation. ◆ getModuleName(). const char * sofa::component::controller::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::controller::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_CONTROLLER_API void sofa::component::controller::init ; (; ). ◆ initExternalModule(). void sofa::component::controller::initExternalModule ; (; ). ◆ registerMechanicalStateController(). void sofa::component::controller::registerMechanicalStateController ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::controller::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MechanicalStateController< Rigid3Types >. template class SOFA_COMPONENT_CONTROLLER_API sofa::component::controller::MechanicalStateController< Rigid3Types >. ◆ MechanicalStateController< Vec1Types >. template class SOFA_COMPONENT_C,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1controller.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1controller.html
Usability,feedback,feedback,﻿. SOFA API: sofa::component::haptics Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::haptics Namespace Reference . Classes; class  ForceFeedback;  Base class implementing forcefeedback as a force field. More...;  ; class  LCPForceFeedback;  ; class  MechanicalStateForceFeedback;  ; class  NullForceFeedback;  Null force feedback for haptic feedback device. More...;  ; class  NullForceFeedbackT;  Null force feedback for haptic feedback device. More...;  . Functions; void registerLCPForceFeedback (sofa::core::ObjectFactory *factory);  ; void registerNullForceFeedback (sofa::core::ObjectFactory *factory);  ; void registerNullForceFeedbackT (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::haptics::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::haptics::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_HAPTICS_API void sofa::component::haptics::init ; (; ). ◆ initExternalModule(). void sofa::component::haptics::initExternalModule ; (; ). ◆ registerLCPForceFeedback(). void sofa::component::haptics::registerLCPForceFeedback ; (; sofa::core::ObjectFactory * ; factory). ◆ registerNullForceFeedback(). void sofa::component::haptics::registerNullForceFeedback ; (; sofa::core::ObjectFactory * ; factory). ◆ registerNullForceFeedbackT(). void sofa::component::haptics::registerNullForceFeedbackT ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::haptics::registerObjects ; (; sofa::core::ObjectFactory * ; factory). sofacomponenthaptics; Generated on Mon Nov 11 2024 02:46:05 for SOFA A,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1haptics.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1haptics.html
Performance,multi-thread,multi-threading,"﻿. SOFA API: sofa::component::linearsolver Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Functions |; Variables . sofa::component::linearsolver Namespace Reference . Namespaces;  direct;  ;  iterative;  ;  ordering;  ;  preconditioner;  . Classes; class  MultExpr;  ; class  GraphScatteredMatrix;  ; class  GraphScatteredVector;  ; class  MatrixInvertData;  ; class  BaseMatrixLinearSolver;  ; class  NoThreadManager;  Empty class used for default solver implementation without multi-threading support. More...;  ; class  MatrixLinearSolverInternalData;  ; class  MatrixLinearSolver;  ; class  MatrixLinearSolver< Matrix, Vector, NoThreadManager >;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  ; template<typename Derived , typename OtherDerived > ; const Eigen::SparseDenseProductReturnType_MT< Derived, OtherDerived >::Type mul_EigenSparseDenseMatrix_MT (const Eigen::SparseMatrixBase< Derived > &lhs, const Eigen::MatrixBase< OtherDerived > &rhs, unsigned nbThreads=OMP_DEFAULT_NUM_THREADS_EIGEN_SPARSE_DENSE_PRODUCT);  Eigen::Sparse * Dense Matrices multiplication (openmp multi-threaded version) More...;  . Variables; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< GraphScatteredMatrix, GraphScatteredVector, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< FullMatrix< SReal >, FullVector< SReal >, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< SparseMatrix< SReal >, FullVector< SReal >, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< CompressedRowSparseMatrix< SReal >, Ful",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html
Integrability,wrap,wrapped,"﻿. SOFA API: sofa::component::linearsolver::preconditioner Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::linearsolver::preconditioner Namespace Reference . Classes; class  BlockJacobiPreconditionerInternalData;  ; class  BlockJacobiPreconditioner;  Linear solver based on a NxN block diagonal matrix (i.e. block Jacobi preconditioner) More...;  ; class  JacobiPreconditioner;  Linear solver based on a diagonal matrix (i.e. Jacobi preconditioner) More...;  ; class  PrecomputedMatrixSystem;  ; class  PrecomputedWarpPreconditionerInternalData;  ; class  PrecomputedWarpPreconditioner;  Linear system solver based on a precomputed inverse matrix, wrapped by a per-node rotation matrix. More...;  ; class  RotationMatrixSystem;  ; class  SSORPreconditioner;  ; class  WarpPreconditioner;  Linear system solver wrapping another (precomputed) linear solver by a per-node rotation matrix. More...;  . Functions; void registerBlockJacobiPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerJacobiPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerPrecomputedMatrixSystem (sofa::core::ObjectFactory *factory);  ; void registerPrecomputedWarpPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerRotationMatrixSystem (sofa::core::ObjectFactory *factory);  ; void registerSSORPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerWarpPreconditioner (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; template class SOFA_COMPONENT_LINEARSOLVER_PRECONDITIONER_API BlockJacobiPreconditioner< BlockDiagonalMatrix< 3, SReal >, FullVector< SReal > >;  ; te",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html
Modifiability,config,configureCreatedMatrixComponent,"oupOfComponentsAssociatedToAPairOfMechanicalStates &group);  ; sofa::type::vector< core::behavior::BaseMechanicalState * > retrieveAssociatedMechanicalState (const sofa::core::behavior::StateAccessor *component);  ; sofa::type::vector< core::behavior::BaseMechanicalState * > retrieveAssociatedMechanicalState (BaseMapping *component);  ; auto generatePairs (const sofa::type::vector< core::behavior::BaseMechanicalState * > &mstates) -> sofa::type::vector< sofa::type::fixed_array< core::behavior::BaseMechanicalState *, 2 > >;  Generate all possible pairs of Mechanical States from a list of Mechanical States. More...;  ; template<core::matrixaccumulator::Contribution c> ; void configureCreatedMatrixComponent (typename BaseAssemblingMatrixAccumulator< c >::SPtr mat, typename BaseAssemblingMatrixAccumulator< c >::ComponentType *object, const SReal factor, bool printLog);  ; template<class BlockType > ; void computeProjection (const Eigen::Map< Eigen::SparseMatrix< BlockType, Eigen::RowMajor > > KMap, const sofa::type::fixed_array< std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< BlockType >>, 2 > J, Eigen::SparseMatrix< BlockType, Eigen::RowMajor > &JT_K_J);  ; template<class BlockType > ; void addToGlobalMatrix (linearalgebra::BaseMatrix *globalMatrix, Eigen::SparseMatrix< BlockType, Eigen::RowMajor > JT_K_J, const type::Vec2u positionInGlobalMatrix);  . Variables; template struct SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixFreeSystem< GraphScatteredMatrix, GraphScatteredVector >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API TypedMatrixLinearSystem< GraphScatteredMatrix, GraphScatteredVector >;  ; template class SOFA_COMPONENT_LINEARSYSTEM_API CompositeLinearSystem< FullMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSYSTEM_API CompositeLinearSystem< SparseMatrix< SReal >, FullVector< SReal ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html
Security,authoriz,authorized,"pedMatrixLinearSystem< BlockDiagonalMatrix< 3, double >, FullVector< double > >;  ; template class SOFA_COMPONENT_LINEARSYSTEM_API TypedMatrixLinearSystem< BlockDiagonalMatrix< 3, float >, FullVector< float > >;  ; template class SOFA_COMPONENT_LINEARSYSTEM_API TypedMatrixLinearSystem< RotationMatrix< double >, FullVector< double > >;  ; template class SOFA_COMPONENT_LINEARSYSTEM_API TypedMatrixLinearSystem< RotationMatrix< float >, FullVector< float > >;  . Typedef Documentation. ◆ LocalMappedMatrixType. template<class TReal > . using sofa::component::linearsystem::LocalMappedMatrixType = typedef sofa::linearalgebra::CompressedRowSparseMatrix<TReal>. ◆ StrategyCheckerType. using sofa::component::linearsystem::StrategyCheckerType = typedef sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< core::matrixaccumulator::RangeVerification, CheckNoChangeInInsertionOrder >. The strategy used to check the incoming rows and columns is a combination of: 1) checking if the indices are in the authorized submatrix (range) 2) checking if the indices comply with the initial sparsity pattern . Function Documentation. ◆ addToGlobalMatrix(). template<class BlockType > . void sofa::component::linearsystem::addToGlobalMatrix ; (; linearalgebra::BaseMatrix * ; globalMatrix, . Eigen::SparseMatrix< BlockType, Eigen::RowMajor > ; JT_K_J, . const type::Vec2u ; positionInGlobalMatrix . ). ◆ computeProjection(). template<class BlockType > . void sofa::component::linearsystem::computeProjection ; (; const Eigen::Map< Eigen::SparseMatrix< BlockType, Eigen::RowMajor > > ; KMap, . const sofa::type::fixed_array< std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< BlockType >>, 2 > ; J, . Eigen::SparseMatrix< BlockType, Eigen::RowMajor > & ; JT_K_J . ). ◆ configureCreatedMatrixComponent(). template<core::matrixaccumulator::Contribution c> . void sofa::component::linearsystem::configureCreatedMatrixComponent ; (; typename BaseAssemblingMatrixAccumulator< c >::SPtr ; mat, . typena",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html
Safety,avoid,avoid,"mplate class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Rigid3Types >. ◆ DiagonalMass< Vec1Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec1Types >. ◆ DiagonalMass< Vec1Types, Vec2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec1Types, Vec2Types >. ◆ DiagonalMass< Vec1Types, Vec3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec1Types, Vec3Types >. ◆ DiagonalMass< Vec2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec2Types >. ◆ DiagonalMass< Vec2Types, Vec3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec2Types, Vec3Types >. ◆ DiagonalMass< Vec3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec3Types >. ◆ UniformMass< Rigid2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::UniformMass< Rigid2Types >. ◆ UniformMass< Rigid3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::UniformMass< Rigid3Types >. ◆ UniformMass< Vec1Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::UniformMass< Vec1Types >. ◆ UniformMass< Vec2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::UniformMass< Vec2Types >. ◆ UniformMass< Vec3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::UniformMass< Vec3Types >. TEMPLATE INITIALIZATION ///////////////////////////////////////////////// Force template specialization for the most common sofa type. This goes with the extern template declaration in the .h. Declaring extern template avoid the code generation of the template for each compilation unit. see: http://www.stroustrup.com/C++11FAQ.html#extern-templates . ◆ UniformMass< Vec6Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::UniformMass< Vec6Types >. sofacomponentmass; Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1mass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1mass.html
Testability,test,testing,﻿. SOFA API: sofa::component::odesolver Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Functions . sofa::component::odesolver Namespace Reference . Namespaces;  backward;  ;  forward;  ;  testing;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::odesolver::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::odesolver::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_ODESOLVER_API void sofa::component::odesolver::init ; (; ). ◆ initExternalModule(). void sofa::component::odesolver::initExternalModule ; (; ). ◆ registerObjects(). void sofa::component::odesolver::registerObjects ; (; sofa::core::ObjectFactory * ; factory). sofacomponentodesolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1odesolver.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver.html
Testability,test,testing,"﻿. SOFA API: sofa::component::odesolver::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::odesolver::testing Namespace Reference . Classes; class  GetVectorVisitor;  ; class  GetAssembledSizeVisitor;  ; struct  ODESolverSpringTest;  . Functions; Eigen::VectorXd getVector (simulation::Node::SPtr root, core::ConstVecId id, bool indep=true);  ; simulation::Node::SPtr createMassSpringSystem (simulation::Node::SPtr root, const std::string &stiffness, const std::string &mass, const std::string &restLength, const std::string &xFixedPoint, const std::string &vFixedPoint, const std::string &xMass, const std::string &vMass);  Create a mass spring system. More...;  ; template<typename DataTypes > ; simulation::Node::SPtr createMassSpringSystem (simulation::Node::SPtr root, double stiffness, double mass, double restLength, typename DataTypes::VecCoord xFixedPoint, typename DataTypes::VecDeriv vFixedPoint, typename DataTypes::VecCoord xMass, typename DataTypes::VecDeriv vMass);  . Function Documentation. ◆ createMassSpringSystem() [1/2]. simulation::Node::SPtr sofa::component::odesolver::testing::createMassSpringSystem ; (; simulation::Node::SPtr ; root, . const std::string & ; stiffness, . const std::string & ; mass, . const std::string & ; restLength, . const std::string & ; xFixedPoint, . const std::string & ; vFixedPoint, . const std::string & ; xMass, . const std::string & ; vMass . ). inline . Create a mass spring system. . ◆ createMassSpringSystem() [2/2]. template<typename DataTypes > . simulation::Node::SPtr sofa::component::odesolver::testing::createMassSpringSystem ; (; simulation::Node::SPtr ; root, . double ; stiffness, . double ; mass, . double ; restLength, . typename DataTypes::VecCoord ; xFixedPoint, . typename DataTypes::VecDeriv ; vFixedPoint, . typename DataTypes::VecCoord ; xMass, . typename DataTypes::VecDeriv ; vMass . ). inline . ◆ getVector(). Eigen::VectorXd sof",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html
Testability,log,logger,﻿. SOFA API: sofa::component::sceneutility Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Functions . sofa::component::sceneutility Namespace Reference . Namespaces;  infocomponent;  ;  makealiascomponent;  ;  makedataaliascomponent;  . Classes; class  BaseAddResourceRepository;  ; class  AddDataRepository;  Add a new path to DataRepository. More...;  ; class  AddPluginRepository;  Add a new path to PluginRepository. More...;  ; class  MessageHandlerComponent;  A sofa component to add a MessageHandler to the main logger. More...;  ; class  FileMessageHandlerComponent;  A sofa component to add a FileMessageHandlerComponent to the main logger. More...;  ; class  PauseAnimation;  ; class  PauseAnimationOnEvent;  . Functions; void registerAddDataRepository (sofa::core::ObjectFactory *factory);  ; void registerAddPluginRepository (sofa::core::ObjectFactory *factory);  ; void registerAPIVersion (sofa::core::ObjectFactory *factory);  ; void registerInfoComponent (sofa::core::ObjectFactory *factory);  ; void registerFileMessageHandlerComponent (sofa::core::ObjectFactory *factory);  ; void registerMakeAliasComponent (sofa::core::ObjectFactory *factory);  ; void registerMakeDataAliasComponent (sofa::core::ObjectFactory *factory);  ; void registerMessageHandlerComponent (sofa::core::ObjectFactory *factory);  ; void registerPauseAnimationOnEvent (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::sceneutility::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::sceneutility::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_SCENEUTILITY_,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1sceneutility.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1sceneutility.html
Deployability,configurat,configuration,﻿. SOFA API: sofa::component::setting Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::setting Namespace Reference . Classes; class  BackgroundSetting;  Class for the configuration of background settings. More...;  ; class  MouseButtonSetting;  ; class  SofaDefaultPathSetting;  Class for the configuration of default path for sofa application. More...;  ; class  StatsSetting;  Class for the configuration of stats settings. More...;  ; class  ViewerSetting;  Class for the configuration of viewer settings. More...;  . Functions; void registerBackgroundSetting (sofa::core::ObjectFactory *factory);  ; void registerSofaDefaultPathSetting (sofa::core::ObjectFactory *factory);  ; void registerStatsSetting (sofa::core::ObjectFactory *factory);  ; void registerViewerSetting (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::setting::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::setting::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_SETTING_API void sofa::component::setting::init ; (; ). ◆ initExternalModule(). void sofa::component::setting::initExternalModule ; (; ). ◆ registerBackgroundSetting(). void sofa::component::setting::registerBackgroundSetting ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::setting::registerObjects ; (; sofa::core::ObjectFactory * ; factory). ◆ registerSofaDefaultPathSetting(). void sofa::component::setting::registerSofaDefaultPathSetting ; (; sofa::core::ObjectFactory * ; factory). ◆ registerStatsSetting(). void sofa::component::setting::registe,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1setting.html
Modifiability,config,configuration,﻿. SOFA API: sofa::component::setting Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::setting Namespace Reference . Classes; class  BackgroundSetting;  Class for the configuration of background settings. More...;  ; class  MouseButtonSetting;  ; class  SofaDefaultPathSetting;  Class for the configuration of default path for sofa application. More...;  ; class  StatsSetting;  Class for the configuration of stats settings. More...;  ; class  ViewerSetting;  Class for the configuration of viewer settings. More...;  . Functions; void registerBackgroundSetting (sofa::core::ObjectFactory *factory);  ; void registerSofaDefaultPathSetting (sofa::core::ObjectFactory *factory);  ; void registerStatsSetting (sofa::core::ObjectFactory *factory);  ; void registerViewerSetting (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::setting::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::setting::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_SETTING_API void sofa::component::setting::init ; (; ). ◆ initExternalModule(). void sofa::component::setting::initExternalModule ; (; ). ◆ registerBackgroundSetting(). void sofa::component::setting::registerBackgroundSetting ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::setting::registerObjects ; (; sofa::core::ObjectFactory * ; factory). ◆ registerSofaDefaultPathSetting(). void sofa::component::setting::registerSofaDefaultPathSetting ; (; sofa::core::ObjectFactory * ; factory). ◆ registerStatsSetting(). void sofa::component::setting::registe,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1setting.html
Usability,simpl,simple,﻿. SOFA API: sofa::component::solidmechanics::spring Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Functions |; Variables . sofa::component::solidmechanics::spring Namespace Reference . Classes; class  AngularSpringForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  FastTriangularBendingSprings;  ; class  FrameSpringForceFieldInternalData;  ; class  FrameSpringForceField;  ; class  GearSpring;  ; class  GearSpringForceFieldInternalData;  ; class  GearSpringForceField;  ; class  JointSpring;  JOINTSPRING. More...;  ; class  JointSpringForceFieldInternalData;  ; class  JointSpringForceField;  ; class  LinearSpring;  This class contains the description of one linear spring. More...;  ; class  MeshSpringForceField;  ; class  PolynomialRestShapeSpringsForceField;  This class describes a polynomial elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  PolynomialSpringsForceField;  This class describes a polynomial elastic springs ForceField. More...;  ; class  QuadBendingSprings;  ; class  QuadularBendingSprings;  ; class  RegularGridSpringForceField;  ; class  RepulsiveSpringForceField;  ; class  RestShapeSpringsForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  SpringForceFieldInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SpringForceField;  Set of simple springs between particles. More...;  ; class  TriangleBendingSprings;  ; class  TriangularBendingSprings;  ; class  TriangularBiquadraticSpringsForceField;  ; class  TriangularQuadraticSpringsForceField;  ; class  VectorSpringForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  ; typedef core::topology::BaseMeshTopology::Quad Qua,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html
Usability,clear,clear,﻿. SOFA API: sofa::component::statecontainer Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Functions |; Variables . sofa::component::statecontainer Namespace Reference . Classes; class  MappedObjectInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  MappedObject;  ; class  MechanicalObject;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  MechanicalObjectInternalData;  . Typedefs; typedef std::size_t nat;  . Functions; void registerMechanicalObject (sofa::core::ObjectFactory *factory);  ; void registerMappedObject (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  ; template<class T > ; void clear (T &t);  ; template<> ; void clear (float &t);  ; template<> ; void clear (double &t);  . Variables; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6T,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html
Energy Efficiency,efficient,efficient,"﻿. SOFA API: sofa::component::topology::container::dynamic Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::topology::container::dynamic Namespace Reference . Classes; class  DynamicSparseGridGeometryAlgorithms;  ; class  DynamicSparseGridTopologyContainer;  ; class  DynamicSparseGridTopologyModifier;  ; class  BasicArrayInterface;  A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. More...;  ; class  EdgeSetGeometryAlgorithms;  ; class  EdgeSetTopologyContainer;  ; class  EdgeSetTopologyModifier;  ; class  HexahedronSetGeometryAlgorithms;  ; class  HexahedronSetTopologyContainer;  ; class  HexahedronSetTopologyModifier;  ; class  MultilevelHexahedronSetTopologyContainer;  ; class  MultilevelModification;  ; class  NumericalIntegrationDescriptor;  Cross product for 3-elements vectors. More...;  ; class  PointSetGeometryAlgorithms;  ; class  PointSetTopologyContainer;  ; class  PointSetTopologyModifier;  ; class  QuadSetGeometryAlgorithms;  ; class  QuadSetTopologyContainer;  ; class  QuadSetTopologyModifier;  ; class  TetrahedronSetGeometryAlgorithms;  ; class  TetrahedronSetTopologyContainer;  ; class  TetrahedronSetTopologyModifier;  ; class  TriangleSetGeometryAlgorithms;  ; class  TriangleSetTopologyContainer;  : Object that stores a set of triangles and provides access to each triangle and its edges and vertices More...;  ; class  TriangleSetTopologyModifier;  . Functions; template<class Real > ; Real areaProduct (const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b);  Cross product for 3-elements Vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 2, Real > &a, const type::Vec< 2, Real > &b);  area for 2-elements sofa::type::vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 1, Real > &, const type::Vec< 1, Real > &);  ar",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html
Integrability,interface,interface,"﻿. SOFA API: sofa::component::topology::container::dynamic Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::topology::container::dynamic Namespace Reference . Classes; class  DynamicSparseGridGeometryAlgorithms;  ; class  DynamicSparseGridTopologyContainer;  ; class  DynamicSparseGridTopologyModifier;  ; class  BasicArrayInterface;  A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. More...;  ; class  EdgeSetGeometryAlgorithms;  ; class  EdgeSetTopologyContainer;  ; class  EdgeSetTopologyModifier;  ; class  HexahedronSetGeometryAlgorithms;  ; class  HexahedronSetTopologyContainer;  ; class  HexahedronSetTopologyModifier;  ; class  MultilevelHexahedronSetTopologyContainer;  ; class  MultilevelModification;  ; class  NumericalIntegrationDescriptor;  Cross product for 3-elements vectors. More...;  ; class  PointSetGeometryAlgorithms;  ; class  PointSetTopologyContainer;  ; class  PointSetTopologyModifier;  ; class  QuadSetGeometryAlgorithms;  ; class  QuadSetTopologyContainer;  ; class  QuadSetTopologyModifier;  ; class  TetrahedronSetGeometryAlgorithms;  ; class  TetrahedronSetTopologyContainer;  ; class  TetrahedronSetTopologyModifier;  ; class  TriangleSetGeometryAlgorithms;  ; class  TriangleSetTopologyContainer;  : Object that stores a set of triangles and provides access to each triangle and its edges and vertices More...;  ; class  TriangleSetTopologyModifier;  . Functions; template<class Real > ; Real areaProduct (const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b);  Cross product for 3-elements Vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 2, Real > &a, const type::Vec< 2, Real > &b);  area for 2-elements sofa::type::vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 1, Real > &, const type::Vec< 1, Real > &);  ar",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html
Security,access,access,"space Reference . Classes; class  DynamicSparseGridGeometryAlgorithms;  ; class  DynamicSparseGridTopologyContainer;  ; class  DynamicSparseGridTopologyModifier;  ; class  BasicArrayInterface;  A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. More...;  ; class  EdgeSetGeometryAlgorithms;  ; class  EdgeSetTopologyContainer;  ; class  EdgeSetTopologyModifier;  ; class  HexahedronSetGeometryAlgorithms;  ; class  HexahedronSetTopologyContainer;  ; class  HexahedronSetTopologyModifier;  ; class  MultilevelHexahedronSetTopologyContainer;  ; class  MultilevelModification;  ; class  NumericalIntegrationDescriptor;  Cross product for 3-elements vectors. More...;  ; class  PointSetGeometryAlgorithms;  ; class  PointSetTopologyContainer;  ; class  PointSetTopologyModifier;  ; class  QuadSetGeometryAlgorithms;  ; class  QuadSetTopologyContainer;  ; class  QuadSetTopologyModifier;  ; class  TetrahedronSetGeometryAlgorithms;  ; class  TetrahedronSetTopologyContainer;  ; class  TetrahedronSetTopologyModifier;  ; class  TriangleSetGeometryAlgorithms;  ; class  TriangleSetTopologyContainer;  : Object that stores a set of triangles and provides access to each triangle and its edges and vertices More...;  ; class  TriangleSetTopologyModifier;  . Functions; template<class Real > ; Real areaProduct (const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b);  Cross product for 3-elements Vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 2, Real > &a, const type::Vec< 2, Real > &b);  area for 2-elements sofa::type::vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 1, Real > &, const type::Vec< 1, Real > &);  area invalid for 1-elements sofa::type::vectors. More...;  ; template<class Real > ; type::Vec< 2, Real > ortho (const type::Vec< 2, Real > &in);  orthogonal of a 2D vector More...;  ; template<class Real > ; type::Vec< 2, Real > cross (const",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html
Energy Efficiency,reduce,reduce,"string & ; text). ◆ castTo(). template<class Dest > . Dest sofa::core::castTo ; (; sofa::core::objectmodel::Base * ; base). Dynamic cast from Base* into the type parameter Dest. . ◆ castToBase(). template<class Source > . sofa::core::objectmodel::Base* sofa::core::castToBase ; (; Source * ; b). Dynamic cast from the type parameter B* into Base*. ; CORE::OPAQUE FUNCTION /////////////////////////////////////////////////; CORE::OPAQUE function are a groupe of function that make ""opaque"" some of the common sofa behaviors.; Core::Opaque functions are:; Base* sofa::core::castToBase(T*) replace dynamic_cast<Base*>(T*);; T* sofa::core::castTo(Base*) replace dynamic_cast<T*>(Base*);; sofa:core::objectmodel::base::GetClass<T>() replace T::GetClass();. These functions are called ""opaque"" as they work with only forward declaration of the involved types in comparison to class methods the requires the full class declaration to be used.; It is highly recommended to use as much as possible opaque function in header files as this allow to reduce the dependency tree.; Opaque function may be slower at runtime (by one function call) but this is true only if LTO isn't able to optimize them properly. If you have experience/feedback with LTO please join the discussion in https://github.com/sofa-framework/sofa/discussions/1822 Defines the baseline functions for a type all the types in-herit from Base. These are non-opaque function that needs to be specialized in order to implement an opaque version for a given type. . ◆ cleanup(). SOFA_CORE_API void sofa::core::cleanup ; (; ). Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ findTemplatedCreator(). void sofa::core::findTemplatedCreator ; (; objectmodel::BaseContext * ; context, . const ObjectFactory::Creator::SPtr & ; creator, . const std::string & ; templateName, . std::map< std::string, std::vector< std::string >> & ; creatorsErrors, . std::vector< std::pair< std::string, ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core Namespace Reference . Namespaces;  behavior;  For BaseMatrix. ;  ;  collision;  ;  constraintparams;  ;  execparams;  ;  loader;  ;  matrixaccumulator;  ;  mechanicalparams;  ;  objectmodel;  ;  topology;  ;  visual;  . Classes; class  State;  Component storing position and velocity vectors. More...;  ; struct  AccumulationVecId;  Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. More...;  ; class  MappingMatrixAccumulator;  ; class  ListMappingMatrixAccumulator;  ; class  GeometricStiffnessMatrix;  ; class  BaseMapping;  ; class  BaseMatrixAccumulatorComponent;  ; struct  get_base_object_strong;  ; class  BaseState;  Component storing position and velocity vectors. More...;  ; class  BehaviorModel;  Abstract Interface of components defining the behavior of a simulated object. More...;  ; class  CategoryLibrary;  An Generic Category of the Sofa Library. More...;  ; class  BaseCollisionElementIterator;  Base class for reference to an collision element defin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html
Performance,load,loader,"﻿. SOFA API: sofa::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core Namespace Reference . Namespaces;  behavior;  For BaseMatrix. ;  ;  collision;  ;  constraintparams;  ;  execparams;  ;  loader;  ;  matrixaccumulator;  ;  mechanicalparams;  ;  objectmodel;  ;  topology;  ;  visual;  . Classes; class  State;  Component storing position and velocity vectors. More...;  ; struct  AccumulationVecId;  Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. More...;  ; class  MappingMatrixAccumulator;  ; class  ListMappingMatrixAccumulator;  ; class  GeometricStiffnessMatrix;  ; class  BaseMapping;  ; class  BaseMatrixAccumulatorComponent;  ; struct  get_base_object_strong;  ; class  BaseState;  Component storing position and velocity vectors. More...;  ; class  BehaviorModel;  Abstract Interface of components defining the behavior of a simulated object. More...;  ; class  CategoryLibrary;  An Generic Category of the Sofa Library. More...;  ; class  BaseCollisionElementIterator;  Base class for reference to an collision element defin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html
Security,access,accessing,"﻿. SOFA API: sofa::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core Namespace Reference . Namespaces;  behavior;  For BaseMatrix. ;  ;  collision;  ;  constraintparams;  ;  execparams;  ;  loader;  ;  matrixaccumulator;  ;  mechanicalparams;  ;  objectmodel;  ;  topology;  ;  visual;  . Classes; class  State;  Component storing position and velocity vectors. More...;  ; struct  AccumulationVecId;  Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. More...;  ; class  MappingMatrixAccumulator;  ; class  ListMappingMatrixAccumulator;  ; class  GeometricStiffnessMatrix;  ; class  BaseMapping;  ; class  BaseMatrixAccumulatorComponent;  ; struct  get_base_object_strong;  ; class  BaseState;  Component storing position and velocity vectors. More...;  ; class  BehaviorModel;  Abstract Interface of components defining the behavior of a simulated object. More...;  ; class  CategoryLibrary;  An Generic Category of the Sofa Library. More...;  ; class  BaseCollisionElementIterator;  Base class for reference to an collision element defin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html
Usability,simpl,simplified,"﻿. SOFA API: sofa::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core Namespace Reference . Namespaces;  behavior;  For BaseMatrix. ;  ;  collision;  ;  constraintparams;  ;  execparams;  ;  loader;  ;  matrixaccumulator;  ;  mechanicalparams;  ;  objectmodel;  ;  topology;  ;  visual;  . Classes; class  State;  Component storing position and velocity vectors. More...;  ; struct  AccumulationVecId;  Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. More...;  ; class  MappingMatrixAccumulator;  ; class  ListMappingMatrixAccumulator;  ; class  GeometricStiffnessMatrix;  ; class  BaseMapping;  ; class  BaseMatrixAccumulatorComponent;  ; struct  get_base_object_strong;  ; class  BaseState;  Component storing position and velocity vectors. More...;  ; class  BehaviorModel;  Abstract Interface of components defining the behavior of a simulated object. More...;  ; class  CategoryLibrary;  An Generic Category of the Sofa Library. More...;  ; class  BaseCollisionElementIterator;  Base class for reference to an collision element defin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html
Deployability,integrat,integration,"tParams *, MultiVecId , MultiVecId ); The default implementation successively calls: prepareStates, buildSystem, solveSystem, applyCorrection. The parameters are defined in class ConstraintParams. More...;  ; class  CRSMultiMatrixAccessor;  ; class  DefaultMultiMatrixAccessor;  ; class  ForceField;  Component computing forces within a simulated body. More...;  ; class  LinearSolver;  Abstract interface for linear system solvers. More...;  ; class  LinearSolverAccessor;  ; class  Mass;  Component responsible for mass-related computations (gravity, acceleration). More...;  ; class  MatrixAccessorCompat;  ; class  AddToMatrixCompatMatrix;  ; class  ApplyConstraintCompat;  ; class  MechanicalMatrix;  ; class  MixedInteractionConstraint;  Component computing constraints between a pair of simulated body. More...;  ; class  MixedInteractionForceField;  Component computing forces between a pair of simulated body. More...;  ; class  MultiMatrix;  ; class  MultiMatrixAccessor;  ; class  TMultiVec;  ; class  OdeSolver;  Component responsible for timestep integration, i.e. advancing the state from time t to t+dt. More...;  ; class  PairInteractionConstraint;  Component computing constraints between a pair of simulated body. More...;  ; class  PairInteractionForceField;  Component computing forces between a pair of simulated body. More...;  ; class  PairInteractionProjectiveConstraintSet;  Component computing constraints between a pair of simulated body. More...;  ; class  PairStateAccessor;  ; class  ProjectiveConstraintSet;  Component computing constraints within a simulated body. More...;  ; class  RotationFinder;  ; class  SingleMatrixAccessor;  ; class  SingleStateAccessor;  ; class  StateAccessor;  . Typedefs; typedef TMultiVec< V_COORD > MultiVecCoord;  ; typedef TMultiVec< V_DERIV > MultiVecDeriv;  ; typedef TMultiVec< V_MATDERIV > MultiVecMatrixDeriv;  . Enumerations; enum class  BlocData { SCALAR; , MAT33; };  ; enum class  BlocPrecision { FLOAT; , DOUBLE; };  . Functio",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::behavior Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core::behavior Namespace Reference . For BaseMatrix. ; More... Classes; class  MechanicalState;  Component storing all state vectors of a simulated body (position, velocity, etc), using the datatype specified in the templace. More...;  ; class  BaseAnimationLoop;  Component responsible for main animation algorithms, managing how and when mechanical computation happens in one animation step. More...;  ; class  BaseConstraint;  Component computing constraints within a simulated body. More...;  ; class  BaseConstraintCorrection;  Component computing constraint forces within a simulated body using the compliance method. More...;  ; class  BaseConstraintSet;  ; class  BaseController;  BaseController Class. Interface of user interaction on SOFA Components. Empty class to provide an interface for the Factory. More...;  ; class  BaseForceField;  Component computing forces within simulated bodies. More...;  ; class  BaseInteractionConstraint;  BaseInteractionConstraint is a constraint linking several bodies (MechanicalState) together. More...;  ; class  BaseInteractionForceField;  BaseInteractionForceField is a force field linking several bodies (MechanicalState) together. More...;  ; class  BaseInteractionProjectiveConstraintSet;  BaseInteractionProjectiveConstraintSet is a constraint linking several bodies (MechanicalState) together. More...;  ; class  BaseLinearSolver;  Abstract base class (as type identifier) for linear system solvers without any API. More...;  ; class  StiffnessMatrixAccumulator;  ; class  ListStiffnessMatrixAccumulator;  ; class  DampingMatrixAccumulator;  ; class  ListDampingMatrixAccumulator;  ; class  StiffnessMatrix;  ; class  DampingMatrix;  ; class  MassMatrixAccumulator;  ; class  ListMassMatrixAccumulator;  ; class  MassMatrix;  ; class  BaseMass;  C",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html
Deployability,integrat,integration,"﻿. SOFA API: sofa::core::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::core::collision Namespace Reference . Classes; class  BroadPhaseDetection;  given a set of root collision models, computes potentially colliding pairs. More...;  ; class  CollisionAlgorithm;  ; class  CollisionGroupManager;  Given a set of contacts, create integration groups. More...;  ; class  Contact;  contact response component handling the response between a pair of models More...;  ; class  ContactManager;  Given a set of detected contact points, create contact response components. More...;  ; class  Detection;  ; class  DetectionOutput;  Generic description of a contact point, used for most collision models except special cases such as GPU-based collisions. More...;  ; class  DetectionOutputVector;  Abstract description of a set of contact point. More...;  ; class  TDetectionOutputVector;  Generic description of a set of contact point between two specific collision models. More...;  ; class  BaseIntersector;  ; class  ElementIntersector;  ; class  IntersectorMap;  ; class  Intersection;  Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. More...;  ; class  MemberElementIntersector;  ; class  BaseIntersectorCreator;  ; class  IntersectorFactory;  ; class  IntersectorCreator;  ; class  NarrowPhaseDetection;  Given a set of potentially colliding pairs of models, compute set of contact points. More...;  ; class  Pipeline;  Pipeline component gather list of collision models and control the sequence of computations. More...;  . sofacorecollision; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html
Integrability,integrat,integration,"﻿. SOFA API: sofa::core::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::core::collision Namespace Reference . Classes; class  BroadPhaseDetection;  given a set of root collision models, computes potentially colliding pairs. More...;  ; class  CollisionAlgorithm;  ; class  CollisionGroupManager;  Given a set of contacts, create integration groups. More...;  ; class  Contact;  contact response component handling the response between a pair of models More...;  ; class  ContactManager;  Given a set of detected contact points, create contact response components. More...;  ; class  Detection;  ; class  DetectionOutput;  Generic description of a contact point, used for most collision models except special cases such as GPU-based collisions. More...;  ; class  DetectionOutputVector;  Abstract description of a set of contact point. More...;  ; class  TDetectionOutputVector;  Generic description of a set of contact point between two specific collision models. More...;  ; class  BaseIntersector;  ; class  ElementIntersector;  ; class  IntersectorMap;  ; class  Intersection;  Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. More...;  ; class  MemberElementIntersector;  ; class  BaseIntersectorCreator;  ; class  IntersectorFactory;  ; class  IntersectorCreator;  ; class  NarrowPhaseDetection;  Given a set of potentially colliding pairs of models, compute set of contact points. More...;  ; class  Pipeline;  Pipeline component gather list of collision models and control the sequence of computations. More...;  . sofacorecollision; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html
Safety,detect,detected,"﻿. SOFA API: sofa::core::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::core::collision Namespace Reference . Classes; class  BroadPhaseDetection;  given a set of root collision models, computes potentially colliding pairs. More...;  ; class  CollisionAlgorithm;  ; class  CollisionGroupManager;  Given a set of contacts, create integration groups. More...;  ; class  Contact;  contact response component handling the response between a pair of models More...;  ; class  ContactManager;  Given a set of detected contact points, create contact response components. More...;  ; class  Detection;  ; class  DetectionOutput;  Generic description of a contact point, used for most collision models except special cases such as GPU-based collisions. More...;  ; class  DetectionOutputVector;  Abstract description of a set of contact point. More...;  ; class  TDetectionOutputVector;  Generic description of a set of contact point between two specific collision models. More...;  ; class  BaseIntersector;  ; class  ElementIntersector;  ; class  IntersectorMap;  ; class  Intersection;  Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. More...;  ; class  MemberElementIntersector;  ; class  BaseIntersectorCreator;  ; class  IntersectorFactory;  ; class  IntersectorCreator;  ; class  NarrowPhaseDetection;  Given a set of potentially colliding pairs of models, compute set of contact points. More...;  ; class  Pipeline;  Pipeline component gather list of collision models and control the sequence of computations. More...;  . sofacorecollision; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html
Testability,test,test,"﻿. SOFA API: sofa::core::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::core::collision Namespace Reference . Classes; class  BroadPhaseDetection;  given a set of root collision models, computes potentially colliding pairs. More...;  ; class  CollisionAlgorithm;  ; class  CollisionGroupManager;  Given a set of contacts, create integration groups. More...;  ; class  Contact;  contact response component handling the response between a pair of models More...;  ; class  ContactManager;  Given a set of detected contact points, create contact response components. More...;  ; class  Detection;  ; class  DetectionOutput;  Generic description of a contact point, used for most collision models except special cases such as GPU-based collisions. More...;  ; class  DetectionOutputVector;  Abstract description of a set of contact point. More...;  ; class  TDetectionOutputVector;  Generic description of a set of contact point between two specific collision models. More...;  ; class  BaseIntersector;  ; class  ElementIntersector;  ; class  IntersectorMap;  ; class  Intersection;  Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. More...;  ; class  MemberElementIntersector;  ; class  BaseIntersectorCreator;  ; class  IntersectorFactory;  ; class  IntersectorCreator;  ; class  NarrowPhaseDetection;  Given a set of potentially colliding pairs of models, compute set of contact points. More...;  ; class  Pipeline;  Pipeline component gather list of collision models and control the sequence of computations. More...;  . sofacorecollision; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html
Performance,load,loader,﻿. SOFA API: sofa::core::loader Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::core::loader Namespace Reference . Classes; class  BaseLoader;  ; class  ImageLoader;  ; class  MeshLoader;  ; class  SceneLoader;  ; class  VoxelLoader;  . Functions; bool SOFA_CORE_API canLoad (const char *filename);  . Function Documentation. ◆ canLoad(). bool SOFA_CORE_API sofa::core::loader::canLoad ; (; const char * ; filename). sofacoreloader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1loader.html
Availability,error,error,":ostream & operator<< (std::ostream &o, const sofa::core::objectmodel::TagSet &tagSet);  ; std::istream & operator>> (std::istream &in, sofa::core::objectmodel::TagSet &tagSet);  . Variables; template class SOFA_CORE_API Data< bool >;  . Typedef Documentation. ◆ AspectRef. using sofa::core::objectmodel::AspectRef = typedef sptr<Aspect>. Enumeration Type Documentation. ◆ ComponentState. enum sofa::core::objectmodel::ComponentState. strong . enum class is a C++ x11 feature (http://en.cppreference.com/w/cpp/language/enum), Indicate the state of a sofa object. . EnumeratorUndefined component that does not make use of this field have this one . Loading the component is loading but never passed successfully its init() function . Valid the component has passed successfully its init function . Dirty the component is ready to be used but requires a call to reinit . Busy the component is doing ""something"", don't trust its values for doing your computation . Invalid the component reached an error and is thus unable to behave normally. . ◆ DataEngineDataType. enum sofa::core::objectmodel::DataEngineDataType. strong . EnumeratorDataEngineNothing ; DataEngineInput ; DataEngineOutput . ◆ PathType. enum sofa::core::objectmodel::PathType. strong . EnumeratorFILE ; DIRECTORY ; BOTH . ◆ TypeOfInsertion. enum sofa::core::objectmodel::TypeOfInsertion. strong . Enum proposing two alternatives on where to add a new object in a node. . EnumeratorAtEnd ; AtBegin . Function Documentation. ◆ classidT(). template<class T > . const ClassInfo& sofa::core::objectmodel::classidT ; (; ). ◆ GetSofaTypeTemplateName() [1/2]. template<typename T > . std::string sofa::core::objectmodel::GetSofaTypeTemplateName ; (; const std::string ; prefix = """"). ◆ GetSofaTypeTemplateName() [2/2]. template<typename T1 , typename T2 , typename ... Ts> . std::string sofa::core::objectmodel::GetSofaTypeTemplateName ; (; const std::string ; prefix = """"). ◆ intrusive_ptr_add_ref(). SOFA_CORE_API void sofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html
Deployability,configurat,configuration,".. > >;  ; class  TClass;  ; class  HasGetCustomTemplateName;  ; class  HasGetCustomClassName;  ; class  HasName;  ; class  HasDataTypeInfo;  ; class  HasGetDefaultTemplateName;  ; class  HasDeprecatedTemplateName;  ; class  HasDeprecatedShortName;  ; class  HasDeprecatedClassName;  ; class  BaseClassNameHelper;  ; class  BaseContext;  Base class for Context classes, storing shared variables and parameters. More...;  ; class  BaseData;  Abstract base class for Data. More...;  ; class  WriteAccessWithRawPtr;  ; class  BaseLink;  Abstract base class for all links in the scene grapn, independently of their type. More...;  ; class  BaseNode;  Base class for simulation nodes. More...;  ; class  BaseObject;  Base class for simulation components. More...;  ; class  BaseObjectDescription;  Base Interface for classes containing the description of an object, used to construct it. More...;  ; class  ClassInfo;  Meta information class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). More...;  ; class  Data;  Container that holds a variable for a component. More...;  ; class  EmptyData;  ; class  DataContentValue;  ; class  DataContentValue< T, false >;  ; class  DataContentValue< T, true >;  ; class  DataFileName;  Data specialized to store filenames, potentially relative to the current directory at the time it was specified. More...;  ; class  DataFileNameVector;  ; class  DataLink;  DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. More...;  ; class  DDGNode;  A DDGNode is a vertex in the data dependencies graph. The data dependency graph is us",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html
Integrability,interface,interface,", used to construct it. More...;  ; class  ClassInfo;  Meta information class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). More...;  ; class  Data;  Container that holds a variable for a component. More...;  ; class  EmptyData;  ; class  DataContentValue;  ; class  DataContentValue< T, false >;  ; class  DataContentValue< T, true >;  ; class  DataFileName;  Data specialized to store filenames, potentially relative to the current directory at the time it was specified. More...;  ; class  DataFileNameVector;  ; class  DataLink;  DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. More...;  ; class  DDGNode;  A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. More...;  ; class  DetachNodeEvent;  ; class  Event;  Base class for all events received by the objects. More...;  ; class  GUIEvent;  This event notifies about GUI interaction. More...;  ; class  HapticDeviceEvent;  This event notifies about haptic device interaction. More...;  ; class  IdleEvent;  This event is propagated along the objects hierarchy at regular interval. More...;  ; class  JoystickEvent;  JoystickEvent Class. More...;  ; class  KeypressedEvent;  This event is propagated along the objects when a key on the keyboard is pressed. More...;  ; class  KeyreleasedEvent;  This event is propagated along the objects when a key on the keyboard is released. More...;  ; class  LinkTraitsDestPtr;  ; c",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html
Modifiability,variab,variables,") to another (Dest) More...;  ; class  AbstractDataLink;  AbstractDataLink is the base class for every link between two data fields The targeted BaseData is called the ""target"", The base object owning the current ""child"" object is the ""owner"" it is possible to store a path in a DataLink, in that case, at each DataLink access the path is resolved to search for a corresponding Data until one is found. Once a Data is set, the path is discarded. More...;  ; class  Aspect;  ; class  AspectPool;  ; class  AspectBuffer;  ; class  Base;  Base class for everything. More...;  ; class  BaseClass;  Class hierarchy reflection base class. More...;  ; class  DeprecatedBaseClass;  ; struct  Parents;  ; struct  TClassParents;  ; struct  TClassParents< void >;  ; struct  TClassParents< Parents< Types... > >;  ; class  TClass;  ; class  HasGetCustomTemplateName;  ; class  HasGetCustomClassName;  ; class  HasName;  ; class  HasDataTypeInfo;  ; class  HasGetDefaultTemplateName;  ; class  HasDeprecatedTemplateName;  ; class  HasDeprecatedShortName;  ; class  HasDeprecatedClassName;  ; class  BaseClassNameHelper;  ; class  BaseContext;  Base class for Context classes, storing shared variables and parameters. More...;  ; class  BaseData;  Abstract base class for Data. More...;  ; class  WriteAccessWithRawPtr;  ; class  BaseLink;  Abstract base class for all links in the scene grapn, independently of their type. More...;  ; class  BaseNode;  Base class for simulation nodes. More...;  ; class  BaseObject;  Base class for simulation components. More...;  ; class  BaseObjectDescription;  Base Interface for classes containing the description of an object, used to construct it. More...;  ; class  ClassInfo;  Meta information class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html
Performance,load,loading,"e::objectmodel::BaseData &df);  ; template<class T > ; const ClassInfo & classidT ();  ; std::ostream & operator<< (std::ostream &o, const ComponentState &s);  Defining the in/ou operator for use of component status with Data<> More...;  ; std::istream & operator>> (std::istream &i, ComponentState &s);  ; std::ostream & operator<< (std::ostream &o, const sofa::core::objectmodel::TagSet &tagSet);  ; std::istream & operator>> (std::istream &in, sofa::core::objectmodel::TagSet &tagSet);  . Variables; template class SOFA_CORE_API Data< bool >;  . Typedef Documentation. ◆ AspectRef. using sofa::core::objectmodel::AspectRef = typedef sptr<Aspect>. Enumeration Type Documentation. ◆ ComponentState. enum sofa::core::objectmodel::ComponentState. strong . enum class is a C++ x11 feature (http://en.cppreference.com/w/cpp/language/enum), Indicate the state of a sofa object. . EnumeratorUndefined component that does not make use of this field have this one . Loading the component is loading but never passed successfully its init() function . Valid the component has passed successfully its init function . Dirty the component is ready to be used but requires a call to reinit . Busy the component is doing ""something"", don't trust its values for doing your computation . Invalid the component reached an error and is thus unable to behave normally. . ◆ DataEngineDataType. enum sofa::core::objectmodel::DataEngineDataType. strong . EnumeratorDataEngineNothing ; DataEngineInput ; DataEngineOutput . ◆ PathType. enum sofa::core::objectmodel::PathType. strong . EnumeratorFILE ; DIRECTORY ; BOTH . ◆ TypeOfInsertion. enum sofa::core::objectmodel::TypeOfInsertion. strong . Enum proposing two alternatives on where to add a new object in a node. . EnumeratorAtEnd ; AtBegin . Function Documentation. ◆ classidT(). template<class T > . const ClassInfo& sofa::core::objectmodel::classidT ; (; ). ◆ GetSofaTypeTemplateName() [1/2]. template<typename T > . std::string sofa::core::objectmodel::GetSofaTypeT",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html
Security,access,access,"﻿. SOFA API: sofa::core::objectmodel Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core::objectmodel Namespace Reference . Namespaces;  base;  ;  basecontext;  ;  lifecycle;  . Classes; class  SingleLink;  Container of single links in the scenegraph, from a given type of object (Owner) to another (Dest) More...;  ; class  AbstractDataLink;  AbstractDataLink is the base class for every link between two data fields The targeted BaseData is called the ""target"", The base object owning the current ""child"" object is the ""owner"" it is possible to store a path in a DataLink, in that case, at each DataLink access the path is resolved to search for a corresponding Data until one is found. Once a Data is set, the path is discarded. More...;  ; class  Aspect;  ; class  AspectPool;  ; class  AspectBuffer;  ; class  Base;  Base class for everything. More...;  ; class  BaseClass;  Class hierarchy reflection base class. More...;  ; class  DeprecatedBaseClass;  ; struct  Parents;  ; struct  TClassParents;  ; struct  TClassParents< void >;  ; struct  TClassParents< Parents< Types... > >;  ; class  TClass;  ; class  HasGetCustomTemplateName;  ; class  HasGetCustomClassName;  ; class  HasName;  ; class  HasDataTypeInfo;  ; class  HasGetDefaultTemplateName;  ; class  HasDeprecatedTemplateName;  ; class  HasDeprecatedShortName;  ; class  HasDeprecatedClassName;  ; class  BaseClassNameHelper;  ; class  BaseContext;  Base class for Context classes, storing shared variables and parameters. More...;  ; class  BaseData;  Abstract base class for Data. More...;  ; class  WriteAccessWithRawPtr;  ; class  BaseLink;  Abstract base class for all links in the scene grapn, independently of their type. More...;  ; class  BaseNode;  Base class for simulation nodes. More...;  ; class  BaseObject;  Base class for simulation components. More...;  ; class  BaseObjectDescriptio",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::visual Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Enumerations |; Functions |; Variables . sofa::core::visual Namespace Reference . Namespaces;  visualparams;  . Classes; class  DisplayFlags;  Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. More...;  ; class  FlagTreeItem;  ; class  Shader;  A basic interface to define a Shader for different system (OpenGL, DirectX, ...). More...;  ; class  ShaderElement;  A basic interface to define an element to be used with a Shader. More...;  ; struct  tristate;  ; class  VisualLoop;  ; class  VisualManager;  ; class  VisualModel;  An interface which all VisualModel inherit. More...;  ; class  VisualParams;  Class gathering parameters used by visual components and by the draw method of each component. Transmitted by visitors. More...;  ; class  VisualState;  . Enumerations; enum  { API_OpenGL = 0; , API_OGRE = 1; , API_OpenSceneGraph = 2; , API_OpenSG = 3; };  The enumeration used to describe potentially supported graphics API. More...;  . Functions; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const FlagTreeItem &root);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, FlagTreeItem &root);  ; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const DisplayFlags &flags);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, DisplayFlags &flags);  ; DisplayFlags merge_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; DisplayFlags difference_displayFlags (const Dis",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html
Modifiability,inherit,inherit," API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Enumerations |; Functions |; Variables . sofa::core::visual Namespace Reference . Namespaces;  visualparams;  . Classes; class  DisplayFlags;  Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. More...;  ; class  FlagTreeItem;  ; class  Shader;  A basic interface to define a Shader for different system (OpenGL, DirectX, ...). More...;  ; class  ShaderElement;  A basic interface to define an element to be used with a Shader. More...;  ; struct  tristate;  ; class  VisualLoop;  ; class  VisualManager;  ; class  VisualModel;  An interface which all VisualModel inherit. More...;  ; class  VisualParams;  Class gathering parameters used by visual components and by the draw method of each component. Transmitted by visitors. More...;  ; class  VisualState;  . Enumerations; enum  { API_OpenGL = 0; , API_OGRE = 1; , API_OpenSceneGraph = 2; , API_OpenSG = 3; };  The enumeration used to describe potentially supported graphics API. More...;  . Functions; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const FlagTreeItem &root);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, FlagTreeItem &root);  ; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const DisplayFlags &flags);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, DisplayFlags &flags);  ; DisplayFlags merge_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; DisplayFlags difference_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; trist",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html
Security,access,accessible,"﻿. SOFA API: sofa::core::visual Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Enumerations |; Functions |; Variables . sofa::core::visual Namespace Reference . Namespaces;  visualparams;  . Classes; class  DisplayFlags;  Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. More...;  ; class  FlagTreeItem;  ; class  Shader;  A basic interface to define a Shader for different system (OpenGL, DirectX, ...). More...;  ; class  ShaderElement;  A basic interface to define an element to be used with a Shader. More...;  ; struct  tristate;  ; class  VisualLoop;  ; class  VisualManager;  ; class  VisualModel;  An interface which all VisualModel inherit. More...;  ; class  VisualParams;  Class gathering parameters used by visual components and by the draw method of each component. Transmitted by visitors. More...;  ; class  VisualState;  . Enumerations; enum  { API_OpenGL = 0; , API_OGRE = 1; , API_OpenSceneGraph = 2; , API_OpenSG = 3; };  The enumeration used to describe potentially supported graphics API. More...;  . Functions; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const FlagTreeItem &root);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, FlagTreeItem &root);  ; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const DisplayFlags &flags);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, DisplayFlags &flags);  ; DisplayFlags merge_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; DisplayFlags difference_displayFlags (const Dis",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html
Integrability,wrap,wrap,"e< sofa::defaulttype::RigidDeriv< N, Real > >;  ; class  EigenSparseToMapMapSparseMatrix;  ; struct  EigenSparseToMapMapSparseMatrixVec;  ; class  EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; class  RigidCoord< 3, real >;  ; class  RigidCoord< 2, real >;  ; class  RigidDeriv< 3, real >;  ; class  RigidDeriv< 2, real >;  ; class  RigidMass< 3, real >;  ; class  RigidMass< 2, real >;  ; class  StdRigidTypes< 3, real >;  ; class  StdRigidTypes< 2, real >;  ; class  SolidTypes;  ; class  TemplateAliases;  Class used to store and resolve template aliases. More...;  ; class  RegisterTemplateAlias;  Helper class used to register a template alias in the TemplateAliases class. More...;  ; struct  DefaultDataTypeInfo;  ; class  DataTypeName;  ; class  HasGetTypeName;  add a compatibility layer to supper the new existing GetTypeName. More...;  ; class  DataTypeInfoDynamicWrapper;  wrap a DataTypeInfo type_traits in an AbstractTypeInfo More...;  ; struct  BoolTypeInfo;  ; struct  FixedArrayTypeInfo;  ; struct  IncompleteTypeInfo;  ; struct  IntegerTypeInfo;  ; struct  ScalarTypeInfo;  ; struct  SetTypeInfo;  ; struct  TextTypeInfo;  ; struct  VectorTypeInfo;  ; class  NameOnlyTypeInfo;  ; class  NoTypeInfo;  ; struct  DataTypeInfo< bool >;  ; struct  BoundingBoxTypeInfo;  ; struct  DataTypeInfo< type::BoundingBox >;  ; struct  DataTypeInfo< sofa::type::fixed_array< T, N > >;  ; struct  DataTypeInfo< char >;  ; struct  DataTypeInfo< unsigned char >;  ; struct  DataTypeInfo< short >;  ; struct  DataTypeInfo< unsigned short >;  ; struct  DataTypeInfo< int >;  ; struct  DataTypeInfo< unsigned int >;  ; struct  DataTypeInfo< long >;  ; struct  DataTypeInfo< unsigned long >;  ; struct  DataTypeInfo< long long >;  ; struct  DataTypeInfo< unsigned long long >;  ; struct  DataTypeInfo< sofa::type::Mat< L, C, real > >;  ; struct  DataTypeInfo< sofa::type::Quat< T > >;  ; class  Data",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1defaulttype.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html
Testability,test,tests," operator/ (RigidDeriv< 2, real > r, real2 a);  ; template<typename R , typename T > ; constexpr type::Vec< 2, R > velocityAtRotatedPoint (const RigidDeriv< 2, T > &v, const type::Vec< 2, R > &p);  Velocity at point p, where p is the offset from the origin of the frame, given in the same coordinate system as the velocity of the origin. More...;  ; template<typename R , typename T > ; constexpr RigidDeriv< 2, T > velocityAtRotatedPoint (const RigidDeriv< 2, T > &v, const RigidCoord< 2, R > &p);  ; template<typename real > ; constexpr RigidDeriv< 3, real > operator* (const RigidDeriv< 3, real > &d, const RigidMass< 3, real > &m);  ; template<typename real > ; constexpr RigidDeriv< 3, real > operator* (const RigidMass< 3, real > &m, const RigidDeriv< 3, real > &d);  ; template<typename real > ; constexpr RigidDeriv< 3, real > operator/ (const RigidDeriv< 3, real > &d, const RigidMass< 3, real > &m);  ; template<typename real > ; constexpr RigidDeriv< 2, real > operator* (const RigidDeriv< 2, real > &d, const RigidMass< 2, real > &m);  ; template<typename real > ; constexpr RigidDeriv< 2, real > operator/ (const RigidDeriv< 2, real > &d, const RigidMass< 2, real > &m);  ; template<typename T > ; const Vec< 3, T > getVCenter (const Vec< 6, T > &v);  ; template<typename T > ; const Vec< 3, T > getVOrientation (const Vec< 6, T > &v);  ; TemplateAliasesMap & getTemplateAliasesMap ();  ; template<class T > ; constexpr bool isDouble ();  ; template<> ; constexpr bool isDouble< double > ();  ; constexpr bool isSRealDouble ();  ; constexpr bool isSRealFloat ();  ; Helpers; Helper Functions to more easily create tests and check the results. . Variables; std::unordered_map< std::string, MatrixExportFunction > matrixExporterMap;  ; sofa::helper::OptionsGroup matrixExporterOptionsGroup {""txt"", ""csv""};  ; template class SOFA_DEFAULTTYPE_API SolidTypes< double >;  ; template class SOFA_DEFAULTTYPE_API SolidTypes< float >;  . Typedef Documentation. ◆ MatrixExportFunction. using sofa::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1defaulttype.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html
Integrability,depend,dependencies,"at &radx, const float &rady, const float &radz, const int subd1=8, const int subd2=8);  ; template<typename V > ; void drawWireSphere (const V &center, const float &rad, const int subd1=8, const int subd2=8);  ; template<typename V > ; void drawTorus (const float *coordinateMatrix, const float &bodyRad=0.0, const float &rad=1.0, const int precision=20, const V &color=sofa::type::fixed_array< int, 3 >(255, 215, 180));  ; template<typename V > ; void drawEmptyParallelepiped (const V &vert1, const V &vert2, const V &vert3, const V &vert4, const V &vecFromFaceToOppositeFace, const float &rad=1.0, const int precision=8, const V &color=sofa::type::RGBAColor::red());  ; SOFA_GL_API void glfntInit (void);  ; SOFA_GL_API void glfntWriteBitmap (float x, float y, char *s);  ; SOFA_GL_API void glfntClose (void);  ; std::string CombineHeaders (std::string header, const std::string &shaderStage, std::string source);  ; SOFA_GL_API void init ();  Initialize the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_GL_API bool isInitialized ();  Return true if and only if the Sofa.GL library has been initialized. More...;  ; SOFA_GL_API void cleanup ();  Clean up the resources used by the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_GL_API bool isCleanedUp ();  Return true if and only if the Sofa.GL library has been cleaned up. More...;  ; template<int N> ; void glVertexNv (const float *);  ; template<> ; void glVertexNv< 3 > (const float *p);  ; template<> ; void glVertexNv< 2 > (const float *p);  ; template<> ; void glVertexNv< 1 > (const float *p);  ; template<int N> ; void glVertexNv (const double *p);  ; template<> ; void glVertexNv< 2 > (const double *p);  ; template<> ; void glVertexNv< 1 > (const double *p);  ; template<class Coord > ; void glVertexT (const Coord &c);  ; template<> ; void glVertexT< double > (const double &c);  ; template<> ; void glVertexT< float > (const float &c);  ; temp",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gl.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html
Usability,simpl,simple,". void sofa::gl::component::rendering3d::glVertex3v ; (; const double * ; d). ◆ glVertex3v() [2/2]. void sofa::gl::component::rendering3d::glVertex3v ; (; const float * ; d). ◆ init(). SOFA_GL_COMPONENT_RENDERING3D_API void sofa::gl::component::rendering3d::init ; (; ). ◆ initExternalModule(). void sofa::gl::component::rendering3d::initExternalModule ; (; ). Variable Documentation. ◆ ClipPlaneClass. int sofa::gl::component::rendering3d::ClipPlaneClass. Initial value:= core::RegisterObject(""OpenGL Clipping Plane""); .add< ClipPlane >(). ◆ DataDisplayClass. int sofa::gl::component::rendering3d::DataDisplayClass. Initial value:= core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >(). ◆ MergeVisualModelsClass. int sofa::gl::component::rendering3d::MergeVisualModelsClass. Initial value:= core::RegisterObject(""Merge several visual models""); .add< MergeVisualModels >(true). ◆ OglCylinderModelClass. int sofa::gl::component::rendering3d::OglCylinderModelClass. Initial value:= core::RegisterObject(""A simple visualization for set of cylinder.""); .add< OglCylinderModel >(). ◆ OglModelClass. int sofa::gl::component::rendering3d::OglModelClass. Initial value:= core::RegisterObject(""Generic visual model for OpenGL display""); .add< OglModel >(). ◆ OglSceneFrameClass. int sofa::gl::component::rendering3d::OglSceneFrameClass. Initial value:= core::RegisterObject(""Display a frame at the corner of the scene view""); .add< OglSceneFrame >(). ◆ PointSplatModelClass. int sofa::gl::component::rendering3d::PointSplatModelClass. Initial value:= core::RegisterObject(""A simple visualization for a cloud of points.""); .add< PointSplatModel >(); .addAlias(""PointSplat""). ◆ SlicedVolumetricModelClass. int sofa::gl::component::rendering3d::SlicedVolumetricModelClass. Initial value:= core::RegisterObject(""A simple visualization for a cloud of points.""); .add< SlicedVolumetricModel >(). sofaglcomponentrendering3d; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html
Availability,down,download,"nst char * sofa::gl::component::shader::getModuleVersion ; (; ). ◆ init(). SOFA_GL_COMPONENT_SHADER_API void sofa::gl::component::shader::init ; (; ). ◆ initExternalModule(). void sofa::gl::component::shader::initExternalModule ; (; ). Variable Documentation. ◆ CompositingVisualLoopClass. int sofa::gl::component::shader::CompositingVisualLoopClass. Initial value:= core::RegisterObject(""Visual loop enabling multipass rendering. Needs multiple fbo data and a compositing shader""); .add< CompositingVisualLoop >(). ◆ DirectionalLightClass. int sofa::gl::component::shader::DirectionalLightClass. Initial value:= core::RegisterObject(""A directional light illuminating the scene with parallel rays of light (can cast shadows).""); .add< DirectionalLight >(). ◆ LightManagerClass. int sofa::gl::component::shader::LightManagerClass. Initial value:= RegisterObject; (""Manage a set of lights that can cast hard and soft shadows.Soft Shadows is done using Variance Shadow Mapping ""; ""(http://developer.download.nvidia.com/SDK/10.5/direct3d/Source/VarianceShadowMapping/Doc/VarianceShadowMapping.pdf)""); .add< LightManager >(); sofa::core::RegisterObjectDefinition: ObjectFactory.h:386; sofa::core::RegisterObject::addRegisterObject & add(bool defaultTemplate=false)Definition: ObjectFactory.h:402. ◆ OglFloat2AttributeClass. int sofa::gl::component::shader::OglFloat2AttributeClass = core::RegisterObject ( ""OglFloat2Attribute"" ).add< OglFloat2Attribute >(). ◆ OglFloat2VariableClass. int sofa::gl::component::shader::OglFloat2VariableClass. Initial value:= core::RegisterObject(""OglFloat2Variable""); .add< OglFloat2Variable >(). ◆ OglFloat3AttributeClass. int sofa::gl::component::shader::OglFloat3AttributeClass = core::RegisterObject ( ""OglFloat3Attribute"" ).add< OglFloat3Attribute >(). ◆ OglFloat3VariableClass. int sofa::gl::component::shader::OglFloat3VariableClass. Initial value:= core::RegisterObject(""OglFloat3Variable""); .add< OglFloat3Variable >(). ◆ OglFloat4AttributeClass. int sofa::gl::comp",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1shader.html
Modifiability,variab,variable,ibute;  ; class  OglFloat3Attribute;  ; class  OglFloat4Attribute;  ; class  OglIntAttribute;  ; class  OglInt2Attribute;  ; class  OglInt3Attribute;  ; class  OglInt4Attribute;  ; class  OglUIntAttribute;  ; class  OglUInt2Attribute;  ; class  OglUInt3Attribute;  ; class  OglUInt4Attribute;  ; class  OglOITShader;  ; class  OglRenderingSRGB;  The utility to enable/disable sRGB rendering. More...;  ; class  OglShader;  Utility to use shader for a visual model in OpenGL. More...;  ; class  OglShaderElement;  Abstract class which defines a element to be used with a OglShader. More...;  ; class  OglShaderMacro;  Small class to define macro into an OglShader. More...;  ; class  OglShaderDefineMacro;  ; class  OglShaderVisualModel;  ; class  OglShadowShader;  ; class  OglTexture;  Defines an uniform sampler (texture) for a OglShader. More...;  ; class  OglTexture2D;  ; class  OglTexturePointer;  Defines an uniform sampler (texture) for a OglShader. More...;  ; class  OglVariable;  Defines an uniform variable for a OglShader. More...;  ; class  OglIntVariable;  ; class  OglInt2Variable;  ; class  OglInt3Variable;  ; class  OglInt4Variable;  ; class  OglFloatVariable;  ; class  OglFloat2Variable;  ; class  OglFloat3Variable;  ; class  OglFloat4Variable;  ; class  OglIntVectorVariable;  ; class  OglIntVector2Variable;  ; class  OglIntVector3Variable;  ; class  OglIntVector4Variable;  ; class  OglFloatVectorVariable;  ; class  OglFloatVector2Variable;  ; class  OglFloatVector3Variable;  ; class  OglFloatVector4Variable;  ; class  OglMatrix2Variable;  ; class  OglMatrix3Variable;  ; class  OglMatrix4Variable;  ; class  OglMatrix2x3Variable;  ; class  OglMatrix3x2Variable;  ; class  OglMatrix2x4Variable;  ; class  OglMatrix4x2Variable;  ; class  OglMatrix3x4Variable;  ; class  OglMatrix4x3Variable;  ; class  OglMatrix4VectorVariable;  ; class  VisualOITDrawVisitor;  ; class  OrderIndependentTransparencyManager;  Utility to manage transparency (translucency) into an Opengl scen,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1shader.html
Performance,perform,performer,"; class  OperationCreator;  ; class  TOperationCreator;  ; class  OperationFactory;  ; class  RegisterOperation;  ; class  CallBackPicker;  ; class  CallBackRender;  ; class  PickHandler;  ; class  BaseViewerArgument;  ; class  ViewerQtArgument;  . Enumerations; enum  { BTLEFT_MODE = 101; , BTRIGHT_MODE = 102; , BTMIDDLE_MODE = 103; };  ; enum  MOUSE_BUTTON { LEFT; , MIDDLE; , RIGHT; , NONE; };  ; enum  MOUSE_STATUS { PRESSED; , RELEASED; , ACTIVATED; , DEACTIVATED; };  . Functions; void decodeCollisionElement (const RGBAColor &colour, BodyPicked &body);  ; void decodePosition (BodyPicked &body, const RGBAColor &colour, const TriangleCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index);  ; void decodePosition (BodyPicked &body, const RGBAColor &colour, const SphereCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index);  ; void decodeCollisionElement (const sofa::type::Vec4f &colour, sofa::gui::component::performer::BodyPicked &body)=delete;  ; void decodePosition (sofa::gui::component::performer::BodyPicked &body, const sofa::type::Vec4f &colour, const sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index)=delete;  ; void decodePosition (sofa::gui::component::performer::BodyPicked &body, const sofa::type::Vec4f &colour, const sofa::component::collision::geometry::SphereCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index)=delete;  ; void init ();  . Variables; FileRepository GuiDataRepository (""GUI_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa/gui/qt"") }, { { Utils::getSofaPathTo(""etc/Sofa.Gui.Qt.ini"").c_str(), {""RESOURCES_DIR""} } });  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorBTLEFT_MODE ; BTRIGHT_MODE ; BTMIDDLE_MODE . ◆ MOUSE_BUTTON. enum sofa::gui::common::MOUSE_BUTTON. EnumeratorLEFT ; MIDDLE ; RIGHT ; NONE . ◆ MOUSE_STATUS. enum sofa::gui::common::MOUSE_STATUS. EnumeratorPR",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1common.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1common.html
Deployability,configurat,configuration,"();  ; void init ();  . Variables; int AddFrameButtonSettingClass;  ; int AddRecordedCameraButtonSettingClass;  ; int StartNavigationButtonSettingClass;  ; int AttachBodyButtonSettingClass;  ; int ConstraintAttachButtonSettingClass;  ; int FixPickedParticleButtonSettingClass;  . Function Documentation. ◆ getModuleName(). const char * sofa::gui::component::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::gui::component::getModuleVersion ; (; ). ◆ init(). SOFA_GUI_COMPONENT_API void sofa::gui::component::init ; (; ). ◆ initExternalModule(). void sofa::gui::component::initExternalModule ; (; ). Variable Documentation. ◆ AddFrameButtonSettingClass. int sofa::gui::component::AddFrameButtonSettingClass. Initial value:= core::RegisterObject(""Add a frame to a skinned model""); .add< AddFrameButtonSetting >(); .addAlias(""AddFrameButton""). ◆ AddRecordedCameraButtonSettingClass. int sofa::gui::component::AddRecordedCameraButtonSettingClass. Initial value:= core::RegisterObject(""Save Camera's View Point Button configuration""); .add< AddRecordedCameraButtonSetting >(); .addAlias(""AddRecordedCameraButton""). ◆ AttachBodyButtonSettingClass. int sofa::gui::component::AttachBodyButtonSettingClass. Initial value:= core::RegisterObject(""Attach Body Button configuration""); .add< AttachBodyButtonSetting >(); .addAlias(""AttachBodyButton""). ◆ ConstraintAttachButtonSettingClass. int sofa::gui::component::ConstraintAttachButtonSettingClass. Initial value:= core::RegisterObject(""Attach an object to the mouse using lagrangian multiplier""); .add< ConstraintAttachButtonSetting >(). ◆ FixPickedParticleButtonSettingClass. int sofa::gui::component::FixPickedParticleButtonSettingClass. Initial value:= core::RegisterObject(""Fix a picked particle in space""); .add< FixPickedParticleButtonSetting >(); .addAlias(""FixPickedParticleButton""). ◆ StartNavigationButtonSettingClass. int sofa::gui::component::StartNavigationButtonSettingClass. Initial value:= core::RegisterObject(""Start Navigation Bu",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html
Modifiability,config,configuration,"();  ; void init ();  . Variables; int AddFrameButtonSettingClass;  ; int AddRecordedCameraButtonSettingClass;  ; int StartNavigationButtonSettingClass;  ; int AttachBodyButtonSettingClass;  ; int ConstraintAttachButtonSettingClass;  ; int FixPickedParticleButtonSettingClass;  . Function Documentation. ◆ getModuleName(). const char * sofa::gui::component::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::gui::component::getModuleVersion ; (; ). ◆ init(). SOFA_GUI_COMPONENT_API void sofa::gui::component::init ; (; ). ◆ initExternalModule(). void sofa::gui::component::initExternalModule ; (; ). Variable Documentation. ◆ AddFrameButtonSettingClass. int sofa::gui::component::AddFrameButtonSettingClass. Initial value:= core::RegisterObject(""Add a frame to a skinned model""); .add< AddFrameButtonSetting >(); .addAlias(""AddFrameButton""). ◆ AddRecordedCameraButtonSettingClass. int sofa::gui::component::AddRecordedCameraButtonSettingClass. Initial value:= core::RegisterObject(""Save Camera's View Point Button configuration""); .add< AddRecordedCameraButtonSetting >(); .addAlias(""AddRecordedCameraButton""). ◆ AttachBodyButtonSettingClass. int sofa::gui::component::AttachBodyButtonSettingClass. Initial value:= core::RegisterObject(""Attach Body Button configuration""); .add< AttachBodyButtonSetting >(); .addAlias(""AttachBodyButton""). ◆ ConstraintAttachButtonSettingClass. int sofa::gui::component::ConstraintAttachButtonSettingClass. Initial value:= core::RegisterObject(""Attach an object to the mouse using lagrangian multiplier""); .add< ConstraintAttachButtonSetting >(). ◆ FixPickedParticleButtonSettingClass. int sofa::gui::component::FixPickedParticleButtonSettingClass. Initial value:= core::RegisterObject(""Fix a picked particle in space""); .add< FixPickedParticleButtonSetting >(); .addAlias(""FixPickedParticleButton""). ◆ StartNavigationButtonSettingClass. int sofa::gui::component::StartNavigationButtonSettingClass. Initial value:= core::RegisterObject(""Start Navigation Bu",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Functions |; Variables . sofa::gui::component Namespace Reference . Namespaces;  performer;  . Classes; class  AddFrameButtonSetting;  ; class  AddRecordedCameraButtonSetting;  ; class  StartNavigationButtonSetting;  ; class  AttachBodyButtonSetting;  ; class  ConstraintAttachButtonSetting;  ; class  FixPickedParticleButtonSetting;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; void init ();  . Variables; int AddFrameButtonSettingClass;  ; int AddRecordedCameraButtonSettingClass;  ; int StartNavigationButtonSettingClass;  ; int AttachBodyButtonSettingClass;  ; int ConstraintAttachButtonSettingClass;  ; int FixPickedParticleButtonSettingClass;  . Function Documentation. ◆ getModuleName(). const char * sofa::gui::component::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::gui::component::getModuleVersion ; (; ). ◆ init(). SOFA_GUI_COMPONENT_API void sofa::gui::component::init ; (; ). ◆ initExternalModule(). void sofa::gui::component::initExternalModule ; (; ). Variable Documentation. ◆ AddFrameButtonSettingClass. int sofa::gui::component::AddFrameButtonSettingClass. Initial value:= core::RegisterObject(""Add a frame to a skinned model""); .add< AddFrameButtonSetting >(); .addAlias(""AddFrameButton""). ◆ AddRecordedCameraButtonSettingClass. int sofa::gui::component::AddRecordedCameraButtonSettingClass. Initial value:= core::RegisterObject(""Save Camera's View Point Button configuration""); .add< AddRecordedCameraButtonSetting >(); .addAlias(""AddRecordedCameraButton""). ◆ AttachBodyButtonSettingClass. int sofa::gui::component::AttachBodyButtonSettingClass. Initial value:= core::RegisterObject(""Attach Body Button configuration""); .add< AttachBodyButtonSetting >();",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::gui::component::performer Namespace Reference . Classes; class  AddRecordedCameraPerformer;  ; class  AttachBodyPerformer;  ; class  BaseAttachBodyPerformer;  ; class  ComponentMouseInteraction;  ; class  TComponentMouseInteraction;  ; class  ConstraintAttachBodyPerformer;  ; class  FixParticlePerformerConfiguration;  ; class  FixParticlePerformer;  ; class  InciseAlongPathPerformerConfiguration;  ; class  InciseAlongPathPerformer;  ; class  MouseInteractor;  class to execute specific tasks of the Mouse More...;  ; class  InteractionPerformer;  ; class  TInteractionPerformer;  ; struct  BodyPicked;  Represents a point on an object. More...;  ; class  BaseMouseInteractor;  ; class  RemovePrimitivePerformerConfiguration;  ; class  RemovePrimitivePerformer;  ; class  StartNavigationPerformer;  ; class  SuturePointPerformerConfiguration;  ; class  SuturePointPerformer;  ; class  TopologicalChangeManager;  a class to manage the handling of topological changes which have been requested from the Collision Model More...;  . Typedefs; using FixParticlePerformer3d = FixParticlePerformer< defaulttype::Vec3Types >;  . Variables; helper::Creator< InteractionPerformer::InteractionPerformerFactory, AddRecordedCameraPerformer > AddRecordedCameraPerformerClass (""AddRecordedCamera"");  ; helper::Creator< InteractionPerformer::InteractionPerformerFactory, AttachBodyPerformer< defaulttype::Vec2Types > > AttachBodyPerformerVec2dClass (""AttachBody"", true);  ; helper::Creator< InteractionPerformer::InteractionPerformerFactory, AttachBodyPerformer< defaulttype::Vec3Types > > AttachBodyPerformerVec3dClass (""AttachBody"", true);  ; helper::Creator< InteractionPerformer::InteractionPerformerFactory, AttachBodyPerformer< defaulttype::Rigid3Types > > AttachBodyPerformerRigid3dClass (""AttachBody"", true);  ; helper::Creat",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1component_1_1performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component_1_1performer.html
Deployability,update,update,"; class  data_widget_container< sofa::core::topology::Topology::Tetrahedron >;  ; class  vector_data_trait< sofa::core::topology::Topology::Hexahedron >;  ; class  data_widget_container< sofa::core::topology::Topology::Hexahedron >;  ; class  vector_data_trait< sofa::type::Vec< N, T > >;  sofa::defaulttype::Vec support More...;  ; class  data_widget_container< sofa::type::Vec< N, T > >;  ; class  vector_data_trait< Quat< T > >;  std::helper::Quater support More...;  ; class  data_widget_container< Quat< T > >;  ; class  data_widget_trait< Polynomial_LD< Real, N > >;  ; class  vector_data_trait< sofa::type::Mat< L, C, T > >;  sofa::type::Mat support More...;  ; class  data_widget_container< sofa::type::Mat< L, C, T > >;  ; class  RadioDataWidget;  OptionsGroup support. More...;  ; class  SofaMouseManager;  ; class  SofaPluginManager;  ; union  ObjectModelPtr;  ; struct  ObjectModel;  ; class  SofaSceneGraphWidget;  ; class  CaptureOptionsWidget;  ; class  MovieOptionsWidget;  ; class  SofaVideoRecorderManager;  ; class  SofaWindowDataGraph;  ; class  ProfilerChartView;  The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. More...;  ; class  SofaWindowProfiler;  The SofaWindowProfiler class This class is a QDialog widget to display information recorded by AdvancedTimer mechanism At each step, info will be gathered from the AdvancedTimer using class sofa::helper::StepData Info will be displayed by: More...;  ; class  struct_data_trait;  Generic data structures support. More...;  ; class  struct_data_trait_var;  ; class  struct_data_widget_container;  ; class  struct_data_widget_container< T, 0 >;  ; class  default_struct_data_trait_var;  ; class  struct_data_trait< sofa::defaulttype::RigidCoord< N, T > >;  Rigids (as data-structures) support. More...;  ; class  data_widget_container< sofa::defaulttype::RigidCoord< N, T > >;  ; class  struct_data_trait< sofa::defaulttype::RigidMass< N, T > >;  ;",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html
Modifiability,variab,variable-sized,"es;  ; class  GraphSetting;  ; class  GraphOptionWidget;  ; class  GraphWidget;  ; class  graph_data_widget_container;  ; class  GraphDataWidget;  ; class  GraphDataWidget_Linear;  ; class  ObjectStateListener;  ; class  GraphListenerQListView;  ; class  GraphVisitor;  ; class  LinkWidget;  Abstract Interface of a qwidget which allows to edit a link. More...;  ; class  QDisplayLinkInfoWidget;  Widget used to display the name of a Link. More...;  ; class  ClickableTextEdit;  ; struct  ModifyObjectFlags;  ; class  ModifyObject;  ; class  BrowserHistoryEntry;  ; class  BrowserHistory;  ; class  SofaEnrichedPage;  ; class  DocBrowser;  ; class  InformationOnPickCallBack;  ; class  ColourPickingRenderCallBack;  ; struct  dataTime;  ; class  PieWidget;  ; class  ChartsWidget;  ; class  QDataDescriptionWidget;  ; class  QDisplayDataWidget;  ; class  QDataSimpleEdit;  ; class  QPoissonRatioWidget;  ; class  QDisplayLinkWidget;  ; class  QLinkSimpleEdit;  ; class  QDisplayTreeItemWidget;  ; class  QDisplayPropertyWidget;  ; class  QEnergyStatWidget;  ; class  QGraphStatWidget;  ; class  QMenuFilesRecentlyOpened;  ; class  flat_data_trait;  ; class  default_flat_data_trait;  ; class  flat_data_trait< T, TYPE_SINGLE >;  ; class  flat_struct_data_trait;  ; class  flat_struct_data_trait< T, 0 >;  ; class  flat_data_trait< T, TYPE_STRUCT >;  ; class  flat_vector_data_trait;  ; class  flat_data_trait< T, TYPE_VECTOR >;  ; class  table_data_widget_container;  ; class  vector_data_trait< std::vector< T > >;  variable-sized vectors support More...;  ; class  vector_data_trait< sofa::type::vector< T > >;  ; class  vector_data_trait< std::map< std::string, T > >;  std::map from strings support More...;  ; class  vector_data_trait< std::deque< T > >;  dequeues support More...;  ; class  QTableViewUpdater;  ; class  QTableModelUpdater;  ; class  QMomentumStatWidget;  ; class  QMouseOperation;  ; class  QAttachOperation;  ; class  QAddRecordedCameraOperation;  ; class  QStartNavigationOpe",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html
Performance,load,loadQtConfWithCustomPrefix,,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html
Security,access,accessor,"﻿. SOFA API: sofa::gui::qt Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::gui::qt Namespace Reference . Namespaces;  materialdatawidget_h;  Private namespace. ;  ;  qrgbacolorpicker_h;  Private namespace. ;  ;  rgbacolordatawidget_h;  ;  viewer;  . Classes; class  AboutSOFADialog;  ; class  DataFileNameWidget;  ; class  DataWidget;  Abstract Interface of a qwidget which allows to edit a data. More...;  ; class  TDataWidget;  This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. More...;  ; class  QPushButtonUpdater;  ; class  QDisplayDataInfoWidget;  ; class  DisplayFlagWidget;  ; class  DisplayFlagsDataWidget;  ; class  GenericDataWidget;  ; class  GenGraphForm;  ; class  GLPickHandler;  ; class  QDataSeries;  ; class  GraphSetting;  ; class  GraphOptionWidget;  ; class  GraphWidget;  ; class  graph_data_widget_container;  ; class  GraphDataWidget;  ; class  GraphDataWidget_Linear;  ; class  ObjectStateListener;  ; class  GraphListenerQListView;  ; class  GraphVisitor;  ; class  LinkWidget;  Abstract Interface of a qwidget which allows to edit a link. More...;  ; class  QDisplayLinkInfoWidget;  Widget used to display the name of a Link. More...;  ; class  ClickableTextEdit;  ; struct  ModifyObjectFlags;  ; class  ModifyObject;  ; class  BrowserHistoryEntry;  ; class  BrowserHistory;  ; class  SofaEnrichedPage;  ; class  DocBrowser;  ; class  InformationOnPickCallBack;  ; class  ColourPickingRenderCallBack;  ; struct  dataTime;  ; class  PieWidget;  ; class  ChartsWidget;  ; class  QDataDescriptionWidget;  ; class  QDisplayDataWidget;  ; class  QDataSimpleEdit;  ; class  QPoissonRatioWidget;  ; class  QDisplayLinkWidget;  ; c",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html
Availability,down,downcaseString,"lass T > ; bool isClamped (const T &value, const T &low, const T &high);  ; template<class T > ; T sign (const T &v);  ; template<class T > ; T sign0 (const T &v);  ; template<class T > ; bool isEqual (T x, T y, T threshold=(std::numeric_limits< T >::epsilon)());  ; template<class T > ; bool isNull (T x, T threshold=(std::numeric_limits< T >::epsilon)());  ; double rcos (double x);  ; float rcos (float x);  ; double rsin (double x);  ; float rsin (float x);  ; template<class T > ; T rcos (const T &a);  ; template<class T > ; T rsin (const T &a);  ; template<class Container > ; type::vector< unsigned > sortedPermutation (const Container &values);  Return a sorted permutation of the container, i.e. a list of indices corresponding to increasing entries. More...;  ; std::wstring widenString (const std::string &s);  Convert a string to a wstring. More...;  ; std::string narrowString (const std::wstring &ws);  Convert a wstring to a string. More...;  ; std::string downcaseString (const std::string &s);  Convert a string to lower case. More...;  ; std::string upcaseString (const std::string &s);  Convert a string to upper case. More...;  ; std::vector< std::string > split (const std::string &s, char delimiter);  Taken from https://www.fluentcpp.com/2017/04/21/how-to-split-a-string-in-c/. More...;  ; char * getAStringCopy (const char *c);  returns a copy of the string given in argument. More...;  ; void replaceAll (std::string &str, const std::string &search, const std::string &replace);  replace all occurrence of ""search"" by the ""replace"" string. More...;  ; bool ends_with (const std::string &suffix, const std::string &full);  returns true if the suffix if located at the end of the ""full"" string. More...;  ; bool starts_with (const std::string &prefix, const std::string &full);  returns true if the prefix if located at the beginning of the ""full"" string. More...;  ; std::string safeCharToString (const char *c);  converts a char* string into a c++ string. The special case w",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Deployability,update,update,"﻿. SOFA API: sofa::helper Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::helper Namespace Reference . Namespaces;  advancedtimer;  ;  console;  ;  io;  This allow MeshTrian to interact with the messaging system. ;  ;  lifecycle;  ;  logging;  This allow Base object to interact with the messaging system. ;  ;  messaging;  ;  polygon_cube_intersection;  ;  system;  ;  visual;  . Classes; class  ReadAccessor< core::objectmodel::Data< T > >;  ; class  WriteAccessor< core::objectmodel::Data< T > >;  ; class  WriteOnlyAccessor< core::objectmodel::Data< T > >;  The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. More...;  ; class  ReadAccessor;  ; class  ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  ReadAccessorVector;  ; class  WriteAccessor;  ; class  WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  WriteAccessorVector;  WriteAccessor implementation class for vector types. More...;  ; class  WriteOnlyAccessor;  ; class  WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  TimerData;  ; class  Record;  ; class  StepData;  ; class  AdvancedTimer;  ; class  BackTrace;  ; class  ColorMap;  ; class  Decompose;  ; class  NoArgument;  Allow us to use BaseCreator and Factory without using any Arguments. More...;  ; class  BaseCreator;  ; class  Factory;  ; class  Creator;  ; class  CreatorFn;  ; class  BasicDispatcher;  ; class  FnDispatcher;  ; class  SingletonFnDispatcher;  ; struct  GenerateRigidInfo;  storing rigid infos needed for RigidMass More...;  ; struct  IndexOpenMP;  ; struct  CleanupCheck;  ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Modifiability,variab,variables,"ation class for vector_id types. More...;  ; class  ReadAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >;  ; class  WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >;  ; class  kdTree;  ; class  LCP;  ; class  LocalBlock33;  ; class  ptr_stable_id;  ; class  ptr_stable_compare;  A comparison object that order pointers in a stable way, i.e. in the order pointers are presented. More...;  ; class  ptr_stable_compare< T * >;  ; class  ptr_stable_compare< std::pair< T *, T * > >;  ; class  map_ptr_stable_compare;  A map container that order pointers in a stable way, i.e. in the order pointers are presented. More...;  ; class  MarchingCubeUtility;  ; class  MemoryManager;  ; class  NameDecoder;  ; struct  narrowing_error;  ; class  OptionsGroup;  OptionsGroup is a kind of data for a radio button. It has a list of text representing a list of choices, and a integer number indicating the choice selected. More...;  ; class  OwnershipSPtr;  ; class  Monomial_LD;  A generic monomial with N variables of type Real. A monomial is one term of a polynomial. More...;  ; class  Polynomial_LD;  A generic polynomial with N variables of type Real. A polynomial is a list composed of several monomials. More...;  ; class  RandomGenerator;  ; struct  IsEqual;  ; struct  IsEqual< true >;  ; struct  IsNull;  ; struct  IsNull< true >;  ; struct  ScopedAdvancedTimer;  ; class  TSimpleTimer;  ; struct  CompareIndirect;  ; class  TagList;  ; class  TagFactory;  ; class  TriangleOctreeRoot;  ; class  TriangleOctree;  ; class  TypeInfo;  ; class  Utils;  Contains possibly useful functions, that don't fit anywhere else. More...;  ; class  BaseCreator< sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >;  ; class  SofaViewerFactory;  ; class  SofaViewerCreator;  . Typedefs; typedef sofa::helper::system::thread::ctime_t ctime_t;  ; typedef sofa::helper::system::thread::CTime CTime;  ; typedef const char *(* integer_id_name) ();  ; typedef SReal Fem",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Performance,perform,performed,"ntainer &elems, const S &delim);  Join a container into a single string, separated by the provided delimiter. More...;  ; unsigned int choose_next (SReal x, SReal y, SReal z, unsigned int a, unsigned int b, unsigned int c);  . Variables; std::map< AdvancedTimer::IdTimer, TimerData > timers;  ; std::atomic< int > activeTimers;  ; AdvancedTimer::SyncCallBack syncCallBack = nullptr;  ; void * syncCallBackData = nullptr;  ; template class SOFA_HELPER_API Decompose< double >;  ; template class SOFA_HELPER_API Decompose< float >;  ; SReal SReal SReal SReal ** M;  ; SReal SReal SReal SReal int * base;  ; SReal SReal SReal SReal int SReal ** mat;  ; SReal SReal SReal SReal int SReal int dim = delete;  ; SReal SReal * f;  ; const int MarchingCubeEdgeTable [256];  ; const int MarchingCubeFaceTable [256];  ; const int MarchingCubeTriTable [256][16];  ; constexpr bool forceNarrowCastChecking = true;  If true, narrow_cast will check if the value changed after the narrow conversion. Otherwise, no check is performed. More...;  ; template class SOFA_HELPER_API Monomial_LD< double, 1 >;  ; template class SOFA_HELPER_API Monomial_LD< double, 2 >;  ; template class SOFA_HELPER_API Monomial_LD< double, 3 >;  ; template class SOFA_HELPER_API Monomial_LD< double, 4 >;  ; template class SOFA_HELPER_API Monomial_LD< double, 5 >;  ; template class SOFA_HELPER_API Polynomial_LD< double, 1 >;  ; template class SOFA_HELPER_API Polynomial_LD< double, 2 >;  ; template class SOFA_HELPER_API Polynomial_LD< double, 3 >;  ; template class SOFA_HELPER_API Polynomial_LD< double, 4 >;  ; template class SOFA_HELPER_API Polynomial_LD< double, 5 >;  ; std::mutex kMutex;  ; TagList kTagList { {""0"", ""Visual""} };  . Detailed Description; Helpers to apply Eigen matrix methods to the Mat sofa type; Utility to compute the sorted permutation of a container. See example at the end of the file Francois Faure, April 2012 ; Typedef Documentation. ◆ CTime. typedef sofa::helper::system::thread::CTime sofa::helper::CTi",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Safety,avoid,avoids,"﻿. SOFA API: sofa::helper Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::helper Namespace Reference . Namespaces;  advancedtimer;  ;  console;  ;  io;  This allow MeshTrian to interact with the messaging system. ;  ;  lifecycle;  ;  logging;  This allow Base object to interact with the messaging system. ;  ;  messaging;  ;  polygon_cube_intersection;  ;  system;  ;  visual;  . Classes; class  ReadAccessor< core::objectmodel::Data< T > >;  ; class  WriteAccessor< core::objectmodel::Data< T > >;  ; class  WriteOnlyAccessor< core::objectmodel::Data< T > >;  The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. More...;  ; class  ReadAccessor;  ; class  ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  ReadAccessorVector;  ; class  WriteAccessor;  ; class  WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  WriteAccessorVector;  WriteAccessor implementation class for vector types. More...;  ; class  WriteOnlyAccessor;  ; class  WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  TimerData;  ; class  Record;  ; class  StepData;  ; class  AdvancedTimer;  ; class  BackTrace;  ; class  ColorMap;  ; class  Decompose;  ; class  NoArgument;  Allow us to use BaseCreator and Factory without using any Arguments. More...;  ; class  BaseCreator;  ; class  Factory;  ; class  Creator;  ; class  CreatorFn;  ; class  BasicDispatcher;  ; class  FnDispatcher;  ; class  SingletonFnDispatcher;  ; struct  GenerateRigidInfo;  storing rigid infos needed for RigidMass More...;  ; struct  IndexOpenMP;  ; struct  CleanupCheck;  ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Security,access,access,"﻿. SOFA API: sofa::helper Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::helper Namespace Reference . Namespaces;  advancedtimer;  ;  console;  ;  io;  This allow MeshTrian to interact with the messaging system. ;  ;  lifecycle;  ;  logging;  This allow Base object to interact with the messaging system. ;  ;  messaging;  ;  polygon_cube_intersection;  ;  system;  ;  visual;  . Classes; class  ReadAccessor< core::objectmodel::Data< T > >;  ; class  WriteAccessor< core::objectmodel::Data< T > >;  ; class  WriteOnlyAccessor< core::objectmodel::Data< T > >;  The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. More...;  ; class  ReadAccessor;  ; class  ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  ReadAccessorVector;  ; class  WriteAccessor;  ; class  WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  WriteAccessorVector;  WriteAccessor implementation class for vector types. More...;  ; class  WriteOnlyAccessor;  ; class  WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  TimerData;  ; class  Record;  ; class  StepData;  ; class  AdvancedTimer;  ; class  BackTrace;  ; class  ColorMap;  ; class  Decompose;  ; class  NoArgument;  Allow us to use BaseCreator and Factory without using any Arguments. More...;  ; class  BaseCreator;  ; class  Factory;  ; class  Creator;  ; class  CreatorFn;  ; class  BasicDispatcher;  ; class  FnDispatcher;  ; class  SingletonFnDispatcher;  ; struct  GenerateRigidInfo;  storing rigid infos needed for RigidMass More...;  ; struct  IndexOpenMP;  ; struct  CleanupCheck;  ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Testability,log,logging,"﻿. SOFA API: sofa::helper Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::helper Namespace Reference . Namespaces;  advancedtimer;  ;  console;  ;  io;  This allow MeshTrian to interact with the messaging system. ;  ;  lifecycle;  ;  logging;  This allow Base object to interact with the messaging system. ;  ;  messaging;  ;  polygon_cube_intersection;  ;  system;  ;  visual;  . Classes; class  ReadAccessor< core::objectmodel::Data< T > >;  ; class  WriteAccessor< core::objectmodel::Data< T > >;  ; class  WriteOnlyAccessor< core::objectmodel::Data< T > >;  The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. More...;  ; class  ReadAccessor;  ; class  ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  ReadAccessorVector;  ; class  WriteAccessor;  ; class  WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  WriteAccessorVector;  WriteAccessor implementation class for vector types. More...;  ; class  WriteOnlyAccessor;  ; class  WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  TimerData;  ; class  Record;  ; class  StepData;  ; class  AdvancedTimer;  ; class  BackTrace;  ; class  ColorMap;  ; class  Decompose;  ; class  NoArgument;  Allow us to use BaseCreator and Factory without using any Arguments. More...;  ; class  BaseCreator;  ; class  Factory;  ; class  Creator;  ; class  CreatorFn;  ; class  BasicDispatcher;  ; class  FnDispatcher;  ; class  SingletonFnDispatcher;  ; struct  GenerateRigidInfo;  storing rigid infos needed for RigidMass More...;  ; struct  IndexOpenMP;  ; struct  CleanupCheck;  ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html
Performance,load,load,"﻿. SOFA API: sofa::helper::io Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::helper::io Namespace Reference . This allow MeshTrian to interact with the messaging system. ; More... Classes; class  BaseFileAccessCreator;  ; class  FileAccessCreator;  ; class  BaseFileAccess;  ; class  File;  ; class  FileAccess;  ; class  Image;  ; struct  DDSHeader;  ; class  ImageDDS;  ; class  ImageRAW;  ; class  Mesh;  ; class  MeshGmsh;  ; class  MeshOBJ;  ; class  MeshTopologyLoader;  ; class  SphereLoaderDataHook;  Inherit this class to load data from sphere description. More...;  ; class  SphereLoader;  ; class  STBImageCreators;  ; class  STBImage;  ; class  TriangleLoader;  ; class  XspLoaderDataHook;  Inherit this class to load data from a Xsp file. More...;  ; class  XspLoader;  . Variables; Creator< Image::FactoryImage, ImageDDS > ImageDDSClass (""dds"");  ; Creator< Mesh::FactoryMesh, MeshGmsh > MeshGmshClass (""gmsh"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass (""obj"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass2 (""OBJ"");  ; const auto stbImageCreation = STBImageCreators();  . Detailed Description; This allow MeshTrian to interact with the messaging system. ; For SOFA_HELPER_API.; This register the TriangleLoader object to the logging system so that we can use msg_*(this); For size_t For std::string ; Variable Documentation. ◆ ImageDDSClass. Creator<Image::FactoryImage,ImageDDS> sofa::helper::io::ImageDDSClass(""dds"") ; (; ""dds"" ; ). ◆ MeshGmshClass. Creator<Mesh::FactoryMesh, MeshGmsh> sofa::helper::io::MeshGmshClass(""gmsh"") ; (; ""gmsh"" ; ). ◆ MeshOBJClass. Creator<Mesh::FactoryMesh,MeshOBJ> sofa::helper::io::MeshOBJClass(""obj"") ; (; ""obj"" ; ). ◆ MeshOBJClass2. Creator<Mesh::FactoryMesh, MeshOBJ> sofa::helper::io::MeshOBJClass2(""OBJ"") ; (; ""OBJ"" ; ). ◆ stbImageCreation. const auto sofa::helper::io::stbImageCreation = STBImageCreators(). sofahelperio; Generated on Mon Nov 11 20",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1io.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1io.html
Testability,log,logging,"ce Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::helper::io Namespace Reference . This allow MeshTrian to interact with the messaging system. ; More... Classes; class  BaseFileAccessCreator;  ; class  FileAccessCreator;  ; class  BaseFileAccess;  ; class  File;  ; class  FileAccess;  ; class  Image;  ; struct  DDSHeader;  ; class  ImageDDS;  ; class  ImageRAW;  ; class  Mesh;  ; class  MeshGmsh;  ; class  MeshOBJ;  ; class  MeshTopologyLoader;  ; class  SphereLoaderDataHook;  Inherit this class to load data from sphere description. More...;  ; class  SphereLoader;  ; class  STBImageCreators;  ; class  STBImage;  ; class  TriangleLoader;  ; class  XspLoaderDataHook;  Inherit this class to load data from a Xsp file. More...;  ; class  XspLoader;  . Variables; Creator< Image::FactoryImage, ImageDDS > ImageDDSClass (""dds"");  ; Creator< Mesh::FactoryMesh, MeshGmsh > MeshGmshClass (""gmsh"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass (""obj"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass2 (""OBJ"");  ; const auto stbImageCreation = STBImageCreators();  . Detailed Description; This allow MeshTrian to interact with the messaging system. ; For SOFA_HELPER_API.; This register the TriangleLoader object to the logging system so that we can use msg_*(this); For size_t For std::string ; Variable Documentation. ◆ ImageDDSClass. Creator<Image::FactoryImage,ImageDDS> sofa::helper::io::ImageDDSClass(""dds"") ; (; ""dds"" ; ). ◆ MeshGmshClass. Creator<Mesh::FactoryMesh, MeshGmsh> sofa::helper::io::MeshGmshClass(""gmsh"") ; (; ""gmsh"" ; ). ◆ MeshOBJClass. Creator<Mesh::FactoryMesh,MeshOBJ> sofa::helper::io::MeshOBJClass(""obj"") ; (; ""obj"" ; ). ◆ MeshOBJClass2. Creator<Mesh::FactoryMesh, MeshOBJ> sofa::helper::io::MeshOBJClass2(""OBJ"") ; (; ""OBJ"" ; ). ◆ stbImageCreation. const auto sofa::helper::io::stbImageCreation = STBImageCreators(). sofahelperio; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1io.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1io.html
Integrability,rout,routingmessagehandler,"﻿. SOFA API: sofa::helper::logging Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions . sofa::helper::logging Namespace Reference . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; Compone",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html
Security,access,access,"ract with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::core::objectmodel::Base * ; t). inline . ◆ operator<<() [1/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). ◆ operator<<() [2/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). ◆",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html
Testability,log,logging,"﻿. SOFA API: sofa::helper::logging Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions . sofa::helper::logging Namespace Reference . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; Compone",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html
Usability,simpl,simply,"nce . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; ComponentInfo::SPtr getComponentInfo (const sofa::core::objectmodel::Base *t);  This construct a new ComponentInfo object from a Base object. More...;  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html
Integrability,message,messages,﻿. SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::countingmessagehandler Namespace Reference . Classes; class  CountingMessageHandler;  The CountingMessageHandler class count the messages by types. More...;  ; class  MainCountingMessageHandler;  The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingcountingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html
Testability,log,logging,﻿. SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::countingmessagehandler Namespace Reference . Classes; class  CountingMessageHandler;  The CountingMessageHandler class count the messages by types. More...;  ; class  MainCountingMessageHandler;  The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingcountingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html
Integrability,message,messages,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
Testability,log,logging,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
Integrability,message,messages,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html
Testability,log,logging,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html
Integrability,rout,routingmessagehandler,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
Testability,log,logging,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
Energy Efficiency,monitor,monitor,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
Modifiability,plugin,plugins,"nitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
Performance,perform,perform,﻿. SOFA API: sofa::helper::visual Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::visual Namespace Reference . Classes; struct  DrawTool;  Utility class to perform debug drawing. More...;  ; class  Trackball;  ; class  Transformation;  . sofahelpervisual; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1visual.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1visual.html
Integrability,depend,dependencies,"nst D_values);  ; template<typename Real > ; void solveDiagonalSystemUsingInvertedValues (const sofa::Size systemSize, const Real *rightHandSideVector, Real *solution, const Real *const Dinv_values);  ; std::ostream & operator<< (std::ostream &out, const FullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const FullMatrix< float > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< float > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullMatrix< Real > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< float > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< double > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullVector< Real > &v);  ; SOFA_LINEARALGEBRA_API void init ();  Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isInitialized ();  Return true if and only if the Sofa.LinearAlgebra library has been initialized. More...;  ; SOFA_LINEARALGEBRA_API void cleanup ();  Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isCleanedUp ();  Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. More...;  ; template<class Real > ; std::ostream & operator<< (std::ostream &out, const RotationMatrix< Real > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< float > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< double > &v);  ; template<typename _Scalar , int _Options, typename _StorageIndex > ; void flagValueIndices (Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
Testability,test,testing,"﻿. SOFA API: sofa::linearalgebra Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; clas",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
Modifiability,parameteriz,parameterized,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
Testability,test,testing,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
Testability,test,tests,"﻿. SOFA API: sofa::mapping_test Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::mapping_test Namespace Reference . Classes; struct  Mapping_test;  Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. More...;  . sofamapping_test; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html
Integrability,depend,dependencies,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
Usability,simpl,simpleapi,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
Availability,avail,available,"s homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFact",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Deployability,integrat,integrations,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Energy Efficiency,schedul,scheduler,lass  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; t,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Integrability,integrat,integrations,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Modifiability,plugin,plugins," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Performance,load,loaders,onInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the sce,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Safety,detect,detection,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Usability,simpl,simplest," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
Integrability,depend,dependencies,"﻿. SOFA API: sofa::simulation::common Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::si",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html
Integrability,depend,dependencies,"﻿. SOFA API: sofa::simulation::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::core Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMULATION_CORE_API void init ();  Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isInitialized ();  Return true if and only if the SofaSimulationCore library has been initialized. More...;  ; SOFA_SIMULATION_CORE_API void cleanup ();  Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCore library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::cleanup ; (; ). Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::init ; (; ). Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCore library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isInitialized ; (; ). Return true if and only if the SofaSimulationCore library has been initialized. . sofasimulationcore; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html
Availability,down,down,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
Integrability,depend,dependencies,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
Deployability,update,updateVisualContext,"﻿. SOFA API: sofa::simulation::node Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::simulation::node Namespace Reference . Functions; sofa::simulation::Node * getNodeFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::stri",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
Performance,load,load,"s the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  Load a scene from a file. More...;  ; void unload (NodeSPtr root);  Unload a scene from a Node. More...;  . Function Documentation. ◆ animate(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::animate ; (; Node * ; root, . SReal ; dt . ). Execute one timestep. If dt is 0, the dt parameter in the graph will be used. . ◆ computeBBox(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::computeBBox ; (; Node * ; root, . SReal * ; minBBox, . SReal * ; maxBBox, . bool ; init = true . ). Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value WarningMechanicalObjects with showObject member set to false are ignored ; See alsocomputeTotalBBox(Node* root, SReal* minBBox, SReal* maxBBox) . ◆ computeTotalBBox(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::computeTotalBBox ; (; Node * ; root, . SReal * ; minBBox, . SReal * ; maxBBox . ). Compute the bo",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
Performance,load,loadFromMemory,"fa::simulation::xml Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Enumerations |; Functions |; Variables . sofa::simulation::xml Namespace Reference . Classes; class  AttributeElement;  ; class  BaseElement;  ; class  BaseMultiMappingElement;  ; class  DataElement;  ; class  Element;  ; class  NodeElement;  ; class  ObjectElement;  . Enumerations; enum  IncludeNodeType { INCLUDE_NODE_CHILD; , INCLUDE_NODE_GROUP; , INCLUDE_NODE_MERGE; };  Flags indicating when an element is from an included file that should be treated specifically. More...;  . Functions; void recReplaceAttribute (BaseElement *node, const char *attr, const char *value, const char *nodename=nullptr);  ; BaseElement * includeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; BaseElement * attributeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; void recursiveMergeNode (BaseElement *destNode, BaseElement *srcNode);  ; BaseElement * createNode (tinyxml2::XMLNode *root, const char *basefilename, bool isRoot=false);  ; BaseElement * processXMLLoading (const char *filename, const tinyxml2::XMLDocument &doc, bool fromMem);  ; BaseElement * loadFromMemory (const char *filename, const char *data);  ; BaseElement * loadFromFile (const char *filename);  ; SOFA_SIMULATION_COMMON_API bool save (const char *filename, BaseElement *root);  . Variables; Creator< BaseElement::NodeFactory, AttributeElement > AttributeNodeClass (""Attribute"");  ; Creator< BaseElement::NodeFactory, DataElement > DataNodeClass (""Data"");  ; helper::Creator< BaseElement::NodeFactory, NodeElement > NodeNodeClass (""Node"");  ; Creator< BaseElement::NodeFactory, ObjectElement > ObjectNodeClass (""Object"");  ; int numDefault =0;  . Enumeration Type Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
Availability,error,error,"&v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to in",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Deployability,install,install,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Integrability,depend,dependencies,"t  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal >",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Modifiability,portab,portable,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Performance,load,load,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Testability,test,testing,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Usability,simpl,simple,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
Availability,error,error,"Init;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More...;  ; struct  Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. More...;  ; class  Transform;  ; struct  NoInit;  ; class  vector_device;  ; class  CPUMemoryManager;  ; class  vector;  . Typedefs; typedef Vec< 1, float > Vec1f;  ; typedef Vec< 1, double > Vec1d;  ; typedef Vec< 1, int > Vec1i;  ; typedef Vec< 1, unsigned > Vec1u;  ; typedef Vec< 1, SReal > Vec1;  ; typedef Vec< 2, float > Vec2f;  ; typedef Vec< 2, double > Vec2d;  ; typedef Vec< 2, int > Vec2i;  ; typedef Vec< 2, unsigned > Vec2u;  ; typedef Vec< 2, SReal > Vec2;  ; typedef Vec< 3, float > Vec3f;  ; typedef Vec< 3, double > Vec3d;  ; typedef Vec< 3, int > Vec3i;  ; typedef Vec< 3, unsigned > Vec3u;  ; typedef Vec< 3, SReal > Vec3;  ; typedef Vec< 4, float > Vec4f;",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
Energy Efficiency,efficient,efficient,"on of L . ◆ cholDcmp(). template<Size n, class real > . bool sofa::type::cholDcmp ; (; Mat< n, n, real > & ; L, . const Mat< n, n, real > & ; M . ). Cholesky decomposition: compute triangular matrix L such that M=L.Lt PreconditionM must be symmetric positive definite returns false is the decomposition fails . ◆ cholInv(). template<Size n, class real > . bool sofa::type::cholInv ; (; Mat< n, n, real > & ; Inv, . const Mat< n, n, real > & ; M . ). Inversion of a positive symmetric definite (PSD) matrix using a Cholesky decomposition. Returns false if the matrix is not PSD. . ◆ cholSlv(). template<Size n, class real > . bool sofa::type::cholSlv ; (; Vec< n, real > & ; x, . const Mat< n, n, real > & ; M, . const Vec< n, real > & ; b . ). Cholesky solution: solve the system Mx=b using a Cholesky decomposition. PreconditionM must be symmetric positive definite Returns false is the decomposition fails. If you have several solutions to perform with the same matrix M and different vectors b, it is more efficient to factor the matrix once and then use back-substitution for each vector. . ◆ cleanup(). SOFA_TYPE_API void sofa::type::cleanup ; (; ). Clean up the resources used by the SofaHelper library. . ◆ cond(). template<int m, int n, typename Real > . Real sofa::type::cond ; (; Mat< m, n, Real > & ; a). return the condition number of the matrix a following the euclidean norm (using the svd decomposition to find singular values) . ◆ cross() [1/2]. template<typename real1 , typename real2 > . constexpr real1 sofa::type::cross ; (; const type::Vec< 2, real1 > & ; a, . const type::Vec< 2, real2 > & ; b . ). constexprnoexcept . Cross product for 2-elements vectors. . ◆ cross() [2/2]. template<typename real1 , typename real2 > . constexpr Vec<3,real1> sofa::type::cross ; (; const Vec< 3, real1 > & ; a, . const Vec< 3, real2 > & ; b . ). constexprnoexcept . Cross product for 3-elements vectors. . ◆ crossProductMatrix(). template<class Real > . constexpr Mat<3, 3, Real> sofa::type::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
Performance,perform,perform,"on of L . ◆ cholDcmp(). template<Size n, class real > . bool sofa::type::cholDcmp ; (; Mat< n, n, real > & ; L, . const Mat< n, n, real > & ; M . ). Cholesky decomposition: compute triangular matrix L such that M=L.Lt PreconditionM must be symmetric positive definite returns false is the decomposition fails . ◆ cholInv(). template<Size n, class real > . bool sofa::type::cholInv ; (; Mat< n, n, real > & ; Inv, . const Mat< n, n, real > & ; M . ). Inversion of a positive symmetric definite (PSD) matrix using a Cholesky decomposition. Returns false if the matrix is not PSD. . ◆ cholSlv(). template<Size n, class real > . bool sofa::type::cholSlv ; (; Vec< n, real > & ; x, . const Mat< n, n, real > & ; M, . const Vec< n, real > & ; b . ). Cholesky solution: solve the system Mx=b using a Cholesky decomposition. PreconditionM must be symmetric positive definite Returns false is the decomposition fails. If you have several solutions to perform with the same matrix M and different vectors b, it is more efficient to factor the matrix once and then use back-substitution for each vector. . ◆ cleanup(). SOFA_TYPE_API void sofa::type::cleanup ; (; ). Clean up the resources used by the SofaHelper library. . ◆ cond(). template<int m, int n, typename Real > . Real sofa::type::cond ; (; Mat< m, n, Real > & ; a). return the condition number of the matrix a following the euclidean norm (using the svd decomposition to find singular values) . ◆ cross() [1/2]. template<typename real1 , typename real2 > . constexpr real1 sofa::type::cross ; (; const type::Vec< 2, real1 > & ; a, . const type::Vec< 2, real2 > & ; b . ). constexprnoexcept . Cross product for 2-elements vectors. . ◆ cross() [2/2]. template<typename real1 , typename real2 > . constexpr Vec<3,real1> sofa::type::cross ; (; const Vec< 3, real1 > & ; a, . const Vec< 3, real2 > & ; b . ). constexprnoexcept . Cross product for 3-elements vectors. . ◆ crossProductMatrix(). template<class Real > . constexpr Mat<3, 3, Real> sofa::type::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
Safety,detect,detect,"﻿. SOFA API: sofa::type Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::type Namespace Reference . for std::pair ; More... Namespaces;  pairwise;  ;  trait;  . Classes; class  BoundingBox;  ; class  TBoundingBox;  ; class  BoundingBox2D;  bounding rectangle More...;  ; class  BoundingBox1D;  bounding interval More...;  ; class  DualQuatCoord3;  ; class  fixed_array;  ; class  Frame;  ; class  Vec;  ; class  VecNoInit;  Same as Vec except the values are not initialized by default. More...;  ; class  Mat;  ; class  MatNoInit;  Same as Mat except the values are not initialized by default. More...;  ; class  Quat;  ; struct  CleanupCheck;  ; struct  detect;  ; struct  detect< T, Op, void_t< Op< T > > >;  ; class  Material;  ; class  MatSym;  ; class  PrimitiveGroup;  ; struct  qNoInit;  ; class  QuatNoInit;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
Availability,avail,available,"﻿. SOFA API: sofa::type::pairwise Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::type::pairwise Namespace Reference . Functions; template<class T > ; const T & stdclamp (const T &v, const T &lo, const T &hi);  clamp a single value. This function should be removed when std::clamp will be available More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T clamp (const T &in, const TT &minValue, const TT &maxValue);  clamp all the values of a fixed_array to be within a given interval. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; constexpr T operator+ (const T &l, const T &r);  pairwise add of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; constexpr T operator- (const T &l, const T &r);  pairwise subtract of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator* (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator/ (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  . Function Documentation. ◆ clamp(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::clamp ; (; const T & ; in, . const TT & ; minValue, . const TT & ; maxValue . ). clamp all the values of a fixed_array to be within a given interval. . ◆ operator*(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::operator* ; (; const T & ; r, . const typename T::value_type & ; f . ). multiply from l the r components. . ◆ operator+(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . constexpr T sofa::type::pairwise",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
Usability,simpl,simplify,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
Safety,detect,detection,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
Safety,detect,detection,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference . #include <BruteForceBroadPhase.h>; Detailed Description; A data structure to store a pair of collision models They both describe the same object . Public Attributes; core::CollisionModel * firstCollisionModel { nullptr };  First collision model in the hierarchy of collision models of an object. Usually a bounding box. More...;  ; core::CollisionModel * lastCollisionModel { nullptr };  . Public Member Functions;  FirstLastCollisionModel (core::CollisionModel *a, core::CollisionModel *b);  . Attribute details. ◆ firstCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::firstCollisionModel { nullptr }. First collision model in the hierarchy of collision models of an object. Usually a bounding box. . ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::lastCollisionModel { nullptr }. Constructor details. ◆ FirstLastCollisionModel(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::FirstLastCollisionModel ; (; core::CollisionModel * ; a, . core::CollisionModel * ; b . ). inline . sofacomponentcollisiondetectionalgorithmBruteForceBroadPhaseFirstLastCollisionModel; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
Safety,detect,detection,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
Safety,detect,detection,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
Safety,detect,detection,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
Safety,detect,detection,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CompPEndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CompPEndPoint, including all inherited members. operator()(const EndPoint *ep1, const EndPoint *ep2) constsofa::component::collision::detection::algorithm::CompPEndPointinline. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html
Safety,detect,detection,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CompPEndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CompPEndPoint, including all inherited members. operator()(const EndPoint *ep1, const EndPoint *ep2) constsofa::component::collision::detection::algorithm::CompPEndPointinline. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html
Safety,detect,detection,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference . #include <EndPoint.h>. Public Member Functions; bool operator() (const EndPoint *ep1, const EndPoint *ep2) const;  . Function details. ◆ operator()(). bool sofa::component::collision::detection::algorithm::CompPEndPoint::operator() ; (; const EndPoint * ; ep1, . const EndPoint * ; ep2 . ); const. inline . sofacomponentcollisiondetectionalgorithmCompPEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
Safety,detect,detection,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
Safety,detect,detection,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::CubeCollisionModel::CubeData Member List . This is the complete list of members for sofa::component::collision::geometry::CubeCollisionModel::CubeData, including all inherited members. childrensofa::component::collision::geometry::CubeCollisionModel::CubeData; coneAnglesofa::component::collision::geometry::CubeCollisionModel::CubeData; coneAxissofa::component::collision::geometry::CubeCollisionModel::CubeData; maxBBoxsofa::component::collision::geometry::CubeCollisionModel::CubeData; minBBoxsofa::component::collision::geometry::CubeCollisionModel::CubeData; subcellssofa::component::collision::geometry::CubeCollisionModel::CubeData. Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::LineData Member List . This is the complete list of members for sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::LineData, including all inherited members. psofa::component::collision::geometry::LineCollisionModel< TDataTypes >::LineData. Generated on Mon Nov 11 2024 02:23:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model_1_1_line_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model_1_1_line_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo Member List . This is the complete list of members for sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo, including all inherited members. bary2coordsofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo; coord0sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo; coord2barysofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo. Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model_1_1_tetrahedron_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model_1_1_tetrahedron_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::correction::ConstraintActivation Member List . This is the complete list of members for sofa::component::constraint::lagrangian::correction::ConstraintActivation, including all inherited members. accsofa::component::constraint::lagrangian::correction::ConstraintActivation; possofa::component::constraint::lagrangian::correction::ConstraintActivation; velsofa::component::constraint::lagrangian::correction::ConstraintActivation. Generated on Mon Nov 11 2024 02:34:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_constraint_activation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_constraint_activation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage Member List . This is the complete list of members for sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage, including all inherited members. datasofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage; InverseStorage()sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorageinline; nbrefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage. Generated on Mon Nov 11 2024 02:34:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_cor29f9ce25ba5bafcd2d240d35d757ef1e.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_cor29f9ce25ba5bafcd2d240d35d757ef1e.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact, including all inherited members. contactDistancesofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; contactIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; dfreesofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contactmutable; idsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; localIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; m1sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; m2sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; musofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; normsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; Psofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; Qsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; ssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; tsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint_1_1_contact-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint_1_1_contact-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator Member List . This is the complete list of members for sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator, including all inherited members. amplitudesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; indexsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; meansofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; operator<<(std::ostream &out, const Oscillator &o)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillatorfriend; operator>>(std::istream &in, Oscillator &o)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillatorfriend; Oscillator()sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; Oscillator(unsigned int i, const Coord &m, const Deriv &a, const Real &w, const Real &p)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; phasesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; pulsationsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator. Generated on Mon Nov 11 2024 02:37:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint_1_1_oscillator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint_1_1_oscillator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::projective::SkeletonJoint< DataTypes > Member List . This is the complete list of members for sofa::component::constraint::projective::SkeletonJoint< DataTypes >, including all inherited members. addChannel(Coord channel, double time)sofa::component::constraint::projective::SkeletonJoint< DataTypes >inline; Coord typedefsofa::component::constraint::projective::SkeletonJoint< DataTypes >; mChannelssofa::component::constraint::projective::SkeletonJoint< DataTypes >; mParentIndexsofa::component::constraint::projective::SkeletonJoint< DataTypes >; mTimessofa::component::constraint::projective::SkeletonJoint< DataTypes >; operator<<(std::ostream &out, const SkeletonJoint &skeletonJoint)sofa::component::constraint::projective::SkeletonJoint< DataTypes >friend; operator>>(std::istream &in, SkeletonJoint &skeletonJoint)sofa::component::constraint::projective::SkeletonJoint< DataTypes >friend; setRestPosition(const Coord &restPosition)sofa::component::constraint::projective::SkeletonJoint< DataTypes >inline; SkeletalMotionProjectiveConstraint< DataTypes > classsofa::component::constraint::projective::SkeletonJoint< DataTypes >friend; SkeletonJoint()sofa::component::constraint::projective::SkeletonJoint< DataTypes >inline; ~SkeletonJoint()sofa::component::constraint::projective::SkeletonJoint< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:38:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_skeleton_joint-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_skeleton_joint-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox Member List . This is the complete list of members for sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox, including all inherited members. depthsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; lengthsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; normalsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; p0sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; p2sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane0sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane1sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane2sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane3sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; Real typedefsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; Vec3 typedefsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; widthsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox. Generated on Mon Nov 11 2024 02:42:39 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i_1_1_oriented_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i_1_1_oriented_box-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData Member List . This is the complete list of members for sofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData, including all inherited members. bmaxsofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; bminsofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; dirsofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; inputValuessofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; x0sofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData. Generated on Mon Nov 11 2024 02:42:39 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions_1_1_temp_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions_1_1_temp_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpAdd< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpAdd< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpAdd< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpAdd< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_add-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_add-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpAnd< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpAnd< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpAnd< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpAnd< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_and-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_and-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpApply< TOps > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpApply< TOps >, including all inherited members. apply(const std::string &op, Data< VecValue > *d_out, const type::vector< Data< VecValue > * > &d_in)sofa::component::engine::transform::MathOpApply< TOps >inlinestatic; isSupported(const std::string &op)sofa::component::engine::transform::MathOpApply< TOps >inlinestatic. Generated on Mon Nov 11 2024 02:44:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > >, including all inherited members. apply(const std::string &op, Data< VecValue > *d_out, const type::vector< Data< VecValue > * > &d_in)sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > >inlinestatic; isSupported(const std::string &op)sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > >inlinestatic. Generated on Mon Nov 11 2024 02:44:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpDiv< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpDiv< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpDiv< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpDiv< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_div-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_div-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpMax< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpMax< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpMax< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpMax< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_max-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_max-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpMin< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpMin< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpMin< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpMin< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_min-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_min-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpMul< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpMul< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpMul< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpMul< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_mul-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_mul-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNames< TOps > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNames< TOps >, including all inherited members. get(type::vector< std::string > &out)sofa::component::engine::transform::MathOpNames< TOps >inlinestatic. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNames< std::pair< TOps1, TOps2 > > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNames< std::pair< TOps1, TOps2 > >, including all inherited members. get(type::vector< std::string > &out)sofa::component::engine::transform::MathOpNames< std::pair< TOps1, TOps2 > >inlinestatic. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNot< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNot< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpNot< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpNot< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_not-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_not-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNAnd< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNAnd< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpNAnd< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpNAnd< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_and-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_and-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNOr< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNOr< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpNOr< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpNOr< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_or-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_or-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpOr< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpOr< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpOr< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpOr< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_or-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_or-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpSub< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpSub< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpSub< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpSub< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_sub-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_sub-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraits< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraits< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraits< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraitsBool< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraitsBool< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraitsBool< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraitsReal< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraitsReal< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraitsReal< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraitsVecReal< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraitsVecReal< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraitsVecReal< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpXor< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpXor< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpXor< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpXor< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_xor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_xor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpXNor< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpXNor< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpXNor< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpXNor< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_x_nor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_x_nor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Rotation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Rotation< DataTypes >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; configure(const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Scale< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Scale< DataTypes >, including all inherited members. configure(const type::Vec3 &s, bool inverse)sofa::component::engine::transform::Scale< DataTypes >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::Scale< DataTypes >inlinevirtual; Real typedefsofa::component::engine::transform::Scale< DataTypes >; Scale()sofa::component::engine::transform::Scale< DataTypes >inline; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Scale< DataTypes >:. [legend]. Public Member Functions;  Scale ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &s, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Scale(). template<class DataTypes > . sofa::component::engine::transform::Scale< DataTypes >::Scale ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::configure ; (; const type::Vec3 & ; s, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformScale; Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Transform< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Transform< DataTypes >, including all inherited members. add(Operation *op, bool inverse)sofa::component::engine::transform::Transform< DataTypes >inline; getOperations()sofa::component::engine::transform::Transform< DataTypes >inline; Op typedefsofa::component::engine::transform::Transform< DataTypes >; operator()(typename DataTypes::Coord &v) constsofa::component::engine::transform::Transform< DataTypes >inline. Generated on Mon Nov 11 2024 02:45:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::TransformOperation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::TransformOperation< DataTypes >, including all inherited members. execute(typename DataTypes::Coord &v) const =0sofa::component::engine::transform::TransformOperation< DataTypes >pure virtual; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:44:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Translation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Translation< DataTypes >, including all inherited members. configure(const type::Vec3 &t, bool inverse)sofa::component::engine::transform::Translation< DataTypes >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::Translation< DataTypes >inlinevirtual; Real typedefsofa::component::engine::transform::Translation< DataTypes >; Translation()sofa::component::engine::transform::Translation< DataTypes >inline; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Translation< DataTypes >:. [legend]. Public Member Functions;  Translation ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &t, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Translation(). template<class DataTypes > . sofa::component::engine::transform::Translation< DataTypes >::Translation ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::configure ; (; const type::Vec3 & ; t, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformTranslation; Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::direct::BaseEigenSolverProxy Member List . This is the complete list of members for sofa::component::linearsolver::direct::BaseEigenSolverProxy, including all inherited members. analyzePattern(const EigenSparseMatrixMap< float > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; analyzePattern(const EigenSparseMatrixMap< double > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; EigenSparseMatrix typedefsofa::component::linearsolver::direct::BaseEigenSolverProxy; EigenSparseMatrixMap typedefsofa::component::linearsolver::direct::BaseEigenSolverProxy; EigenVectorXdMap typedefsofa::component::linearsolver::direct::BaseEigenSolverProxy; factorize(const EigenSparseMatrixMap< float > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; factorize(const EigenSparseMatrixMap< double > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; info() const =0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; solve(const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const =0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; solve(const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const =0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; ~BaseEigenSolverProxy()sofa::component::linearsolver::direct::BaseEigenSolverProxyinlinevirtual. Generated on Mon Nov 11 2024 02:47:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy-members.html
Integrability,wrap,wrapper,"﻿. SOFA API: sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Referenceabstract . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::BaseEigenSolverProxy:. [legend]; Detailed Description; A base wrapper class for all solvers based on the Eigen library . Public Member Functions; virtual ~BaseEigenSolverProxy ();  ; virtual Eigen::ComputationInfo info () const =0;  ; virtual void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const =0;  ; virtual void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const =0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< double > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< double > &a)=0;  . Constructor details. ◆ ~BaseEigenSolverProxy(). virtual sofa::component::linearsolver::direct::BaseEigenSolverProxy::~BaseEigenSolverProxy ; (; ). inlinevirtual . Function details. ◆ analyzePattern() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< double > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ analyzePattern() [2/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< float > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ factorize() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::factorize ; (; const EigenSparseMatrixMap< double > & ; a). pure v",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName Member List . This is the complete list of members for sofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName, including all inherited members. namesofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName; operator<(const OrderingMethodName &other) constsofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodNameinline; scalarsofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName. Generated on Mon Nov 11 2024 02:47:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_factory_1_1_ordering_method_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_factory_1_1_ordering_method_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData Member List . This is the complete list of members for sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData, including all inherited members. LinearSystemData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemDatainline; matrixAccessorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; needInvertsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; solutionVecIdsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; systemLHVectorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; systemMatrixsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; systemRHVectorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; ~LinearSystemData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemDatainline. Generated on Mon Nov 11 2024 02:46:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_7859c7675710ba6285f55f982a734768.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_7859c7675710ba6285f55f982a734768.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::CheckNoChangeInInsertionOrder Member List . This is the complete list of members for sofa::component::linearsystem::CheckNoChangeInInsertionOrder, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::component::linearsystem::CheckNoChangeInInsertionOrderinlinevirtual; Col typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; currentIdsofa::component::linearsystem::CheckNoChangeInInsertionOrder; logger() constsofa::component::linearsystem::CheckNoChangeInInsertionOrderinline; m_messageComponentsofa::component::linearsystem::CheckNoChangeInInsertionOrder; pairInsertionOrderListsofa::component::linearsystem::CheckNoChangeInInsertionOrder; Row typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; skip_insertion_if_error typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; verify_index typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html
Testability,log,logger,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::CheckNoChangeInInsertionOrder Member List . This is the complete list of members for sofa::component::linearsystem::CheckNoChangeInInsertionOrder, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::component::linearsystem::CheckNoChangeInInsertionOrderinlinevirtual; Col typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; currentIdsofa::component::linearsystem::CheckNoChangeInInsertionOrder; logger() constsofa::component::linearsystem::CheckNoChangeInInsertionOrderinline; m_messageComponentsofa::component::linearsystem::CheckNoChangeInInsertionOrder; pairInsertionOrderListsofa::component::linearsystem::CheckNoChangeInInsertionOrder; Row typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; skip_insertion_if_error typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; verify_index typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html
Modifiability,inherit,inherited,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
Testability,log,logging,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::CreateMatrixDispatcher< c > Member List . This is the complete list of members for sofa::component::linearsystem::CreateMatrixDispatcher< c >, including all inherited members. createLocalMappedMatrix()=0sofa::component::linearsystem::CreateMatrixDispatcher< c >pure virtual; createLocalMatrix(const bool withIndexChecking) constsofa::component::linearsystem::CreateMatrixDispatcher< c >inline; createLocalMatrix() const =0sofa::component::linearsystem::CreateMatrixDispatcher< c >protectedpure virtual; createLocalMatrixWithIndexChecking() const =0sofa::component::linearsystem::CreateMatrixDispatcher< c >protectedpure virtual; ~CreateMatrixDispatcher()=defaultsofa::component::linearsystem::CreateMatrixDispatcher< c >virtual. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_create_matrix_dispatcher-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_create_matrix_dispatcher-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates Member List . This is the complete list of members for sofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates, including all inherited members. forcefiedssofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates; mappingssofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates; massessofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates; operator<<(std::ostream &os, const GroupOfComponentsAssociatedToAPairOfMechanicalStates &group)sofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStatesfriend. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_group_of_components_associated_to_a_pair_of_mechanical_states-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_group_of_components_associated_to_a_pair_of_mechanical_states-members.html
Energy Efficiency,allocate,allocateSystem," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Member List . This is the complete list of members for sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >, including all inherited members. allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
Usability,clear,clearSystem," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
Energy Efficiency,allocate,allocateSystem,"﻿. SOFA API: sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference . #include <LinearSystemData.h>. Public Attributes; StoredMatrixType matrix { nullptr };  The global matrix of the linear system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
Usability,clear,clearSystem,"r system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear sy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LocalMatrixMaps< c, Real > Member List . This is the complete list of members for sofa::component::linearsystem::LocalMatrixMaps< c, Real >, including all inherited members. clear()sofa::component::linearsystem::LocalMatrixMaps< c, Real >inline; componentLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; ComponentType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; indexVerificationStrategysofa::component::linearsystem::LocalMatrixMaps< c, Real >; ListMatrixType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; mappedLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; PairMechanicalStates typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LocalMatrixMaps< c, Real > Member List . This is the complete list of members for sofa::component::linearsystem::LocalMatrixMaps< c, Real >, including all inherited members. clear()sofa::component::linearsystem::LocalMatrixMaps< c, Real >inline; componentLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; ComponentType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; indexVerificationStrategysofa::component::linearsystem::LocalMatrixMaps< c, Real >; ListMatrixType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; mappedLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; PairMechanicalStates typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html
Usability,clear,clear,"earsystem::LocalMatrixMaps< c, Real > Struct Template Reference . #include <MatrixLinearSystem.h>; Detailed Description; template<Contribution c, class Real>; struct sofa::component::linearsystem::LocalMatrixMaps< c, Real >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Cont",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MappedMassMatrixObserver< Real > Member List . This is the complete list of members for sofa::component::linearsystem::MappedMassMatrixObserver< Real >, including all inherited members. accumulatorsofa::component::linearsystem::MappedMassMatrixObserver< Real >; getObservableMass() constsofa::component::linearsystem::MappedMassMatrixObserver< Real >; getObservableState() constsofa::component::linearsystem::MappedMassMatrixObserver< Real >; hasObservableChanged()sofa::component::linearsystem::MappedMassMatrixObserver< Real >; m_dataTrackersofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; m_invariantMassMatrixsofa::component::linearsystem::MappedMassMatrixObserver< Real >; m_invariantProjectedMassMatrixsofa::component::linearsystem::MappedMassMatrixObserver< Real >; m_mstatesofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; m_newObservablessofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; m_observedMasssofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; observe(core::behavior::BaseMass *mass)sofa::component::linearsystem::MappedMassMatrixObserver< Real >; observe(core::BaseMapping *mapping)sofa::component::linearsystem::MappedMassMatrixObserver< Real >; observe(core::behavior::BaseMechanicalState *mstate)sofa::component::linearsystem::MappedMassMatrixObserver< Real >. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer-members.html
Performance,cache,cache,﻿. SOFA API: sofa::component::linearsystem::MappedMassMatrixObserver< Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::MappedMassMatrixObserver< Real > Struct Template Reference . #include <MappedMassMatrixObserver.h>; Detailed Description; template<class Real>; struct sofa::component::linearsystem::MappedMassMatrixObserver< Real >; Pre-compute the mapped mass matrix assuming it is constant and store it. Support cache invalidation . Public Attributes; BaseAssemblingMatrixAccumulator< core::matrixaccumulator::Contribution::MASS > * accumulator { nullptr };  The mass accumulator associated to the observable mass. More...;  ; std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantMassMatrix;  ; Data< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantProjectedMassMatrix;  . Protected Attributes; core::DataTracker m_dataTracker;  ; core::behavior::BaseMass * m_observedMass { nullptr };  ; core::behavior::BaseMechanicalState * m_mstate { nullptr };  The state associated to the observable mass. More...;  ; bool m_newObservables = true;  . Public Member Functions; void observe (core::behavior::BaseMass *mass);  The provided mass is observed to track cache invalidation. More...;  ; void observe (core::BaseMapping *mapping);  ; void observe (core::behavior::BaseMechanicalState *mstate);  The provided state (associated to the mass) is observed to track cache invalidation. More...;  ; core::behavior::BaseMass * getObservableMass () const;  Return the observable mass. More...;  ; core::behavior::BaseMechanicalState * getObservableState () const;  Return the observable state. More...;  ; bool hasObservableChanged ();  Return true if the tracking of the observables noticed a change since the last call. More...;  . Attribute details. ◆ accumulator. template<class Rea,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MappingGraph::SameGroupComponents Member List . This is the complete list of members for sofa::component::linearsystem::MappingGraph::SameGroupComponents, including all inherited members. forceFieldssofa::component::linearsystem::MappingGraph::SameGroupComponents; massessofa::component::linearsystem::MappingGraph::SameGroupComponents. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapping_graph_1_1_same_group_components-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapping_graph_1_1_same_group_components-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Member List . This is the complete list of members for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet, including all inherited members. discardRowCol(sofa::Index row, sofa::Index col) overridesofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichletvirtual; m_globalMatrixsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; m_offsetsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; ~Dirichlet() override=defaultsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; ~ZeroDirichletCondition()=defaultsofa::core::behavior::ZeroDirichletConditionvirtual. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet-members.html
Modifiability,inherit,inherited,"linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Referencefinal . #include <MatrixLinearSystem.h>. Inheritance diagram for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet:. [legend]; Detailed Description; template<class TMatrix, class TVector>; struct sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; Define how zero Dirichlet boundary conditions are applied on the global matrix . Public Attributes; sofa::type::Vec2u m_offset;  ; TMatrix * m_globalMatrix { nullptr };  The matrix to apply a zero Dirichlet boundary condition. More...;  . Public Member Functions;  ~Dirichlet () override=default;  ; void discardRowCol (sofa::Index row, sofa::Index col) override;  ;  Public Member Functions inherited from sofa::core::behavior::ZeroDirichletCondition; virtual ~ZeroDirichletCondition ()=default;  . Attribute details. ◆ m_globalMatrix. template<class TMatrix , class TVector > . TMatrix* sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_globalMatrix { nullptr }. The matrix to apply a zero Dirichlet boundary condition. . ◆ m_offset. template<class TMatrix , class TVector > . sofa::type::Vec2u sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_offset. Constructor details. ◆ ~Dirichlet(). template<class TMatrix , class TVector > . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::~Dirichlet ; (; ). overridedefault . Function details. ◆ discardRowCol(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::discardRowCol ; (; sofa::Index ; , . sofa::Index ;  . ). overridevirtual . Zero ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors Member List . This is the complete list of members for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors, including all inherited members. idsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_dampingsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_geometricStiffnesssofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_masssofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_stiffnesssofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_independent_contributors-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_independent_contributors-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::linear::CenterOfMassMappingOperation< Model > Member List . This is the complete list of members for sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >, including all inherited members. computeTotalMass(const Model *model, const sofa::core::behavior::BaseMass *mass)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; Coord typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; Deriv typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; fetchMass(const Model *m)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; getVecCoord(const Model *m, const sofa::core::VecId id)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; getVecDeriv(Model *m, const sofa::core::VecId id)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; VecCoord typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; VecDeriv typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; WeightedCoord(const VecCoord *v, const sofa::core::behavior::BaseMass *m)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; WeightedDeriv(const VecDeriv *v, const sofa::core::behavior::BaseMass *m)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic. Generated on Mon Nov 11 2024 02:50:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping_operation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::linear::RigidMappingMatrixHelper< 2, Real > Member List . This is the complete list of members for sofa::component::mapping::linear::RigidMappingMatrixHelper< 2, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::linear::RigidMappingMatrixHelper< 2, Real >inlinestatic. Generated on Mon Nov 11 2024 02:50:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::linear::RigidMappingMatrixHelper< 3, Real > Member List . This is the complete list of members for sofa::component::mapping::linear::RigidMappingMatrixHelper< 3, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::linear::RigidMappingMatrixHelper< 3, Real >inlinestatic. Generated on Mon Nov 11 2024 02:50:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html
Deployability,update,updateTarget,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Member List . This is the complete list of members for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping, including all inherited members. updateTarget(unsigned index, SReal x, SReal y, SReal z)=0sofa::component::mapping::nonlinear::BaseDistanceFromTargetMappingpure virtual. Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Member List . This is the complete list of members for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping, including all inherited members. updateTarget(unsigned index, SReal x, SReal y, SReal z)=0sofa::component::mapping::nonlinear::BaseDistanceFromTargetMappingpure virtual. Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html
Deployability,update,updateTarget,"﻿. SOFA API: sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Referenceabstract . #include <DistanceFromTargetMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping:. [legend]. Public Member Functions; virtual void updateTarget (unsigned index, SReal x, SReal y, SReal z)=0;  . Function details. ◆ updateTarget(). virtual void sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping::updateTarget ; (; unsigned ; index, . SReal ; x, . SReal ; y, . SReal ; z . ). pure virtual . Implemented in sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >. sofacomponentmappingnonlinearBaseDistanceFromTargetMapping; Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry Member List . This is the complete list of members for sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry, including all inherited members. jacobianValuesofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry; operator<(const JacobianEntry &other) constsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntryinline; vertexIdsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry. Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping_1_1_jacobian_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping_1_1_jacobian_entry-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 2, Real > Member List . This is the complete list of members for sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 2, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 2, Real >inlinestatic. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real > Member List . This is the complete list of members for sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real >inlinestatic. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType > Member List . This is the complete list of members for sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType >, including all inherited members. operator()(MatrixType *mat, MassType mass, int pos, MassType fact)sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType >inline; operator()(MatrixType *mat, MassType mass, int posRow, int posColumn, MassType fact)sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType >inline. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType > Member List . This is the complete list of members for sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType >, including all inherited members. operator()(MatrixType *mat, const defaulttype::RigidMass< N, Real > &mass, int pos, Real fact)sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType >inline. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor_3_01defaulttype_1_1_rigid_deriv_3_01d7907f01a4f64739137740e507957d60.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor_3_01defaulttype_1_1_rigid_deriv_3_01d7907f01a4f64739137740e507957d60.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > > Member List . This is the complete list of members for sofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > >, including all inherited members. type typedefsofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > >. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01defaulttype_1_1_std_vector_types_3_01_t_coord_6d3a1e75ff1118f5711a636ce8049aa7.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01defaulttype_1_1_std_vector_types_3_01_t_coord_6d3a1e75ff1118f5711a636ce8049aa7.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > > Member List . This is the complete list of members for sofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > >, including all inherited members. type typedefsofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > >. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars Member List . This is the complete list of members for sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars, including all inherited members. dampingsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; nelemssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; pos6Dsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; stiffabssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; stiffnesssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; vcentersofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; vinv_r2sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; vrsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars. Generated on Mon Nov 11 2024 02:52:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field_1_1_temp_vars-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field_1_1_temp_vars-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
Testability,test,testing,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >, including all inherited members. anisotropyDirectionsofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; parameterAlphasofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; parameterArraysofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; parameterTausofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >. Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters-members.html
Deployability,configurat,configuration,"l members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon No",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
Integrability,depend,depends,"::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
Modifiability,config,configuration,"l members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon No",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring, including all inherited members. DfDxsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring; edgesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring; restLengthsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring. Generated on Mon Nov 11 2024 03:04:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information_1_1_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information_1_1_spring-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput, including all inherited members. forcesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput; forceIntensitysofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput; inverseLengthsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput. Generated on Mon Nov 11 2024 03:04:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_force_output-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_force_output-members.html
Energy Efficiency,energy,energysofa,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Member List . This is the complete list of members for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce, including all inherited members. dForce_dXsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; DPos typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; energysofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; forcesofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce. Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Member List . This is the complete list of members for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce, including all inherited members. dForce_dXsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; DPos typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; energysofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; forcesofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce. Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html
Energy Efficiency,energy,energy,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference . #include <SpringForceField.h>. Public Attributes; Real energy;  ; std::pair< DPos, DPos > force;  ; type::MatNoInit< N, N, Real > dForce_dX;  . Attribute details. ◆ dForce_dX. template<class DataTypes > . type::MatNoInit<N, N, Real> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::dForce_dX. ◆ energy. template<class DataTypes > . Real sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::energy. ◆ force. template<class DataTypes > . std::pair<DPos, DPos> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::force. sofacomponentsolidmechanicsspringSpringForceFieldSpringForce; Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring Member List . This is the complete list of members for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring, including all inherited members. kdsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring; kssofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring; operator<<(std::ostream &os, const Spring &)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springfriend; operator>>(std::istream &in, Spring &)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springfriend; restVectorsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring; Spring(Real _ks, Real _kd, Deriv _rl)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springinline; Spring()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springinline. Generated on Mon Nov 11 2024 03:08:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_spring-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion Member List . This is the complete list of members for sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion, including all inherited members. _childrensofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _coarsestParentsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _hexaIdxsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _neighborssofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _nonRamifiedHexaIdxsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _parentsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _tmpsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; Children typedefsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; Connexion()sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexioninline; propagateConnexionNumberToNeighbors(int connexionNumber, const type::vector< Connexion * > &allFineConnexions)sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexioninline. Generated on Mon Nov 11 2024 03:10:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology_1_1_connexion-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology_1_1_connexion-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern Member List . This is the complete list of members for sofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern, including all inherited members. colsIndexsofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern; matrixSizesofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern; numberOfNonZerossofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern; rowBeginsofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_base_ordering_method_1_1_sparse_matrix_pattern-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_base_ordering_method_1_1_sparse_matrix_pattern-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::BlockType Member List . This is the complete list of members for sofa::core::behavior::BlockType, including all inherited members. blocDatasofa::core::behavior::BlockType; blocPrecisionsofa::core::behavior::BlockType; operator<(const BlockType &blocType) constsofa::core::behavior::BlockTypeinline; operator<<(std::ostream &out, const BlockType &s)sofa::core::behavior::BlockTypefriend; operator==(const BlockType &blocType) constsofa::core::behavior::BlockTypeinline; toString() constsofa::core::behavior::BlockTypeinline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_block_type-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_block_type-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF > Member List . This is the complete list of members for sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >, including all inherited members. DispatcherForceField_addKToMatrix(FF *main, const sofa::core::MechanicalParams *mparams)sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >inline; mainsofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >; mparamssofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >; operator()(const MatrixWriter &m)sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >inline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_bloc_matrix_writer_1_1_dispatcher_force_field__add_k_to_matrix-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_bloc_matrix_writer_1_1_dispatcher_force_field__add_k_to_matrix-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::DampingMatrix::DF Member List . This is the complete list of members for sofa::core::behavior::DampingMatrix::DF, including all inherited members. DF(BaseMechanicalState *_mstate1, DampingMatrix *_mat)sofa::core::behavior::DampingMatrix::DFinline; withRespectToVelocityIn(BaseMechanicalState *mstate2) constsofa::core::behavior::DampingMatrix::DFinline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_damping_matrix_1_1_d_f-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_damping_matrix_1_1_d_f-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::StiffnessMatrix::DF Member List . This is the complete list of members for sofa::core::behavior::StiffnessMatrix::DF, including all inherited members. DF(BaseMechanicalState *_mstate1, StiffnessMatrix *_mat)sofa::core::behavior::StiffnessMatrix::DFinline; withRespectToPositionsIn(BaseMechanicalState *mstate2) constsofa::core::behavior::StiffnessMatrix::DFinline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_stiffness_matrix_1_1_d_f-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_stiffness_matrix_1_1_d_f-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::ZeroDirichletCondition Member List . This is the complete list of members for sofa::core::behavior::ZeroDirichletCondition, including all inherited members. discardRowCol(sofa::Index, sofa::Index)sofa::core::behavior::ZeroDirichletConditioninlinevirtual; ~ZeroDirichletCondition()=defaultsofa::core::behavior::ZeroDirichletConditionvirtual. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::get_base_object_strong< c > Member List . This is the complete list of members for sofa::core::get_base_object_strong< c >, including all inherited members. ComponentType typedefsofa::core::get_base_object_strong< c >; type typedefsofa::core::get_base_object_strong< c >. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong-members.html
Integrability,depend,depending,"﻿. SOFA API: sofa::core::get_base_object_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::get_base_object_strong< c > Struct Template Reference . #include <BaseMatrixAccumulatorComponent.h>; Detailed Description; template<matrixaccumulator::Contribution c>; struct sofa::core::get_base_object_strong< c >; Provides member typedef type for known Contribution using SFINAE; Typedef type is an abstract strong type derived from MatrixAccumulator and BaseObject, and depending on . sofacoreget_base_object_strong; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html
Integrability,depend,depending,﻿. SOFA API: sofa::core::matrixaccumulator::get_abstract_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< c > Struct Template Reference . #include <MatrixAccumulator.h>; Detailed Description; template<Contribution c>; struct sofa::core::matrixaccumulator::get_abstract_strong< c >; Provides member typedef @type for known Contribution using SFINAE; Typedef @type is an abstract strong type derived from @MatrixAccumulatorInterface and depending on Typedef @ComponentType is the type of object associated to the Contribution . sofacorematrixaccumulatorget_abstract_strong; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_g_e_o_m_e588029b2bcc0b21ff1fc66832f9851cb.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_g_e_o_m_e588029b2bcc0b21ff1fc66832f9851cb.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html
Integrability,depend,depending,﻿. SOFA API: sofa::core::matrixaccumulator::get_list_abstract_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< c > Struct Template Reference . #include <MatrixAccumulator.h>; Detailed Description; template<Contribution c>; struct sofa::core::matrixaccumulator::get_list_abstract_strong< c >; Provides member typedef @type for known Contribution using SFINAE; Typedef @type is an abstract strong type derived from @ListMatrixAccumulator and depending on . sofacorematrixaccumulatorget_list_abstract_strong; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_g_ef5b917c1f63b4183ce767c7a826f61b9.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_g_ef5b917c1f63b4183ce767c7a826f61b9.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies > Member List . This is the complete list of members for sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >inline; skip_insertion_if_error typedefsofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >; verify_index typedefsofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::DAMPING > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::DAMPING >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::DAMPING >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::GEOMETRIC_STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::GEOMETRIC_STIFFNESS >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::GEOMETRIC_STIFFNESS >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_g_e_o_m_e_t_701e39a001625a51e06b3390efed52d8.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_g_e_o_m_e_t_701e39a001625a51e06b3390efed52d8.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::MASS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::MASS >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::MASS >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_m_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_m_a_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::STIFFNESS >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::STIFFNESS >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::IndexVerificationStrategy Member List . This is the complete list of members for sofa::core::matrixaccumulator::IndexVerificationStrategy, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col)=0sofa::core::matrixaccumulator::IndexVerificationStrategypure virtual; skip_insertion_if_error typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; verify_index typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Member List . This is the complete list of members for sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy, including all inherited members. checkColIndex(sofa::SignedIndex col)=0sofa::core::matrixaccumulator::IndividualIndexVerificationStrategyprotectedpure virtual; checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::IndividualIndexVerificationStrategyinlinevirtual; checkRowIndex(sofa::SignedIndex row)=0sofa::core::matrixaccumulator::IndividualIndexVerificationStrategyprotectedpure virtual; skip_insertion_if_error typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; verify_index typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Struct Referenceabstract . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy:. [legend]. Public Member Functions; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Protected Member Functions; virtual bool checkRowIndex (sofa::SignedIndex row)=0;  ; virtual bool checkColIndex (sofa::SignedIndex col)=0;  . Function details. ◆ checkColIndex(). virtual bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkColIndex ; (; sofa::SignedIndex ; col). protectedpure virtual . Implemented in sofa::core::matrixaccumulator::RangeVerification. ◆ checkRowColIndices(). bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ checkRowIndex(). virtual bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkRowIndex ; (; sofa::SignedIndex ; row). protectedpure virtual . Implemented in sofa::core::matrixaccumulator::RangeVerification. sofacorematrixaccumulatorIndividualIndexVerificationStrategy; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::NoIndexVerification Member List . This is the complete list of members for sofa::core::matrixaccumulator::NoIndexVerification, including all inherited members. skip_insertion_if_error typedefsofa::core::matrixaccumulator::NoIndexVerification; verify_index typedefsofa::core::matrixaccumulator::NoIndexVerification; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::matrixaccumulator::NoIndexVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::matrixaccumulator::NoIndexVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::NoIndexVerification:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . sofacorematrixaccumulatorNoIndexVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::RangeVerification Member List . This is the complete list of members for sofa::core::matrixaccumulator::RangeVerification, including all inherited members. checkColIndex(sofa::SignedIndex col) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::IndividualIndexVerificationStrategyinlinevirtual; checkRowIndex(sofa::SignedIndex row) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; logger() constsofa::core::matrixaccumulator::RangeVerification; m_messageComponentsofa::core::matrixaccumulator::RangeVerification; maxColIndexsofa::core::matrixaccumulator::RangeVerification; maxRowIndexsofa::core::matrixaccumulator::RangeVerification; minColIndexsofa::core::matrixaccumulator::RangeVerification; minRowIndexsofa::core::matrixaccumulator::RangeVerification; skip_insertion_if_error typedefsofa::core::matrixaccumulator::RangeVerification; verify_index typedefsofa::core::matrixaccumulator::RangeVerification; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html
Testability,log,logger,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::RangeVerification Member List . This is the complete list of members for sofa::core::matrixaccumulator::RangeVerification, including all inherited members. checkColIndex(sofa::SignedIndex col) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::IndividualIndexVerificationStrategyinlinevirtual; checkRowIndex(sofa::SignedIndex row) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; logger() constsofa::core::matrixaccumulator::RangeVerification; m_messageComponentsofa::core::matrixaccumulator::RangeVerification; maxColIndexsofa::core::matrixaccumulator::RangeVerification; maxRowIndexsofa::core::matrixaccumulator::RangeVerification; minColIndexsofa::core::matrixaccumulator::RangeVerification; minRowIndexsofa::core::matrixaccumulator::RangeVerification; skip_insertion_if_error typedefsofa::core::matrixaccumulator::RangeVerification; verify_index typedefsofa::core::matrixaccumulator::RangeVerification; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html
Modifiability,inherit,inherited,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
Testability,log,logging,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< T > Member List . This is the complete list of members for sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< T >, including all inherited members. Get()sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< T >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< C< T1, Ts... > > Member List . This is the complete list of members for sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< C< T1, Ts... > >, including all inherited members. Get()sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< C< T1, Ts... > >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name_3_01f5b603fa2507d3a0e5a0c76f9a214451.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name_3_01f5b603fa2507d3a0e5a0c76f9a214451.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T, including all inherited members. get() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator TDestType *() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator!() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator!=(const TDestPtr &p) constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator*() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator->() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator=(const TDestPtr &v)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator==(const TDestPtr &p) constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; pathsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T; ptrsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T; T()sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; T(const TDestPtr &p)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinlineexplicit. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_0a68410d99502fe8265b0c6310990001c.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_0a68410d99502fe8265b0c6310990001c.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Parents< T, Types > Member List . This is the complete list of members for sofa::core::objectmodel::Parents< T, Types >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::Parents< T, Types >inlinestatic; nbsofa::core::objectmodel::Parents< T, Types >static. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_parents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_parents-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassParents< Parent > Member List . This is the complete list of members for sofa::core::objectmodel::TClassParents< Parent >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::TClassParents< Parent >inlinestatic; nb()sofa::core::objectmodel::TClassParents< Parent >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassParents< void > Member List . This is the complete list of members for sofa::core::objectmodel::TClassParents< void >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::TClassParents< void >inlinestatic; nb()sofa::core::objectmodel::TClassParents< void >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01void_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01void_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassParents< Parents< Types... > > Member List . This is the complete list of members for sofa::core::objectmodel::TClassParents< Parents< Types... > >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::TClassParents< Parents< Types... > >inlinestatic; nb()sofa::core::objectmodel::TClassParents< Parents< Types... > >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01_parents_3_01_types_8_8_8_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01_parents_3_01_types_8_8_8_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::ElemAncestorElem< NV > Member List . This is the complete list of members for sofa::core::topology::ElemAncestorElem< NV >, including all inherited members. ElemAncestorElem()sofa::core::topology::ElemAncestorElem< NV >inline; ElemAncestorElem(const type::fixed_array< PointAncestorElem, NV > &_pointSrcElems, const type::vector< TopologyElemID > &_srcElems)sofa::core::topology::ElemAncestorElem< NV >inline; ElemAncestorElem(const type::fixed_array< PointAncestorElem, NV > &_pointSrcElems, const TopologyElemID &_srcElem)sofa::core::topology::ElemAncestorElem< NV >inline; pointSrcElemssofa::core::topology::ElemAncestorElem< NV >; srcElemssofa::core::topology::ElemAncestorElem< NV >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_elem_ancestor_elem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_elem_ancestor_elem-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointAncestorElem Member List . This is the complete list of members for sofa::core::topology::PointAncestorElem, including all inherited members. indexsofa::core::topology::PointAncestorElem; LocalCoords typedefsofa::core::topology::PointAncestorElem; localCoordssofa::core::topology::PointAncestorElem; PointAncestorElem()sofa::core::topology::PointAncestorEleminline; PointAncestorElem(geometry::ElementType _type, Topology::ElemID _index, const LocalCoords &_localCoords)sofa::core::topology::PointAncestorEleminline; typesofa::core::topology::PointAncestorElem. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_point_ancestor_elem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_point_ancestor_elem-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Edge > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Edge >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Edge >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_edge_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_hexahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Point > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Point >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; EMoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Point >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Point >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Point >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_point_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_point_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Quad > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Quad >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Triangle > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyElemID Member List . This is the complete list of members for sofa::core::topology::TopologyElemID, including all inherited members. indexsofa::core::topology::TopologyElemID; TopologyElemID()sofa::core::topology::TopologyElemIDinline; TopologyElemID(geometry::ElementType _type, Topology::ElemID _index)sofa::core::topology::TopologyElemIDinline; typesofa::core::topology::TopologyElemID. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::tristate Member List . This is the complete list of members for sofa::core::visual::tristate, including all inherited members. difference_tristate(const tristate &previous, const tristate &current)sofa::core::visual::tristatefriend; false_value enum valuesofa::core::visual::tristate; fusion_tristate(const tristate &lhs, const tristate &rhs)sofa::core::visual::tristatefriend; merge_tristate(const tristate &previous, const tristate &current)sofa::core::visual::tristatefriend; neutral_value enum valuesofa::core::visual::tristate; operator bool() constsofa::core::visual::tristateinline; operator!=(const tristate &t) constsofa::core::visual::tristateinline; operator!=(const state_t &s) constsofa::core::visual::tristateinline; operator==(const tristate &t) constsofa::core::visual::tristateinline; operator==(const state_t &s) constsofa::core::visual::tristateinline; statesofa::core::visual::tristate; state_t enum namesofa::core::visual::tristate; tristate(bool b)sofa::core::visual::tristateinline; tristate()sofa::core::visual::tristateinline; tristate(state_t state)sofa::core::visual::tristateinline; true_value enum valuesofa::core::visual::tristate. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem::ci_comparison Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem::ci_comparison, including all inherited members. operator()(const std::string &s1, const std::string &s2) constsofa::core::visual::FlagTreeItem::ci_comparisoninline. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem::ci_comparison::nocase_compare Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem::ci_comparison::nocase_compare, including all inherited members. operator()(const unsigned char &c1, const unsigned char &c2) constsofa::core::visual::FlagTreeItem::ci_comparison::nocase_compareinline. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Member List . This is the complete list of members for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >, including all inherited members. AccumulationVecId(const State< TDataTypes > &state)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >inlineexplicit; AccumulationVecId()=deletesofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; addToContributingVecIds(core::ConstVecDerivId vecDerivId)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; DataTypes typedefsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Deriv typedefsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; operator[](Size i) constsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; removeFromContributingVecIds(core::ConstVecDerivId vecDerivId)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
Security,access,accessing,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
Usability,simpl,simplified,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTracker Member List . This is the complete list of members for sofa::core::DataTracker, including all inherited members. clean(const objectmodel::BaseData &data)sofa::core::DataTracker; clean()sofa::core::DataTracker; DataTrackers typedefsofa::core::DataTrackerprotected; getMapTrackedData()sofa::core::DataTrackerinline; hasChanged(const objectmodel::BaseData &data) constsofa::core::DataTracker; hasChanged() constsofa::core::DataTracker; m_dataTrackerssofa::core::DataTrackerprotected; trackData(const objectmodel::BaseData &data)sofa::core::DataTracker. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html
Security,access,access,"whether or not the data is up-to-date with its parent values while DataTracker::hasChanged(myData) checks whether the data has been modified since it has last been checked . Protected Attributes; DataTrackers m_dataTrackers;  . Public Member Functions; void trackData (const objectmodel::BaseData &data);  ; bool hasChanged (const objectmodel::BaseData &data) const;  ; bool hasChanged () const;  Did one of the tracked data change since the last call to clean()? More...;  ; void clean (const objectmodel::BaseData &data);  ; void clean ();  comparison point is cleaned for all tracked Data More...;  ; const std::map< const objectmodel::BaseData *, int > & getMapTrackedData ();  Provide the map of tracked Data. More...;  . Attribute details. ◆ m_dataTrackers. DataTrackers sofa::core::DataTracker::m_dataTrackers. protected . Function details. ◆ clean() [1/2]. void sofa::core::DataTracker::clean ; (; ). comparison point is cleaned for all tracked Data . ◆ clean() [2/2]. void sofa::core::DataTracker::clean ; (; const objectmodel::BaseData & ; data). comparison point is cleaned for the specified tracked Data Warningdata must be a tracked Data ; See alsotrackData . ◆ getMapTrackedData(). const std::map<const objectmodel::BaseData*,int>& sofa::core::DataTracker::getMapTrackedData ; (; ). inline . Provide the map of tracked Data. . ◆ hasChanged() [1/2]. bool sofa::core::DataTracker::hasChanged ; (; ); const. Did one of the tracked data change since the last call to clean()? . ◆ hasChanged() [2/2]. bool sofa::core::DataTracker::hasChanged ; (; const objectmodel::BaseData & ; data); const. Did the data change since its last access? Warningdata must be a tracked Data ; See alsotrackData . ◆ trackData(). void sofa::core::DataTracker::trackData ; (; const objectmodel::BaseData & ; data). select a Data to track to be able to check if it was dirtied since the previous clean. See alsoisTrackedDataDirty . sofacoreDataTracker; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c >::Derivative Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >::Derivative, including all inherited members. checkValidity(const objectmodel::BaseObject *object) constsofa::core::DerivativeMatrix< c >::Derivativeinline; Derivative(BaseState *_mstate1, BaseState *_mstate2, DerivativeMatrix *_mat)sofa::core::DerivativeMatrix< c >::Derivativeinline; isValid() constsofa::core::DerivativeMatrix< c >::Derivativeinline; operator bool() constsofa::core::DerivativeMatrix< c >::Derivativeinline; operator()(sofa::SignedIndex row, sofa::SignedIndex col) constsofa::core::DerivativeMatrix< c >::Derivativeinline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c >::DerivativeElement Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >::DerivativeElement, including all inherited members. DerivativeElement(sofa::SignedIndex _row, sofa::SignedIndex _col, MatrixAccumulator *_mat)sofa::core::DerivativeMatrix< c >::DerivativeElementinline; isValid() constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator bool() constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const float value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const double value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< L, C, real > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 1, 1, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 1, 1, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 2, 2, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 2, 2, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 3, 3, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 3, 3, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 6, 6, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 6, 6, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::GeometricStiffnessMatrix::DJ Member List . This is the complete list of members for sofa::core::GeometricStiffnessMatrix::DJ, including all inherited members. DJ(BaseState *_mstate1, GeometricStiffnessMatrix *_mat)sofa::core::GeometricStiffnessMatrix::DJinline; withRespectToPositionsIn(BaseState *mstate2) constsofa::core::GeometricStiffnessMatrix::DJinline. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectFactoryJson Member List . This is the complete list of members for sofa::core::ObjectFactoryJson, including all inherited members. dump(ObjectFactory *factory)sofa::core::ObjectFactoryJsonstatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectRegistrationEntry Member List . This is the complete list of members for sofa::core::ObjectRegistrationEntry, including all inherited members. funcsofa::core::ObjectRegistrationEntry; FuncPtr typedefsofa::core::ObjectRegistrationEntry; ObjectRegistrationEntry()sofa::core::ObjectRegistrationEntryinline; operator()(sofa::core::ObjectFactory *data)sofa::core::ObjectRegistrationEntryinline; symbolsofa::core::ObjectRegistrationEntryinlinestatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html
Modifiability,variab,variables,"﻿. SOFA API: sofa::core::StateType< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateType< DataTypes, vtype >; Maps a VecType to a DataTypes member typedef representing the state variables Example: StateType_t<DataTypes, core::V_COORD> returns the type DataTypes::Coord . sofacoreStateType; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateType< DataTypes, core::V_COORD >, including all inherited members. type typedefsofa::core::StateType< DataTypes, core::V_COORD >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateType< DataTypes, core::V_DERIV >, including all inherited members. type typedefsofa::core::StateType< DataTypes, core::V_DERIV >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateTypeSize< DataTypes, vtype >; Maps a VecType to a DataTypes member static variable representing the size of the state variables Example: StateTypeSize_v<DataTypes, core::V_COORD> is the value of DataTypes::coord_total_size . sofacoreStateTypeSize; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateTypeSize< DataTypes, core::V_COORD >, including all inherited members. total_sizesofa::core::StateTypeSize< DataTypes, core::V_COORD >static. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateTypeSize< DataTypes, core::V_DERIV >, including all inherited members. total_sizesofa::core::StateTypeSize< DataTypes, core::V_DERIV >static. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
Security,access,access,"﻿. SOFA API: sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference . Helper class to access vectors of a given type in a given State. ; More...; Detailed Description; template<class DataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::StateVecAccessor< DataTypes, vtype, vaccess >; Helper class to access vectors of a given type in a given State. . sofacoreStateVecAccessor; Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >protected; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >protected; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html
Modifiability,variab,variables,"﻿. SOFA API: sofa::core::StateVecType< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateVecType< DataTypes, vtype >; Maps a VecType to a DataTypes member typedef representing a vector of state variables Example: StateVecType_t<DataTypes, core::V_COORD> returns the type DataTypes::VecCoord . sofacoreStateVecType; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateVecType< DataTypes, core::V_COORD >, including all inherited members. type typedefsofa::core::StateVecType< DataTypes, core::V_COORD >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateVecType< DataTypes, core::V_DERIV >, including all inherited members. type typedefsofa::core::StateVecType< DataTypes, core::V_DERIV >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::VecIdProperties Member List . This is the complete list of members for sofa::core::VecIdProperties, including all inherited members. groupsofa::core::VecIdProperties; labelsofa::core::VecIdProperties. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::BoolTypeInfo Member List . This is the complete list of members for sofa::defaulttype::BoolTypeInfo, including all inherited members. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Size enum valuesofa::defaulttype::BoolTypeInfo; Text enum valueso",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::BoundingBoxTypeInfo Member List . This is the complete list of members for sofa::defaulttype::BoundingBoxTypeInfo, including all inherited members. BaseType typedefsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html
Modifiability,inherit,inherited,"getValue(data, i, value);; // [...] Do something with 'value'; }; }; sofa::helper::dimSReal SReal SReal SReal int SReal int dimDefinition: LCPcalc.h:100; sofa::defaulttype::DefaultDataTypeInfo::DataTypeTDataType DataTypeTemplate parameter.Definition: DataTypeInfo.h:77; sofa::defaulttype::DefaultDataTypeInfo::ValueTypeDataType ValueTypeType of the final atomic values (i.e. the values indexed by getValue()).Definition: DataTypeInfo.h:82; sofa::defaulttype::DefaultDataTypeInfo::sizestatic sofa::Size size()Definition: DataTypeInfo.h:104; sofa::defaulttype::DefaultDataTypeInfo::getValuestatic void getValue(const DataType &, Index, T &)Definition: DataTypeInfo.h:110; Note about size and indices; The getValue() and setValue() methods take an index as a parameter, with the following conventions:. If a type is not a container, then the index must be 0.; Multi-dimensional containers are abstracted to a single dimension. This allows iterating over any container using a single index, at the price of some limitations. See alsoAbstractTypeInfo provides similar mechanisms to manipulate Data objects generically in non-template code. . Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::DefaultDataTypeInfo< TDataType >; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . sofadefaulttypeDataTypeInfo; Generated on Mon Nov 11 2024 03:17:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< bool > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< bool >, including all inherited members. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; GetTypeName()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; name()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; Size enum valuesofa::defaulttype::BoolType",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< bool > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< bool > Struct Reference . #include <TypeInfo_Bool.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< bool >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoolTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; template<typename T > ; static void setValue (std::vector< DataType >::reference data, sofa::Size index, const T &v);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static void setValueString (std::vector< DataType >::reference data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< bool >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< char > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< char >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< char >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< char >; byteSize()sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< char >; GetTypeName()sofa::defaulttype::DataTypeInfo< char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< char >; name()sofa::defaulttype::DataTypeInfo< char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< char >; size()sofa::defaulttype::IntegerTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< double > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< double >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< double >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< double >; byteSize()sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< double >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< double >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< double >; DataType typedefsofa::defaulttype::ScalarTypeInfo< double >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< double >; GetTypeName()sofa::defaulttype::DataTypeInfo< double >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< double >; name()sofa::defaulttype::DataTypeInfo< double >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< double >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< double >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< double >; Size enum valuesofa::defaulttype::ScalarTypeInfo< double >; size()sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< double > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< double > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< double >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< double >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< double >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< double >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< double >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< float > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< float >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< float >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< float >; byteSize()sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< float >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< float >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< float >; DataType typedefsofa::defaulttype::ScalarTypeInfo< float >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< float >; GetTypeName()sofa::defaulttype::DataTypeInfo< float >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< float >; name()sofa::defaulttype::DataTypeInfo< float >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< float >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< float >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< float >; Size enum valuesofa::defaulttype::ScalarTypeInfo< float >; size()sofa::defaulttype::ScalarTypeInf",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< float > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< float > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< float >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< float >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< float >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< float >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< float >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< int > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< int >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< int >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< int >; byteSize()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< int >; GetTypeName()sofa::defaulttype::DataTypeInfo< int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< int >; name()sofa::defaulttype::DataTypeInfo< int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< int >; size()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; size(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< int >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< long long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< long long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< long long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long long >; byteSize()sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long long >; name()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo<",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long >; byteSize()sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long >; name()sofa::defaulttype::DataTypeInfo< long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long >; size()sofa::defaulttype::IntegerTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< short > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< short >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< short >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< short >; byteSize()sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< short >; GetTypeName()sofa::defaulttype::DataTypeInfo< short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< short >; name()sofa::defaulttype::DataTypeInfo< short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< short >; size()sofa::defaul",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; byteSize()sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ConvType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; DataType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValueString(DataType &data",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference . #include <Tag.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::Tag >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; byteSize()sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; DataType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference . #include <TagSet.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::TagSet >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; byteSize()sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(const RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValueString(Data",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const RigidMass< N, real > &data);  ; static void * getValuePtr (RigidMass< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidMass< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; byteSize()sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValuePtr(const sofa::defaulttype::StdRigidTypes< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValuePtr(sofa::defaulttype::StdRigidTypes< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void * getValuePtr (sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Edge >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValueString(DataType &data, sofa::Si",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Hexahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValueString(DataTy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pentahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pyramid >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; setSize(DataType &data, sofa::Size size)sofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Quad >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValueString(DataTy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Triangle >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference . #include <TypeInfo_FixedArray.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::fixed_array< T, N > >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(const sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, A",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >:. [legend]. Static Public Member Functions; static const void * getValuePtr (const sofa::type::vector< bool, Alloc > &);  ; static void * getValuePtr (sofa::type::vector< bool, Alloc > &);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValuePtr() [1/2]. template<class Alloc > . static const void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; const sofa::type::vector< bool, Alloc > & ; ). inlinestatic . ◆ getValuePtr() [2/2]. template<class Alloc > . static void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; sofa::type::vector< bool, Alloc > & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class Alloc > . anonymous enum. EnumeratorSimpleLayout . sofadefaultt",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValueString(const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html
Modifiability,inherit,inherited,". Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size size (const sofa::type::vector< std::string, Alloc > &data);  ; static bool setSize (sofa::type::vector< std::string, Alloc > &data, sofa::Size size);  ; static void setValueString (sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value);  ; static void getValueString (const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValueString(). template<class Alloc > . static void sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString ; (; const sofa::type::vector< std::string, Alloc > & ; data, . sofa::Index ; index, . std::string & ; value . ). inlinestatic . ◆ setSize(). template<class Alloc > . static bool sofa::d",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaul",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . sofadefaulttypeDataTypeInfo< sofa::type::vector< T, Alloc > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValue(DataType &data, sofa::Size ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference . #include <TypeInfo_Mat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Mat< L, C, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValueString(DataType &data, sofa::Size inde",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference . #include <TypeInfo_Quat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Quat< T > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTyp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Vec< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::VecNoInit< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; byteSize()sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; DataType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; name()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValueString(Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference . #include <TypeInfo_Set.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::set< T, Compare, Alloc > >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< std::string > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< std::string >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< std::string >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< std::string >; byteSize()sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< std::string >; ConvType typedefsofa::defaulttype::TextTypeInfo< std::string >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< std::string >; DataType typedefsofa::defaulttype::TextTypeInfo< std::string >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< std::string >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; getValuePtr(const std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValuePtr(std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< std::string >; name()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< std::string >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< std::string >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< std::s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::string > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::string > Struct Reference . #include <TypeInfo_Text.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::string >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ; static const void * getValuePtr (const std::string &data);  ; static void * getValuePtr (std::string &data);  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< std::string >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::GetTypeName ; (; ). inlinestatic . ◆ getValuePtr() [1/2]. static const void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; const std::string & ; data). inlinestatic . ◆ getValuePtr() [2/2]. static void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; std::string & ; data). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::string >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< type::BoundingBox > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< type::BoundingBox >, including all inherited members. BaseType typedefsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; GetTypeName()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; name()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference . #include <TypeInfo_BoundingBox.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< type::BoundingBox >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoundingBoxTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  since TypeInfos abstract all containers as 1D arrays, T here is of ValueType More...;  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static double getScalarValue (const void *data, sofa::Size index);  ; static void setScalarValue (const void *data, sofa::Size index, SReal value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &bbox);  ; static void * getValuePtr (DataType &bbox);  . Function details. ◆ GetTypeName(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::GetTypeName ; (; ). inlinestatic . ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< type::BoundingBox >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned char > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned char >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; name()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::Inte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned int > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned int >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; name()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned int >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned long long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned long long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; name()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::def",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; name()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::Inte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned short > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned short >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; name()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; SimpleCopy enum valueso",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DefaultDataTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::DefaultDataTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::Defau",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html
Energy Efficiency,allocate,allocate,"peInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest known fixed size for this type, as returned by size() . sofadefaulttypeDefaultDataTypeInfo; Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
Usability,simpl,simply,"Index ; , . const std::string & ;  . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real > Member List . This is the complete list of members for sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >; operator()(const EigenSparseMatrix &eigenMat)sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size > Member List . This is the complete list of members for sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; SimpleCopy enum valuesofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::IncompleteTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::IncompleteTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; byteSize()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(const TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; name()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; Size enum values",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html
Energy Efficiency,allocate,allocate,"TypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest known fixed size for this type, as returned by size() . sofadefaulttypeIncompleteTypeInfo; Generated on Mon Nov 11 2024 03:18:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
Usability,simpl,simply,"index, . const std::string & ; value . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::IntegerTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::IntegerTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; byteSize()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; size()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::Integer",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::ScalarTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::ScalarTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; byteSize()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; DataType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; size()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< TDataType >in",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SetTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::SetTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; byteSize()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< TDataType >; DataType typedefsofa::defaulttype::SetTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::SetTypeInfo< TDataType >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< TDataType >; size()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Text enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValidInfo ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T > Member List . This is the complete list of members for sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >, including all inherited members. add(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic; get(T &x, T &y, T &z, const Coord &c)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic; set(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TextTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::TextTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; byteSize()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::TextTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< TDataType >; DataType typedefsofa::defaulttype::TextTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::TextTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< TDataType >; size()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::TextType",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::VectorTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::VectorTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< TDataType >; byteSize()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; DataType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; name()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; Size enum valuesofa::defaulttype::VectorTypeInfo< TD",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Edge Member List . This is the complete list of members for sofa::geometry::Edge, including all inherited members. Edge()=deletesofa::geometry::Edge; Element_typesofa::geometry::Edgestatic; getBarycentricCoordinates(const Node &point, const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; intersectionWithEdge(const Node &pA, const Node &pB, const Node &pC, const Node &pD, sofa::type::Vec< 2, T > &intersectionBaryCoord)sofa::geometry::Edgeinlinestatic; intersectionWithPlane(const Node &n0, const Node &n1, const sofa::type::Vec< 3, T > &planeP0, const sofa::type::Vec< 3, T > &normal, sofa::type::Vec< 3, T > &intersection)sofa::geometry::Edgeinlinestatic; isPointOnEdge(const Node &p0, const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; length(const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; NumberOfNodessofa::geometry::Edgestatic; squaredLength(const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html
Performance,optimiz,optimized,") between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 20",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
Testability,test,test,"sofa::type::Vec< 3, T > & ; planeP0, . const sofa::type::Vec< 3, T > & ; normal, . sofa::type::Vec< 3, T > & ; intersection . ). inlinestaticconstexpr . Compute the intersection between a plane (defined by a point and a normal) and the Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1nodes of the edge ; planeP0,normalposition and normal defining the plan ; intersectionposition of the intersection (if one) between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inline",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::ElementInfo< GeometryElement > Member List . This is the complete list of members for sofa::geometry::ElementInfo< GeometryElement >, including all inherited members. name()sofa::geometry::ElementInfo< GeometryElement >inlinestatic; type()sofa::geometry::ElementInfo< GeometryElement >inlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point > Member List . This is the complete list of members for sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >, including all inherited members. name()sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >inlinestatic; type()sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >inlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Hexahedron Member List . This is the complete list of members for sofa::geometry::Hexahedron, including all inherited members. barycentricCoefficients(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const Node &pos)sofa::geometry::Hexahedroninlinestatic; center(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7)sofa::geometry::Hexahedroninlinestatic; Element_typesofa::geometry::Hexahedronstatic; getPositionFromBarycentricCoefficients(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const sofa::type::fixed_array< SReal, 3 > &baryC)sofa::geometry::Hexahedroninlinestatic; Hexahedron()=deletesofa::geometry::Hexahedron; NumberOfNodessofa::geometry::Hexahedronstatic; squaredDistanceTo(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const Node &pos)sofa::geometry::Hexahedroninlinestatic; volume(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7)sofa::geometry::Hexahedroninlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html
Performance,optimiz,optimizations,"st Node &n7);  Compute the volume of a hexahedron. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Hexahedron::Element_type = ElementType::HEXAHEDRON. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Hexahedron::NumberOfNodes = 8. staticconstexpr . Constructor details. ◆ Hexahedron(). sofa::geometry::Hexahedron::Hexahedron ; (; ). delete . Function details. ◆ barycentricCoefficients(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::barycentricCoefficients ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the barycentric coefficients of a node in a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the coefficients will be computed . ReturnsA Vec3 container with the barycentric coefficients of the given node . ◆ center(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::center ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the center of a hexahedron. ; RemarksThe order of nodes given as parameter is not necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsCenter of",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Pentahedron Member List . This is the complete list of members for sofa::geometry::Pentahedron, including all inherited members. Element_typesofa::geometry::Pentahedronstatic; NumberOfNodessofa::geometry::Pentahedronstatic; Pentahedron()=deletesofa::geometry::Pentahedron. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Point Member List . This is the complete list of members for sofa::geometry::Point, including all inherited members. Element_typesofa::geometry::Pointstatic; NumberOfNodessofa::geometry::Pointstatic; Point()=deletesofa::geometry::Point. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Pyramid Member List . This is the complete list of members for sofa::geometry::Pyramid, including all inherited members. Element_typesofa::geometry::Pyramidstatic; NumberOfNodessofa::geometry::Pyramidstatic; Pyramid()=deletesofa::geometry::Pyramid. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Quad Member List . This is the complete list of members for sofa::geometry::Quad, including all inherited members. area(const Node &n0, const Node &n1, const Node &n2, const Node &n3)sofa::geometry::Quadinlinestatic; Element_typesofa::geometry::Quadstatic; NumberOfNodessofa::geometry::Quadstatic; Quad()=deletesofa::geometry::Quad. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Tetrahedron Member List . This is the complete list of members for sofa::geometry::Tetrahedron, including all inherited members. Element_typesofa::geometry::Tetrahedronstatic; NumberOfNodessofa::geometry::Tetrahedronstatic; Tetrahedron()=deletesofa::geometry::Tetrahedron; volume(const Node &n0, const Node &n1, const Node &n2, const Node &n3)sofa::geometry::Tetrahedroninlinestatic. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Triangle Member List . This is the complete list of members for sofa::geometry::Triangle, including all inherited members. area(const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; Element_typesofa::geometry::Trianglestatic; getBarycentricCoordinates(const Node &p0, const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; isPointInTriangle(const Node &p0, const Node &n0, const Node &n1, const Node &n2, sofa::type::Vec< 3, T > &baryCoefs)sofa::geometry::Triangleinlinestatic; normal(const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; NumberOfNodessofa::geometry::Trianglestatic; rayIntersection(const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction, TReal &t, TReal &u, TReal &v)sofa::geometry::Triangleinlinestatic; rayIntersection(const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction)sofa::geometry::Triangleinlinestatic; Triangle()=deletesofa::geometry::Triangle. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html
Performance,optimiz,optimized,"tersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Triangle::Element_type = ElementType::TRIANGLE. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Triangle::NumberOfNodes = 3. staticconstexpr . Constructor details. ◆ Triangle(). sofa::geometry::Triangle::Triangle ; (; ). delete . Function details. ◆ area(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::area ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the area of a triangle. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec and the dimension (2D or 3D) ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsArea of the triangle (a T scalar) . ◆ getBarycentricCoordinates(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::getBarycentricCoordinates ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the input point to c",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
Testability,test,test," point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric coefficients of each vertex of the Triangle. These masses can be zero or negative; they are all positive if and only if the point is inside the Triangle. . ◆ isPointInTriangle(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Triangle::isPointInTriangle ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . sofa::type::Vec< 3, T > & ; baryCoefs . ). inlinestaticconstexpr . Test if input point is inside Triangle (n0, n1, n2) using Triangle. ; See alsogetBarycentricCoordinates . The point is inside the Triangle if and only if Those coordinates are all positive. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1,n2nodes of the triangle ; outputparameter: sofa::type::Vec<3, T> barycentric coordinates of the input point in Triangle . Returnsbool result if point is inside Triangle. . ◆ normal(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsVec3 normal of this triangle . ◆ rayIntersection() [1/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::fboParameters Member List . This is the complete list of members for sofa::gl::fboParameters, including all inherited members. colorFormatsofa::gl::fboParameters; colorInternalformatsofa::gl::fboParameters; colorTypesofa::gl::fboParameters; depthInternalformatsofa::gl::fboParameters; fboParameters()sofa::gl::fboParametersinline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL::CustomGLBuffer Member List . This is the complete list of members for sofa::gl::BasicShapesGL::CustomGLBuffer, including all inherited members. bufferSizesofa::gl::BasicShapesGL::CustomGLBuffer; locationsofa::gl::BasicShapesGL::CustomGLBuffer; VBOsofa::gl::BasicShapesGL::CustomGLBuffer. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL::GLBuffers Member List . This is the complete list of members for sofa::gl::BasicShapesGL::GLBuffers, including all inherited members. IBOsofa::gl::BasicShapesGL::GLBuffers; indicesSizesofa::gl::BasicShapesGL::GLBuffers; normalsBufferSizesofa::gl::BasicShapesGL::GLBuffers; texcoordsBufferSizesofa::gl::BasicShapesGL::GLBuffers; totalSizesofa::gl::BasicShapesGL::GLBuffers; VBOsofa::gl::BasicShapesGL::GLBuffers; verticesBufferSizesofa::gl::BasicShapesGL::GLBuffers. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription Member List . This is the complete list of members for sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription, including all inherited members. operator<(const SphereDescription &d) constsofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescriptioninline; ringssofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription; sectorssofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription; SphereDescription(unsigned int r, unsigned int s)sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescriptioninline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Disable< Flag > Member List . This is the complete list of members for sofa::gl::Disable< Flag >, including all inherited members. Disable()sofa::gl::Disable< Flag >inline; statesofa::gl::Disable< Flag >; ~Disable()sofa::gl::Disable< Flag >inline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Enable< Flag > Member List . This is the complete list of members for sofa::gl::Enable< Flag >, including all inherited members. Enable()sofa::gl::Enable< Flag >inline; statesofa::gl::Enable< Flag >; ~Enable()sofa::gl::Enable< Flag >inline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GLSLShader::ShaderContents Member List . This is the complete list of members for sofa::gl::GLSLShader::ShaderContents, including all inherited members. filenamesofa::gl::GLSLShader::ShaderContents; ShaderContents()sofa::gl::GLSLShader::ShaderContentsinline; textsofa::gl::GLSLShader::ShaderContents. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html
Performance,load,loaded,"﻿. SOFA API: sofa::gl::GLSLShader::ShaderContents Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::GLSLShader::ShaderContents Struct Reference . #include <GLSLShader.h>; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) ; More...; Detailed Description; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) . Public Attributes; std::string filename;  ; std::string text;  . Public Member Functions;  ShaderContents ();  . Attribute details. ◆ filename. std::string sofa::gl::GLSLShader::ShaderContents::filename. ◆ text. std::string sofa::gl::GLSLShader::ShaderContents::text. Constructor details. ◆ ShaderContents(). sofa::gl::GLSLShader::ShaderContents::ShaderContents ; (; ). inline . sofaglGLSLShaderShaderContents; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::GUIManager::GUICreator Member List . This is the complete list of members for sofa::gui::common::GUIManager::GUICreator, including all inherited members. creatorsofa::gui::common::GUIManager::GUICreator; namesofa::gui::common::GUIManager::GUICreator; parameterssofa::gui::common::GUIManager::GUICreator; prioritysofa::gui::common::GUIManager::GUICreator. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::MousePosition Member List . This is the complete list of members for sofa::gui::common::MousePosition, including all inherited members. screenHeightsofa::gui::common::MousePosition; screenWidthsofa::gui::common::MousePosition; xsofa::gui::common::MousePosition; ysofa::gui::common::MousePosition. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::dataTime Member List . This is the complete list of members for sofa::gui::qt::dataTime, including all inherited members. dataTime(double t, std::string n, std::string ty=std::string(), std::string address=std::string())sofa::gui::qt::dataTimeinline; namesofa::gui::qt::dataTime; operator==(const dataTime &other)sofa::gui::qt::dataTimeinline; ptrsofa::gui::qt::dataTime; timesofa::gui::qt::dataTime; typesofa::gui::qt::dataTime. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ActivationFunctor Member List . This is the complete list of members for sofa::gui::qt::ActivationFunctor, including all inherited members. ActivationFunctor(bool act, GraphListenerQListView *l)sofa::gui::qt::ActivationFunctorinlinesignal; activesofa::gui::qt::ActivationFunctorprotected; listenersofa::gui::qt::ActivationFunctorprotected; operator()(core::objectmodel::BaseNode *n)sofa::gui::qt::ActivationFunctorinline; pixmap_filenamesofa::gui::qt::ActivationFunctorprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DataWidget::CreatorArgument Member List . This is the complete list of members for sofa::gui::qt::DataWidget::CreatorArgument, including all inherited members. datasofa::gui::qt::DataWidget::CreatorArgument; namesofa::gui::qt::DataWidget::CreatorArgument; parentsofa::gui::qt::DataWidget::CreatorArgument; readOnlysofa::gui::qt::DataWidget::CreatorArgument. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::LinkWidget::CreatorArgument Member List . This is the complete list of members for sofa::gui::qt::LinkWidget::CreatorArgument, including all inherited members. linksofa::gui::qt::LinkWidget::CreatorArgument; namesofa::gui::qt::LinkWidget::CreatorArgument; parentsofa::gui::qt::LinkWidget::CreatorArgument; readOnlysofa::gui::qt::LinkWidget::CreatorArgument. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ModifyObjectFlags Member List . This is the complete list of members for sofa::gui::qt::ModifyObjectFlags, including all inherited members. EMPTY_FLAGsofa::gui::qt::ModifyObjectFlags; HIDE_FLAGsofa::gui::qt::ModifyObjectFlags; LINKPATH_MODIFIABLE_FLAGsofa::gui::qt::ModifyObjectFlags; MODELER_FLAGsofa::gui::qt::ModifyObjectFlags; ModifyObjectFlags()sofa::gui::qt::ModifyObjectFlagsinline; PROPERTY_WIDGET_FLAGsofa::gui::qt::ModifyObjectFlags; READONLY_FLAGsofa::gui::qt::ModifyObjectFlags; REINIT_FLAGsofa::gui::qt::ModifyObjectFlags; RESIZABLE_FLAGsofa::gui::qt::ModifyObjectFlags; setFlagsForModeler()sofa::gui::qt::ModifyObjectFlagsinline; setFlagsForSofa()sofa::gui::qt::ModifyObjectFlagsinline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::MovieOptionsWidget::Codec Member List . This is the complete list of members for sofa::gui::qt::MovieOptionsWidget::Codec, including all inherited members. codecsofa::gui::qt::MovieOptionsWidget::Codec; Codec(std::string e, std::string c, std::string d)sofa::gui::qt::MovieOptionsWidget::Codecinline; Codec(std::string e, std::string d)sofa::gui::qt::MovieOptionsWidget::Codecinline; descriptionsofa::gui::qt::MovieOptionsWidget::Codec; extensionsofa::gui::qt::MovieOptionsWidget::Codec. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectModel Member List . This is the complete list of members for sofa::gui::qt::ObjectModel, including all inherited members. asBase()sofa::gui::qt::ObjectModelinline; isBase()sofa::gui::qt::ObjectModelinline; isData()sofa::gui::qt::ObjectModelinline; isNode()sofa::gui::qt::ObjectModelinline; isObject()sofa::gui::qt::ObjectModelinline; ptrsofa::gui::qt::ObjectModel; typesofa::gui::qt::ObjectModel. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowProfiler::CheckedSeries Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler::CheckedSeries, including all inherited members. checkedParentStepsofa::gui::qt::SofaWindowProfiler::CheckedSeries; lineSeriessofa::gui::qt::SofaWindowProfiler::CheckedSeries. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::console::Background Member List . This is the complete list of members for sofa::helper::console::Background, including all inherited members. Bright enum namesofa::helper::console::Background; Normal enum namesofa::helper::console::Background. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::console::Foreground Member List . This is the complete list of members for sofa::helper::console::Foreground, including all inherited members. Bright enum namesofa::helper::console::Foreground; Normal enum namesofa::helper::console::Foreground. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader Member List . This is the complete list of members for sofa::helper::io::DDSHeader, including all inherited members. ddpfPixelFormatsofa::helper::io::DDSHeader; ddsCapssofa::helper::io::DDSHeader; dwDepthsofa::helper::io::DDSHeader; dwFlagssofa::helper::io::DDSHeader; dwHeightsofa::helper::io::DDSHeader; dwMagicsofa::helper::io::DDSHeader; dwMipMapCountsofa::helper::io::DDSHeader; dwPitchOrLinearSizesofa::helper::io::DDSHeader; dwReservedsofa::helper::io::DDSHeader; dwReserved2sofa::helper::io::DDSHeader; dwSizesofa::helper::io::DDSHeader; dwWidthsofa::helper::io::DDSHeader. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader::DDSCaps Member List . This is the complete list of members for sofa::helper::io::DDSHeader::DDSCaps, including all inherited members. dwCaps1sofa::helper::io::DDSHeader::DDSCaps; dwCaps2sofa::helper::io::DDSHeader::DDSCaps; Reservedsofa::helper::io::DDSHeader::DDSCaps. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader::DDSPixelFormat Member List . This is the complete list of members for sofa::helper::io::DDSHeader::DDSPixelFormat, including all inherited members. dwBBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwFlagssofa::helper::io::DDSHeader::DDSPixelFormat; dwFourCCsofa::helper::io::DDSHeader::DDSPixelFormat; dwGBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRGBAlphaBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRGBBitCountsofa::helper::io::DDSHeader::DDSPixelFormat; dwSizesofa::helper::io::DDSHeader::DDSPixelFormat. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::kdTree< Coord >::TREENODE Member List . This is the complete list of members for sofa::helper::kdTree< Coord >::TREENODE, including all inherited members. leftsofa::helper::kdTree< Coord >::TREENODE; rightsofa::helper::kdTree< Coord >::TREENODE; splitdirsofa::helper::kdTree< Coord >::TREENODE. Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
Testability,log,logging,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
Integrability,message,message,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
Modifiability,inherit,inheriting,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
Testability,log,logging,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
Testability,log,logging,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
Availability,error,error,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
Testability,log,logging,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
Testability,log,logging,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
Integrability,message,message,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
Testability,log,logging,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
Testability,log,logging,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
Integrability,message,message,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
Testability,log,logging,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::narrowing_error Member List . This is the complete list of members for sofa::helper::narrowing_error, including all inherited members. what() const noexcept overridesofa::helper::narrowing_errorinline. Generated on Mon Nov 11 2024 03:30:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::AlignPow2< N > Member List . This is the complete list of members for sofa::helper::system::thread::AlignPow2< N >, including all inherited members. prev enum valuesofa::helper::system::thread::AlignPow2< N >; val enum valuesofa::helper::system::thread::AlignPow2< N >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::AlignPow2< 0 > Member List . This is the complete list of members for sofa::helper::system::thread::AlignPow2< 0 >, including all inherited members. val enum valuesofa::helper::system::thread::AlignPow2< 0 >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_010_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_010_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::AlignPow2< 1 > Member List . This is the complete list of members for sofa::helper::system::thread::AlignPow2< 1 >, including all inherited members. val enum valuesofa::helper::system::thread::AlignPow2< 1 >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_011_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_011_01_4-members.html
Energy Efficiency,power,power,﻿. SOFA API: sofa::helper::system::thread::FixedPower2Size< N > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::system::thread::FixedPower2Size< N > Struct Template Reference . #include <CircularQueue.h>; Detailed Description; template<int N>; struct sofa::helper::system::thread::FixedPower2Size< N >; This is a storage policy for CircularQueue that uses a compile-time fixed-size array aligned on the upper power of 2 of the specified template parameter. . Classes; class  type;  . sofahelpersystemthreadFixedPower2Size; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleComponentList Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleComponentList, including all inherited members. funcsofa::helper::system::Plugin::GetModuleComponentList; FuncPtr typedefsofa::helper::system::Plugin::GetModuleComponentList; GetModuleComponentList()sofa::helper::system::Plugin::GetModuleComponentListinline; operator()() constsofa::helper::system::Plugin::GetModuleComponentListinline; symbolsofa::helper::system::Plugin::GetModuleComponentListstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleDescription Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleDescription, including all inherited members. funcsofa::helper::system::Plugin::GetModuleDescription; FuncPtr typedefsofa::helper::system::Plugin::GetModuleDescription; GetModuleDescription()sofa::helper::system::Plugin::GetModuleDescriptioninline; operator()() constsofa::helper::system::Plugin::GetModuleDescriptioninline; symbolsofa::helper::system::Plugin::GetModuleDescriptionstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleLicense Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleLicense, including all inherited members. funcsofa::helper::system::Plugin::GetModuleLicense; FuncPtr typedefsofa::helper::system::Plugin::GetModuleLicense; GetModuleLicense()sofa::helper::system::Plugin::GetModuleLicenseinline; operator()() constsofa::helper::system::Plugin::GetModuleLicenseinline; symbolsofa::helper::system::Plugin::GetModuleLicensestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleName Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleName, including all inherited members. funcsofa::helper::system::Plugin::GetModuleName; FuncPtr typedefsofa::helper::system::Plugin::GetModuleName; GetModuleName()sofa::helper::system::Plugin::GetModuleNameinline; operator()() constsofa::helper::system::Plugin::GetModuleNameinline; symbolsofa::helper::system::Plugin::GetModuleNamestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleVersion Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleVersion, including all inherited members. funcsofa::helper::system::Plugin::GetModuleVersion; FuncPtr typedefsofa::helper::system::Plugin::GetModuleVersion; GetModuleVersion()sofa::helper::system::Plugin::GetModuleVersioninline; operator()() constsofa::helper::system::Plugin::GetModuleVersioninline; symbolsofa::helper::system::Plugin::GetModuleVersionstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::InitExternalModule Member List . This is the complete list of members for sofa::helper::system::Plugin::InitExternalModule, including all inherited members. funcsofa::helper::system::Plugin::InitExternalModule; FuncPtr typedefsofa::helper::system::Plugin::InitExternalModule; InitExternalModule()sofa::helper::system::Plugin::InitExternalModuleinline; operator()()sofa::helper::system::Plugin::InitExternalModuleinline; symbolsofa::helper::system::Plugin::InitExternalModulestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::ModuleIsInitialized Member List . This is the complete list of members for sofa::helper::system::Plugin::ModuleIsInitialized, including all inherited members. funcsofa::helper::system::Plugin::ModuleIsInitialized; FuncPtr typedefsofa::helper::system::Plugin::ModuleIsInitialized; ModuleIsInitialized()sofa::helper::system::Plugin::ModuleIsInitializedinline; operator()() constsofa::helper::system::Plugin::ModuleIsInitializedinline; symbolsofa::helper::system::Plugin::ModuleIsInitializedstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::CompareIndirect< Container > Member List . This is the complete list of members for sofa::helper::CompareIndirect< Container >, including all inherited members. CompareIndirect(const Container &v)sofa::helper::CompareIndirect< Container >inline; operator()(unsigned i, unsigned j) constsofa::helper::CompareIndirect< Container >inline; valuessofa::helper::CompareIndirect< Container >. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect-members.html
Security,access,access,"﻿. SOFA API: sofa::helper::CompareIndirect< Container > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::CompareIndirect< Container > Struct Template Reference . #include <SortedPermutation.h>; Detailed Description; template<class Container>; struct sofa::helper::CompareIndirect< Container >; Comparison operator used to compute sorted permutations of a container. The comparison operator of two indices compares the corresponding entries of the container. The container must allow random access. . Public Attributes; const Container & values;  . Public Member Functions;  CompareIndirect (const Container &v);  ; bool operator() (unsigned i, unsigned j) const;  . Attribute details. ◆ values. template<class Container > . const Container& sofa::helper::CompareIndirect< Container >::values. Constructor details. ◆ CompareIndirect(). template<class Container > . sofa::helper::CompareIndirect< Container >::CompareIndirect ; (; const Container & ; v). inline . Function details. ◆ operator()(). template<class Container > . bool sofa::helper::CompareIndirect< Container >::operator() ; (; unsigned ; i, . unsigned ; j . ); const. inline . sofahelperCompareIndirect; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::GenerateRigidInfo Member List . This is the complete list of members for sofa::helper::GenerateRigidInfo, including all inherited members. comsofa::helper::GenerateRigidInfo; inertiasofa::helper::GenerateRigidInfo; inertia_diagonalsofa::helper::GenerateRigidInfo; inertia_rotationsofa::helper::GenerateRigidInfo; masssofa::helper::GenerateRigidInfo. Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_generate_rigid_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_generate_rigid_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IndexOpenMP< T > Member List . This is the complete list of members for sofa::helper::IndexOpenMP< T >, including all inherited members. type typedefsofa::helper::IndexOpenMP< T >. Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_index_open_m_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_index_open_m_p-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< is_integer > Member List . This is the complete list of members for sofa::helper::IsEqual< is_integer >, including all inherited members. test(T x, T y, T threshold)sofa::helper::IsEqual< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html
Testability,test,test,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< is_integer > Member List . This is the complete list of members for sofa::helper::IsEqual< is_integer >, including all inherited members. test(T x, T y, T threshold)sofa::helper::IsEqual< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html
Testability,test,test,"﻿. SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsEqual< is_integer >::test ; (; T ; x, . T ; y, . T ; threshold . ). inlinestatic . sofahelperIsEqual; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< true > Member List . This is the complete list of members for sofa::helper::IsEqual< true >, including all inherited members. test(T x, T y, T)sofa::helper::IsEqual< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html
Testability,test,test,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< true > Member List . This is the complete list of members for sofa::helper::IsEqual< true >, including all inherited members. test(T x, T y, T)sofa::helper::IsEqual< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html
Testability,test,test,"﻿. SOFA API: sofa::helper::IsEqual< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsEqual< true >::test ; (; T ; x, . T ; y, . T ;  . ). inlinestatic . sofahelperIsEqual< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< is_integer > Member List . This is the complete list of members for sofa::helper::IsNull< is_integer >, including all inherited members. test(T x, T threshold)sofa::helper::IsNull< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html
Testability,test,test,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< is_integer > Member List . This is the complete list of members for sofa::helper::IsNull< is_integer >, including all inherited members. test(T x, T threshold)sofa::helper::IsNull< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html
Testability,test,test,"﻿. SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsNull< is_integer >::test ; (; T ; x, . T ; threshold . ). inlinestatic . sofahelperIsNull; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< true > Member List . This is the complete list of members for sofa::helper::IsNull< true >, including all inherited members. test(T x, T)sofa::helper::IsNull< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html
Testability,test,test,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< true > Member List . This is the complete list of members for sofa::helper::IsNull< true >, including all inherited members. test(T x, T)sofa::helper::IsNull< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html
Testability,test,test,"﻿. SOFA API: sofa::helper::IsNull< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsNull< true >::test ; (; T ; x, . T ;  . ). inlinestatic . sofahelperIsNull< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html
Integrability,message,message,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html
Integrability,message,message,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
Usability,simpl,simplify,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Member List . This is the complete list of members for sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >, including all inherited members. indexsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >; IndexedValue()=defaultsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >; IndexedValue(AnyScalar s)sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >inline; IndexedValue(const IndexedValue &other)=defaultsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >; operator Scalar() constsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >inline; valuesofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1sparsematrixproduct_1_1_indexed_value-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1sparsematrixproduct_1_1_indexed_value-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
Testability,test,testing,﻿. SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Static Public Member Functions; static void init (T &product);  ; static void cleanup (T &product);  . Function details. ◆ cleanup(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::cleanup ; (; T & ; product). inlinestatic . ◆ init(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::init ; (; T & ; product). inlinestatic . sofalinearalgebratestingSparseMatrixProductInit; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
Testability,test,testing,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference . #include <BaseMatrix_test.h>. Static Public Attributes; static constexpr sofa::Index NbRows = TNbRows;  ; static constexpr sofa::Index NbCols = TNbCols;  . Attribute details. ◆ NbCols. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbCols = TNbCols. staticconstexpr . ◆ NbRows. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbRows = TNbRows. staticconstexpr . sofalinearalgebratestingTestBaseMatrixTraits; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >, including all inherited members. Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >, including all inherited members. Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
Availability,failure,failure,"ist of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
Testability,test,testing,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; operator()(const M1 *m1, M2 *m2, double &fact)sofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >. Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m1___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m1___block_sparse-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; operator()(const M1 *m1, M1 *m2, double &fact)sofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >. Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m_s___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m_s___block_sparse-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; operator()(const M1 *m1, M2 *m2, double &fact)sofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >. Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m___block_sparse-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; operator()(const M *mat, V1 &result, const V2 &v)sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >. Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >, including all inherited members. Index typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >; operator()(const M *mat, V1 &result, const V2 &v)sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >inline. Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal_3_01_real_00_011_00_0b7ce101d86ed51b5fac766026e3115a9.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal_3_01_real_00_011_00_0b7ce101d86ed51b5fac766026e3115a9.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; operator()(const M *mat, V1 &result, const V2 &v)sofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >. Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_sparse-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock Member List . This is the complete list of members for sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock, including all inherited members. csofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock; IndexedBlock()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; IndexedBlock(Index i, Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; IndexedBlock(Index i, Index j, const Block &v)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; lsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock; operator!=(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator<(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator<=(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator==(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator>(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator>=(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock. Generated on Mon Nov 11 2024 03:31:23 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_indexed_block-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_indexed_block-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Member List . This is the complete list of members for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >, including all inherited members. EigenSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; operator()(const TCompressedRowSparseMatrix &mat, std::size_t size) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >inline; operator()(const TCompressedRowSparseMatrix &mat) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >inline; Real typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; TCompressedRowSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_3d920f8e446ae9f930ab47a8575e9c8c.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_3d920f8e446ae9f930ab47a8575e9c8c.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Struct Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat, std::size_t size) const;  ; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat) const;  . sofalinearalgebraCompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec > Member List . This is the complete list of members for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >, including all inherited members. EigenSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >; operator()(const TCompressedRowSparseMatrix &mat, std::size_t size) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >inline; operator()(const TCompressedRowSparseMatrix &mat) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >inline; Real typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >; TCompressedRowSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CRSBlockTraits< Block > Member List . This is the complete list of members for sofa::linearalgebra::CRSBlockTraits< Block >, including all inherited members. VecBlock typedefsofa::linearalgebra::CRSBlockTraits< Block >; VecFlag typedefsofa::linearalgebra::CRSBlockTraits< Block >; VecIndex typedefsofa::linearalgebra::CRSBlockTraits< Block >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_block_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_block_traits-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CRSDefaultPolicy Member List . This is the complete list of members for sofa::linearalgebra::CRSDefaultPolicy, including all inherited members. AutoCompresssofa::linearalgebra::CRSDefaultPolicystatic; AutoSizesofa::linearalgebra::CRSDefaultPolicystatic; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; CompressZerossofa::linearalgebra::CRSDefaultPolicystatic; IsAlwaysSquaresofa::linearalgebra::CRSDefaultPolicystatic; IsAlwaysSymmetricsofa::linearalgebra::CRSDefaultPolicystatic; matrixTypesofa::linearalgebra::CRSDefaultPolicystatic; OrderedInsertionsofa::linearalgebra::CRSDefaultPolicystatic; StoreLowerTriangularBlocksofa::linearalgebra::CRSDefaultPolicystatic. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy-members.html
Usability,clear,clear,"e . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CRSDefaultPolicy:. [legend]. Static Public Attributes; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ Clear",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< T > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< T >, including all inherited members. valuesofa::linearalgebra::EigenOptions< T >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_map_3_01_t_00_01_options_0003192d32bdc4f44b4f781bd8ab55233e.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_map_3_01_t_00_01_options_0003192d32bdc4f44b4f781bd8ab55233e.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< Eigen::Map< T, Options, StrideType > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< Eigen::Map< T, Options, StrideType > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< Eigen::Map< T, Options, StrideType > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_map_3_01_t_00_01_options_00_01_stride_type_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_map_3_01_t_00_01_options_00_01_stride_type_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< Eigen::Transpose< T > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< Eigen::Transpose< T > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< Eigen::Transpose< T > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Member List . This is the complete list of members for sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >, including all inherited members. const_map(const real_type *data, unsigned k)sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >inlinestatic; const_map_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; map(real_type *data, unsigned k)sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >inlinestatic; map_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; matrix_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; real_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; sizesofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >static; value_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_matrix_1_1map__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_matrix_1_1map__traits-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Member List . This is the complete list of members for sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >, including all inherited members. EigenSparseMatrix typedefsofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >; operator()(const EigenSparseMatrix &eigenMat)sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >inline; Real typedefsofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >; TCompressedRowSparseMatrix typedefsofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Member List . This is the complete list of members for sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection, including all inherited members. intersectionsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection; ListPairIndex typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection; PairIndex typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection; ValuesIntersection typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_sparse_matrix_product_1_1_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_sparse_matrix_product_1_1_intersection-members.html
Availability,error,errorFactorDJsofa,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::mapping_test::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
Testability,test,testing,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
Availability,error,errors,"st::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the sce",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
Integrability,depend,depend,"rixType > . static EigenSparseMatrixType* sofa::mapping_test::Mapping_test< _Mapping >::getMatrix ; (; const type::vector< sofa::linearalgebra::BaseMatrix * > * ; matrices). inlinestaticprotected . Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. . ◆ preTreatment(). template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::preTreatment ; (; const OutVecDeriv & ; f). inlinevirtual . Possible child force pre-treatment, does nothing by default . ◆ runTest() [1/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parent, . const OutVecCoord ; expectedChild . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
Modifiability,inherit,inherited,"the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
Security,validat,validate,"inite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
Testability,test,tests,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::common::VisitorExecuteFunc Member List . This is the complete list of members for sofa::simulation::common::VisitorExecuteFunc, including all inherited members. ctxsofa::simulation::common::VisitorExecuteFuncprotected; operator()(Visitor *pv)sofa::simulation::common::VisitorExecuteFuncinline; operator()(Visitor v)sofa::simulation::common::VisitorExecuteFuncinline; precomputedTraversalOrdersofa::simulation::common::VisitorExecuteFunc; prepareVisitor(sofa::simulation::Visitor *v)sofa::simulation::common::VisitorExecuteFuncinlineprotected; prepareVisitor(sofa::simulation::BaseMechanicalVisitor *mv)sofa::simulation::common::VisitorExecuteFuncinlineprotected; VisitorExecuteFunc(core::objectmodel::BaseContext &ctx, bool precomputedTraversalOrder=false)sofa::simulation::common::VisitorExecuteFuncinline. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1common_1_1_visitor_execute_func-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1common_1_1_visitor_execute_func-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::graph::DAGNode::StatusStruct Member List . This is the complete list of members for sofa::simulation::graph::DAGNode::StatusStruct, including all inherited members. operator!=(const VisitedStatus &s) constsofa::simulation::graph::DAGNode::StatusStructinline; operator!=(const StatusStruct &s) constsofa::simulation::graph::DAGNode::StatusStructinline; operator=(const VisitedStatus &s)sofa::simulation::graph::DAGNode::StatusStructinline; operator==(const VisitedStatus &s) constsofa::simulation::graph::DAGNode::StatusStructinline; operator==(const StatusStruct &s) constsofa::simulation::graph::DAGNode::StatusStructinline; statussofa::simulation::graph::DAGNode::StatusStruct; StatusStruct()sofa::simulation::graph::DAGNode::StatusStructinline; StatusStruct(const VisitedStatus &s)sofa::simulation::graph::DAGNode::StatusStructinline. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct-members.html
Integrability,wrap,wrapper,﻿. SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::DAGNode::StatusStruct Struct Reference . #include <DAGNode.h>; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) ; More...; Detailed Description; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) . Public Attributes; VisitedStatus status;  . Public Member Functions;  StatusStruct ();  ;  StatusStruct (const VisitedStatus &s);  ; void operator= (const VisitedStatus &s);  ; bool operator== (const VisitedStatus &s) const;  ; bool operator== (const StatusStruct &s) const;  ; bool operator!= (const VisitedStatus &s) const;  ; bool operator!= (const StatusStruct &s) const;  . Attribute details. ◆ status. VisitedStatus sofa::simulation::graph::DAGNode::StatusStruct::status. Constructor details. ◆ StatusStruct() [1/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; ). inline . ◆ StatusStruct() [2/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; const VisitedStatus & ; s). inline . Function details. ◆ operator!=() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const StatusStruct & ; s); const. inline . ◆ operator!=() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const VisitedStatus & ; s); const. inline . ◆ operator=(). void sofa::simulation::graph::DAGNode::StatusStruct::operator= ; (; const VisitedStatus & ; s). inline . ◆ operator==() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const StatusStruct & ; s); const. inline . ◆ operator==() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const VisitedStatus & ; s); const. inline . sofasimulationgraphDAGNodeStatusStruct; Genera,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Range< InputIt > Member List . This is the complete list of members for sofa::simulation::Range< InputIt >, including all inherited members. endsofa::simulation::Range< InputIt >; Range(InputIt s, InputIt e)sofa::simulation::Range< InputIt >inline; startsofa::simulation::Range< InputIt >. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_range-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_range-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoader::Listener Member List . This is the complete list of members for sofa::simulation::SceneLoader::Listener, including all inherited members. rightAfterLoadingScene(sofa::simulation::NodeSPtr, SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual; rightAfterReloadingScene(sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual; rightBeforeLoadingScene(SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual; rightBeforeReloadingScene(SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener-members.html
Performance,load,loaded,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N, bool isVector> . static void sofa::testing::setRotWrapper< DataTypes, N, isVector >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). static . sofatestingsetRotWrapper; Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes > . static void sofa::testing::setRotWrapper< DataTypes, 2, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, 2, false >; Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, false >; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &, const sofa::type::Quat< SReal > &);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, true >::setRot ; (; typename DataTypes::Coord & ; , . const sofa::type::Quat< SReal > & ;  . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, true >; Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
Availability,failure,failure,"zes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to compare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
Availability,failure,failure,"agnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlines",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
Modifiability,inherit,inherited," Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference bet",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
Testability,test,testing,"﻿. SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::SparseMatrixTest< TReal > Struct Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::topology::Element< GeometryElement > Member List . This is the complete list of members for sofa::topology::Element< GeometryElement >, including all inherited members. Array typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; array() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; array() noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; assign(const sofa::Index &value) noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; at(size_type i)sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; at(size_type i) constsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; back()sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; back() constsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; begin() noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; begin() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; cbegin() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; cend() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; const_iterator typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; const_reference typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; data() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; difference_type typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; Element() noexceptsofa::topology::Element< GeometryElement >inline; Element(ArgsT &&... args) noexceptsofa::topology::Element< GeometryElement >inline; Element_typesofa::topology::Eleme",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::topology::Element< GeometryElement > Struct Template Reference . #include <Element.h>. Inheritance diagram for sofa::topology::Element< GeometryElement >:. [legend]. Static Public Attributes; static constexpr auto NumberOfNodes = GeometryElement::NumberOfNodes;  ; static constexpr sofa::geometry::ElementType Element_type = GeometryElement::Element_type;  . Public Member Functions; constexpr Element () noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> ; constexpr Element (ArgsT &&... args) noexcept;  ;  Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr sofa::Index & get () &noexcept;  ; constexpr const sofa::Index & get () const &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
Security,access,access,"expr Element () noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> ; constexpr Element (ArgsT &&... args) noexcept;  ;  Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr sofa::Index & get () &noexcept;  ; constexpr const sofa::Index & get () const &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sofa::Index, N > &y);  ; constexpr const sofa::Index * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< sofa::Index, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const sofa::Index &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; sofa::Index elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_arra",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
Safety,detect,detect,"﻿. SOFA API: sofa::type::detect< typename, class, typename > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< typename, class, typename > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< typename, class, typename >:. [legend]. sofatypedetect; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html
Safety,detect,detect,"﻿. SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< T, Op, void_t< Op< T > > >:. [legend]. sofatypedetect< T, Op, void_t< Op< T > > >; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_container< T > Member List . This is the complete list of members for sofa::type::trait::is_container< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_container< T >inlinestatic; test(...)sofa::type::trait::is_container< T >inlinestatic; test_type typedefsofa::type::trait::is_container< T >; valuesofa::type::trait::is_container< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html
Testability,test,test,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_container< T > Member List . This is the complete list of members for sofa::type::trait::is_container< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_container< T >inlinestatic; test(...)sofa::type::trait::is_container< T >inlinestatic; test_type typedefsofa::type::trait::is_container< T >; valuesofa::type::trait::is_container< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html
Testability,test,test,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_vector< T > Member List . This is the complete list of members for sofa::type::trait::is_vector< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_vector< T >inlinestatic; test(...)sofa::type::trait::is_vector< T >inlinestatic; test_type typedefsofa::type::trait::is_vector< T >; valuesofa::type::trait::is_vector< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html
Testability,test,test,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_vector< T > Member List . This is the complete list of members for sofa::type::trait::is_vector< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_vector< T >inlinestatic; test(...)sofa::type::trait::is_vector< T >inlinestatic; test_type typedefsofa::type::trait::is_vector< T >; valuesofa::type::trait::is_vector< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html
Testability,test,test,"﻿. SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraiti",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Member List . This is the complete list of members for sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >, including all inherited members. to typedefsofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >. Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_01_has_reb5d3b20ae2e02479ead2e02364616ead2.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_01_has_reb5d3b20ae2e02479ead2e02364616ead2.html
Availability,error,error,"﻿. SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference . #include <Rebind.h>; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; More...; Detailed Description; template<class _T, class _OtherType>; struct sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; Template Parameters. _TType that does NOT have a nested rebind_to member . sofatypeRebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > > Member List . This is the complete list of members for sofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > >, including all inherited members. to typedefsofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > >. Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_3_01_a_01_4_00_01___other_type_00_01std_1_1enable__if__t_ca216f65b38eb10d1f80a271bdf63cfd.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_3_01_a_01_4_00_01___other_type_00_01std_1_1enable__if__t_ca216f65b38eb10d1f80a271bdf63cfd.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
Testability,test,testing,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
Deployability,patch,patchStructsofa,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
Availability,failure,failure,"ular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
Deployability,patch,patchStruct,"﻿. SOFA API: sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theore",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
Modifiability,inherit,inherited,"ons |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Fun",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
Testability,test,test,"﻿. SOFA API: sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theore",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::CylinderTractionStruct< T > Member List . This is the complete list of members for sofa::CylinderTractionStruct< T >, including all inherited members. dofssofa::CylinderTractionStruct< T >; forceFieldsofa::CylinderTractionStruct< T >; rootsofa::CylinderTractionStruct< T >. Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_cylinder_traction_struct-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct-members.html
Testability,test,test,﻿. SOFA API: sofa::CylinderTractionStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::CylinderTractionStruct< T > Struct Template Reference . Structure which contains the nodes and the pointers useful for the cylindertraction test. ; More... Inheritance diagram for sofa::CylinderTractionStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::CylinderTractionStruct< T >; Structure which contains the nodes and the pointers useful for the cylindertraction test. . Public Attributes; simulation::Node::SPtr root;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  ; component::mechanicalload::TrianglePressureForceField< T >::SPtr forceField;  . Attribute details. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::CylinderTractionStruct< T >::dofs. ◆ forceField. template<class T > . component::mechanicalload::TrianglePressureForceField<T>::SPtr sofa::CylinderTractionStruct< T >::forceField. ◆ root. template<class T > . simulation::Node::SPtr sofa::CylinderTractionStruct< T >::root. sofaCylinderTractionStruct; Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
Deployability,update,update,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
Testability,test,tests,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
Testability,test,testOneStep,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
Availability,error,errorFactorPotentialEnergysofa,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
Availability,avail,available,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
Energy Efficiency,energy,energy,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
Integrability,message,messages,"ude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flag",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
Modifiability,inherit,inherited,"stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
Testability,test,tests,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
Availability,failure,failure,") override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
Modifiability,inherit,inherited," 679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (co",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
Testability,test,test,"﻿. SOFA API: sofa::LinearElasticity_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited f",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
Usability,simpl,simply,"﻿. SOFA API: sofa::LinearElasticity_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited f",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
Availability,error,errorMaxsofa,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
Testability,test,testing,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
Availability,error,errorMax,". ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
Energy Efficiency,adapt,adapted,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
Modifiability,adapt,adapted,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
Testability,test,tests,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::PatchTestStruct< T > Member List . This is the complete list of members for sofa::PatchTestStruct< T >, including all inherited members. affineConstraintsofa::PatchTestStruct< T >; dofssofa::PatchTestStruct< T >; SquareNodesofa::PatchTestStruct< T >. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct-members.html
Deployability,patch,patch,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html
Testability,test,test,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_08300ae5924c636a2a2005701ca71e93.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_08300ae5924c636a2a2005701ca71e93.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_1d7a257d1b3cd7689a5858361a1ac1ad.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_1d7a257d1b3cd7689a5858361a1ac1ad.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_91cf57710619aa6efcc2f33cc15ab2eb.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_91cf57710619aa6efcc2f33cc15ab2eb.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_c1ab4283c4d4e722daf669199f7c4381.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_c1ab4283c4d4e722daf669199f7c4381.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > > Member List . This is the complete list of members for Eigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > >, including all inherited members. StorageKind typedefEigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > >; XprKind typedefEigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > >. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1traits_3_01_sparse_time_dense_product___m_t_3_01_lhs_00_01_rhs_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1traits_3_01_sparse_time_dense_product___m_t_3_01_lhs_00_01_rhs_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, InnerSize > Member List . This is the complete list of members for Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, InnerSize >, including all inherited members. Type typedefEigen::SparseDenseProductReturnType_MT< Lhs, Rhs, InnerSize >. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, 1 > Member List . This is the complete list of members for Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, 1 >, including all inherited members. Type typedefEigen::SparseDenseProductReturnType_MT< Lhs, Rhs, 1 >. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t_3_01_lhs_00_01_rhs_00_011_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t_3_01_lhs_00_01_rhs_00_011_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectModelPtr Member List . This is the complete list of members for sofa::gui::qt::ObjectModelPtr, including all inherited members. Datasofa::gui::qt::ObjectModelPtr; Nodesofa::gui::qt::ObjectModelPtr; Objectsofa::gui::qt::ObjectModelPtr. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/unionsofa_1_1gui_1_1qt_1_1_object_model_ptr-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/unionsofa_1_1gui_1_1qt_1_1_object_model_ptr-members.html
